{"version":3,"file":"live2dwebsdk.min.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACA;AAC4C;AACF;AAC1C;AACO,oCAAoC,mDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mEAAyB,cAAc,kBAAkB;AACrF;AACA;AACA;AACA,gCAAgC,mEAAyB;AACzD,uCAAuC,mEAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACsC;AACc;AACV;AACP;AACa;AAChD,+BAA+B,oCAAoC;AAC5D,gCAAgC,mDAAU;AACjD,uCAAuC,2CAA2C,sBAAsB,kCAAkC;AAC1I;AACA;AACA,4CAA4C,mDAAe;AAC3D,mCAAmC,6DAAe;AAClD;AACA;AACA,mCAAmC,yDAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACO;AACP,sCAAsC,mCAAmC;AACzE;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,iBAAiB,aAAa,iBAAiB,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,sCAAsC;AAC5E;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,iBAAiB;AACvD;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,mDAAmD;AACzF;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,gDAAgD;AACtF;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,qDAAqD;AAC3F;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,0DAA0D;AAChG;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,yCAAyC;AAC/E;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AAC+D;AACP;AACnB;AAC4B;AAC1D,8BAA8B,mDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAa;AACtD;AACA;AACA;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAgB;AACjD,4BAA4B,iDAAY;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAa;AAC7B;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAgB,8BAA8B,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAS;AAC/B;AACA;AACA;AACA,mBAAmB,qDAAY;AAC/B;AACA;AACA;AACA,YAAY,mDAAe;AAC3B;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnJA;AACA;AACwD;AAChB;AACxC;AACO;AACP;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA,YAAY,qDAAa;AACzB;AACA;AACA,sDAAsD,qFAAqC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iFAAiC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uEAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClDA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACgE;AACR;AAC4H;AAC/I;AAC4B;AACH;AACU;AACE;AAChB;AAC1D;AACA;AACO;AACP,iCAAiC;AACjC;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,uBAAuB,oDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAe,IAAI,UAAc;AAC7C;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,+BAA+B,yEAAqB,2BAA2B,iEAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAqB;AAChE,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc,+CAA+C,uDAAc,iBAAiB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,kDAAkD,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qEAA4B;AAC5E;AACA,8DAA8D,qEAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+CAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,0CAA0C,uEAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAkB;AAChD;AACA;AACA,yBAAyB,oDAAc,kCAAkC,aAAa;AACtF;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA,aAAa;AACb;AACA,mGAAmG,oBAAoB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8CAAS;AACtC;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C,sCAAsC,qEAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,oCAAoC,mBAAmB,KAAK,GAAG;AAClH;AACA,iDAAiD,gEAA2B,IAAI,oBAAoB,UAAU,GAAG,GAAG,0DAAiB;AACrI;AACA;AACA,yCAAyC,oDAAc;AACvD,kDAAkD,+CAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,sCAAsC,oDAAe,0EAA0E,8BAA8B;AAC7J;AACA;AACA;AACA;AACA;AACA,iBAAiB,qEAA4B;AAC7C;AACA;AACA;AACA,2BAA2B,mEAAkB,gJAAgJ;AAC7L,iBAAiB,2EAAkC;AACnD;AACA;AACA;AACA,2BAA2B,iFAAyB;AACpD,iBAAiB,sEAA6B;AAC9C,2BAA2B,uEAAoB;AAC/C;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAiB;AAC3C;AACA,6BAA6B,oDAAc,yBAAyB,mBAAmB;AACvF,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA,4EAA4E,uDAAc;AAC1F;AACA,uCAAuC,qEAA4B;AACnE,uCAAuC,2EAAkC;AACzE,yCAAyC,oDAAc,yBAAyB,0DAAiB,YAAY;AAC7G,mCAAmC,8DAAyB,KAAK,0DAAiB,YAAY;AAC9F;AACA;AACA,yCAAyC,oDAAc,0BAA0B,0DAAiB,YAAY;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,yBAAyB,0DAAiB,YAAY,+DAA+D,uDAAc,0BAA0B;AAChN,yCAAyC,0DAAiB,YAAY,qBAAqB,uDAAc,0BAA0B;AACnI;AACA;AACA;AACA,iCAAiC,oDAAc,yBAAyB,0DAAiB,YAAY;AACrG,2BAA2B,2DAAsB,KAAK,0DAAiB,YAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc,mCAAmC,MAAM,0BAA0B,sBAAsB;AAChI;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,2CAA2C,MAAM;AAC5F;AACA;AACA;AACA,6BAA6B,sDAAgB,2CAA2C,MAAM;AAC9F,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,yCAAyC,MAAM;AAC1F;AACA;AACA,6BAA6B,0DAAoB;AACjD;AACA;AACA;AACA,iCAAiC,oDAAc,4CAA4C,EAAE;AAC7F,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,4BAA4B,MAAM,iBAAiB,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAkB;AAC/B,+CAA+C,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAoB,kBAAkB,IAAI,QAAQ,UAAU;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uBAAuB,kBAAkB,cAAc;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACphBA;AACA;AACwD;AAClB;AACO;AACR;AACD;AACoB;AACxD;AACA;AACA,wCAAwC,qBAAqB;AACtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACO;AACP;AACA;AACA;AACA,6BAA6B,sDAAgB;AAC7C;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,MAAM,2DAAgB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA,gBAAgB,sDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA,6BAA6B,oDAAc,kEAAkE,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA,6BAA6B,0DAAoB,wBAAwB,oBAAoB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,sCAAsC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,gCAAgC,MAAM;AACjF;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,+CAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iEAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qBAAqB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAsB;AAC/C;AACA;AACA;AACA,yBAAyB,iEAAsB;AAC/C,yBAAyB,iEAAsB;AAC/C;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oDAAc,kCAAkC,sDAAc,IAAI;AACnH;AACA;AACA;AACA;AACA,yBAAyB,2DAAgB;AACzC;AACA;AACA,yBAAyB,4DAAiB;AAC1C,yCAAyC,0DAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAgB,2BAA2B,aAAa;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAgB,qCAAqC,WAAW;AAC7F;AACA;AACA,iCAAiC,sDAAgB,0BAA0B,WAAW,8BAA8B,+BAA+B;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,oCAAoC,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,gCAAgC,WAAW,iBAAiB,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,UAAU;AAC/G;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAgB,0BAA0B,WAAW,8BAA8B,+BAA+B;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,uBAAuB,WAAW;AACjF;AACA;AACA;AACA;AACA,yBAAyB,oDAAc,oCAAoC,MAAM,0BAA0B,sBAAsB;AACjI;AACA,gFAAgF,+CAAU;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,4CAA4C,MAAM,iBAAiB,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAoB,+CAA+C,MAAM;AACtG;AACA;AACA,6BAA6B,0DAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,mDAAmD,MAAM,iBAAiB,EAAE;AAC3H;AACA;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA,6BAA6B,0DAAoB,8BAA8B,2BAA2B,gBAAgB,gBAAgB;AAC1I;AACA;AACA,aAAa;AACb;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB;AACrD;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAc,yDAAyD,+BAA+B,eAAe,EAAE;AAChK;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB,gDAAgD,EAAE;AACvG;AACA,qCAAqC,oDAAc,8BAA8B,sBAAsB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAoB,iDAAiD,iCAAiC,SAAS,2BAA2B;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,oDAAc,+CAA+C,mBAAmB,IAAI,oBAAoB,iBAAiB,EAAE;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,0CAA0C,MAAM,iBAAiB,sDAAc,IAAI;AAClI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC72BA;AACA;AACkE;AAChB;AACF;AACX;AACe;AACb;AACM;AAC7C;AACA,WAAW,oDAAc;AACzB,WAAW,oDAAc;AACzB,UAAU,0DAAoB;AAC9B,iBAAiB,0DAAoB;AACrC,UAAU,sDAAgB;AAC1B,aAAa,sDAAgB;AAC7B,WAAW,oDAAc;AACzB,cAAc,uDAAiB;AAC/B,UAAU,mDAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA,+BAA+B,wCAAwC;AAChE;AACP;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA,eAAe,cAAc,cAAc,uCAAuC;AAClF;AACA;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA,iBAAiB,eAAe,gBAAgB,uCAAuC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAc;AAC7C,eAAe,gEAAoB,4BAA4B,yDAAmB,uBAAuB,6DAAe;AACxH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACO;AACP;AACA,2EAA2E,4CAA4C;AACvH;AACA,0EAA0E,4CAA4C;AACtH;AACA,0EAA0E,4CAA4C;AACtH;AACA,iFAAiF,kDAAkD;AACnI;AACA,iFAAiF,kDAAkD;AACnI;AACA,oEAAoE,sCAAsC;AAC1G;AACA,qEAAqE,uCAAuC;AAC5G;AACA,CAAC,kCAAkC;AACnC;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAC6C;AACR;AACS;AACP;AACiB;AACxD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAmB;AACjD;AACA,6BAA6B,qCAAqC;AAClE;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAmB;AACxC;AACA;AACA,yBAAyB,uEAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,2DAAgB;AACrC;AACA;AACA,qBAAqB,4DAAiB;AACtC;AACA;AACA;AACA;AACA,+BAA+B,0DAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA,eAAe,YAAY;AAC3B,iBAAiB,QAAQ;AACzB;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACoD;AACD;AACd;AACS;AACgC;AAC9E;AACA;AACO;AACP;AACA;AACA;AACA,8BAA8B,6DAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C;AACA,yBAAyB,oDAAc;AACvC;AACA,+BAA+B,8DAAqB;AACpD;AACA;AACA;AACA,8BAA8B,0DAAkB;AAChD,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAqB;AACpD;AACA;AACA;AACA;AACA,2BAA2B,IAAI,KAAK,WAAW;AAC/C,yBAAyB,oDAAc,sCAAsC,QAAQ;AACrF;AACA;AACA,6BAA6B,oDAAc,uDAAuD,oBAAoB;AACtH;AACA,mCAAmC,8CAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,IAAI,KAAK,WAAW;AAC3D,qCAAqC,oDAAc,sCAAsC,QAAQ;AACjG;AACA;AACA,yCAAyC,0DAAoB;AAC7D;AACA;AACA;AACA,yCAAyC,oDAAc,uDAAuD,oBAAoB;AAClI;AACA,+CAA+C,8CAAS;AACxD;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc,4CAA4C,qDAAa,oDAAoD;AACxK;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAc,0DAA0D,UAAU;AAC3H;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA,6CAA6C,oDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAW;AAC1B;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,uDAAuD,UAAU;AAC5G;AACA,kCAAkC,0DAAkB;AACpD;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACqC;AACS;AAC0C;AACxF;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA,wEAAwE,sCAAsC;AAC9G;AACA;AACA;AACA,mCAAmC,4DAAmB;AACtD;AACA;AACA;AACA;AACA,gBAAgB,sDAAkB,IAAI,wDAAoB;AAC1D,mEAAmE,gDAAgD;AACnH;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAkB;AACxD;AACA,mEAAmE,2DAA2D,wCAAwC;AACtK;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc,oCAAoC,qDAAa,0CAA0C;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAoB,sBAAsB,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtGA;AACA;AAC8C;AAC9C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAmB;AACtC;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,OAAO,EAAE,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACqC;AACE;AACvC;AACA;AACO;AACP;AACO;AACP;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM,SAAS,IAAI;AAC1D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,EAAE,kBAAkB;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,oDAAc,MAAM,eAAe,2BAA2B,kDAAkD;AAC/H;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,KAAK;AACL,eAAe,oDAAc,MAAM,eAAe,gDAAgD,oBAAoB;AACtH;AACA;AACO;AACP;AACA,iCAAiC,0DAAoB;AACrD;AACA;AACA,eAAe,yDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB,IAAI,8CAAQ,WAAW,IAAI,QAAQ;AACxF;AACA,qBAAqB,uDAAiB;AACtC,qBAAqB,oDAAc;AACnC;AACA;AACA,qBAAqB,sDAAgB;AACrC;AACA;AACA,qBAAqB,0DAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wDAAwD,oBAAoB,WAAW;AACvF;AACA;AACA,oBAAoB,iBAAiB,GAAG,iBAAiB;AACzD,sBAAsB,UAAU;AAChC;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA,kCAAkC;AAClC;AACA,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,EAAE,eAAe;AACzC;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,EAAE;AAChB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAM;AACrB,eAAe,qBAAM;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvPA;AACA;AAC4C;AACP;AACS;AAC6B;AAC3E;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAe,IAAI,0DAAsB;AACzD;AACA,sCAAsC,0DAAkB;AACxD;AACA;AACA,4BAA4B,mEAAyB,cAAc,MAAM;AACzE;AACA;AACA,4BAA4B,4DAAkB;AAC9C;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA,gFAAgF,0BAA0B;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAAqB;AACxD;AACA;AACA;AACA,iCAAiC,0DAAoB,4BAA4B,IAAI;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB,4BAA4B,MAAM;AACvF;AACA;AACA,iCAAiC,oDAAc,2CAA2C,qDAAa,wCAAwC;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6BAA6B,oDAAc,0CAA0C,qDAAa,gCAAgC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA,6EAA6E,YAAY,GAAG,kCAAkC;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AAC+D;AACP;AACnB;AACG;AACjC,4BAA4B,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAa;AACjC;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAY;AAC5C;AACA;AACA,+BAA+B,8CAAS;AACxC;AACA;AACA;AACA,iCAAiC,sDAAgB,8BAA8B,WAAW,IAAI,eAAe;AAC7G,2BAA2B,8CAAS;AACpC;AACA;AACA,iCAAiC,sDAAgB;AACjD,2BAA2B,iDAAY;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,GAAG;EACpB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC,CAAC;EACzB,IAAI,CAACC,WAAW,GAAG,IAAI,CA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AC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC;IAWM,qBAAqB,CAAC,EAAU,EAAE,EAAU;QACjD,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE;YACxB,OAAO,GAAG,CAAC;SACZ;QAED,MAAM,IAAI,GAAW,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACpC,OAAO,CACL,IAAI,GAAG,CAAC,cAAc,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAC3E,CAAC;IACJ,CAAC;CAgBF;;;;;;;;;;;;ACzLD;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU,2EAA2E;AACrF,UAAU,6DAA6D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gBAAgB;AACloFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW,EAAE,4BAA4B;AACvE;AACA;AACA;AACA,8BAA8B,iBAAiB,EAAE,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB,kBAAkB;AAC/D;AACA,kBAAkB;AAClB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,4BAA4B,2BAA2B,4BAA4B;AAC3L;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrwBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAyD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,2EAA2E;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,+CAA+C;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,sBAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B,KAAK,WAAW;AACnF,mCAAmC,mBAAmB;AACtD,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,sCAAsC,0EAA0E;AAChH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iDAAiD,kCAAkC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA,oEAAoE,0EAA0E;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oEAAoE,oCAAoC;AACxG;AACA;AACA;AACA,oEAAoE,6CAA6C;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAmE;AACzG,yBAAyB,4CAA4C;AACrE;AACA;AACA;AACA,uCAAuC,UAAU,cAAc,aAAa,KAAK,YAAY;AAC7F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAmE;AACzG,yBAAyB,4CAA4C;AACrE;AACA;AACA;AACA,uCAAuC,UAAU,cAAc,aAAa,KAAK,YAAY;AAC7F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE,SAAS,UAAU,mCAAmC;AACtD;AACA;AACA,mCAAmC,UAAU,iBAAiB,aAAa,KAAK,SAAS;AACzF,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iFAAiF,mBAAmB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,kBAAkB,UAAU,SAAS,gBAAgB,UAAU;AAChJ;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yCAAyC,SAAS,eAAe;AACjE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,UAAU,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA,8CAA8C,gBAAgB,uCAAuC;AACrG,mDAAmD,8CAA8C;AACjG,iCAAiC,4CAA4C;AAC7E;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,SAAS;AACT,wDAAwD,kBAAkB;AAC1E,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wDAAwgCAAgC,0BAA0B;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8EAA8E,4CAA4C;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,8CAA8C;AACvH,kEAAkE,8CAA8C;AAChH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oCAAoC,oCAAoC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,sBAAsB;AACvD;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,sCAAsC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2DAA2D;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8BAA8B,uCAAuC;AACrE;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,oBAAoB,cAAc;AAClC,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ,QAAQ,0BAA0B;AACjF;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA,8DAA8D,6DAA6D;AAC3H;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAwD;AAClE,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+CAA+C,2CAA2C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,sBAAsB;AACtB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA,sDAAsD,MAAM;AAC5D;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,KAAK,wBAAwB,mCAAmC;AAChE;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,QAAQ;AACjF,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,6BAA6B;AAC7B,iEAAiE,4CAA4C;AAC7G,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iDAAiD,+BAA+B,0BAA0B,SAAS;AACnH,qCAAqC,QAAQ;AAC7C,oDAAoD,qCAAqC;AACzF;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oEAAoE,6DAA6D;AACjI;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,2DAA2D;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qEAAqE,IAAI,MAAM;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,wBAAwB,aAAa;AACrC,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,kDAAkD,OAAO,GAAG,UAAU,GAAG,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,oCAAoC,SAAS,cAAc,GAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA,sDAAsD,OAAO,GAAG,UAAU,GAAG,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,2EAA2E,uBAAuB;AAClG;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD,iDAAiD;AACjD;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,kFAAkF,+BAA+B;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,UAAU;AACxF;AACA,6EAA6E,UAAU;AACvF;AACA,SAAS;AACT;AACA;AACA,8CAA8C,UAAU;AACxD;AACA,yCAAyC,UAAU,gDAAgD,mBAAmB;AACtH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,UAAU,4BAA4B;AACtC;AACA,yBAAyB,aAAa;AACtC;AACA,2BAA2B,wDAAwD;AACnF;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA,KAAK;AACL;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mDAAmD,2BAA2B;AAC9E;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEiG;AACjG;;;;;;;UCr+JA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN2C;AAC3CvI,MAAM,CAACyI,aAAa,GAAG,YAAY;EAC/Bzd,OAAO,CAACR,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC;EACxC,IAAIke,IAAI,GAAG,IAAIF,oDAAU,CAACG,SAAS,EAAEC,eAAe,EAAEC,UAAU,CAAC;EACjEH,IAAI,CAACI,QAAQ,EAAE;EACfJ,IAAI,CAACK,SAAS,CAACH,eAAe,CAACI,OAAO,EAAEJ,eAAe,CAACK,eAAe,CAAC;AAC5E,CAAC,C","sources":["webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/AbortController.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Errors.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ILogger.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ITransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Loggers.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Subject.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Utils.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","webpack://live2dwebcanvas/./src/v1/framework/Live2DFramework.js","webpack://live2dwebcanvas/./src/v1/main.js","webpack://live2dwebcanvas/./src/v2/main.js","webpack://live2dwebcanvas/./src/Waifu/live2d-tips.ts","webpack://live2dwebcanvas/./src/lib/DbCache.ts","webpack://live2dwebcanvas/./src/v1/LAppDefine.ts","webpack://live2dwebcanvas/./src/v1/LAppLive2DManager.ts","webpack://live2dwebcanvas/./src/v1/LAppModel.ts","webpack://live2dwebcanvas/./src/v1/PlatformManager.ts","webpack://live2dwebcanvas/./src/v1/framework/MatrixStack.ts","webpack://live2dwebcanvas/./src/v1/framework/ModelSettingJson.ts","webpack://live2dwebcanvas/./src/v2/framework/cubismdefaultparameterid.ts","webpack://live2dwebcanvas/./src/v2/framework/cubismframeworkconfig.ts","webpack://live2dwebcanvas/./src/v2/framework/cubismmodelsettingjson.ts","webpack://live2dwebcanvas/./src/v2/framework/effect/cubismbreath.ts","webpack://live2dwebcanvas/./src/v2/framework/effect/cubismeyeblink.ts","webpack://live2dwebcanvas/./src/v2/framework/effect/cubismpose.ts","webpack://live2dwebcanvas/./src/v2/framework/icubismmodelsetting.ts","webpack://live2dwebcanvas/./src/v2/framework/id/cubismid.ts","webpack://live2dwebcanvas/./src/v2/framework/id/cubismidmanager.ts","webpack://live2dwebcanvas/./src/v2/framework/live2dcubismframework.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismmath.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismmatrix44.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismmodelmatrix.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismtargetpoint.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismvector2.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismviewmatrix.ts","webpack://live2dwebcanvas/./src/v2/framework/model/cubismmoc.ts","webpack://live2dwebcanvas/./src/v2/framework/model/cubismmodel.ts","webpack://live2dwebcanvas/./src/v2/framework/model/cubismmodeluserdata.ts","webpack://live2dwebcanvas/./src/v2/framework/model/cubismmodeluserdatajson.ts","webpack://live2dwebcanvas/./src/v2/framework/model/cubismusermodel.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/acubismmotion.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismexpressionmotion.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotion.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotioninternal.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotionjson.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotionmanager.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotionqueueentry.ts","webpack://live2dwebcanvas/./src/v2/framework/motion/cubismmotionqueuemanager.ts","webpack://live2dwebcanvas/./src/v2/framework/physics/cubismphysics.ts","webpack://live2dwebcanvas/./src/v2/framework/physics/cubismphysicsinternal.ts","webpack://live2dwebcanvas/./src/v2/framework/physics/cubismphysicsjson.ts","webpack://live2dwebcanvas/./src/v2/framework/rendering/cubismrenderer.ts","webpack://live2dwebcanvas/./src/v2/framework/rendering/cubismrenderer_webgl.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmmap.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmrectf.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmstring.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmvector.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismdebug.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismjson.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismjsonextension.ts","webpack://live2dwebcanvas/./src/v2/lappdefine.ts","webpack://live2dwebcanvas/./src/v2/lappdelegate.ts","webpack://live2dwebcanvas/./src/v2/lapplive2dmanager.ts","webpack://live2dwebcanvas/./src/v2/lappmodel.ts","webpack://live2dwebcanvas/./src/v2/lapppal.ts","webpack://live2dwebcanvas/./src/v2/lappsprite.ts","webpack://live2dwebcanvas/./src/v2/lapptexturemanager.ts","webpack://live2dwebcanvas/./src/v2/lappview.ts","webpack://live2dwebcanvas/./src/v2/lappwavfilehandler.ts","webpack://live2dwebcanvas/./src/v2/touchmanager.ts","webpack://live2dwebcanvas/external var [\"moment\"]","webpack://live2dwebcanvas/./node_modules/dexie/dist/modern/dexie.mjs","webpack://live2dwebcanvas/webpack/bootstrap","webpack://live2dwebcanvas/webpack/runtime/compat get default export","webpack://live2dwebcanvas/webpack/runtime/define property getters","webpack://live2dwebcanvas/webpack/runtime/global","webpack://live2dwebcanvas/webpack/runtime/hasOwnProperty shorthand","webpack://live2dwebcanvas/webpack/runtime/make namespace object","webpack://live2dwebcanvas/./src/Waifu/waifu-tips.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* Disconnecting */ || this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        this.transport.onclose = (e) => this._stopConnection(e);\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    constructor(connection, logger, protocol, reconnectPolicy) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version: this._protocol.version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        return this._sendMessage(this._protocol.writeMessage(message));\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            await this._httpClient.delete(this._url, deleteOptions);\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"7.0.2\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","/**\r\n * EYHN 基于 live2d 官方 Live2DFramework.js 修改\r\n * \r\n * Copyright © 2016 - 2017 EYHN\r\n */\r\n//============================================================\r\n//============================================================\r\n//  class L2DBaseModel         \r\n//============================================================\r\n//============================================================\r\nfunction L2DBaseModel() {\r\n    this.live2DModel = null; // ALive2DModel\r\n    this.modelMatrix = null; // L2DModelMatrix\r\n    this.eyeBlink = null; // L2DEyeBlink\r\n    this.physics = null; // L2DPhysics\r\n    this.pose = null; // L2DPose\r\n    this.debugMode = false;\r\n    this.initialized = false;\r\n    this.updating = false;\r\n    this.alpha = 1;\r\n    this.accAlpha = 0;\r\n    this.lipSync = false;\r\n    this.lipSyncValue = 0;\r\n    this.accelX = 0;\r\n    this.accelY = 0;\r\n    this.accelZ = 0;\r\n    this.dragX = 0;\r\n    this.dragY = 0;\r\n    this.startTimeMSec = null;\r\n    this.mainMotionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.expressionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.motions = {};\r\n    this.expressions = {};\r\n\r\n    this.isTexLoaded = false;\r\n}\r\n\r\nvar texCounter = 0;\r\n\r\n//============================================================\r\n//    L2DBaseModel # getModelMatrix()\r\n//============================================================\r\nL2DBaseModel.prototype.getModelMatrix = function () {\r\n    return this.modelMatrix;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.setAlpha = function (a/*float*/) {\r\n    if (a > 0.999) a = 1;\r\n    if (a < 0.001) a = 0;\r\n    this.alpha = a;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.getAlpha = function () {\r\n    return this.alpha;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.isInitialized = function () {\r\n    return this.initialized;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.setInitialized = function (v/*boolean*/) {\r\n    this.initialized = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.isUpdating = function () {\r\n    return this.updating;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.setUpdating = function (v/*boolean*/) {\r\n    this.updating = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getLive2DModel()\r\n//============================================================\r\nL2DBaseModel.prototype.getLive2DModel = function () {\r\n    return this.live2DModel;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSync()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSync = function (v/*boolean*/) {\r\n    this.lipSync = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSyncValue()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSyncValue = function (v/*float*/) {\r\n    this.lipSyncValue = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAccel()\r\n//============================================================\r\nL2DBaseModel.prototype.setAccel = function (x/*float*/, y/*float*/, z/*float*/) {\r\n    this.accelX = x;\r\n    this.accelY = y;\r\n    this.accelZ = z;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setDrag()\r\n//============================================================\r\nL2DBaseModel.prototype.setDrag = function (x/*float*/, y/*float*/) {\r\n    this.dragX = x;\r\n    this.dragY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getMainMotionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getMainMotionManager = function () {\r\n    return this.mainMotionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getExpressionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getExpressionManager = function () {\r\n    return this.expressionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadModelData()\r\n//============================================================\r\nL2DBaseModel.prototype.loadModelData = function (path/*String*/, callback) {\r\n    /*\r\n    if( this.live2DModel != null ) {\r\n        this.live2DModel.deleteTextures();\r\n    }\r\n    */\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load model : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadLive2DModel(path, function (l2dModel) {\r\n        thisRef.live2DModel = l2dModel;\r\n        thisRef.live2DModel.saveParam();\r\n\r\n        var _err = Live2D.getError();\r\n\r\n        if (_err != 0) {\r\n            console.error(\"Error : Failed to loadModelData().\");\r\n            return;\r\n        }\r\n\r\n        thisRef.modelMatrix = new L2DModelMatrix(\r\n            thisRef.live2DModel.getCanvasWidth(),\r\n            thisRef.live2DModel.getCanvasHeight()); //L2DModelMatrix\r\n        thisRef.modelMatrix.setWidth(2);\r\n        thisRef.modelMatrix.setCenterPosition(0, 0);\r\n\r\n        callback(thisRef.live2DModel);\r\n    });\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadTexture()\r\n//============================================================\r\nL2DBaseModel.prototype.loadTexture = function (no/*int*/, path/*String*/, callback) {\r\n    texCounter++;\r\n\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Texture : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadTexture(this.live2DModel, no, path, function () {\r\n        texCounter--;\r\n        if (texCounter == 0) thisRef.isTexLoaded = true;\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadMotion()\r\n//============================================================\r\nL2DBaseModel.prototype.loadMotion = function (name/*String*/, path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Motion : \" + path);\r\n\r\n    var motion = null; //Live2DMotion\r\n\r\n    var thisRef = this;\r\n    pm.loadBytes(path).then((buf)=>{\r\n        motion = Live2DMotion.loadMotion(buf);\r\n        if (name != null) {\r\n            thisRef.motions[name] = motion;\r\n        }\r\n        callback(motion);\r\n    });\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadExpression()\r\n//============================================================\r\nL2DBaseModel.prototype.loadExpression = function (name/*String*/, path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Expression : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadBytes(path).then((buf)=>{\r\n        if (name != null) {\r\n            thisRef.expressions[name] = L2DExpressionMotion.loadJson(buf);\r\n        }\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPose()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPose = function (path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load Pose : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path).then((buf)=>{\r\n            thisRef.pose = L2DPose.load(buf);\r\n            if (typeof callback == \"function\") callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPhysics()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPhysics = function (path/*String*/) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load Physics : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path).then((buf)=>{\r\n            thisRef.physics = L2DPhysics.load(buf);\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # hitTestSimple()\r\n//============================================================\r\nL2DBaseModel.prototype.hitTestSimple = function (drawID, testX, testY) {\r\n\t\r\n\tif(this.live2DModel === null) return !1;\r\n\t\r\n    var drawIndex = this.live2DModel.getDrawDataIndex(drawID);\r\n\r\n    if (drawIndex < 0) return false;\r\n\r\n    var points = this.live2DModel.getTransformedPoints(drawIndex);\r\n    var left = this.live2DModel.getCanvasWidth();\r\n    var right = 0;\r\n    var top = this.live2DModel.getCanvasHeight();\r\n    var bottom = 0;\r\n\r\n    for (var j = 0; j < points.length; j = j + 2) {\r\n        var x = points[j];\r\n        var y = points[j + 1];\r\n\r\n        if (x < left) left = x;\r\n        if (x > right) right = x;\r\n        if (y < top) top = y;\r\n        if (y > bottom) bottom = y;\r\n    }\r\n    var tx = this.modelMatrix.invertTransformX(testX);\r\n    var ty = this.modelMatrix.invertTransformY(testY);\r\n\r\n    return (left <= tx && tx <= right && top <= ty && ty <= bottom);\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # hitTestSimpleCustom()\r\n//============================================================\r\nL2DBaseModel.prototype.hitTestSimpleCustom = function (x, y, testX, testY) {\r\n\t\r\n\tif(this.live2DModel === null) return !1;\r\n\ttry{\r\n        if(testX >= x[0] && testX <= y[0])\r\n            if(testY <= x[1] && testY >= y[1])\r\n                return true;\r\n        return false;\r\n    }catch(err){\r\n        console.warn(\"数据可能还没有准备好 view x:\" + x + \" y:\" + y +\" testX:\" + testX + \" testY:\" + testY \r\n            + \" Error:\" +err);\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionMotion  extends     AMotion\r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionMotion() {\r\n    AMotion.prototype.constructor.call(this);\r\n    this.paramList = new Array(); //ArrayList<L2DExpressionParam>\r\n}\r\n\r\nL2DExpressionMotion.prototype = new AMotion(); // L2DExpressionMotion extends AMotion\r\n\r\n//============================================================\r\nL2DExpressionMotion.EXPRESSION_DEFAULT = \"DEFAULT\";\r\nL2DExpressionMotion.TYPE_SET = 0;\r\nL2DExpressionMotion.TYPE_ADD = 1;\r\nL2DExpressionMotion.TYPE_MULT = 2;\r\n\r\n//============================================================\r\n//    static L2DExpressionMotion.loadJson()\r\n//============================================================\r\nL2DExpressionMotion.loadJson = function (buf) {\r\n    var ret = new L2DExpressionMotion();\r\n\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n\r\n    ret.setFadeIn(parseInt(json.fade_in) > 0 ? parseInt(json.fade_in) : 1000);\r\n    ret.setFadeOut(parseInt(json.fade_out) > 0 ? parseInt(json.fade_out) : 1000);\r\n\r\n    if (json.params == null) {\r\n        return ret;\r\n    }\r\n\r\n    var params = json.params;\r\n    var paramNum = params.length;\r\n    ret.paramList = []; //ArrayList<L2DExpressionParam>\r\n    for (var i = 0; i < paramNum; i++) {\r\n        var param = params[i];\r\n        var paramID = param.id.toString();\r\n        var value = parseFloat(param.val);\r\n        var calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        var calc = param.calc != null ? param.calc.toString() : \"add\";\r\n        if (calc === \"add\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        else if (calc === \"mult\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_MULT;\r\n        }\r\n        else if (calc === \"set\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_SET;\r\n        }\r\n        else {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        if (calcTypeInt == L2DExpressionMotion.TYPE_ADD) {\r\n            var defaultValue = param.def == null ? 0 : parseFloat(param.def);\r\n            value = value - defaultValue;\r\n        }\r\n        else if (calcTypeInt == L2DExpressionMotion.TYPE_MULT) {\r\n            var defaultValue = param.def == null ? 1 : parseFloat(param.def);\r\n            if (defaultValue == 0) defaultValue = 1;\r\n            value = value / defaultValue;\r\n        }\r\n\r\n        var item = new L2DExpressionParam();\r\n        item.id = paramID;\r\n        item.type = calcTypeInt;\r\n        item.value = value;\r\n\r\n        ret.paramList.push(item);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DExpressionMotion # updateParamExe()\r\n//============================================================\r\nL2DExpressionMotion.prototype.updateParamExe = function (model /*ALive2DModel*/, timeMSec/*long*/, weight /*float*/, motionQueueEnt /*MotionQueueEnt*/) {\r\n    for (var i = this.paramList.length - 1; i >= 0; --i) {\r\n        var param = this.paramList[i]; //L2DExpressionParam\r\n        // if (!param || !param.type) continue;\r\n        if (param.type == L2DExpressionMotion.TYPE_ADD) {\r\n            model.addToParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if (param.type == L2DExpressionMotion.TYPE_MULT) {\r\n            model.multParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if (param.type == L2DExpressionMotion.TYPE_SET) {\r\n            model.setParamFloat(param.id, param.value, weight);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionParam   \r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionParam() {\r\n    this.id = \"\";\r\n    this.type = -1;\r\n    this.value = null;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DEyeBlink          \r\n//============================================================\r\n//============================================================\r\nfunction L2DEyeBlink() {\r\n    this.nextBlinkTime = null /* TODO NOT INIT */; // \r\n    this.stateStartTime = null /* TODO NOT INIT */; // \r\n    this.blinkIntervalMsec = null /* TODO NOT INIT */; // \r\n    this.eyeState = EYE_STATE.STATE_FIRST;\r\n    this.blinkIntervalMsec = 4000;\r\n    this.closingMotionMsec = 100;\r\n    this.closedMotionMsec = 50;\r\n    this.openingMotionMsec = 150;\r\n    this.closeIfZero = true;\r\n    this.eyeID_L = \"PARAM_EYE_L_OPEN\";\r\n    this.eyeID_R = \"PARAM_EYE_R_OPEN\";\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # calcNextBlink()\r\n//============================================================\r\nL2DEyeBlink.prototype.calcNextBlink = function () {\r\n    var time /*long*/ = UtSystem.getUserTimeMSec();\r\n    var r /*Number*/ = Math.random();\r\n    return  /*(long)*/ (time + r * (2 * this.blinkIntervalMsec - 1));\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setInterval()\r\n//============================================================\r\nL2DEyeBlink.prototype.setInterval = function (blinkIntervalMsec /*int*/) {\r\n    this.blinkIntervalMsec = blinkIntervalMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setEyeMotion()\r\n//============================================================\r\nL2DEyeBlink.prototype.setEyeMotion = function (closingMotionMsec/*int*/, closedMotionMsec/*int*/, openingMotionMsec/*int*/) {\r\n    this.closingMotionMsec = closingMotionMsec;\r\n    this.closedMotionMsec = closedMotionMsec;\r\n    this.openingMotionMsec = openingMotionMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # updateParam()\r\n//============================================================\r\nL2DEyeBlink.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var time /*:long*/ = UtSystem.getUserTimeMSec();\r\n    var eyeParamValue /*:Number*/;\r\n    var t /*:Number*/ = 0;\r\n    switch (this.eyeState) {\r\n        case EYE_STATE.STATE_CLOSING:\r\n            t = (time - this.stateStartTime) / this.closingMotionMsec;\r\n            if (t >= 1) {\r\n                t = 1;\r\n                this.eyeState = EYE_STATE.STATE_CLOSED;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 1 - t;\r\n            break;\r\n        case EYE_STATE.STATE_CLOSED:\r\n            t = (time - this.stateStartTime) / this.closedMotionMsec;\r\n            if (t >= 1) {\r\n                this.eyeState = EYE_STATE.STATE_OPENING;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 0;\r\n            break;\r\n        case EYE_STATE.STATE_OPENING:\r\n            t = (time - this.stateStartTime) / this.openingMotionMsec;\r\n            if (t >= 1) {\r\n                t = 1;\r\n                this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n                this.nextBlinkTime = this.calcNextBlink();\r\n            }\r\n            eyeParamValue = t;\r\n            break;\r\n        case EYE_STATE.STATE_INTERVAL:\r\n            if (this.nextBlinkTime < time) {\r\n                this.eyeState = EYE_STATE.STATE_CLOSING;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 1;\r\n            break;\r\n        case EYE_STATE.STATE_FIRST:\r\n        default:\r\n            this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n            this.nextBlinkTime = this.calcNextBlink();\r\n            eyeParamValue = 1;\r\n            break;\r\n    }\r\n    if (!this.closeIfZero) eyeParamValue = -eyeParamValue;\r\n    model.setParamFloat(this.eyeID_L, eyeParamValue);\r\n    model.setParamFloat(this.eyeID_R, eyeParamValue);\r\n}\r\n\r\n//== enum EYE_STATE ==\r\nvar EYE_STATE = function () { };\r\n\r\nEYE_STATE.STATE_FIRST = \"STATE_FIRST\"\r\nEYE_STATE.STATE_INTERVAL = \"STATE_INTERVAL\"\r\nEYE_STATE.STATE_CLOSING = \"STATE_CLOSING\"\r\nEYE_STATE.STATE_CLOSED = \"STATE_CLOSED\"\r\nEYE_STATE.STATE_OPENING = \"STATE_OPENING\"\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMatrix44          \r\n//============================================================\r\n//============================================================\r\nfunction L2DMatrix44() {\r\n    this.tr = new Float32Array(16); // \r\n    this.identity();\r\n}\r\n\r\n//============================================================\r\n//    static L2DMatrix44.mul()\r\n//============================================================\r\nL2DMatrix44.mul = function (a/*float[]*/, b/*float[]*/, dst/*float[]*/) {\r\n    var c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    var n = 4;\r\n    var i, j, k;\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n            for (k = 0; k < n; k++) {\r\n                c[i + j * 4] += a[i + k * 4] * b[k + j * 4];\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < 16; i++) {\r\n        dst[i] = c[i];\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # identity()\r\n//============================================================\r\nL2DMatrix44.prototype.identity = function () {\r\n    for (var i/*:int*/ = 0; i < 16; i++)\r\n        this.tr[i] = ((i % 5) == 0) ? 1 : 0;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getArray()\r\n//============================================================\r\nL2DMatrix44.prototype.getArray = function () {\r\n    return this.tr;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getCopyMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.getCopyMatrix = function () {\r\n    return new Float32Array(this.tr); // this.tr.clone();\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # setMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.setMatrix = function (tr/*float[]*/) {\r\n    if (this.tr == null || this.tr.length != this.tr.length) return;\r\n    for (var i/*:int*/ = 0; i < 16; i++) this.tr[i] = tr[i];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleX()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleX = function () {\r\n    return this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleY()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleY = function () {\r\n    return this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformX()\r\n//============================================================\r\nL2DMatrix44.prototype.transformX = function (src/*float*/) {\r\n    return this.tr[0] * src + this.tr[12];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformY()\r\n//============================================================\r\nL2DMatrix44.prototype.transformY = function (src/*float*/) {\r\n    return this.tr[5] * src + this.tr[13];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformX()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformX = function (src/*float*/) {\r\n    return (src - this.tr[12]) / this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformY()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformY = function (src/*float*/) {\r\n    return (src - this.tr[13]) / this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multTranslate()\r\n//============================================================\r\nL2DMatrix44.prototype.multTranslate = function (shiftX/*float*/, shiftY/*float*/) {\r\n    var tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translate()\r\n//============================================================\r\nL2DMatrix44.prototype.translate = function (x/*float*/, y/*float*/) {\r\n    this.tr[12] = x;\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateX()\r\n//============================================================\r\nL2DMatrix44.prototype.translateX = function (x/*float*/) {\r\n    this.tr[12] = x;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateY()\r\n//============================================================\r\nL2DMatrix44.prototype.translateY = function (y/*float*/) {\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multScale()\r\n//============================================================\r\nL2DMatrix44.prototype.multScale = function (scaleX/*float*/, scaleY/*float*/) {\r\n    var tr1 = [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # scale()\r\n//============================================================\r\nL2DMatrix44.prototype.scale = function (scaleX/*float*/, scaleY/*float*/) {\r\n    this.tr[0] = scaleX;\r\n    this.tr[5] = scaleY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DModelMatrix       extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DModelMatrix(w/*float*/, h/*float*/) {\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.width = w;\r\n    this.height = h;\r\n}\r\n\r\n//L2DModelMatrix extends L2DMatrix44\r\nL2DModelMatrix.prototype = new L2DMatrix44();\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setPosition = function (x/*float*/, y/*float*/) {\r\n    this.translate(x, y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setCenterPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setCenterPosition = function (x/*float*/, y/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    var h = this.height * this.getScaleY();\r\n    this.translate(x - w / 2, y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # top()\r\n//============================================================\r\nL2DModelMatrix.prototype.top = function (y/*float*/) {\r\n    this.setY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # bottom()\r\n//============================================================\r\nL2DModelMatrix.prototype.bottom = function (y/*float*/) {\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # left()\r\n//============================================================\r\nL2DModelMatrix.prototype.left = function (x/*float*/) {\r\n    this.setX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # right()\r\n//============================================================\r\nL2DModelMatrix.prototype.right = function (x/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerX()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerX = function (x/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerY()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerY = function (y/*float*/) {\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setX()\r\n//============================================================\r\nL2DModelMatrix.prototype.setX = function (x/*float*/) {\r\n    this.translateX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setY()\r\n//============================================================\r\nL2DModelMatrix.prototype.setY = function (y/*float*/) {\r\n    this.translateY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setHeight()\r\n//============================================================\r\nL2DModelMatrix.prototype.setHeight = function (h/*float*/) {\r\n    var scaleX = h / this.height;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setWidth()\r\n//============================================================\r\nL2DModelMatrix.prototype.setWidth = function (w/*float*/) {\r\n    var scaleX = w / this.width;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMotionManager     extends     MotionQueueManager\r\n//============================================================\r\n//============================================================\r\nfunction L2DMotionManager() {\r\n    MotionQueueManager.prototype.constructor.call(this);\r\n    this.currentPriority = null;\r\n    this.reservePriority = null;\r\n\r\n    this.super = MotionQueueManager.prototype;\r\n}\r\n\r\n\r\nL2DMotionManager.prototype = new MotionQueueManager();\r\n\r\n//============================================================\r\n//    L2DMotionManager # getCurrentPriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getCurrentPriority = function () {\r\n    return this.currentPriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # getReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getReservePriority = function () {\r\n    return this.reservePriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # reserveMotion()\r\n//============================================================\r\nL2DMotionManager.prototype.reserveMotion = function (priority/*int*/) {\r\n    if (this.reservePriority >= priority) {\r\n        return false;\r\n    }\r\n    if (this.currentPriority >= priority) {\r\n        return false;\r\n    }\r\n\r\n    this.reservePriority = priority;\r\n\r\n    return true;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # setReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.setReservePriority = function (val/*int*/) {\r\n    this.reservePriority = val;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # updateParam()\r\n//============================================================\r\nL2DMotionManager.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var updated = MotionQueueManager.prototype.updateParam.call(this, model);\r\n\r\n    if (this.isFinished()) {\r\n        this.currentPriority = 0;\r\n    }\r\n\r\n    return updated;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # startMotionPrio()\r\n//============================================================\r\nL2DMotionManager.prototype.startMotionPrio = function (motion/*AMotion*/, priority/*int*/) {\r\n    if (priority == this.reservePriority) {\r\n        this.reservePriority = 0;\r\n    }\r\n    this.currentPriority = priority;\r\n    return this.startMotion(motion, false);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPhysics           \r\n//============================================================\r\n//============================================================\r\nfunction L2DPhysics() {\r\n    this.physicsList = new Array(); //ArrayList<PhysicsHair>\r\n    this.startTimeMSec = UtSystem.getUserTimeMSec();\r\n}\r\n\r\n//============================================================\r\n//    static L2DPhysics.load()\r\n//============================================================\r\nL2DPhysics.load = function (buf /*byte[]*/) {\r\n    var ret = new L2DPhysics(); //L2DPhysicsL2DPhysics\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var params = json.physics_hair;\r\n    var paramNum = params.length;\r\n    for (var i = 0; i < paramNum; i++) {\r\n        var param = params[i]; //Value\r\n        var physics = new PhysicsHair(); //PhysicsHairPhysicsHair\r\n        var setup = param.setup; //Value\r\n        var length = parseFloat(setup.length);\r\n        var resist = parseFloat(setup.regist);\r\n        var mass = parseFloat(setup.mass);\r\n        physics.setup(length, resist, mass);\r\n        var srcList = param.src; //Value\r\n        var srcNum = srcList.length;\r\n        for (var j = 0; j < srcNum; j++) {\r\n            var src = srcList[j]; //Value\r\n            var id = src.id; //String\r\n            var type = PhysicsHair.Src.SRC_TO_X;\r\n            var typeStr = src.ptype; //String\r\n            if (typeStr === \"x\") {\r\n                type = PhysicsHair.Src.SRC_TO_X;\r\n            }\r\n            else if (typeStr === \"y\") {\r\n                type = PhysicsHair.Src.SRC_TO_Y;\r\n            }\r\n            else if (typeStr === \"angle\") {\r\n                type = PhysicsHair.Src.SRC_TO_G_ANGLE;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Src\");\r\n            }\r\n            var scale = parseFloat(src.scale);\r\n            var weight = parseFloat(src.weight);\r\n            physics.addSrcParam(type, id, scale, weight);\r\n        }\r\n        var targetList = param.targets; //Value\r\n        var targetNum = targetList.length;\r\n        for (var j = 0; j < targetNum; j++) {\r\n            var target = targetList[j]; //Value\r\n            var id = target.id; //String\r\n            var type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            var typeStr = target.ptype; //String\r\n            if (typeStr === \"angle\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            }\r\n            else if (typeStr === \"angle_v\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE_V;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Target\");\r\n            }\r\n            var scale = parseFloat(target.scale);\r\n            var weight = parseFloat(target.weight);\r\n            physics.addTargetParam(type, id, scale, weight);\r\n        }\r\n        ret.physicsList.push(physics);\r\n    }\r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPhysics # updateParam()\r\n//============================================================\r\nL2DPhysics.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\r\n    for (var i = 0; i < this.physicsList.length; i++) {\r\n        this.physicsList[i].update(model, timeMSec);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPose              \r\n//============================================================\r\n//============================================================\r\nfunction L2DPose() {\r\n    this.lastTime = 0;\r\n    this.lastModel = null; //ALive2DModel\r\n    this.partsGroups = new Array(); //ArrayList<L2DPartsParam[]>\r\n}\r\n\r\n\r\n//============================================================\r\n//    static L2DPose.load()\r\n//============================================================\r\nL2DPose.load = function (buf/*byte[]*/) {\r\n    var ret = new L2DPose(); //L2DPose\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var poseListInfo = json.parts_visible; //Value\r\n    var poseNum = poseListInfo.length;\r\n    for (var i_pose = 0; i_pose < poseNum; i_pose++) {\r\n        var poseInfo = poseListInfo[i_pose]; //Value\r\n        var idListInfo = poseInfo.group; //Value\r\n        var idNum = idListInfo.length;\r\n        var partsGroup/*L2DPartsParam*/ = new Array();\r\n        for (var i_group = 0; i_group < idNum; i_group++) {\r\n            var partsInfo = idListInfo[i_group]; //Value\r\n            var parts = new L2DPartsParam(partsInfo.id); //L2DPartsParamL2DPartsParam\r\n            partsGroup[i_group] = parts;\r\n            if (partsInfo.link == null) continue;\r\n            var linkListInfo = partsInfo.link; //Value\r\n            var linkNum = linkListInfo.length;\r\n            parts.link = new Array(); //ArrayList<L2DPartsParam>\r\n            for (var i_link = 0; i_link < linkNum; i_link++) {\r\n                var linkParts = new L2DPartsParam(linkListInfo[i_link]); //L2DPartsParamL2DPartsParam\r\n                parts.link.push(linkParts);\r\n            }\r\n        }\r\n        ret.partsGroups.push(partsGroup);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # updateParam()\r\n//============================================================\r\nL2DPose.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    if (model == null) return;\r\n\r\n    if (!(model == this.lastModel)) {\r\n        this.initParam(model);\r\n    }\r\n    this.lastModel = model;\r\n\r\n    var curTime = UtSystem.getUserTimeMSec();\r\n    var deltaTimeSec = ((this.lastTime == 0) ? 0 : (curTime - this.lastTime) / 1000.0);\r\n    this.lastTime = curTime;\r\n    if (deltaTimeSec < 0) deltaTimeSec = 0;\r\n    for (var i = 0; i < this.partsGroups.length; i++) {\r\n        this.normalizePartsOpacityGroup(model, this.partsGroups[i], deltaTimeSec);\r\n        this.copyOpacityOtherParts(model, this.partsGroups[i]);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # initParam()\r\n//============================================================\r\nL2DPose.prototype.initParam = function (model/*ALive2DModel*/) {\r\n    if (model == null) return;\r\n    for (var i = 0; i < this.partsGroups.length; i++) {\r\n        var partsGroup = this.partsGroups[i]; //L2DPartsParam\r\n        for (var j = 0; j < partsGroup.length; j++) {\r\n            partsGroup[j].initIndex(model);\r\n            var partsIndex = partsGroup[j].partsIndex;\r\n            var paramIndex = partsGroup[j].paramIndex;\r\n            if (partsIndex < 0) continue;\r\n            var v/*:Boolean*/ = (model.getParamFloat(paramIndex) != 0);\r\n            model.setPartsOpacity(partsIndex, (v ? 1.0 : 0.0));\r\n            model.setParamFloat(paramIndex, (v ? 1.0 : 0.0));\r\n            if (partsGroup[j].link == null) continue;\r\n            for (var k = 0; k < partsGroup[j].link.length; k++) {\r\n                partsGroup[j].link[k].initIndex(model);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # normalizePartsOpacityGroup()\r\n//============================================================\r\nL2DPose.prototype.normalizePartsOpacityGroup = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/, deltaTimeSec/*float*/) {\r\n    var visibleParts = -1;\r\n    var visibleOpacity = 1.0;\r\n    var CLEAR_TIME_SEC = 0.5;\r\n    var phi = 0.5;\r\n    var maxBackOpacity = 0.15;\r\n    for (var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        var paramIndex = partsGroup[i].paramIndex;\r\n        if (partsIndex < 0) continue; if (model.getParamFloat(paramIndex) != 0) {\r\n            if (visibleParts >= 0) {\r\n                break;\r\n            }\r\n            visibleParts = i;\r\n            visibleOpacity = model.getPartsOpacity(partsIndex);\r\n            visibleOpacity += deltaTimeSec / CLEAR_TIME_SEC;\r\n            if (visibleOpacity > 1) {\r\n                visibleOpacity = 1;\r\n            }\r\n        }\r\n    }\r\n    if (visibleParts < 0) {\r\n        visibleParts = 0;\r\n        visibleOpacity = 1;\r\n    }\r\n    for (var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        if (partsIndex < 0) continue; if (visibleParts == i) {\r\n            model.setPartsOpacity(partsIndex, visibleOpacity);\r\n        }\r\n        else {\r\n            var opacity = model.getPartsOpacity(partsIndex);\r\n            var a1;\r\n            if (visibleOpacity < phi) {\r\n                a1 = visibleOpacity * (phi - 1) / phi + 1;\r\n            }\r\n            else {\r\n                a1 = (1 - visibleOpacity) * phi / (1 - phi);\r\n            }\r\n            var backOp = (1 - a1) * (1 - visibleOpacity);\r\n            if (backOp > maxBackOpacity) {\r\n                a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\r\n            }\r\n            if (opacity > a1) {\r\n                opacity = a1;\r\n            }\r\n            model.setPartsOpacity(partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # copyOpacityOtherParts()\r\n//============================================================\r\nL2DPose.prototype.copyOpacityOtherParts = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/) {\r\n    for (var i_group = 0; i_group < partsGroup.length; i_group++) {\r\n        var partsParam = partsGroup[i_group]; //L2DPartsParam\r\n        if (partsParam.link == null) continue;\r\n        if (partsParam.partsIndex < 0) continue;\r\n        var opacity = model.getPartsOpacity(partsParam.partsIndex);\r\n        for (var i_link = 0; i_link < partsParam.link.length; i_link++) {\r\n            var linkParts = partsParam.link[i_link]; //L2DPartsParam\r\n            if (linkParts.partsIndex < 0) continue;\r\n            model.setPartsOpacity(linkParts.partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPartsParam        \r\n//============================================================\r\n//============================================================\r\nfunction L2DPartsParam(id/*String*/) {\r\n    this.paramIndex = -1;\r\n    this.partsIndex = -1;\r\n    this.link = null; // ArrayList<L2DPartsParam>\r\n    this.id = id;\r\n}\r\n\r\n//============================================================\r\n//    L2DPartsParam # initIndex()\r\n//============================================================\r\nL2DPartsParam.prototype.initIndex = function (model/*ALive2DModel*/) {\r\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\r\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\r\n    model.setParamFloat(this.paramIndex, 1);\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DTargetPoint       \r\n//============================================================\r\n//============================================================\r\nfunction L2DTargetPoint() {\r\n    this.EPSILON = 0.01; // 変化の最小値（この値以下は無視される）\r\n    this.faceTargetX = 0;\r\n    this.faceTargetY = 0;\r\n    this.faceX = 0;\r\n    this.faceY = 0;\r\n    this.faceVX = 0;\r\n    this.faceVY = 0;\r\n    this.lastTimeSec = 0;\r\n}\r\n\r\n//============================================================\r\nL2DTargetPoint.FRAME_RATE = 30;\r\n\r\n//============================================================\r\n//    L2DTargetPoint # set()\r\n//============================================================\r\nL2DTargetPoint.prototype.setPoint = function (x/*float*/, y/*float*/) {\r\n    this.faceTargetX = x;\r\n    this.faceTargetY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getX()\r\n//============================================================\r\nL2DTargetPoint.prototype.getX = function () {\r\n    return this.faceX;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getY()\r\n//============================================================\r\nL2DTargetPoint.prototype.getY = function () {\r\n    return this.faceY;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # update()\r\n//============================================================\r\nL2DTargetPoint.prototype.update = function () {\r\n    var TIME_TO_MAX_SPEED = 0.15;\r\n    var FACE_PARAM_MAX_V = 40.0 / 7.5;\r\n    var MAX_V = FACE_PARAM_MAX_V / L2DTargetPoint.FRAME_RATE;\r\n    if (this.lastTimeSec == 0) {\r\n        this.lastTimeSec = UtSystem.getUserTimeMSec();\r\n        return;\r\n    }\r\n    var curTimeSec = UtSystem.getUserTimeMSec();\r\n    var deltaTimeWeight = (curTimeSec - this.lastTimeSec) * L2DTargetPoint.FRAME_RATE / 1000.0;\r\n    this.lastTimeSec = curTimeSec;\r\n    var FRAME_TO_MAX_SPEED = TIME_TO_MAX_SPEED * L2DTargetPoint.FRAME_RATE;\r\n    var MAX_A = deltaTimeWeight * MAX_V / FRAME_TO_MAX_SPEED;\r\n    var dx = (this.faceTargetX - this.faceX);\r\n    var dy = (this.faceTargetY - this.faceY);\r\n    // if(dx == 0 && dy == 0) return;\r\n    if (Math.abs(dx) <= this.EPSILON && Math.abs(dy) <= this.EPSILON) return;\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    var vx = MAX_V * dx / d;\r\n    var vy = MAX_V * dy / d;\r\n    var ax = vx - this.faceVX;\r\n    var ay = vy - this.faceVY;\r\n    var a = Math.sqrt(ax * ax + ay * ay);\r\n    if (a < -MAX_A || a > MAX_A) {\r\n        ax *= MAX_A / a;\r\n        ay *= MAX_A / a;\r\n        a = MAX_A;\r\n    }\r\n    this.faceVX += ax;\r\n    this.faceVY += ay;\r\n    {\r\n        var max_v = 0.5 * (Math.sqrt(MAX_A * MAX_A + 16 * MAX_A * d - 8 * MAX_A * d) - MAX_A);\r\n        var cur_v = Math.sqrt(this.faceVX * this.faceVX + this.faceVY * this.faceVY);\r\n        if (cur_v > max_v) {\r\n            this.faceVX *= max_v / cur_v;\r\n            this.faceVY *= max_v / cur_v;\r\n        }\r\n    }\r\n    this.faceX += this.faceVX;\r\n    this.faceY += this.faceVY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DViewMatrix        extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DViewMatrix() {\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.screenLeft = null;\r\n    this.screenRight = null;\r\n    this.screenTop = null;\r\n    this.screenBottom = null;\r\n    this.maxLeft = null;\r\n    this.maxRight = null;\r\n    this.maxTop = null;\r\n    this.maxBottom = null;\r\n    this.max = Number.MAX_VALUE;\r\n    this.min = 0;\r\n}\r\n\r\nL2DViewMatrix.prototype = new L2DMatrix44(); //L2DViewMatrix extends L2DMatrix44\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxScale = function () {\r\n    return this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMinScale = function () {\r\n    return this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScale = function (v/*float*/) {\r\n    this.max = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMinScale = function (v/*float*/) {\r\n    this.min = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMaxScale = function () {\r\n    return this.getScaleX() == this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMinScale = function () {\r\n    return this.getScaleX() == this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustTranslate()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustTranslate = function (shiftX/*float*/, shiftY/*float*/) {\r\n    if (this.tr[0] * this.maxLeft + (this.tr[12] + shiftX) > this.screenLeft)\r\n        shiftX = this.screenLeft - this.tr[0] * this.maxLeft - this.tr[12];\r\n    if (this.tr[0] * this.maxRight + (this.tr[12] + shiftX) < this.screenRight)\r\n        shiftX = this.screenRight - this.tr[0] * this.maxRight - this.tr[12];\r\n    if (this.tr[5] * this.maxTop + (this.tr[13] + shiftY) < this.screenTop)\r\n        shiftY = this.screenTop - this.tr[5] * this.maxTop - this.tr[13];\r\n    if (this.tr[5] * this.maxBottom + (this.tr[13] + shiftY) > this.screenBottom)\r\n        shiftY = this.screenBottom - this.tr[5] * this.maxBottom - this.tr[13];\r\n\r\n    var tr1 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        shiftX, shiftY, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustScale = function (cx/*float*/, cy/*float*/, scale/*float*/) {\r\n    var targetScale = scale * this.tr[0];\r\n    if (targetScale < this.min) {\r\n        if (this.tr[0] > 0) scale = this.min / this.tr[0];\r\n    }\r\n    else if (targetScale > this.max) {\r\n        if (this.tr[0] > 0) scale = this.max / this.tr[0];\r\n    }\r\n    var tr1 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        cx, cy, 0, 1];\r\n    var tr2 = [scale, 0, 0, 0,\r\n        0, scale, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1];\r\n    var tr3 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        -cx, -cy, 0, 1];\r\n    L2DMatrix44.mul(tr3, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr2, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\r\n    this.screenLeft = left;\r\n    this.screenRight = right;\r\n    this.screenTop = top;\r\n    this.screenBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\r\n    this.maxLeft = left;\r\n    this.maxRight = right;\r\n    this.maxTop = top;\r\n    this.maxBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenLeft = function () {\r\n    return this.screenLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenRight = function () {\r\n    return this.screenRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenBottom = function () {\r\n    return this.screenBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenTop = function () {\r\n    return this.screenTop;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxLeft = function () {\r\n    return this.maxLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxRight = function () {\r\n    return this.maxRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxBottom = function () {\r\n    return this.maxBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxTop = function () {\r\n    return this.maxTop;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class Live2DFramework      \r\n//============================================================\r\n//============================================================\r\nfunction Live2DFramework() {\r\n}\r\n\r\n//============================================================\r\nLive2DFramework.platformManager = null;\r\n\r\n//============================================================\r\n//    static Live2DFramework.getPlatformManager()\r\n//============================================================\r\nLive2DFramework.getPlatformManager = function () {\r\n    return Live2DFramework.platformManager;\r\n}\r\n\r\n//============================================================\r\n//    static Live2DFramework.setPlatformManager()\r\n//============================================================\r\nLive2DFramework.setPlatformManager = function (platformManager /*IPlatformManager*/) {\r\n    Live2DFramework.platformManager = platformManager;\r\n}\r\n\r\nmodule.exports = {\r\n    L2DTargetPoint: L2DTargetPoint,\r\n    Live2DFramework: Live2DFramework,\r\n    L2DViewMatrix: L2DViewMatrix,\r\n    L2DPose: L2DPose,\r\n    L2DPartsParam: L2DPartsParam,\r\n    L2DPhysics: L2DPhysics,\r\n    L2DMotionManager: L2DMotionManager,\r\n    L2DModelMatrix: L2DModelMatrix,\r\n    L2DMatrix44: L2DMatrix44,\r\n    EYE_STATE: EYE_STATE,\r\n    L2DEyeBlink: L2DEyeBlink,\r\n    L2DExpressionParam: L2DExpressionParam,\r\n    L2DExpressionMotion: L2DExpressionMotion,\r\n    L2DBaseModel: L2DBaseModel\r\n}","import { L2DTargetPoint, L2DViewMatrix, L2DMatrix44 } from \"./framework/Live2DFramework\";\r\nimport LAppLive2DManager from \"./LAppLive2DManager\"\r\nimport {LAppDefine,setContext} from \"./LAppDefine\"\r\nimport {MatrixStack} from \"./framework/MatrixStack\"\r\n\r\nconst live2DMgr = new LAppLive2DManager();\r\nlet isDrawStart = false;\r\nlet gl = null;\r\nlet canvas = null;\r\nlet dragMgr = null;\r\nlet viewMatrix = null;\r\nlet projMatrix = null;\r\nlet deviceToScreen = null;\r\nlet drag = false;\r\nlet oldLen = 0;\r\nlet lastMouseX = 0;\r\nlet lastMouseY = 0;\r\nlet isModelShown = 0;\r\nlet modelurl = \"\";\r\nlet head_pos = 0.5;\r\n\r\nfunction initL2dCanvas(canvasId) {\r\n  canvas = document.getElementById(canvasId);\r\n  if (canvas.addEventListener) {\r\n    //canvas.addEventListener(\"mousewheel\", mouseEvent);\r\n    window.addEventListener(\"click\", mouseEvent);\r\n    window.addEventListener(\"mousedown\", mouseEvent);\r\n    window.addEventListener(\"mousemove\", mouseEvent);\r\n    window.addEventListener(\"mouseup\", mouseEvent);\r\n    document.addEventListener(\"mouseout\", mouseEvent);\r\n    //canvas.addEventListener(\"contextmenu\", mouseEvent);\r\n    window.addEventListener(\"touchstart\", touchEvent);\r\n    window.addEventListener(\"touchend\", touchEvent);\r\n    window.addEventListener(\"touchmove\", touchEvent);\r\n  }\r\n}\r\n\r\nfunction init(modelurl) {\r\n  let width = canvas.width;\r\n  let height = canvas.height;\r\n\r\n  dragMgr = new L2DTargetPoint();\r\n\r\n  let ratio = height / width;\r\n  let left = LAppDefine.VIEW_LOGICAL_LEFT;\r\n  let right = LAppDefine.VIEW_LOGICAL_RIGHT;\r\n  let bottom = -ratio;\r\n  let top = ratio;\r\n\r\n  window.Live2D.captureFrame = false;\r\n\r\n  viewMatrix = new L2DViewMatrix();\r\n\r\n\r\n  viewMatrix.setScreenRect(left, right, bottom, top);\r\n\r\n  viewMatrix.setMaxScreenRect(LAppDefine.VIEW_LOGICAL_MAX_LEFT,\r\n    LAppDefine.VIEW_LOGICAL_MAX_RIGHT,\r\n    LAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\r\n    LAppDefine.VIEW_LOGICAL_MAX_TOP);\r\n\r\n  viewMatrix.setMaxScale(LAppDefine.VIEW_MAX_SCALE);\r\n  viewMatrix.setMinScale(LAppDefine.VIEW_MIN_SCALE);\r\n\r\n  projMatrix = new L2DMatrix44();\r\n  projMatrix.multScale(1, (width / height));\r\n\r\n  deviceToScreen = new L2DMatrix44();\r\n  deviceToScreen.multTranslate(-width / 2.0, -height / 2.0);\r\n  deviceToScreen.multScale(2 / width, -2 / width);\r\n\r\n  gl = getWebGLContext();\r\n  setContext(gl);\r\n  if (!gl) {\r\n    console.error(\"Failed to create WebGL context.\");\r\n    if(!!window.WebGLRenderingContext){\r\n      console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\");\r\n    }\r\n    return;\r\n  }\r\n  window.Live2D.setGL(gl);\r\n  gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n  changeModel(modelurl);\r\n  startDraw();\r\n}\r\n\r\nfunction startDraw() {\r\n  if (!isDrawStart) {\r\n    isDrawStart = true;\r\n    (function tick() {\r\n      draw();\r\n      let requestAnimationFrame =\r\n        window.requestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame;\r\n\r\n        if (window.Live2D.captureFrame) {\r\n            window.Live2D.captureFrame = false;\r\n            var link = document.createElement('a');\r\n            document.body.appendChild(link);\r\n            link.setAttribute(\"type\", \"hidden\");\r\n            link.href = canvas.toDataURL();\r\n            link.download = window.Live2D.captureName || 'live2d.png';\r\n            link.click();\r\n        }\r\n\r\n      requestAnimationFrame(tick, canvas);\r\n    })();\r\n  }\r\n}\r\n\r\nfunction draw()\r\n{\r\n    MatrixStack.reset();\r\n    MatrixStack.loadIdentity();\r\n    dragMgr.update(); \r\n    live2DMgr.setDrag(dragMgr.getX(), dragMgr.getY());\r\n    \r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    \r\n    MatrixStack.multMatrix(projMatrix.getArray());\r\n    MatrixStack.multMatrix(viewMatrix.getArray());\r\n    MatrixStack.push();\r\n    \r\n    for (let i = 0; i < live2DMgr.numModels(); i++)\r\n    {\r\n        let model = live2DMgr.getModel(i);\r\n\r\n        if(model == null) return;\r\n        \r\n        if (model.initialized && !model.updating)\r\n        {\r\n            model.update();\r\n            model.draw(gl);\r\n        }\r\n    }\r\n    MatrixStack.pop();\r\n}\r\n\r\nfunction changeModel(modelurl)\r\n{\r\n    live2DMgr.reloadFlg = true;\r\n    live2DMgr.count++;\r\n    live2DMgr.changeModel(gl,modelurl);\r\n}\r\n\r\nfunction modelScaling(scale)\r\n{\r\n    let isMaxScale = viewMatrix.isMaxScale();\r\n    let isMinScale = viewMatrix.isMinScale();\r\n    \r\n    viewMatrix.adjustScale(0, 0, scale);\r\n\r\n    if (!isMaxScale)\r\n    {\r\n        if (viewMatrix.isMaxScale())\r\n        {\r\n            live2DMgr.maxScaleEvent();\r\n        }\r\n    }\r\n    \r\n    if (!isMinScale)\r\n    {\r\n        if (viewMatrix.isMinScale())\r\n        {\r\n            live2DMgr.minScaleEvent();\r\n        }\r\n    }\r\n}\r\n\r\nfunction transformRange(center, transform, range)\r\n{\r\n    let a = {\r\n        x: transform.x - center.x,\r\n        y: transform.y - center.y\r\n    }\r\n    let r = Math.sqrt(Math.pow(a.x,2) + Math.pow(a.y,2));\r\n    if (r > range) {\r\n        a = {\r\n            x: a.x / r * range + center.x,\r\n            y: a.y / r * range + center.y\r\n        };\r\n        return a;\r\n    } else {\r\n        return transform;\r\n    }\r\n}\r\n\r\nfunction dot(A,B)\r\n{\r\n    return A.x * B.x + A.y * B.y;\r\n}\r\n\r\nfunction normalize(x,y)\r\n{\r\n    let length = Math.sqrt(x * x + y * y)\r\n    return {\r\n        x: x / length,\r\n        y: y / length\r\n    }\r\n}\r\n\r\nfunction transformRect(center, transform, rect)\r\n{\r\n    if (transform.x < rect.left + rect.width && transform.y < rect.top + rect.height &&\r\n        transform.x > rect.left && transform.y > rect.top) return transform;\r\n    let Len_X = center.x - transform.x;\r\n    let Len_Y = center.y - transform.y;\r\n\r\n    function angle(Len_X, Len_Y)\r\n    {\r\n        return Math.acos(dot({\r\n            x: 0,\r\n            y: 1\r\n        }, normalize(Len_X, Len_Y))) * 180 / Math.PI\r\n    }\r\n\r\n    let angleTarget = angle(Len_X, Len_Y);\r\n    if (transform.x < center.x) angleTarget = 360 - angleTarget;\r\n    let angleLeftTop = 360 - angle(rect.left - center.x, (rect.top - center.y) * -1);\r\n    let angleLeftBottom = 360 - angle(rect.left - center.x, (rect.top + rect.height - center.y) * -1);\r\n    let angleRightTop = angle(rect.left + rect.width - center.x, (rect.top - center.y) * -1);\r\n    let angleRightBottom = angle(rect.left + rect.width - center.x, (rect.top + rect.height - center.y) * -1);\r\n    let scale = Len_Y / Len_X;\r\n    let res = {};\r\n\r\n    if (angleTarget < angleRightTop) {\r\n        let y3 = rect.top - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if(angleTarget < angleRightBottom) {\r\n        let x3 = rect.left + rect.width - center.x;\r\n        let y3 = x3 * scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if (angleTarget < angleLeftBottom) {\r\n        let y3 = rect.top + rect.height - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if (angleTarget < angleLeftTop) {\r\n        let x3 = center.x - rect.left;\r\n        let y3 = x3 * scale;\r\n        res = {\r\n            y: center.y - y3,\r\n            x: center.x - x3\r\n        }\r\n    } else {\r\n        let y3 = rect.top - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction modelTurnHead(event)\r\n{\r\n    drag = true;\r\n    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    lastMouseX = sx;\r\n    lastMouseY = sy;\r\n\r\n    dragMgr.setPoint(vx, vy); \r\n    \r\n    //live2DMgr.tapEvent(vx, vy);\r\n}\r\n\r\nfunction modelTapEvent(event)\r\n{\r\n    drag = true;\r\n    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseDown device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    lastMouseX = sx;\r\n    lastMouseY = sy;\r\n\r\n    //dragMgr.setPoint(vx, vy); \r\n    \r\n    live2DMgr.tapEvent(vx, vy);\r\n}\r\n\r\nfunction followPointer(event)\r\n{    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    if (drag)\r\n    {\r\n        lastMouseX = sx;\r\n        lastMouseY = sy;\r\n        dragMgr.setPoint(vx, vy); \r\n    }\r\n}\r\n\r\nfunction lookFront()\r\n{   \r\n    if (drag)\r\n    {\r\n        drag = false;\r\n    }\r\n    dragMgr.setPoint(0, 0);\r\n}\r\n\r\nfunction sleepy()\r\n{\r\n    if (LAppDefine.DEBUG_LOG)\r\n        console.log(\"Set Session Storage.\");\r\n    \r\n    sessionStorage.setItem('Sleepy', '1');\r\n}\r\n\r\nfunction mouseEvent(e)\r\n{\r\n    //e.preventDefault();\r\n    if (e.type == \"mousewheel\") {\r\n        // if (e.clientX < 0 || canvas.clientWidth < e.clientX || \r\n        // e.clientY < 0 || canvas.clientHeight < e.clientY)\r\n        // {\r\n        //     return;\r\n        // }\r\n        // if (e.wheelDelta > 0) modelScaling(1.1); \r\n        // else modelScaling(0.9); \r\n    } else if (e.type == \"mousedown\") {\r\n        //if(\"button\" in e && e.button != 0) return;\r\n        // modelTurnHead(e);\r\n        modelTapEvent(e);\r\n    } else if (e.type == \"mousemove\") {\r\n        var Sleepy = sessionStorage.getItem('Sleepy');\r\n        if(Sleepy === '1') {\r\n            sessionStorage.setItem('Sleepy', '0');\r\n        }\r\n        modelTurnHead(e);\r\n    } else if (e.type == \"mouseup\") {\r\n        if(\"button\" in e && e.button != 0) return;\r\n        // lookFront();\r\n    } else if (e.type == \"mouseout\") {\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Mouse out Window.\");\r\n        lookFront();\r\n        var SleepyTimer = sessionStorage.getItem('SleepyTimer');\r\n        window.clearTimeout(SleepyTimer);\r\n\r\n        SleepyTimer = window.setTimeout(sleepy, 50000);\r\n        sessionStorage.setItem('SleepyTimer', SleepyTimer);\r\n    }\r\n}\r\n\r\nfunction touchEvent(e)\r\n{\r\n    var touch = e.touches[0];\r\n    if (e.type == \"touchstart\") {\r\n        if (e.touches.length == 1) modelTurnHead(touch);\r\n        // onClick(touch);\r\n    } else if (e.type == \"touchmove\") {\r\n        followPointer(touch);\r\n    } else if (e.type == \"touchend\") {\r\n        lookFront();\r\n    }\r\n}\r\n\r\nfunction transformViewX(deviceX)\r\n{\r\n    var screenX = deviceToScreen.transformX(deviceX); \r\n    return viewMatrix.invertTransformX(screenX); \r\n}\r\n\r\n\r\nfunction transformViewY(deviceY)\r\n{\r\n    var screenY = deviceToScreen.transformY(deviceY); \r\n    return viewMatrix.invertTransformY(screenY); \r\n}\r\n\r\n\r\nfunction transformScreenX(deviceX)\r\n{\r\n    return deviceToScreen.transformX(deviceX);\r\n}\r\n\r\n\r\nfunction transformScreenY(deviceY)\r\n{\r\n    return deviceToScreen.transformY(deviceY);\r\n}\r\n\r\nfunction getWebGLContext()\r\n{\r\n    var NAMES = [ \"webgl\" , \"experimental-webgl\" , \"webkit-3d\" , \"moz-webgl\"];\r\n    for( var i = 0; i < NAMES.length; i++ ){\r\n        try{\r\n            var ctx = canvas.getContext(NAMES[i], {premultipliedAlpha : true});\r\n            if(ctx) return ctx;\r\n        }\r\n        catch(e){}\r\n    }\r\n    return null;\r\n};\r\n\r\nexport function screenshotV1(captureName, captureFrame) {\r\n    // v2方法\r\n    window.Live2D.captureFrame = captureFrame;\r\n    window.Live2D.captureName = captureName;\r\n}\r\n\r\nexport function loadv1(id,modelurl,headPos) {\r\n    head_pos = typeof headPos === 'undefined' ? 0.5 : headPos;\r\n    initL2dCanvas(id);\r\n    init(modelurl);\r\n}\r\n\r\nwindow.loadv1 = loadv1;\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { LAppDelegate } from './lappdelegate';\r\nimport * as LAppDefine from './lappdefine';\r\n\r\nexport function loadv2(canvasId, options, token) {\r\n  if (token && token.sign) {\r\n    fetch(options.sdkUrl, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/javascript'\r\n      },\r\n      cache: 'default'\r\n    }).then(response => response.text()).then(scriptText => {\r\n      if (!LAppDelegate.getInstance().initialize(canvasId, options.modelApi, options, token)) {\r\n        return;\r\n      }\r\n      LAppDelegate.getInstance().run();\r\n    })\r\n  } else {\r\n    console.warn(\"需要与插件官网链接后才可以使用, 请先登录, 或访问https://www.live2dweb.com/ 了解更多\");\r\n  }\r\n}\r\nexport function screenshotV2(captureName, captureFrame) {\r\n  LAppDelegate.getInstance()._captureFrame = captureFrame;\r\n  LAppDelegate.getInstance()._captureName = captureName;\r\n}\r\n/**\r\n * 終了時の処理\r\n */\r\nwindow.onbeforeunload = () => LAppDelegate.releaseInstance();\r\n\r\n/**\r\n * Process when changing screen size.\r\n */\r\nwindow.onresize = () => {\r\n  if (LAppDefine.CanvasSize === 'auto') {\r\n    LAppDelegate.getInstance().onResize();\r\n  }\r\n};\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport moment from 'moment';\r\n\r\nimport { loadv1, screenshotV1 } from '../v1/main'\r\nimport { loadv2, screenshotV2 } from '../v2/main'\r\n\r\ndeclare global {\r\n    interface String {\r\n        render(context: any): string;\r\n    }\r\n}\r\nenum ApiUrlType {\r\n    JsonFile,\r\n    Live2dWeb,\r\n    Other\r\n}\r\n\r\nexport class Live2dTips {\r\n    private readonly _live2dSettings: any;\r\n    private readonly _userToken: any;\r\n    private readonly _live2dTips: any;\r\n    private readonly _unitType = 'px';\r\n    private readonly _regMod3Json = new RegExp(\"model3(\\.json)$\", \"gi\");\r\n    private readonly _regApiUrl = new RegExp(\"https://api.live2dweb.com/[^\\s]*(\\/v2)\", \"i\");\r\n    /** 定义highlight标记 */\r\n    private hltips = 'color:';\r\n    private _tipsIsShow: boolean;\r\n    private _getActed: boolean = false;\r\n    private hitokotoTimer: NodeJS.Timer | undefined;\r\n    private hitokotoInterval: boolean = false;\r\n    private connection: HubConnection | undefined;\r\n    private _gptMsg: string = '';\r\n\r\n    constructor(userToken: any, live2dSettings: any, waifu_tips: any) {\r\n        this._live2dSettings = live2dSettings\r\n        this._userToken = userToken;\r\n        this._live2dTips = waifu_tips;\r\n        this._tipsIsShow = false;\r\n    }\r\n\r\n    public initTips() {\r\n        const that = this;\r\n        const waifuDiv = document.querySelector(\".waifu\") as HTMLDivElement;\r\n        const tipsDiv = document.querySelector('.waifu-tips') as HTMLDivElement;\r\n        tipsDiv.style.width = this._live2dSettings.waifuTipsSize['width'] + this._unitType;  //宽度\r\n        tipsDiv.style.minHeight = this._live2dSettings.waifuTipsSize['height'] + this._unitType;//高度\r\n        tipsDiv.style.top = (0 - this._live2dSettings.waifuTipTop) + this._unitType;//上方位置可以是负数\r\n        tipsDiv.style.fontSize = this._live2dSettings.waifuFontSize + this._unitType; //字号\r\n        tipsDiv.style.border = \"1px solid \" + this._live2dSettings.waifuBorderColor;//边框颜色 固定值是1px实心线条\r\n        tipsDiv.style.backgroundColor = this._live2dSettings.waifuTipsColor;//背景色\r\n        tipsDiv.style.boxShadow = \"0 3px 15px 2px \" + this._live2dSettings.waifuShadowColor;//影子的颜色 有4个位置默认值\r\n        tipsDiv.style.color = this._live2dSettings.waifuFontsColor; //字体颜色\r\n\r\n        const toolSpan = document.querySelectorAll('.waifu-tool span');\r\n        toolSpan.forEach((span: HTMLSpanElement) => {\r\n            span.addEventListener(\"mouseover\", function () {\r\n                span.style.color = that._live2dSettings.waifuToolHover;\r\n            });\r\n\r\n            span.addEventListener(\"mouseout\", function () {\r\n                span.style.color = that._live2dSettings.waifuToolColor;\r\n            });\r\n\r\n            span.style.color = that._live2dSettings.waifuToolColor;\r\n            span.style.lineHeight = that._live2dSettings.waifuToolLine + this._unitType;\r\n        });\r\n        //--------------只是分割线而已-------------\r\n        const toolDiv = document.querySelector(\".waifu-tool\") as HTMLDivElement;\r\n        toolDiv.style.fontSize = this._live2dSettings.waifuToolFont + this._unitType;\r\n        toolDiv.style.top = this._live2dSettings.waifuToolTop + this._unitType;\r\n\r\n        this.hltips += this._live2dSettings.waifuHighlightColor + ';';//定义highlight标记并赋值，因为是一个css所以必须;结尾\r\n\r\n        if (this._live2dSettings.waifuEdgeSide == 'left') {\r\n            waifuDiv.style.left = this._live2dSettings.waifuEdgeSize + this._unitType;\r\n        } else if (this._live2dSettings.waifuEdgeSide == 'right') {\r\n            waifuDiv.style.right = this._live2dSettings.waifuEdgeSize + this._unitType;\r\n        }\r\n\r\n        if (this._live2dSettings.waifuMinWidth != 0) {\r\n            if (window.innerWidth <= this._live2dSettings.waifuMinWidth) {\r\n                waifuDiv.style.display = \"none\";\r\n                return;\r\n            } else {\r\n                waifuDiv.style.display = \"block\";\r\n            }\r\n            window.addEventListener(\"resize\", function () {\r\n                that.waifuResize();\r\n            });\r\n        }\r\n\r\n        if (this._live2dSettings.waifuDraggable === 'axis-x') {\r\n            waifuDiv.addEventListener('mousedown', function (event) {\r\n                let x = event.pageX - waifuDiv.offsetLeft;\r\n                document.addEventListener('mousemove', moveHandler);\r\n                document.addEventListener('mouseup', upHandler);\r\n\r\n                function moveHandler(event: MouseEvent) {\r\n                    waifuDiv.style.left = event.pageX - x + 'px';\r\n                }\r\n\r\n                function upHandler() {\r\n                    document.removeEventListener('mousemove', moveHandler);\r\n                    document.removeEventListener('mouseup', upHandler);\r\n                }\r\n            });\r\n        } else if (this._live2dSettings.waifuDraggable === 'unlimited') {\r\n            waifuDiv.addEventListener('mousedown', function (event) {\r\n                let x = event.pageX - waifuDiv.offsetLeft;\r\n                let y = event.pageY - waifuDiv.offsetTop;\r\n                document.addEventListener('mousemove', moveHandler);\r\n                document.addEventListener('mouseup', upHandler);\r\n\r\n                function moveHandler(event: MouseEvent) {\r\n                    waifuDiv.style.left = event.pageX - x + 'px';\r\n                    waifuDiv.style.top = event.pageY - y + 'px';\r\n                }\r\n\r\n                function upHandler() {\r\n                    document.removeEventListener('mousemove', moveHandler);\r\n                    document.removeEventListener('mouseup', upHandler);\r\n                }\r\n            });\r\n        } else {\r\n            waifuDiv.style.transition = 'all .3s ease-in-out';\r\n        }\r\n\r\n        var fuiHome = document.querySelector('.waifu-tool .fui-home') as HTMLSpanElement;\r\n        fuiHome.addEventListener(\"click\", () => {\r\n            window.location = that._live2dSettings.homePageUrl;\r\n        });\r\n\r\n        var fuiInfoCircle = document.querySelector('.waifu-tool .fui-info-circle') as HTMLSpanElement;\r\n        fuiInfoCircle.addEventListener(\"click\", () => {\r\n            window.open(that._live2dSettings.aboutPageUrl);\r\n        });\r\n\r\n        this.loadTipsMessage(this._live2dTips);\r\n        this.showWelcomeMessage(this._live2dTips);\r\n\r\n        if (!this._live2dSettings.showToolMenu) toolDiv.style.display = 'none';\r\n        var fuiCross = document.querySelector('.waifu-tool .fui-cross') as HTMLSpanElement;\r\n        if (!this._live2dSettings.canCloseLive2d) fuiCross.style.display = 'none';\r\n\r\n        var fuiEye = document.querySelector('.waifu-tool .fui-eye') as HTMLSpanElement;\r\n        if (!this._live2dSettings.canSwitchModel) fuiEye.style.display = 'none';\r\n\r\n        var fuiUser = document.querySelector('.waifu-tool .fui-user') as HTMLSpanElement;\r\n        if (!this._live2dSettings.canSwitchTextures) fuiUser.style.display = 'none';\r\n\r\n        var fuiChat = document.querySelector('.waifu-tool .fui-chat') as HTMLSpanElement;\r\n        if (!this._live2dSettings.canSwitchHitokoto) fuiChat.style.display = 'none';\r\n\r\n        var fuiPhoto = document.querySelector('.waifu-tool .fui-photo') as HTMLSpanElement;\r\n        if (!this._live2dSettings.canTakeScreenshot) fuiPhoto.style.display = 'none';\r\n\r\n        if (!this._live2dSettings.canTurnToHomePage) fuiHome.style.display = 'none';\r\n\r\n        if (!this._live2dSettings.canTurnToAboutPage) fuiInfoCircle.style.display = 'none';\r\n\r\n        fuiEye.addEventListener(\"click\", () => { that.loadOtherModel() });\r\n        fuiUser.addEventListener(\"click\", () => { that.loadRandTextures() });\r\n        fuiChat.addEventListener(\"click\", () => { that.doShowHitokoto() });\r\n        document.querySelector('.waifu-tool .fui-bot').addEventListener(\"click\", () => that.chatGpt());\r\n\r\n        if (this._live2dSettings.showHitokoto) {\r\n            document.addEventListener(\"mousemove\", (e) => {\r\n                this._getActed = true;\r\n            });\r\n            document.addEventListener(\"keydown\", (e) => {\r\n                this._getActed = true;\r\n            });\r\n            //每秒检测活跃状态\r\n            setInterval(() => {\r\n                /** \r\n                 * 如果不活跃则进入待机状态\r\n                 * 默认为活跃, 会进入elseActed \r\n                 * 进入后直接变为不活跃\r\n                 * */\r\n                if (!this._getActed)\r\n                    this.ifActed();\r\n                else\r\n                    this.elseActed();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    private ifActed() {\r\n        if (!this.hitokotoInterval) {\r\n            this.hitokotoInterval = true;\r\n            this.hitokotoTimer = setInterval(async () => { await this.showHitokotoActed(); }, 30000);\r\n        }\r\n    }\r\n\r\n    private elseActed() {\r\n        this._getActed = this.hitokotoInterval = false;\r\n        clearInterval(this.hitokotoTimer);\r\n    }\r\n\r\n    private async showHitokotoActed() {\r\n        if (document.visibilityState == 'visible') {\r\n            this.doShowHitokoto();\r\n        }\r\n        if (this.connection && this.connection.state == 'Connected') {\r\n            await this.connection.stop();\r\n            this.hideChatControl();\r\n        }\r\n    }\r\n\r\n    protected async doShowHitokoto() {\r\n        const that = this;\r\n        let result: any;\r\n        switch (this._live2dSettings.hitokotoAPI) {\r\n            case 'fghrsh.net':\r\n                result = await fetch('https://api.fghrsh.net/hitokoto/rand/?encode=jsc&uid=3335', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.source) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'fghrsh.net') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ source: result.source, date: result.date, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.hitokoto, 5000);\r\n                }\r\n                break;\r\n            case 'jinrishici.com':\r\n                result = await fetch('https://v2.jinrishici.com/one.json', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.data.origin.title) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'jinrishici.com') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ title: result.data.origin.title, dynasty: result.data.origin.dynasty, author: result.data.origin.author, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.data.content, 5000);\r\n                }\r\n                break;\r\n            default:\r\n                result = await fetch('https://v1.hitokoto.cn', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.from) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'hitokoto.cn') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ source: result.from, creator: result.creator, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.hitokoto, 5000);\r\n                }\r\n        }\r\n    }\r\n\r\n    protected hideChatControl() {\r\n        const inputElement = document.querySelector(\".gptInput\");\r\n        inputElement.classList.remove(\"show\");\r\n        const sendButton = document.querySelector(\"#live2dSend\");\r\n        sendButton.removeEventListener(\"click\", this.sendMsg.bind(this));\r\n    }\r\n\r\n    private convertUrl(apiUrl: string) {\r\n        let apiLen = apiUrl.length - 1;\r\n        let lidx = apiUrl.lastIndexOf('/');\r\n        if (apiLen == lidx)\r\n            apiUrl = apiUrl.substring(0, lidx);\r\n        return apiUrl;\r\n    }\r\n\r\n    private convertApiUrl(apiUrl: string): ApiUrlType {\r\n        let url = this.convertUrl(apiUrl);\r\n        if (!this._regMod3Json.test(url)) {\r\n            //这不是MOC3模型\r\n            if (this._regApiUrl.test(url)) {\r\n                //如果API是我的地址\r\n                return ApiUrlType.Live2dWeb;\r\n            } else {\r\n                //这是PHP的那种URL\r\n                return ApiUrlType.Other;\r\n            }\r\n        } else {\r\n            return ApiUrlType.JsonFile;\r\n        }\r\n    }\r\n\r\n    private async chatGpt() {\r\n        if (typeof this._userToken === 'undefined') {\r\n            this.showMessage(\"想和我说点什么？记得插件需要先登录哦~\", 5000);\r\n            return;\r\n        }\r\n        const sign = this._userToken.sign;\r\n        this.showMessage(\"想和我说点什么？\", 5000);\r\n        this.connection = new HubConnectionBuilder()\r\n            .withUrl(\"https://api.live2dweb.com/chatmsg\", { accessTokenFactory: () => sign })\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n        try {\r\n            if (this.connection.state != \"Connected\") {\r\n                await this.connection.start();\r\n                console.log(\"服务器已连接.\");\r\n                this.showChatControl();\r\n                this.connection.on(\"reply\", (text) => {\r\n                    this._gptMsg += text;\r\n                    this.showMessage(this._gptMsg, 5000);\r\n                });\r\n            } else {\r\n                console.log(\"服务器已连接, 请勿重新连接\");\r\n            }\r\n        } catch (err) {\r\n            console.log(\"服务异常,正在重新连接\", err);\r\n            setTimeout(\r\n                async () => {\r\n                    await this.chatGpt()\r\n                }\r\n                , 5000);\r\n        }\r\n    }\r\n\r\n    private showChatControl() {\r\n        const inputElement = document.querySelector(\".gptInput\");\r\n        inputElement.classList.add(\"show\");\r\n        const sendButton = document.querySelector(\"#live2dSend\");\r\n        sendButton.addEventListener(\"click\", this.sendMsg.bind(this));\r\n        (document.querySelector(\"#live2dChatText\") as HTMLInputElement).addEventListener('keydown', (e) => {\r\n            if (e.code === 'Enter') {\r\n                this.sendMsg();\r\n            }\r\n        });\r\n    }\r\n    private async sendMsg() {\r\n        this._gptMsg = \"\";\r\n        try {\r\n            await this.connection.invoke(\"Conversation\", (document.querySelector('#live2dChatText') as HTMLInputElement).value);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    public initModel(modelId: number | string, modelTexturesId: number | string) {\r\n        modelId = sessionStorage.getItem(\"modelId\") ?? modelId;\r\n        modelTexturesId = sessionStorage.getItem(\"modelTexturesId\") ?? modelTexturesId;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                apiUrl = settings.modelAPI;\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}?id=${modelId}&tid=${modelTexturesId}`;\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/get/?id=${modelId}-${modelTexturesId}`;\r\n                break;\r\n        }\r\n        /* 加载Live2D容器样式 */\r\n        const live2dElement = document.querySelector(\"#live2d\") as HTMLCanvasElement;\r\n        live2dElement.setAttribute(\"width\", settings.waifuSize.width.toString());\r\n        live2dElement.setAttribute(\"height\", settings.waifuSize.height.toString());\r\n\r\n        if (settings.sdkUrl == undefined || settings.sdkUrl == null || settings.sdkUrl == '') {\r\n            settings.sdkUrl = 'https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js';\r\n        }\r\n        loadv1('live2d', apiUrl, settings);\r\n        loadv2('live2d',settings,this._userToken);\r\n    }\r\n\r\n    public showMessage(text: string | string[], timeout: number = 5000) {\r\n        let theText = this.getRandText(text);\r\n        const that = this;\r\n        const waifuTips = document.querySelector('.waifu-tips') as HTMLElement;\r\n        waifuTips.style.display = 'none';\r\n        waifuTips.textContent = theText;\r\n\r\n        if (!that._tipsIsShow) {\r\n            waifuTips.style.opacity = '0';\r\n            waifuTips.style.display = 'block';\r\n\r\n            const fadeInAnimation = waifuTips.animate([\r\n                { opacity: '0', transform: 'translateY(10px)' },\r\n                { opacity: '1', transform: 'translateY(0)' }\r\n            ], {\r\n                duration: 200,\r\n                easing: 'ease-out'\r\n            });\r\n\r\n            fadeInAnimation.onfinish = function () {\r\n                that._tipsIsShow = true;\r\n                that.hideMessage(timeout);\r\n            };\r\n        } else {\r\n            that.hideMessage(timeout);\r\n        }\r\n    }\r\n\r\n    public hideMessage(timeout: number = 5000) {\r\n        let tipsTimeout: NodeJS.Timeout;\r\n        const that = this;\r\n        const waifuTips = document.querySelector('.waifu-tips') as HTMLElement;\r\n        clearTimeout(tipsTimeout);\r\n\r\n        tipsTimeout = setTimeout(() => {\r\n            const fadeOutAnimation = waifuTips.animate([\r\n                { opacity: '1', transform: 'translateY(0)' },\r\n                { opacity: '0', transform: 'translateY(10px)' }\r\n            ], {\r\n                duration: 200,\r\n                easing: 'ease-in'\r\n            });\r\n\r\n            fadeOutAnimation.onfinish = function () {\r\n                waifuTips.style.display = 'none';\r\n                that._tipsIsShow = false;\r\n            };\r\n        }, timeout);\r\n    }\r\n\r\n    private loadTipsMessage(result: any) {\r\n        const that = this;\r\n        result.mouseover_msg.forEach((val: any, index: number) => {\r\n            const msgAnySelect = document.querySelector(val.selector) as HTMLElement;\r\n            if(msgAnySelect){\r\n                msgAnySelect.addEventListener('mouseover', () => {\r\n                    var text = that.getRandText(val.text);\r\n                    text = text.render({ text: msgAnySelect.textContent, highlight: that.hltips });\r\n                    that.showMessage(text, 3000);\r\n                })\r\n            }\r\n        });\r\n\r\n        const click_selector = document.querySelector(result.click_selector) as HTMLElement;\r\n        click_selector.addEventListener('click', () => {\r\n            var text = that.getRandText(result.click_msg);\r\n            text = text.render({ text: click_selector.textContent, highlight: that.hltips });\r\n            that.showMessage(text, 3000);\r\n        });\r\n\r\n        result.seasons_msg.forEach((val: any, index: number) => {\r\n            const now = moment();\r\n            const after = moment(val[0].split('-')[0], 'MM/DD').startOf('day');\r\n            const before = moment(val[0].split('-')[1] || after, 'MM/DD').endOf('day');\r\n            if (now.isBetween(after, before)) {\r\n                var text = that.getRandText(val.text);\r\n                text = text.render({ year: now.format('YYYY'), highlight: that.hltips });\r\n                that.showMessage(text, 6000);\r\n            }\r\n        });\r\n\r\n        if (this._live2dSettings.showCopyMessage) {\r\n            document.addEventListener('copy', () => {\r\n                that.showMessage(that.getRandText(result.copy_message), 5000);\r\n            });\r\n        }\r\n        const fuiPhoto = document.querySelector('.waifu-tool .fui-photo') as HTMLSpanElement;\r\n        fuiPhoto.addEventListener(\"click\", () => {\r\n            that.showMessage(that.getRandText(result.screenshot_message), 5000);\r\n            screenshotV1(that._live2dSettings.screenshotCaptureName, true);\r\n        })\r\n\r\n        const fuiCross = document.querySelector('.waifu-tool .fui-cross') as HTMLSpanElement;\r\n        fuiCross.addEventListener(\"click\", () => {\r\n            that.showMessage(that.getRandText(result.hidden_message), 1300);\r\n            window.setTimeout(function () {\r\n                const mainWaifu = document.querySelector('.waifu') as HTMLDivElement;\r\n                mainWaifu.style.display = 'none';\r\n            }, 1300);\r\n        });\r\n    }\r\n\r\n    private getRandText(text: string | string[]): string {\r\n        if (Array.isArray(text)) {\r\n            return text[Math.floor(Math.random() * text.length + 1) - 1];\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    private waifuResize() {\r\n        const mainWaifu = document.querySelector('.waifu') as HTMLDivElement;\r\n        const minWidth: number = this._live2dSettings.waifuMinWidth;\r\n        if (window.innerWidth <= minWidth) {\r\n            mainWaifu.style.display = \"none\";\r\n        } else {\r\n            mainWaifu.style.display = \"block\";\r\n        }\r\n    }\r\n    private showWelcomeMessage(result: any) {\r\n        var text: string;\r\n        if (window.location.href == this._live2dSettings.homePageUrl) {\r\n            var now = (new Date()).getHours();\r\n            if (now > 23 || now <= 5) text = this.getRandText(result.hour_tips['t23-5']);\r\n            else if (now > 5 && now <= 7) text = this.getRandText(result.hour_tips['t5-7']);\r\n            else if (now > 7 && now <= 11) text = this.getRandText(result.hour_tips['t7-11']);\r\n            else if (now > 11 && now <= 14) text = this.getRandText(result.hour_tips['t11-14']);\r\n            else if (now > 14 && now <= 17) text = this.getRandText(result.hour_tips['t14-17']);\r\n            else if (now > 17 && now <= 19) text = this.getRandText(result.hour_tips['t17-19']);\r\n            else if (now > 19 && now <= 21) text = this.getRandText(result.hour_tips['t19-21']);\r\n            else if (now > 21 && now <= 23) text = this.getRandText(result.hour_tips['t21-23']);\r\n            else text = this.getRandText(result.hour_tips['default']);\r\n        } else {\r\n            const referrer_message: Array<any> = result.referrer_message;\r\n            // 用来隔开网站标题中的 “-” \r\n            const titleStr = document.title.split(' – ')[0];\r\n            // 在document.referrer不为空的时候执行\r\n            if (document.referrer !== '') {\r\n                try {\r\n                    var referrer = document.createElement('a');\r\n                    referrer.href = document.referrer;\r\n                    if (window.location.hostname == referrer.hostname) {\r\n                        //如果是本站点跳转\r\n                        const match = referrer_message.find(([key, value]) => key === \"localhost\");\r\n                        text = match[1];\r\n                    } else {\r\n                        //外部站点跳转至此\r\n                        const domain = referrer.hostname.split('.')[1];\r\n                        const match = referrer_message.find(([key, value]) => key === domain);\r\n                        if (match) {\r\n                            text = match[1];\r\n                        } else {\r\n                            text = referrer_message.find(([key, value]) => key === \"default\")[1];\r\n                        }\r\n                    }\r\n                    text = text.render({ title: titleStr, highlight: this.hltips });\r\n                } catch (err) {\r\n                    console.log('It is not important Exception ' + err)\r\n                }\r\n            } else {\r\n                const match = referrer_message.find(([key, value]) => key === \"none\");\r\n                text = match[1];\r\n                text = text.render({ title: titleStr, highlight: this.hltips });\r\n            }\r\n        }\r\n        this.showMessage(text, 6000);\r\n    }\r\n\r\n    private loadOtherModel() {\r\n        const that = this;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        const modelId = sessionStorage.getItem(\"modelId\") ?? settings.modelId;\r\n        const texturesId = sessionStorage.getItem(\"modelTexturesId\") ?? settings.modelTexturesId;\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                console.log(\"直接指向JSON文件不支持换装\");\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}/NextModel/?id=${modelId}&type=${settings.modelRandMode == 'rand' ? 0 : 1}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${that._userToken.sign}`\r\n                    }\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        that.initModel(result.ModelId, result.TextureId);\r\n                        that.showMessage(result.Message, 3000);\r\n                        sessionStorage.setItem(\"modelId\", `${result.ModelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.TextureId}`);\r\n                    }).catch(error => {\r\n                        console.log(\"认证失败\", error);\r\n                    });\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/${settings.modelRandMode}/?id=${modelId}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        that.initModel(result.model['id'], 0);\r\n                        that.showMessage(result.model['message'], 3000);\r\n                        sessionStorage.setItem(\"modelId\", `${result.model['id']}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `0`);\r\n                    }).catch(error => {\r\n                        console.log(\"获取失败\", error);\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private loadRandTextures() {\r\n        const that = this;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        const modelId = sessionStorage.getItem(\"modelId\") ?? settings.modelId;\r\n        const texturesId = sessionStorage.getItem(\"modelTexturesId\") ?? settings.modelTexturesId;\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                console.log(\"直接指向JSON文件不支持换装\");\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}/NextModel/?id=${modelId}&tid=${texturesId}&type=${settings.modelRandMode == 'rand' ? 2 : 3}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${that._userToken.sign}`\r\n                    }\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        if (result.TextureId !== texturesId) {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[1]);\r\n                        } else {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[0]);\r\n                        }\r\n                        that.initModel(result.ModelId, result.TextureId);\r\n                        sessionStorage.setItem(\"modelId\", `${modelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.TextureId}`);\r\n                    }).catch(error => {\r\n                        console.log(\"认证失败\", error);\r\n                    });\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/${settings.modelRandMode}_textures/?id=${modelId}-${texturesId}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        if (result.textures['id'] !== texturesId) {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[1]);\r\n                        }\r\n                        else {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[0]);\r\n                        }\r\n                        that.initModel(modelId, result.textures['id']);\r\n                        sessionStorage.setItem(\"modelId\", `${modelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.textures['id']}`);\r\n                    }).catch(error => {\r\n                        console.log(\"获取失败\", error);\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nString.prototype.render = function (context: any): string {\r\n    const tokenReg = /(\\\\)?\\{([^\\{\\}\\\\]+)(\\\\)?\\}/g;\r\n\r\n    return this.replace(tokenReg, function (word, slash1, token, slash2) {\r\n        if (slash1 || slash2) { return word.replace('\\\\', ''); }\r\n\r\n        const variables = token.replace(/\\s/g, '').split('.');\r\n        let currentObject = context;\r\n        let i, length, variable;\r\n\r\n        for (i = 0, length = variables.length; i < length; ++i) {\r\n            variable = variables[i];\r\n            currentObject = currentObject[variable];\r\n            if (!currentObject) return '';\r\n        }\r\n        return currentObject;\r\n    });\r\n};","import Dexie,{ Table } from 'dexie';\r\n\r\nexport interface MocJson {\r\n    id?: number;\r\n    name :string;\r\n    key: string;\r\n    value: ArrayBuffer;\r\n}\r\n\r\nexport class DbCache extends Dexie {\r\n    mocJson! :Table<MocJson>\r\n    constructor(){\r\n        super('Live2D-JWF');\r\n        this.version(1).stores({\r\n            mocJson: '++id, [name+key]' // Primary key and indexed props\r\n        });\r\n    }\r\n}\r\n\r\nexport function ClearDb(){\r\n    db.delete();\r\n}\r\n\r\nexport const db = new DbCache();","export const LAppDefine = {\r\n\r\n\r\n    DEBUG_LOG: false,\r\n    DEBUG_MOUSE_LOG: false,\r\n    DEBUG_DRAW_HIT_AREA: false,\r\n    DEBUG_DRAW_ALPHA_MODEL: false,\r\n\r\n\r\n\r\n\r\n    VIEW_MAX_SCALE: 2,\r\n    VIEW_MIN_SCALE: 0.8,\r\n\r\n    VIEW_LOGICAL_LEFT: -1,\r\n    VIEW_LOGICAL_RIGHT: 1,\r\n\r\n    VIEW_LOGICAL_MAX_LEFT: -2,\r\n    VIEW_LOGICAL_MAX_RIGHT: 2,\r\n    VIEW_LOGICAL_MAX_BOTTOM: -2,\r\n    VIEW_LOGICAL_MAX_TOP: 2,\r\n\r\n\r\n    PRIORITY_NONE: 0,\r\n    PRIORITY_IDLE: 1,\r\n    PRIORITY_SLEEPY: 2,\r\n    PRIORITY_NORMAL: 3,\r\n    PRIORITY_FORCE: 4,\r\n\r\n    MOTION_GROUP_IDLE: \"idle\",\r\n    MOTION_GROUP_SLEEPY: \"sleepy\",\r\n    MOTION_GROUP_TAP_BODY: \"tap_body\",\r\n    MOTION_GROUP_FLICK_HEAD: \"flick_head\",\r\n    MOTION_GROUP_PINCH_IN: \"pinch_in\",\r\n    MOTION_GROUP_PINCH_OUT: \"pinch_out\",\r\n    MOTION_GROUP_SHAKE: \"shake\",\r\n\r\n\r\n    HIT_AREA_HEAD: \"head\",\r\n    HIT_AREA_BODY: \"body\",\r\n\r\n    HitAreasCustomHead_x: '',\r\n    HitAreasCustomHead_y: '',\r\n    HitAreasCustomBody_x: '',\r\n    HitAreasCustomBody_y: ''\r\n};\r\nvar context = undefined;\r\n\r\nexport function setContext(webglContext) {\r\n    context = webglContext;\r\n}\r\n\r\nexport function getContext() {\r\n    return context;\r\n}\r\n\r\nconst v2dir = new RegExp('\\model\\/([^\\/]*)\\/([^\\/]*)', 'gi');\r\nconst v2File = new RegExp('([^\\/]+)\\.(mtn|moc)$', 'gi');\r\n/**\r\n * 返回V2模型路径中的名字\r\n */\r\nexport function getV2Path(path: string): string {\r\n    var url = /[^/]*$/;\r\n    var test = path.match(v2dir);\r\n    if (test) {\r\n        return test[0];\r\n    } else {\r\n        return path.match(url) ? path.match(url)[0] : null;\r\n    }\r\n}\r\n/**\r\n * 返回V2模型文件的名字\r\n */\r\nexport function getV2File(path: string): string {\r\n    var url = /[^/]*$/;\r\n    var test = path.match(v2File);\r\n    if (test) {\r\n        return test[0];\r\n    } else {\r\n        return path.match(url) ? path.match(url)[0] : null;\r\n    }\r\n}","import { Live2DFramework } from \"./framework/Live2DFramework\"\r\nimport { PlatformManager } from \"./PlatformManager\"\r\nimport { LAppModel } from \"./LAppModel\"\r\nimport { LAppDefine } from \"./LAppDefine\"\r\n\r\nexport default class LAppLive2DManager {\r\n  private models: LAppModel[];\r\n  private count;\r\n  private reloadFlg;\r\n  public constructor() {\r\n    this.models = [];\r\n\r\n\r\n    this.count = -1;\r\n    this.reloadFlg = false;\r\n\r\n    (<any>window).Live2D.init();\r\n    Live2DFramework.setPlatformManager(new PlatformManager);\r\n  }\r\n\r\n  public createModel() {\r\n    var model = new LAppModel();\r\n    this.models.push(model);\r\n    return model;\r\n  }\r\n\r\n\r\n  public changeModel(gl: any, modelurl: string, token?: string) {\r\n    // console.log(\"--> LAppLive2DManager.update(gl)\");\r\n    if (this.reloadFlg) {\r\n      this.reloadFlg = false;\r\n      this.releaseModel(0, gl);\r\n      this.createModel();\r\n      this.models[0].load(modelurl, () => {\r\n        if (LAppDefine.DEBUG_LOG) console.log(\"changeModel完成\");\r\n      }, token);\r\n    }\r\n  }\r\n\r\n\r\n  public getModel(no) {\r\n    // console.log(\"--> LAppLive2DManager.getModel(\" + no + \")\");\r\n\r\n    if (no >= this.models.length) return null;\r\n\r\n    return this.models[no];\r\n  }\r\n\r\n\r\n\r\n  public releaseModel(no, gl) {\r\n    // console.log(\"--> LAppLive2DManager.releaseModel(\" + no + \")\");\r\n\r\n    if (this.models.length <= no) return;\r\n\r\n    this.models[no].release(gl);\r\n\r\n    delete this.models[no];\r\n    this.models.splice(no, 1);\r\n  }\r\n\r\n\r\n\r\n  public numModels() {\r\n    return this.models.length;\r\n  }\r\n\r\n\r\n\r\n  public setDrag(x, y) {\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].setDrag(x, y);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public maxScaleEvent() {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"Max scale event.\");\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_IN,\r\n        LAppDefine.PRIORITY_NORMAL);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public minScaleEvent() {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"Min scale event.\");\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_OUT,\r\n        LAppDefine.PRIORITY_NORMAL);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public tapEvent(x, y) {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"tapEvent view x:\" + x + \" y:\" + y);\r\n\r\n    for (var i = 0; i < this.models.length; i++) {\r\n\r\n      if (this.models[i].hitTest(LAppDefine.HIT_AREA_HEAD.toLowerCase(), x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap face.\");\r\n\r\n        this.models[i].setRandomExpression();\r\n      } else if (this.models[i].hitTest(LAppDefine.HIT_AREA_BODY.toLowerCase(), x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap body.\" + \" models[\" + i + \"]\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      } else if (this.models[i].hitTestCustom('head', x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap face.\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_FLICK_HEAD,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      } else if (this.models[i].hitTestCustom('body', x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap body.\" + \" models[\" + i + \"]\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}","import { Live2DFramework, L2DBaseModel, L2DMotionManager } from \"./framework/Live2DFramework\"\r\nimport { ModelSettingJson } from \"./framework/ModelSettingJson\"\r\nimport { LAppDefine } from \"./LAppDefine\"\r\n\r\nexport class LAppModel extends L2DBaseModel {\r\n    private modelHomeDir;\r\n    private modelSetting: ModelSettingJson;\r\n    private tmpMatrix: any[];\r\n    mainMotionManager: any;\r\n    expressionManager: any;\r\n    constructor() {\r\n        super();\r\n        //L2DBaseModel.apply(this, arguments);\r\n        L2DBaseModel.prototype.constructor.call(this);\r\n\r\n        this.modelHomeDir = \"\";\r\n        this.modelSetting = null;\r\n        this.tmpMatrix = [];\r\n    }\r\n\r\n    public load(modelSettingPath: string, callback: () => void, token?: string) {\r\n        this.setUpdating(true);\r\n        this.setInitialized(false);\r\n\r\n        this.modelHomeDir = \"\";\r\n\r\n        this.modelSetting = new ModelSettingJson();\r\n\r\n        var thisRef = this;\r\n\r\n        this.modelSetting.loadModelSetting(modelSettingPath, function () {\r\n            //处理相对路径和绝对路径\r\n            //已知thisRef.modelSetting.getModelFile() 是获取当前JSON中的模型文件:moc文件\r\n            var mocfile = thisRef.modelSetting.getModelFile();\r\n            if (/^https?:\\/\\/|^\\/\\//i.test(mocfile)) {\r\n                thisRef.modelHomeDir = \"\";\r\n            } else {\r\n                thisRef.modelHomeDir = modelSettingPath.substring(0, modelSettingPath.lastIndexOf(\"/\") + 1);\r\n            }\r\n            var path = thisRef.modelHomeDir + thisRef.modelSetting.getModelFile();\r\n            thisRef.loadModelData(path, function (model) {\r\n\r\n                for (var i = 0; i < thisRef.modelSetting.getTextureNum(); i++) {\r\n                    let texPaths = thisRef.modelHomeDir + thisRef.modelSetting.getTextureFile(i);\r\n                    thisRef.loadTexture(i, texPaths, function () {\r\n\r\n                        if (thisRef.isTexLoaded) {\r\n\r\n                            if (thisRef.modelSetting.getExpressionNum() > 0) {\r\n\r\n                                thisRef.expressions = {};\r\n\r\n                                for (var j = 0; j < thisRef.modelSetting.getExpressionNum(); j++) {\r\n                                    var expName = thisRef.modelSetting.getExpressionName(j);\r\n                                    var expFilePath = thisRef.modelHomeDir +\r\n                                        thisRef.modelSetting.getExpressionFile(j);\r\n\r\n                                    thisRef.loadExpression(expName, expFilePath, null);\r\n                                }\r\n                            }\r\n                            else {\r\n                                thisRef.expressionManager = null;\r\n                                thisRef.expressions = {};\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.eyeBlink == null) {\r\n                                //thisRef.eyeBlink = new L2DEyeBlink();\r\n                            }\r\n\r\n\r\n                            if (thisRef.modelSetting.getPhysicsFile() != null) {\r\n                                thisRef.loadPhysics(thisRef.modelHomeDir +\r\n                                    thisRef.modelSetting.getPhysicsFile());\r\n                            }\r\n                            else {\r\n                                thisRef.physics = null;\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.modelSetting.getPoseFile() != null) {\r\n                                thisRef.loadPose(\r\n                                    thisRef.modelHomeDir +\r\n                                    thisRef.modelSetting.getPoseFile(),\r\n                                    function () {\r\n                                        thisRef.pose.updateParam(thisRef.live2DModel);\r\n                                    }\r\n                                );\r\n                            }\r\n                            else {\r\n                                thisRef.pose = null;\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.modelSetting.getLayout() != null) {\r\n                                var layout = thisRef.modelSetting.getLayout();\r\n                                if (layout[\"width\"] != null)\r\n                                    thisRef.modelMatrix.setWidth(layout[\"width\"]);\r\n                                if (layout[\"height\"] != null)\r\n                                    thisRef.modelMatrix.setHeight(layout[\"height\"]);\r\n\r\n                                if (layout[\"x\"] != null)\r\n                                    thisRef.modelMatrix.setX(layout[\"x\"]);\r\n                                if (layout[\"y\"] != null)\r\n                                    thisRef.modelMatrix.setY(layout[\"y\"]);\r\n                                if (layout[\"center_x\"] != null)\r\n                                    thisRef.modelMatrix.centerX(layout[\"center_x\"]);\r\n                                if (layout[\"center_y\"] != null)\r\n                                    thisRef.modelMatrix.centerY(layout[\"center_y\"]);\r\n                                if (layout[\"top\"] != null)\r\n                                    thisRef.modelMatrix.top(layout[\"top\"]);\r\n                                if (layout[\"bottom\"] != null)\r\n                                    thisRef.modelMatrix.bottom(layout[\"bottom\"]);\r\n                                if (layout[\"left\"] != null)\r\n                                    thisRef.modelMatrix.left(layout[\"left\"]);\r\n                                if (layout[\"right\"] != null)\r\n                                    thisRef.modelMatrix.right(layout[\"right\"]);\r\n                            }\r\n\r\n                            if (thisRef.modelSetting.getHitAreasCustom() != null) {\r\n                                var hit_areas_custom = thisRef.modelSetting.getHitAreasCustom();\r\n                                if (hit_areas_custom[\"head_x\"] != null)\r\n                                    LAppDefine.HitAreasCustomHead_x = hit_areas_custom[\"head_x\"];\r\n                                if (hit_areas_custom[\"head_y\"] != null)\r\n                                    LAppDefine.HitAreasCustomHead_y = hit_areas_custom[\"head_y\"];\r\n                                if (hit_areas_custom[\"body_x\"] != null)\r\n                                    LAppDefine.HitAreasCustomBody_x = hit_areas_custom[\"body_x\"];\r\n                                if (hit_areas_custom[\"body_y\"] != null)\r\n                                    LAppDefine.HitAreasCustomBody_y = hit_areas_custom[\"body_y\"];\r\n                            }\r\n\r\n                            for (var j = 0; j < thisRef.modelSetting.getInitParamNum(); j++) {\r\n\r\n                                thisRef.live2DModel.setParamFloat(\r\n                                    thisRef.modelSetting.getInitParamID(j),\r\n                                    thisRef.modelSetting.getInitParamValue(j)\r\n                                );\r\n                            }\r\n\r\n                            for (var j = 0; j < thisRef.modelSetting.getInitPartsVisibleNum(); j++) {\r\n\r\n                                thisRef.live2DModel.setPartsOpacity(\r\n                                    thisRef.modelSetting.getInitPartsVisibleID(j),\r\n                                    thisRef.modelSetting.getInitPartsVisibleValue(j)\r\n                                );\r\n                            }\r\n\r\n\r\n\r\n                            thisRef.live2DModel.saveParam();\r\n                            // thisRef.live2DModel.setGL(gl);\r\n\r\n\r\n                            thisRef.preloadMotionGroup(LAppDefine.MOTION_GROUP_IDLE.toLowerCase());\r\n                            thisRef.preloadMotionGroup(LAppDefine.PRIORITY_SLEEPY);\r\n                            thisRef.mainMotionManager.stopAllMotions();\r\n\r\n                            thisRef.setUpdating(false);\r\n                            thisRef.setInitialized(true);\r\n\r\n                            if (typeof callback == \"function\") callback();\r\n\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }, token);\r\n    }\r\n\r\n    public release(gl) {\r\n        // this.live2DModel.deleteTextures();\r\n        let pm = Live2DFramework.getPlatformManager();\r\n\r\n        gl.deleteTexture(pm.texture);\r\n    }\r\n\r\n    public preloadMotionGroup(name) {\r\n        var thisRef = this;\r\n\r\n        for (var i = 0; i < this.modelSetting.getMotionNum(name); i++) {\r\n            var file = this.modelSetting.getMotionFile(name, i);\r\n            this.loadMotion(file, this.modelHomeDir + file, function (motion) {\r\n                motion.setFadeIn(thisRef.modelSetting.getMotionFadeIn(name, i));\r\n                motion.setFadeOut(thisRef.modelSetting.getMotionFadeOut(name, i));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        // console.log(\"--> LAppModel.update()\");\r\n\r\n        if (this.live2DModel == null) {\r\n            if (LAppDefine.DEBUG_LOG) console.error(\"Failed to update.\");\r\n\r\n            return;\r\n        }\r\n\r\n        var timeMSec = (<any>window).UtSystem.getUserTimeMSec() - this.startTimeMSec;\r\n        var timeSec = timeMSec / 1000.0;\r\n        var t = timeSec * 2 * Math.PI;\r\n\r\n\r\n        if (this.mainMotionManager.isFinished()) {\r\n            var Sleepy = sessionStorage.getItem('Sleepy');\r\n            if (Sleepy === '1') {\r\n                this.startRandomMotion(LAppDefine.MOTION_GROUP_SLEEPY, LAppDefine.PRIORITY_SLEEPY);\r\n            } else {\r\n                this.startRandomMotion(LAppDefine.MOTION_GROUP_IDLE.toLowerCase(), LAppDefine.PRIORITY_IDLE);\r\n            }\r\n        }\r\n\r\n        //-----------------------------------------------------------------\t\t\r\n\r\n\r\n        this.live2DModel.loadParam();\r\n\r\n\r\n\r\n        var update = this.mainMotionManager.updateParam(this.live2DModel);\r\n        if (!update) {\r\n\r\n            if (this.eyeBlink != null) {\r\n                this.eyeBlink.updateParam(this.live2DModel);\r\n            }\r\n        }\r\n\r\n\r\n        this.live2DModel.saveParam();\r\n\r\n        //-----------------------------------------------------------------\t\t\r\n\r\n\r\n        if (this.expressionManager != null &&\r\n            this.expressions != null &&\r\n            !this.expressionManager.isFinished()) {\r\n            this.expressionManager.updateParam(this.live2DModel);\r\n        }\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\", this.dragX * 30, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\", this.dragY * 30, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\", (this.dragX * this.dragY) * -30, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\", this.dragX * 10, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\", this.dragX, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\", this.dragY, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",\r\n            Number((15 * Math.sin(t / 6.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",\r\n            Number((8 * Math.sin(t / 3.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",\r\n            Number((10 * Math.sin(t / 5.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",\r\n            Number((4 * Math.sin(t / 15.5345))), 0.5);\r\n        this.live2DModel.setParamFloat(\"PARAM_BREATH\",\r\n            Number((0.5 + 0.5 * Math.sin(t / 3.2345))), 1);\r\n\r\n\r\n        if (this.physics != null) {\r\n            this.physics.updateParam(this.live2DModel);\r\n        }\r\n\r\n\r\n        if (this.lipSync == null) {\r\n            this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",\r\n                this.lipSyncValue);\r\n        }\r\n\r\n\r\n        if (this.pose != null) {\r\n            this.pose.updateParam(this.live2DModel);\r\n        }\r\n\r\n        this.live2DModel.update();\r\n    }\r\n\r\n\r\n\r\n    public setRandomExpression() {\r\n        var tmp = [];\r\n        for (var name in this.expressions) {\r\n            tmp.push(name);\r\n        }\r\n\r\n        var no = parseInt((Math.random() * tmp.length).toString());\r\n\r\n        this.setExpression(tmp[no]);\r\n    }\r\n\r\n\r\n\r\n    public startRandomMotion(name, priority) {\r\n        var max = this.modelSetting.getMotionNum(name);\r\n        var no = parseInt((Math.random() * max).toString());\r\n        this.startMotion(name, no, priority);\r\n    }\r\n\r\n\r\n\r\n    public startMotion(name, no, priority) {\r\n        // console.log(\"startMotion : \" + name + \" \" + no + \" \" + priority);\r\n\r\n        var motionName = this.modelSetting.getMotionFile(name, no);\r\n\r\n        if (motionName == null || motionName == \"\") {\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.error(\"Failed to motion.\");\r\n            return;\r\n        }\r\n\r\n        if (priority == LAppDefine.PRIORITY_FORCE) {\r\n            this.mainMotionManager.setReservePriority(priority);\r\n        }\r\n        else if (!this.mainMotionManager.reserveMotion(priority)) {\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.log(\"Motion is running.\")\r\n            return;\r\n        }\r\n\r\n        var thisRef = this;\r\n        var motion;\r\n\r\n        if (this.motions[name] == null) {\r\n            this.loadMotion(null, this.modelHomeDir + motionName, function (mtn) {\r\n                motion = mtn;\r\n\r\n\r\n                thisRef.setFadeInFadeOut(name, no, priority, motion);\r\n\r\n            });\r\n        }\r\n        else {\r\n            motion = this.motions[name];\r\n\r\n\r\n            thisRef.setFadeInFadeOut(name, no, priority, motion);\r\n        }\r\n    }\r\n\r\n\r\n    public setFadeInFadeOut(name, no, priority, motion) {\r\n        var motionName = this.modelSetting.getMotionFile(name, no);\r\n\r\n        motion.setFadeIn(this.modelSetting.getMotionFadeIn(name, no));\r\n        motion.setFadeOut(this.modelSetting.getMotionFadeOut(name, no));\r\n\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Start motion : \" + motionName);\r\n\r\n        if (this.modelSetting.getMotionSound(name, no) == null) {\r\n            this.mainMotionManager.startMotionPrio(motion, priority);\r\n        }\r\n        else {\r\n            var soundName = this.modelSetting.getMotionSound(name, no);\r\n            // var player = new Sound(this.modelHomeDir + soundName);\r\n\r\n            var snd = document.createElement(\"audio\");\r\n            snd.src = this.modelHomeDir + soundName;\r\n\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.log(\"Start sound : \" + soundName);\r\n\r\n            snd.play();\r\n            this.mainMotionManager.startMotionPrio(motion, priority);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public setExpression(name) {\r\n        var motion = this.expressions[name];\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Expression : \" + name);\r\n\r\n        this.expressionManager.startMotion(motion, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * 模仿v3版本的framework写的\r\n     * 同等于lappmodel.ts中797行代码\r\n     * @param {实例化后的MatrixStack} matrix \r\n     */\r\n    public draw(matrix) {\r\n        matrix.multMatrix(this.modelMatrix.getArray());\r\n\r\n        this.tmpMatrix = matrix.getMatrix()\r\n\r\n        this.live2DModel.setMatrix(this.tmpMatrix);\r\n        this.live2DModel.draw();\r\n    }\r\n\r\n\r\n\r\n    public hitTest(id, testX, testY) {\r\n        var len = this.modelSetting.getHitAreaNum();\r\n        for (var i = 0; i < len; i++) {\r\n            if (id == this.modelSetting.getHitAreaName(i)) {\r\n                var drawID = this.modelSetting.getHitAreaID(i);\r\n\r\n                return this.hitTestSimple(drawID, testX, testY);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    public hitTestCustom(type, testX, testY) {\r\n        if (type == 'head') {\r\n            return this.hitTestSimpleCustom(LAppDefine.HitAreasCustomHead_x, LAppDefine.HitAreasCustomHead_y, testX, testY);\r\n        } else if (type == 'body') {\r\n            return this.hitTestSimpleCustom(LAppDefine.HitAreasCustomBody_x, LAppDefine.HitAreasCustomBody_y, testX, testY);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n}","/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\nimport { getContext, getV2File, getV2Path } from \"./LAppDefine\"\r\nimport { CubismJson } from '../v2/framework/utils/cubismjson'\r\nimport { db } from \"../lib/DbCache\";\r\nimport { Live2dWebSDK } from '../lib/live2dWebSDK'\r\n\r\nlet requestCache = {};\r\n\r\nexport class PlatformManager {\r\n    /**\r\n     * PlatformManager # loadBytes()\r\n     * @param path \r\n     */\r\n    public async loadBytes(path: string, token?: string): Promise<ArrayBuffer> {\r\n        // 获取当前model的名字\r\n        let fileKey = getV2Path(path);\r\n        let fileName = getV2File(path);\r\n        // Cache 相同的请求，减少请求数量\r\n        let rsp = await db.mocJson.where({ key: fileKey, name: fileName }).first();\r\n        if (rsp) {\r\n            return rsp.value;\r\n        } else {\r\n            let request: Response;\r\n            if (token) {\r\n                request = await fetch(path, {\r\n                    headers: new Headers({\r\n                        'Authorization': `Bearer ${token}`,\r\n                    })\r\n                });\r\n            } else {\r\n                request = await fetch(path);\r\n            }\r\n            let rsp = await request.arrayBuffer();\r\n            switch (request.status) {\r\n                case 200:\r\n                    db.mocJson.put({ key: fileKey, name: fileName, value: rsp });\r\n                    return rsp;\r\n                default:\r\n                    console.error(\"Failed to load (\" + request.status + \") : \" + path);\r\n                    return null!;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回路径对应的内容（字符串类型）\r\n     * @param path \r\n     * @param callback \r\n     */\r\n    public async loadString(path: string, token?: string): Promise<string> {\r\n        let buf = await this.loadBytes(path, token);\r\n        let arrayStr = CubismJson.arrayBufferToString(buf);\r\n        return arrayStr;\r\n    }\r\n\r\n    public loadLive2DModel(path: string, callback: (model: any) => void, token?: string) {\r\n        this.loadBytes(path, token).then((buf) => {\r\n            var model = (<any>window).Live2DModelWebGL.loadModel(buf);\r\n            callback(model);\r\n        });\r\n    }\r\n\r\n    //============================================================\r\n    //    PlatformManager # loadTexture()\r\n    //============================================================\r\n    public loadTexture(model/*ALive2DModel*/, no: number, path: string, callback) {\r\n        // load textures\r\n        var loadedImage = new Image();\r\n        loadedImage.crossOrigin = 'Anonymous';\r\n        loadedImage.src = path;\r\n\r\n        var thisRef = this;\r\n        loadedImage.onload = function () {\r\n            // create texture\r\n            if ((this as HTMLImageElement).complete) {\r\n                var gl = getContext();\r\n                var texture = gl.createTexture();\r\n                if (!texture) { console.error(\"Failed to generate gl texture name.\"); return -1; }\r\n\r\n                if (model.isPremultipliedAlpha() == false) {\r\n                    // 乗算済アルファテクスチャ以外の場合\r\n                    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n                }\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n                gl.activeTexture(gl.TEXTURE0);\r\n                gl.bindTexture(gl.TEXTURE_2D, texture);\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA,\r\n                    gl.UNSIGNED_BYTE, loadedImage);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n\r\n\r\n                model.setTexture(no, texture);\r\n\r\n                // テクスチャオブジェクトを解放\r\n                texture = null;\r\n            } else {\r\n                console.log(\"材质图片加载失败, 请刷新页面后重试\");\r\n            }\r\n            if (typeof callback == \"function\") callback();\r\n        };\r\n\r\n        loadedImage.onerror = function () {\r\n            console.error(\"Failed to load image : \" + path);\r\n        }\r\n    }\r\n\r\n\r\n    //============================================================\r\n    //    PlatformManager # parseFromBytes(buf)\r\n\r\n    //============================================================\r\n    public jsonParseFromBytes(buf) {\r\n\r\n        var jsonStr;\r\n\r\n\r\n\r\n        var bomCode = new Uint8Array(buf, 0, 3);\r\n        if (bomCode[0] == 239 && bomCode[1] == 187 && bomCode[2] == 191) {\r\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf, 3));\r\n        } else {\r\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf));\r\n        }\r\n\r\n        var jsonObj = JSON.parse(jsonStr);\r\n\r\n        return jsonObj;\r\n    }\r\n\r\n\r\n    //============================================================\r\n    //    PlatformManager # log()\r\n    //============================================================\r\n    public log(txt: string) {\r\n        //console.log(txt);\r\n    }\r\n\r\n\r\n}","/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\nexport class MatrixStack{\r\n    \r\n    public reset(){\r\n        this.depth = 0;\r\n    }\r\n\r\n    public loadIdentity(){\r\n        for (var i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = (i % 5 == 0) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    public push(){\r\n        let offset = this.depth * 16;\r\n        let nextOffset = (this.depth + 1) * 16;\r\n        \r\n        if (this.matrixStack.length < nextOffset + 16)\r\n        {\r\n            this.matrixStack.length = nextOffset + 16;\r\n        }\r\n    \r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            this.matrixStack[nextOffset + i] = this.currentMatrix[i];\r\n        }\r\n    \r\n        this.depth++;\r\n    }\r\n\r\n    public pop(){\r\n        this.depth--;\r\n        if (this.depth < 0)\r\n        {\r\n            console.log(\"Invalid matrix stack. 无效的矩阵堆栈\")\r\n            this.depth = 0;\r\n        }\r\n    \r\n        let offset = this.depth * 16;\r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = this.matrixStack[offset + i];\r\n        }\r\n    }\r\n\r\n    public getMatrix(){\r\n        return this.currentMatrix;\r\n    }\r\n\r\n    public multMatrix(matNew){\r\n        let i, j, k;\r\n\r\n        for (i = 0; i < 16; i++)\r\n        {\r\n            this.tmp[i] = 0;\r\n        }\r\n    \r\n        for (i = 0; i < 4; i++)\r\n        {\r\n            for (j = 0; j < 4; j++)\r\n            {\r\n                for (k = 0; k < 4; k++)\r\n                {\r\n                    this.tmp[i + j * 4] += this.currentMatrix[i + k * 4] * matNew[k + j * 4];\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = this.tmp[i];\r\n        }\r\n    }\r\n\r\n    depth = 0;\r\n\r\n    matrixStack = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    currentMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    tmp = new Array(16);\r\n}\r\n\r\n","import {Live2DFramework} from \"./Live2DFramework\"\r\nimport {PlatformManager} from '../PlatformManager'\r\n\r\nexport class ModelSettingJson{\r\n    public constructor(){\r\n        this.NAME = \"name\";\r\n        this.ID = \"id\";\r\n        this.MODEL = \"model\";\r\n        this.TEXTURES = \"textures\";\r\n        this.HIT_AREAS = \"hit_areas\";\r\n        this.PHYSICS = \"physics\";\r\n        this.POSE = \"pose\";\r\n        this.EXPRESSIONS = \"expressions\";\r\n        this.MOTION_GROUPS = \"motions\";\r\n        this.SOUND = \"sound\";\r\n        this.FADE_IN = \"fade_in\";\r\n        this.FADE_OUT = \"fade_out\";\r\n        this.LAYOUT = \"layout\";\r\n        this.HIT_AREAS_CUSTOM = \"hit_areas_custom\";\r\n        this.INIT_PARAM = \"init_param\";\r\n        this.INIT_PARTS_VISIBLE = \"init_parts_visible\";\r\n        this.VALUE = \"val\";\r\n        this.FILE = \"file\";\r\n\r\n        this.json = {};\r\n    }\r\n\r\n    public loadModelSetting(path: string, callback: ()=>void, token?: string){\r\n        var thisRef = this;\r\n        var pm = Live2DFramework.getPlatformManager() as PlatformManager;\r\n        pm.loadBytes(path,token).then((buf)=>{\r\n            var str = String.fromCharCode.apply(null,new Uint8Array(buf));\r\n            thisRef.json = JSON.parse(str);\r\n            callback();\r\n        });\r\n    }\r\n\r\n    public getTextureFile(n){\r\n        if (this.json[this.TEXTURES] == null || this.json[this.TEXTURES][n] == null)\r\n        return null;\r\n    \r\n        return this.json[this.TEXTURES][n];\r\n    }\r\n\r\n    public getModelFile(){\r\n        return this.json[this.MODEL];\r\n    }\r\n\r\n    public getTextureNum ()\r\n    {    \r\n        if (this.json[this.TEXTURES] == null) return 0;\r\n        \r\n        return this.json[this.TEXTURES].length;\r\n    }\r\n\r\n\r\n    public getHitAreaNum ()\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null)\r\n            return 0;\r\n\r\n        return this.json[this.HIT_AREAS].length;\r\n    }\r\n\r\n\r\n    public getHitAreaID(n)\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null || \r\n            this.json[this.HIT_AREAS][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.HIT_AREAS][n][this.ID];\r\n    }\r\n\r\n\r\n    public getHitAreaName(n)\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null || \r\n            this.json[this.HIT_AREAS][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.HIT_AREAS][n][this.NAME];\r\n    }\r\n\r\n\r\n    public getPhysicsFile()\r\n    {\r\n        return this.json[this.PHYSICS];\r\n    }\r\n\r\n\r\n    public getPoseFile()\r\n    {\r\n        return this.json[this.POSE];\r\n    }\r\n\r\n\r\n    public getExpressionNum ()\r\n    {\r\n        return (this.json[this.EXPRESSIONS] == null) ? 0 : this.json[this.EXPRESSIONS].length;\r\n    }\r\n\r\n\r\n    public getExpressionFile(n)\r\n    {\r\n        if (this.json[this.EXPRESSIONS] == null)\r\n            return null;\r\n        return this.json[this.EXPRESSIONS][n][this.FILE];\r\n    }\r\n\r\n\r\n    public getExpressionName(n)\r\n    {\r\n        if (this.json[this.EXPRESSIONS] == null)\r\n            return null;\r\n        return this.json[this.EXPRESSIONS][n][this.NAME];\r\n    }\r\n\r\n\r\n    public getLayout()\r\n    {\r\n        return this.json[this.LAYOUT];\r\n    }\r\n\r\n\r\n    public getHitAreasCustom ()\r\n    {\r\n        return this.json[this.HIT_AREAS_CUSTOM];\r\n    }\r\n\r\n\r\n    public getInitParamNum ()\r\n    {\r\n        return (this.json[this.INIT_PARAM] == null) ? 0 : this.json[this.INIT_PARAM].length;\r\n    }\r\n\r\n\r\n    public getMotionNum(name)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null)\r\n            return 0;\r\n        \r\n        return this.json[this.MOTION_GROUPS][name].length;\r\n    }\r\n\r\n\r\n    public getMotionFile(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.FILE];\r\n    }\r\n\r\n\r\n    public getMotionSound(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.SOUND] == null)\r\n            return null;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.SOUND];\r\n    }\r\n\r\n\r\n    public getMotionFadeIn(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_IN] == null)\r\n            return 1000;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_IN];\r\n    }\r\n\r\n\r\n    public getMotionFadeOut(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT] == null)\r\n            return 1000;\r\n        \r\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT];\r\n    }\r\n\r\n\r\n    public getInitParamID(n)\r\n    {\r\n        if (this.json[this.INIT_PARAM] == null || \r\n            this.json[this.INIT_PARAM][n] == null)\r\n            return null;\r\n        \r\n        return this.json[this.INIT_PARAM][n][this.ID];\r\n    }\r\n\r\n\r\n    public getInitParamValue(n)\r\n    {\r\n        if (this.json[this.INIT_PARAM] == null || this.json[this.INIT_PARAM][n] == null)\r\n            return NaN;\r\n        \r\n        return this.json[this.INIT_PARAM][n][this.VALUE];\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleNum ()\r\n    {\r\n        return (this.json[this.INIT_PARTS_VISIBLE] == null) ? 0 : this.json[this.INIT_PARTS_VISIBLE].length;\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleID(n)\r\n    {\r\n        if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\r\n            return null;\r\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.ID];\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleValue(n)\r\n    {\r\n        if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\r\n            return NaN;\r\n        \r\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.VALUE];\r\n    }\r\n\r\n\r\n    NAME:string;\r\n    ID:string;\r\n    MODEL:string;\r\n    TEXTURES:string;\r\n    HIT_AREAS:string;\r\n    PHYSICS:string;\r\n    POSE :string;\r\n    EXPRESSIONS :string;\r\n    MOTION_GROUPS:string;\r\n    SOUND:string;\r\n    FADE_IN :string;\r\n    FADE_OUT :string;\r\n    LAYOUT :string;\r\n    HIT_AREAS_CUSTOM :string;\r\n    INIT_PARAM :string;\r\n    INIT_PARTS_VISIBLE :string;\r\n    VALUE :string;\r\n    FILE :string;\r\n\r\n    json :any;\r\n}","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * @brief パラメータIDのデフォルト値を保持する定数<br>\r\n *         デフォルト値の仕様は以下のマニュアルに基づく<br>\r\n *         https://docs.live2d.com/cubism-editor-manual/standard-parametor-list/\r\n */\r\nexport const CubismDefaultParameterId = Object.freeze<Record<string, string>>({\r\n  // パーツID\r\n  HitAreaPrefix: 'HitArea',\r\n  HitAreaHead: 'Head',\r\n  HitAreaBody: 'Body',\r\n  PartsIdCore: 'Parts01Core',\r\n  PartsArmPrefix: 'Parts01Arm_',\r\n  PartsArmLPrefix: 'Parts01ArmL_',\r\n  PartsArmRPrefix: 'Parts01ArmR_',\r\n  // パラメータID\r\n  ParamAngleX: 'ParamAngleX',\r\n  ParamAngleY: 'ParamAngleY',\r\n  ParamAngleZ: 'ParamAngleZ',\r\n  ParamEyeLOpen: 'ParamEyeLOpen',\r\n  ParamEyeLSmile: 'ParamEyeLSmile',\r\n  ParamEyeROpen: 'ParamEyeROpen',\r\n  ParamEyeRSmile: 'ParamEyeRSmile',\r\n  ParamEyeBallX: 'ParamEyeBallX',\r\n  ParamEyeBallY: 'ParamEyeBallY',\r\n  ParamEyeBallForm: 'ParamEyeBallForm',\r\n  ParamBrowLY: 'ParamBrowLY',\r\n  ParamBrowRY: 'ParamBrowRY',\r\n  ParamBrowLX: 'ParamBrowLX',\r\n  ParamBrowRX: 'ParamBrowRX',\r\n  ParamBrowLAngle: 'ParamBrowLAngle',\r\n  ParamBrowRAngle: 'ParamBrowRAngle',\r\n  ParamBrowLForm: 'ParamBrowLForm',\r\n  ParamBrowRForm: 'ParamBrowRForm',\r\n  ParamMouthForm: 'ParamMouthForm',\r\n  ParamMouthOpenY: 'ParamMouthOpenY',\r\n  ParamCheek: 'ParamCheek',\r\n  ParamBodyAngleX: 'ParamBodyAngleX',\r\n  ParamBodyAngleY: 'ParamBodyAngleY',\r\n  ParamBodyAngleZ: 'ParamBodyAngleZ',\r\n  ParamBreath: 'ParamBreath',\r\n  ParamArmLA: 'ParamArmLA',\r\n  ParamArmRA: 'ParamArmRA',\r\n  ParamArmLB: 'ParamArmLB',\r\n  ParamArmRB: 'ParamArmRB',\r\n  ParamHandL: 'ParamHandL',\r\n  ParamHandR: 'ParamHandR',\r\n  ParamHairFront: 'ParamHairFront',\r\n  ParamHairSide: 'ParamHairSide',\r\n  ParamHairBack: 'ParamHairBack',\r\n  ParamHairFluffy: 'ParamHairFluffy',\r\n  ParamShoulderY: 'ParamShoulderY',\r\n  ParamBustX: 'ParamBustX',\r\n  ParamBustY: 'ParamBustY',\r\n  ParamBaseX: 'ParamBaseX',\r\n  ParamBaseY: 'ParamBaseY',\r\n  ParamNONE: 'NONE:',\r\n});\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismdefaultparameterid';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const HitAreaBody = $.CubismDefaultParameterId.HitAreaBody;\r\n  export const HitAreaHead = $.CubismDefaultParameterId.HitAreaHead;\r\n  export const HitAreaPrefix = $.CubismDefaultParameterId.HitAreaPrefix;\r\n  export const ParamAngleX = $.CubismDefaultParameterId.ParamAngleX;\r\n  export const ParamAngleY = $.CubismDefaultParameterId.ParamAngleY;\r\n  export const ParamAngleZ = $.CubismDefaultParameterId.ParamAngleZ;\r\n  export const ParamArmLA = $.CubismDefaultParameterId.ParamArmLA;\r\n  export const ParamArmLB = $.CubismDefaultParameterId.ParamArmLB;\r\n  export const ParamArmRA = $.CubismDefaultParameterId.ParamArmRA;\r\n  export const ParamArmRB = $.CubismDefaultParameterId.ParamArmRB;\r\n  export const ParamBaseX = $.CubismDefaultParameterId.ParamBaseX;\r\n  export const ParamBaseY = $.CubismDefaultParameterId.ParamBaseY;\r\n  export const ParamBodyAngleX = $.CubismDefaultParameterId.ParamBodyAngleX;\r\n  export const ParamBodyAngleY = $.CubismDefaultParameterId.ParamBodyAngleY;\r\n  export const ParamBodyAngleZ = $.CubismDefaultParameterId.ParamBodyAngleZ;\r\n  export const ParamBreath = $.CubismDefaultParameterId.ParamBreath;\r\n  export const ParamBrowLAngle = $.CubismDefaultParameterId.ParamBrowLAngle;\r\n  export const ParamBrowLForm = $.CubismDefaultParameterId.ParamBrowLForm;\r\n  export const ParamBrowLX = $.CubismDefaultParameterId.ParamBrowLX;\r\n  export const ParamBrowLY = $.CubismDefaultParameterId.ParamBrowLY;\r\n  export const ParamBrowRAngle = $.CubismDefaultParameterId.ParamBrowRAngle;\r\n  export const ParamBrowRForm = $.CubismDefaultParameterId.ParamBrowRForm;\r\n  export const ParamBrowRX = $.CubismDefaultParameterId.ParamBrowRX;\r\n  export const ParamBrowRY = $.CubismDefaultParameterId.ParamBrowRY;\r\n  export const ParamBustX = $.CubismDefaultParameterId.ParamBustX;\r\n  export const ParamBustY = $.CubismDefaultParameterId.ParamBustY;\r\n  export const ParamCheek = $.CubismDefaultParameterId.ParamCheek;\r\n  export const ParamEyeBallForm = $.CubismDefaultParameterId.ParamEyeBallForm;\r\n  export const ParamEyeBallX = $.CubismDefaultParameterId.ParamEyeBallX;\r\n  export const ParamEyeBallY = $.CubismDefaultParameterId.ParamEyeBallY;\r\n  export const ParamEyeLOpen = $.CubismDefaultParameterId.ParamEyeLOpen;\r\n  export const ParamEyeLSmile = $.CubismDefaultParameterId.ParamEyeLSmile;\r\n  export const ParamEyeROpen = $.CubismDefaultParameterId.ParamEyeROpen;\r\n  export const ParamEyeRSmile = $.CubismDefaultParameterId.ParamEyeRSmile;\r\n  export const ParamHairBack = $.CubismDefaultParameterId.ParamHairBack;\r\n  export const ParamHairFluffy = $.CubismDefaultParameterId.ParamHairFluffy;\r\n  export const ParamHairFront = $.CubismDefaultParameterId.ParamHairFront;\r\n  export const ParamHairSide = $.CubismDefaultParameterId.ParamHairSide;\r\n  export const ParamHandL = $.CubismDefaultParameterId.ParamHandL;\r\n  export const ParamHandR = $.CubismDefaultParameterId.ParamHandR;\r\n  export const ParamMouthForm = $.CubismDefaultParameterId.ParamMouthForm;\r\n  export const ParamMouthOpenY = $.CubismDefaultParameterId.ParamMouthOpenY;\r\n  export const ParamNONE = $.CubismDefaultParameterId.ParamNONE;\r\n  export const ParamShoulderY = $.CubismDefaultParameterId.ParamShoulderY;\r\n  export const PartsArmLPrefix = $.CubismDefaultParameterId.PartsArmLPrefix;\r\n  export const PartsArmPrefix = $.CubismDefaultParameterId.PartsArmPrefix;\r\n  export const PartsArmRPrefix = $.CubismDefaultParameterId.PartsArmRPrefix;\r\n  export const PartsIdCore = $.CubismDefaultParameterId.PartsIdCore;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n//========================================================\r\n//  ログ出力関数の設定\r\n//========================================================\r\n\r\n//---------- ログ出力レベル 選択項目 定義 ----------\r\n// 詳細ログ出力設定\r\nexport const CSM_LOG_LEVEL_VERBOSE = 0;\r\n// デバッグログ出力設定\r\nexport const CSM_LOG_LEVEL_DEBUG = 1;\r\n// Infoログ出力設定\r\nexport const CSM_LOG_LEVEL_INFO = 2;\r\n// 警告ログ出力設定\r\nexport const CSM_LOG_LEVEL_WARNING = 3;\r\n// エラーログ出力設定\r\nexport const CSM_LOG_LEVEL_ERROR = 4;\r\n// ログ出力オフ設定\r\nexport const CSM_LOG_LEVEL_OFF = 5;\r\n\r\n/**\r\n * ログ出力レベル設定。\r\n *\r\n * 強制的にログ出力レベルを変える時に定義を有効にする。\r\n * CSM_LOG_LEVEL_VERBOSE ～ CSM_LOG_LEVEL_OFF を選択する。\r\n */\r\nexport const CSM_LOG_LEVEL: number = CSM_LOG_LEVEL_VERBOSE;\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { ICubismModelSetting } from './icubismmodelsetting';\r\nimport { CubismIdHandle } from './id/cubismid';\r\nimport { CubismFramework } from './live2dcubismframework';\r\nimport { csmMap, iterator } from './type/csmmap';\r\nimport { csmVector } from './type/csmvector';\r\nimport { CubismJson, Value } from './utils/cubismjson';\r\n\r\n/**\r\n * Model3Jsonのキー文字列\r\n */\r\n\r\n// JSON Keys\r\nconst Version = 'Version';\r\nconst FileReferences = 'FileReferences';\r\nconst Groups = 'Groups';\r\nconst Layout = 'Layout';\r\nconst HitAreas = 'HitAreas';\r\n\r\nconst Moc = 'Moc';\r\nconst Textures = 'Textures';\r\nconst Physics = 'Physics';\r\nconst Pose = 'Pose';\r\nconst Expressions = 'Expressions';\r\nconst Motions = 'Motions';\r\n\r\nconst UserData = 'UserData';\r\nconst Name = 'Name';\r\nconst FilePath = 'File';\r\nconst Id = 'Id';\r\nconst Ids = 'Ids';\r\nconst Target = 'Target';\r\n\r\n// Motions\r\nconst Idle = 'Idle';\r\nconst TapBody = 'TapBody';\r\nconst PinchIn = 'PinchIn';\r\nconst PinchOut = 'PinchOut';\r\nconst Shake = 'Shake';\r\nconst FlickHead = 'FlickHead';\r\nconst Parameter = 'Parameter';\r\n\r\nconst SoundPath = 'Sound';\r\nconst FadeInTime = 'FadeInTime';\r\nconst FadeOutTime = 'FadeOutTime';\r\n\r\n// Layout\r\nconst CenterX = 'CenterX';\r\nconst CenterY = 'CenterY';\r\nconst X = 'X';\r\nconst Y = 'Y';\r\nconst Width = 'Width';\r\nconst Height = 'Height';\r\n\r\nconst LipSync = 'LipSync';\r\nconst EyeBlink = 'EyeBlink';\r\n\r\nconst InitParameter = 'init_param';\r\nconst InitPartsVisible = 'init_parts_visible';\r\nconst Val = 'val';\r\n\r\nenum FrequestNode {\r\n  FrequestNode_Groups, // getRoot().getValueByString(Groups)\r\n  FrequestNode_Moc, // getRoot().getValueByString(FileReferences).getValueByString(Moc)\r\n  FrequestNode_Motions, // getRoot().getValueByString(FileReferences).getValueByString(Motions)\r\n  FrequestNode_Expressions, // getRoot().getValueByString(FileReferences).getValueByString(Expressions)\r\n  FrequestNode_Textures, // getRoot().getValueByString(FileReferences).getValueByString(Textures)\r\n  FrequestNode_Physics, // getRoot().getValueByString(FileReferences).getValueByString(Physics)\r\n  FrequestNode_Pose, // getRoot().getValueByString(FileReferences).getValueByString(Pose)\r\n  FrequestNode_HitAreas, // getRoot().getValueByString(HitAreas)\r\n}\r\n\r\n/**\r\n * Model3Jsonパーサー\r\n *\r\n * model3.jsonファイルをパースして値を取得する\r\n */\r\nexport class CubismModelSettingJson extends ICubismModelSetting {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   *\r\n   * @param buffer    Model3Jsonをバイト配列として読み込んだデータバッファ\r\n   * @param size      Model3Jsonのデータサイズ\r\n   */\r\n  public constructor(buffer: ArrayBuffer, size: number) {\r\n    super();\r\n    this._json = CubismJson.create(buffer, size);\r\n\r\n    if (this._json) {\r\n      this._jsonValue = new csmVector<Value>();\r\n\r\n      // 順番はenum FrequestNodeと一致させる\r\n      this._jsonValue.pushBack(this._json.getRoot().getValueByString(Groups));\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Moc)\r\n      );\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Motions)\r\n      );\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Expressions)\r\n      );\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Textures)\r\n      );\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Physics)\r\n      );\r\n      this._jsonValue.pushBack(\r\n        this._json\r\n          .getRoot()\r\n          .getValueByString(FileReferences)\r\n          .getValueByString(Pose)\r\n      );\r\n      this._jsonValue.pushBack(this._json.getRoot().getValueByString(HitAreas));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    CubismJson.delete(this._json);\r\n\r\n    this._jsonValue = null;\r\n  }\r\n\r\n  /**\r\n   * CubismJsonオブジェクトを取得する\r\n   *\r\n   * @return CubismJson\r\n   */\r\n  public GetJson(): CubismJson {\r\n    return this._json;\r\n  }\r\n\r\n  /**\r\n   * Mocファイルの名前を取得する\r\n   * @return Mocファイルの名前\r\n   */\r\n  public getModelFileName(): string {\r\n    if (!this.isExistModelFile()) {\r\n      return '';\r\n    }\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_Moc).getRawString();\r\n  }\r\n\r\n  /**\r\n   * モデルが使用するテクスチャの数を取得する\r\n   * テクスチャの数\r\n   */\r\n  public getTextureCount(): number {\r\n    if (!this.isExistTextureFiles()) {\r\n      return 0;\r\n    }\r\n\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_Textures).getSize();\r\n  }\r\n\r\n  /**\r\n   * テクスチャが配置されたディレクトリの名前を取得する\r\n   * @return テクスチャが配置されたディレクトリの名前\r\n   */\r\n  public getTextureDirectory(): string {\r\n    const texturePath = this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Textures)\r\n      .getValueByIndex(0)\r\n      .getRawString();\r\n\r\n    const pathArray = texturePath.split('/');\r\n    // 最後の要素はテクスチャ名なので不要\r\n    const arrayLength = pathArray.length - 1;\r\n    let textureDirectoryStr = '';\r\n\r\n    // 分割したパスを結合\r\n    for (let i = 0; i < arrayLength; i++) {\r\n      textureDirectoryStr += pathArray[i];\r\n      if (i < arrayLength - 1) {\r\n        textureDirectoryStr += '/';\r\n      }\r\n    }\r\n\r\n    return textureDirectoryStr;\r\n  }\r\n\r\n  /**\r\n   * モデルが使用するテクスチャの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return テクスチャの名前\r\n   */\r\n  public getTextureFileName(index: number): string {\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Textures)\r\n      .getValueByIndex(index)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * モデルに設定された当たり判定の数を取得する\r\n   * @return モデルに設定された当たり判定の数\r\n   */\r\n  public getHitAreasCount(): number {\r\n    if (!this.isExistHitAreas()) {\r\n      return 0;\r\n    }\r\n\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_HitAreas).getSize();\r\n  }\r\n\r\n  /**\r\n   * 当たり判定に設定されたIDを取得する\r\n   *\r\n   * @param index 配列のindex\r\n   * @return 当たり判定に設定されたID\r\n   */\r\n  public getHitAreaId(index: number): CubismIdHandle {\r\n    return CubismFramework.getIdManager().getId(\r\n      this._jsonValue\r\n        .at(FrequestNode.FrequestNode_HitAreas)\r\n        .getValueByIndex(index)\r\n        .getValueByString(Id)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 当たり判定に設定された名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 当たり判定に設定された名前\r\n   */\r\n  public getHitAreaName(index: number): string {\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_HitAreas)\r\n      .getValueByIndex(index)\r\n      .getValueByString(Name)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * 物理演算設定ファイルの名前を取得する\r\n   * @return 物理演算設定ファイルの名前\r\n   */\r\n  public getPhysicsFileName(): string {\r\n    if (!this.isExistPhysicsFile()) {\r\n      return '';\r\n    }\r\n\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_Physics).getRawString();\r\n  }\r\n\r\n  /**\r\n   * パーツ切り替え設定ファイルの名前を取得する\r\n   * @return パーツ切り替え設定ファイルの名前\r\n   */\r\n  public getPoseFileName(): string {\r\n    if (!this.isExistPoseFile()) {\r\n      return '';\r\n    }\r\n\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_Pose).getRawString();\r\n  }\r\n\r\n  /**\r\n   * 表情設定ファイルの数を取得する\r\n   * @return 表情設定ファイルの数\r\n   */\r\n  public getExpressionCount(): number {\r\n    if (!this.isExistExpressionFile()) {\r\n      return 0;\r\n    }\r\n\r\n    return this._jsonValue.at(FrequestNode.FrequestNode_Expressions).getSize();\r\n  }\r\n\r\n  /**\r\n   * 表情設定ファイルを識別する名前（別名）を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 表情の名前\r\n   */\r\n  public getExpressionName(index: number): string {\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Expressions)\r\n      .getValueByIndex(index)\r\n      .getValueByString(Name)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * 表情設定ファイルの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 表情設定ファイルの名前\r\n   */\r\n  public getExpressionFileName(index: number): string {\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Expressions)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FilePath)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * モーショングループの数を取得する\r\n   * @return モーショングループの数\r\n   */\r\n  public getMotionGroupCount(): number {\r\n    if (!this.isExistMotionGroups()) {\r\n      return 0;\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getKeys()\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * モーショングループの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return モーショングループの名前\r\n   */\r\n  public getMotionGroupName(index: number): string {\r\n    if (!this.isExistMotionGroups()) {\r\n      return null;\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getKeys()\r\n      .at(index);\r\n  }\r\n\r\n  /**\r\n   * モーショングループに含まれるモーションの数を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @return モーショングループの数\r\n   */\r\n  public getMotionCount(groupName: string): number {\r\n    if (!this.isExistMotionGroupName(groupName)) {\r\n      return 0;\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * グループ名とインデックス値からモーションファイル名を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index     配列のインデックス値\r\n   * @return モーションファイルの名前\r\n   */\r\n  public getMotionFileName(groupName: string, index: number): string {\r\n    if (!this.isExistMotionGroupName(groupName)) {\r\n      return '';\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FilePath)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * モーションに対応するサウンドファイルの名前を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return サウンドファイルの名前\r\n   */\r\n  public getMotionSoundFileName(groupName: string, index: number): string {\r\n    if (!this.isExistMotionSoundFile(groupName, index)) {\r\n      return '';\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(SoundPath)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * モーション開始時のフェードイン処理時間を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return フェードイン処理時間[秒]\r\n   */\r\n  public getMotionFadeInTimeValue(groupName: string, index: number): number {\r\n    if (!this.isExistMotionFadeIn(groupName, index)) {\r\n      return -1.0;\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FadeInTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーション終了時のフェードアウト処理時間を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return フェードアウト処理時間[秒]\r\n   */\r\n  public getMotionFadeOutTimeValue(groupName: string, index: number): number {\r\n    if (!this.isExistMotionFadeOut(groupName, index)) {\r\n      return -1.0;\r\n    }\r\n\r\n    return this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FadeOutTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータのファイル名を取得する\r\n   * @return ユーザーデータのファイル名\r\n   */\r\n  public getUserDataFile(): string {\r\n    if (!this.isExistUserDataFile()) {\r\n      return '';\r\n    }\r\n\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(FileReferences)\r\n      .getValueByString(UserData)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * レイアウト情報を取得する\r\n   * @param outLayoutMap csmMapクラスのインスタンス\r\n   * @return true レイアウト情報が存在する\r\n   * @return false レイアウト情報が存在しない\r\n   */\r\n  public getLayoutMap(outLayoutMap: csmMap<string, number>): boolean {\r\n    // 存在しない要素にアクセスするとエラーになるためValueがnullの場合はnullを代入する\r\n    const map: csmMap<string, Value> = this._json\r\n      .getRoot()\r\n      .getValueByString(Layout)\r\n      .getMap();\r\n\r\n    if (map == null) {\r\n      return false;\r\n    }\r\n\r\n    let ret = false;\r\n\r\n    for (\r\n      const ite: iterator<string, Value> = map.begin();\r\n      ite.notEqual(map.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      outLayoutMap.setValue(ite.ptr().first, ite.ptr().second.toFloat());\r\n      ret = true;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 目パチに関連付けられたパラメータの数を取得する\r\n   * @return 目パチに関連付けられたパラメータの数\r\n   */\r\n  public getEyeBlinkParameterCount(): number {\r\n    if (!this.isExistEyeBlinkParameters()) {\r\n      return 0;\r\n    }\r\n\r\n    let num = 0;\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      i++\r\n    ) {\r\n      const refI: Value = this._jsonValue\r\n        .at(FrequestNode.FrequestNode_Groups)\r\n        .getValueByIndex(i);\r\n      if (refI.isNull() || refI.isError()) {\r\n        continue;\r\n      }\r\n\r\n      if (refI.getValueByString(Name).getRawString() == EyeBlink) {\r\n        num = refI.getValueByString(Ids).getVector().getSize();\r\n        break;\r\n      }\r\n    }\r\n\r\n    return num;\r\n  }\r\n\r\n  /**\r\n   * 目パチに関連付けられたパラメータのIDを取得する\r\n   * @param index 配列のインデックス値\r\n   * @return パラメータID\r\n   */\r\n  public getEyeBlinkParameterId(index: number): CubismIdHandle {\r\n    if (!this.isExistEyeBlinkParameters()) {\r\n      return null;\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      i++\r\n    ) {\r\n      const refI: Value = this._jsonValue\r\n        .at(FrequestNode.FrequestNode_Groups)\r\n        .getValueByIndex(i);\r\n      if (refI.isNull() || refI.isError()) {\r\n        continue;\r\n      }\r\n\r\n      if (refI.getValueByString(Name).getRawString() == EyeBlink) {\r\n        return CubismFramework.getIdManager().getId(\r\n          refI.getValueByString(Ids).getValueByIndex(index).getRawString()\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * リップシンクに関連付けられたパラメータの数を取得する\r\n   * @return リップシンクに関連付けられたパラメータの数\r\n   */\r\n  public getLipSyncParameterCount(): number {\r\n    if (!this.isExistLipSyncParameters()) {\r\n      return 0;\r\n    }\r\n\r\n    let num = 0;\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      i++\r\n    ) {\r\n      const refI: Value = this._jsonValue\r\n        .at(FrequestNode.FrequestNode_Groups)\r\n        .getValueByIndex(i);\r\n      if (refI.isNull() || refI.isError()) {\r\n        continue;\r\n      }\r\n\r\n      if (refI.getValueByString(Name).getRawString() == LipSync) {\r\n        num = refI.getValueByString(Ids).getVector().getSize();\r\n        break;\r\n      }\r\n    }\r\n\r\n    return num;\r\n  }\r\n\r\n  /**\r\n   * リップシンクに関連付けられたパラメータの数を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return パラメータID\r\n   */\r\n  public getLipSyncParameterId(index: number): CubismIdHandle {\r\n    if (!this.isExistLipSyncParameters()) {\r\n      return null;\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      i++\r\n    ) {\r\n      const refI: Value = this._jsonValue\r\n        .at(FrequestNode.FrequestNode_Groups)\r\n        .getValueByIndex(i);\r\n      if (refI.isNull() || refI.isError()) {\r\n        continue;\r\n      }\r\n\r\n      if (refI.getValueByString(Name).getRawString() == LipSync) {\r\n        return CubismFramework.getIdManager().getId(\r\n          refI.getValueByString(Ids).getValueByIndex(index).getRawString()\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * モデルファイルのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistModelFile(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Moc);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * テクスチャファイルのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistTextureFiles(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Textures);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 当たり判定のキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistHitAreas(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_HitAreas);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 物理演算ファイルのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistPhysicsFile(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Physics);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * ポーズ設定ファイルのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistPoseFile(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Pose);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 表情設定ファイルのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistExpressionFile(): boolean {\r\n    const node: Value = this._jsonValue.at(\r\n      FrequestNode.FrequestNode_Expressions\r\n    );\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * モーショングループのキーが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistMotionGroups(): boolean {\r\n    const node: Value = this._jsonValue.at(FrequestNode.FrequestNode_Motions);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 引数で指定したモーショングループのキーが存在するかどうかを確認する\r\n   * @param groupName  グループ名\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistMotionGroupName(groupName: string): boolean {\r\n    const node: Value = this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 引数で指定したモーションに対応するサウンドファイルのキーが存在するかどうかを確認する\r\n   * @param groupName  グループ名\r\n   * @param index 配列のインデックス値\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistMotionSoundFile(groupName: string, index: number): boolean {\r\n    const node: Value = this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(SoundPath);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 引数で指定したモーションに対応するフェードイン時間のキーが存在するかどうかを確認する\r\n   * @param groupName  グループ名\r\n   * @param index 配列のインデックス値\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistMotionFadeIn(groupName: string, index: number): boolean {\r\n    const node: Value = this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FadeInTime);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 引数で指定したモーションに対応するフェードアウト時間のキーが存在するかどうかを確認する\r\n   * @param groupName  グループ名\r\n   * @param index 配列のインデックス値\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistMotionFadeOut(groupName: string, index: number): boolean {\r\n    const node: Value = this._jsonValue\r\n      .at(FrequestNode.FrequestNode_Motions)\r\n      .getValueByString(groupName)\r\n      .getValueByIndex(index)\r\n      .getValueByString(FadeOutTime);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * UserDataのファイル名が存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistUserDataFile(): boolean {\r\n    const node: Value = this._json\r\n      .getRoot()\r\n      .getValueByString(FileReferences)\r\n      .getValueByString(UserData);\r\n    return !node.isNull() && !node.isError();\r\n  }\r\n\r\n  /**\r\n   * 目ぱちに対応付けられたパラメータが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistEyeBlinkParameters(): boolean {\r\n    if (\r\n      this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\r\n      this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      ++i\r\n    ) {\r\n      if (\r\n        this._jsonValue\r\n          .at(FrequestNode.FrequestNode_Groups)\r\n          .getValueByIndex(i)\r\n          .getValueByString(Name)\r\n          .getRawString() == EyeBlink\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * リップシンクに対応付けられたパラメータが存在するかどうかを確認する\r\n   * @return true キーが存在する\r\n   * @return false キーが存在しない\r\n   */\r\n  private isExistLipSyncParameters(): boolean {\r\n    if (\r\n      this._jsonValue.at(FrequestNode.FrequestNode_Groups).isNull() ||\r\n      this._jsonValue.at(FrequestNode.FrequestNode_Groups).isError()\r\n    ) {\r\n      return false;\r\n    }\r\n    for (\r\n      let i = 0;\r\n      i < this._jsonValue.at(FrequestNode.FrequestNode_Groups).getSize();\r\n      ++i\r\n    ) {\r\n      if (\r\n        this._jsonValue\r\n          .at(FrequestNode.FrequestNode_Groups)\r\n          .getValueByIndex(i)\r\n          .getValueByString(Name)\r\n          .getRawString() == LipSync\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _json: CubismJson;\r\n  private _jsonValue: csmVector<Value>;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmodelsettingjson';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismModelSettingJson = $.CubismModelSettingJson;\r\n  export type CubismModelSettingJson = $.CubismModelSettingJson;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmVector } from '../type/csmvector';\r\n\r\n/**\r\n * 呼吸機能\r\n *\r\n * 呼吸機能を提供する。\r\n */\r\nexport class CubismBreath {\r\n  /**\r\n   * インスタンスの作成\r\n   */\r\n  public static create(): CubismBreath {\r\n    return new CubismBreath();\r\n  }\r\n\r\n  /**\r\n   * インスタンスの破棄\r\n   * @param instance 対象のCubismBreath\r\n   */\r\n  public static delete(instance: CubismBreath): void {\r\n    if (instance != null) {\r\n      instance = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 呼吸のパラメータの紐づけ\r\n   * @param breathParameters 呼吸を紐づけたいパラメータのリスト\r\n   */\r\n  public setParameters(breathParameters: csmVector<BreathParameterData>): void {\r\n    this._breathParameters = breathParameters;\r\n  }\r\n\r\n  /**\r\n   * 呼吸に紐づいているパラメータの取得\r\n   * @return 呼吸に紐づいているパラメータのリスト\r\n   */\r\n  public getParameters(): csmVector<BreathParameterData> {\r\n    return this._breathParameters;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータの更新\r\n   * @param model 対象のモデル\r\n   * @param deltaTimeSeconds デルタ時間[秒]\r\n   */\r\n  public updateParameters(model: CubismModel, deltaTimeSeconds: number): void {\r\n    this._currentTime += deltaTimeSeconds;\r\n\r\n    const t: number = this._currentTime * 2.0 * 3.14159;\r\n\r\n    for (let i = 0; i < this._breathParameters.getSize(); ++i) {\r\n      const data: BreathParameterData = this._breathParameters.at(i);\r\n\r\n      model.addParameterValueById(\r\n        data.parameterId,\r\n        data.offset + data.peak * Math.sin(t / data.cycle),\r\n        data.weight\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._currentTime = 0.0;\r\n  }\r\n\r\n  _breathParameters: csmVector<BreathParameterData>; // 呼吸にひもづいているパラメータのリスト\r\n  _currentTime: number; // 積算時間[秒]\r\n}\r\n\r\n/**\r\n * 呼吸のパラメータ情報\r\n */\r\nexport class BreathParameterData {\r\n  /**\r\n   * コンストラクタ\r\n   * @param parameterId   呼吸をひもづけるパラメータID\r\n   * @param offset        呼吸を正弦波としたときの、波のオフセット\r\n   * @param peak          呼吸を正弦波としたときの、波の高さ\r\n   * @param cycle         呼吸を正弦波としたときの、波の周期\r\n   * @param weight        パラメータへの重み\r\n   */\r\n  constructor(\r\n    parameterId?: CubismIdHandle,\r\n    offset?: number,\r\n    peak?: number,\r\n    cycle?: number,\r\n    weight?: number\r\n  ) {\r\n    this.parameterId = parameterId == undefined ? null : parameterId;\r\n    this.offset = offset == undefined ? 0.0 : offset;\r\n    this.peak = peak == undefined ? 0.0 : peak;\r\n    this.cycle = cycle == undefined ? 0.0 : cycle;\r\n    this.weight = weight == undefined ? 0.0 : weight;\r\n  }\r\n\r\n  parameterId: CubismIdHandle; // 呼吸をひもづけるパラメータID\\\r\n  offset: number; // 呼吸を正弦波としたときの、波のオフセット\r\n  peak: number; // 呼吸を正弦波としたときの、波の高さ\r\n  cycle: number; // 呼吸を正弦波としたときの、波の周期\r\n  weight: number; // パラメータへの重み\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismbreath';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const BreathParameterData = $.BreathParameterData;\r\n  export type BreathParameterData = $.BreathParameterData;\r\n  export const CubismBreath = $.CubismBreath;\r\n  export type CubismBreath = $.CubismBreath;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { ICubismModelSetting } from '../icubismmodelsetting';\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmVector } from '../type/csmvector';\r\n\r\n/**\r\n * 自動まばたき機能\r\n *\r\n * 自動まばたき機能を提供する。\r\n */\r\nexport class CubismEyeBlink {\r\n  /**\r\n   * インスタンスを作成する\r\n   * @param modelSetting モデルの設定情報\r\n   * @return 作成されたインスタンス\r\n   * @note 引数がNULLの場合、パラメータIDが設定されていない空のインスタンスを作成する。\r\n   */\r\n  public static create(\r\n    modelSetting: ICubismModelSetting = null\r\n  ): CubismEyeBlink {\r\n    return new CubismEyeBlink(modelSetting);\r\n  }\r\n\r\n  /**\r\n   * インスタンスの破棄\r\n   * @param eyeBlink 対象のCubismEyeBlink\r\n   */\r\n  public static delete(eyeBlink: CubismEyeBlink): void {\r\n    if (eyeBlink != null) {\r\n      eyeBlink = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * まばたきの間隔の設定\r\n   * @param blinkingInterval まばたきの間隔の時間[秒]\r\n   */\r\n  public setBlinkingInterval(blinkingInterval: number): void {\r\n    this._blinkingIntervalSeconds = blinkingInterval;\r\n  }\r\n\r\n  /**\r\n   * まばたきのモーションの詳細設定\r\n   * @param closing   まぶたを閉じる動作の所要時間[秒]\r\n   * @param closed    まぶたを閉じている動作の所要時間[秒]\r\n   * @param opening   まぶたを開く動作の所要時間[秒]\r\n   */\r\n  public setBlinkingSetting(\r\n    closing: number,\r\n    closed: number,\r\n    opening: number\r\n  ): void {\r\n    this._closingSeconds = closing;\r\n    this._closedSeconds = closed;\r\n    this._openingSeconds = opening;\r\n  }\r\n\r\n  /**\r\n   * まばたきさせるパラメータIDのリストの設定\r\n   * @param parameterIds パラメータのIDのリスト\r\n   */\r\n  public setParameterIds(parameterIds: csmVector<CubismIdHandle>): void {\r\n    this._parameterIds = parameterIds;\r\n  }\r\n\r\n  /**\r\n   * まばたきさせるパラメータIDのリストの取得\r\n   * @return パラメータIDのリスト\r\n   */\r\n  public getParameterIds(): csmVector<CubismIdHandle> {\r\n    return this._parameterIds;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータの更新\r\n   * @param model 対象のモデル\r\n   * @param deltaTimeSeconds デルタ時間[秒]\r\n   */\r\n  public updateParameters(model: CubismModel, deltaTimeSeconds: number): void {\r\n    this._userTimeSeconds += deltaTimeSeconds;\r\n    let parameterValue: number;\r\n    let t = 0.0;\r\n\r\n    switch (this._blinkingState) {\r\n      case EyeState.EyeState_Closing:\r\n        t =\r\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\r\n          this._closingSeconds;\r\n\r\n        if (t >= 1.0) {\r\n          t = 1.0;\r\n          this._blinkingState = EyeState.EyeState_Closed;\r\n          this._stateStartTimeSeconds = this._userTimeSeconds;\r\n        }\r\n\r\n        parameterValue = 1.0 - t;\r\n\r\n        break;\r\n      case EyeState.EyeState_Closed:\r\n        t =\r\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\r\n          this._closedSeconds;\r\n\r\n        if (t >= 1.0) {\r\n          this._blinkingState = EyeState.EyeState_Opening;\r\n          this._stateStartTimeSeconds = this._userTimeSeconds;\r\n        }\r\n\r\n        parameterValue = 0.0;\r\n\r\n        break;\r\n      case EyeState.EyeState_Opening:\r\n        t =\r\n          (this._userTimeSeconds - this._stateStartTimeSeconds) /\r\n          this._openingSeconds;\r\n\r\n        if (t >= 1.0) {\r\n          t = 1.0;\r\n          this._blinkingState = EyeState.EyeState_Interval;\r\n          this._nextBlinkingTime = this.determinNextBlinkingTiming();\r\n        }\r\n\r\n        parameterValue = t;\r\n\r\n        break;\r\n      case EyeState.EyeState_Interval:\r\n        if (this._nextBlinkingTime < this._userTimeSeconds) {\r\n          this._blinkingState = EyeState.EyeState_Closing;\r\n          this._stateStartTimeSeconds = this._userTimeSeconds;\r\n        }\r\n\r\n        parameterValue = 1.0;\r\n\r\n        break;\r\n      case EyeState.EyeState_First:\r\n      default:\r\n        this._blinkingState = EyeState.EyeState_Interval;\r\n        this._nextBlinkingTime = this.determinNextBlinkingTiming();\r\n\r\n        parameterValue = 1.0;\r\n        break;\r\n    }\r\n\r\n    if (!CubismEyeBlink.CloseIfZero) {\r\n      parameterValue = -parameterValue;\r\n    }\r\n\r\n    for (let i = 0; i < this._parameterIds.getSize(); ++i) {\r\n      model.setParameterValueById(this._parameterIds.at(i), parameterValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param modelSetting モデルの設定情報\r\n   */\r\n  public constructor(modelSetting: ICubismModelSetting) {\r\n    this._blinkingState = EyeState.EyeState_First;\r\n    this._nextBlinkingTime = 0.0;\r\n    this._stateStartTimeSeconds = 0.0;\r\n    this._blinkingIntervalSeconds = 4.0;\r\n    this._closingSeconds = 0.1;\r\n    this._closedSeconds = 0.05;\r\n    this._openingSeconds = 0.15;\r\n    this._userTimeSeconds = 0.0;\r\n    this._parameterIds = new csmVector<CubismIdHandle>();\r\n\r\n    if (modelSetting == null) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < modelSetting.getEyeBlinkParameterCount(); ++i) {\r\n      this._parameterIds.pushBack(modelSetting.getEyeBlinkParameterId(i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 次の瞬きのタイミングの決定\r\n   *\r\n   * @return 次のまばたきを行う時刻[秒]\r\n   */\r\n  public determinNextBlinkingTiming(): number {\r\n    const r: number = Math.random();\r\n    return (\r\n      this._userTimeSeconds + r * (2.0 * this._blinkingIntervalSeconds - 1.0)\r\n    );\r\n  }\r\n\r\n  _blinkingState: number; // 現在の状態\r\n  _parameterIds: csmVector<CubismIdHandle>; // 操作対象のパラメータのIDのリスト\r\n  _nextBlinkingTime: number; // 次のまばたきの時刻[秒]\r\n  _stateStartTimeSeconds: number; // 現在の状態が開始した時刻[秒]\r\n  _blinkingIntervalSeconds: number; // まばたきの間隔[秒]\r\n  _closingSeconds: number; // まぶたを閉じる動作の所要時間[秒]\r\n  _closedSeconds: number; // まぶたを閉じている動作の所要時間[秒]\r\n  _openingSeconds: number; // まぶたを開く動作の所要時間[秒]\r\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\r\n\r\n  /**\r\n   * IDで指定された目のパラメータが、0のときに閉じるなら true 、1の時に閉じるなら false 。\r\n   */\r\n  static readonly CloseIfZero: boolean = true;\r\n}\r\n\r\n/**\r\n * まばたきの状態\r\n *\r\n * まばたきの状態を表す列挙型\r\n */\r\nexport enum EyeState {\r\n  EyeState_First = 0, // 初期状態\r\n  EyeState_Interval, // まばたきしていない状態\r\n  EyeState_Closing, // まぶたが閉じていく途中の状態\r\n  EyeState_Closed, // まぶたが閉じている状態\r\n  EyeState_Opening, // まぶたが開いていく途中の状態\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismeyeblink';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismEyeBlink = $.CubismEyeBlink;\r\n  export type CubismEyeBlink = $.CubismEyeBlink;\r\n  export const EyeState = $.EyeState;\r\n  export type EyeState = $.EyeState;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmVector, iterator } from '../type/csmvector';\r\nimport { CubismJson, Value } from '../utils/cubismjson';\r\n\r\nconst Epsilon = 0.001;\r\nconst DefaultFadeInSeconds = 0.5;\r\n\r\n// Pose.jsonのタグ\r\nconst FadeIn = 'FadeInTime';\r\nconst Link = 'Link';\r\nconst Groups = 'Groups';\r\nconst Id = 'Id';\r\n\r\n/**\r\n * パーツの不透明度の設定\r\n *\r\n * パーツの不透明度の管理と設定を行う。\r\n */\r\nexport class CubismPose {\r\n  /**\r\n   * インスタンスの作成\r\n   * @param pose3json pose3.jsonのデータ\r\n   * @param size pose3.jsonのデータのサイズ[byte]\r\n   * @return 作成されたインスタンス\r\n   */\r\n  public static create(pose3json: ArrayBuffer, size: number): CubismPose {\r\n    const ret: CubismPose = new CubismPose();\r\n    const json: CubismJson = CubismJson.create(pose3json, size);\r\n    const root: Value = json.getRoot();\r\n\r\n    // フェード時間の指定\r\n    if (!root.getValueByString(FadeIn).isNull()) {\r\n      ret._fadeTimeSeconds = root\r\n        .getValueByString(FadeIn)\r\n        .toFloat(DefaultFadeInSeconds);\r\n\r\n      if (ret._fadeTimeSeconds <= 0.0) {\r\n        ret._fadeTimeSeconds = DefaultFadeInSeconds;\r\n      }\r\n    }\r\n\r\n    // パーツグループ\r\n    const poseListInfo: Value = root.getValueByString(Groups);\r\n    const poseCount: number = poseListInfo.getSize();\r\n\r\n    for (let poseIndex = 0; poseIndex < poseCount; ++poseIndex) {\r\n      const idListInfo: Value = poseListInfo.getValueByIndex(poseIndex);\r\n      const idCount: number = idListInfo.getSize();\r\n      let groupCount = 0;\r\n\r\n      for (let groupIndex = 0; groupIndex < idCount; ++groupIndex) {\r\n        const partInfo: Value = idListInfo.getValueByIndex(groupIndex);\r\n        const partData: PartData = new PartData();\r\n        const parameterId: CubismIdHandle =\r\n          CubismFramework.getIdManager().getId(\r\n            partInfo.getValueByString(Id).getRawString()\r\n          );\r\n\r\n        partData.partId = parameterId;\r\n\r\n        // リンクするパーツの設定\r\n        if (!partInfo.getValueByString(Link).isNull()) {\r\n          const linkListInfo: Value = partInfo.getValueByString(Link);\r\n          const linkCount: number = linkListInfo.getSize();\r\n\r\n          for (let linkIndex = 0; linkIndex < linkCount; ++linkIndex) {\r\n            const linkPart: PartData = new PartData();\r\n            const linkId: CubismIdHandle = CubismFramework.getIdManager().getId(\r\n              linkListInfo.getValueByIndex(linkIndex).getString()\r\n            );\r\n\r\n            linkPart.partId = linkId;\r\n\r\n            partData.link.pushBack(linkPart);\r\n          }\r\n        }\r\n\r\n        ret._partGroups.pushBack(partData.clone());\r\n\r\n        ++groupCount;\r\n      }\r\n\r\n      ret._partGroupCounts.pushBack(groupCount);\r\n    }\r\n\r\n    CubismJson.delete(json);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * インスタンスを破棄する\r\n   * @param pose 対象のCubismPose\r\n   */\r\n  public static delete(pose: CubismPose): void {\r\n    if (pose != null) {\r\n      pose = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータの更新\r\n   * @param model 対象のモデル\r\n   * @param deltaTimeSeconds デルタ時間[秒]\r\n   */\r\n  public updateParameters(model: CubismModel, deltaTimeSeconds: number): void {\r\n    // 前回のモデルと同じでない場合は初期化が必要\r\n    if (model != this._lastModel) {\r\n      // パラメータインデックスの初期化\r\n      this.reset(model);\r\n    }\r\n\r\n    this._lastModel = model;\r\n\r\n    // 設定から時間を変更すると、経過時間がマイナスになる事があるので、経過時間0として対応\r\n    if (deltaTimeSeconds < 0.0) {\r\n      deltaTimeSeconds = 0.0;\r\n    }\r\n\r\n    let beginIndex = 0;\r\n\r\n    for (let i = 0; i < this._partGroupCounts.getSize(); i++) {\r\n      const partGroupCount: number = this._partGroupCounts.at(i);\r\n\r\n      this.doFade(model, deltaTimeSeconds, beginIndex, partGroupCount);\r\n\r\n      beginIndex += partGroupCount;\r\n    }\r\n\r\n    this.copyPartOpacities(model);\r\n  }\r\n\r\n  /**\r\n   * 表示を初期化\r\n   * @param model 対象のモデル\r\n   * @note 不透明度の初期値が0でないパラメータは、不透明度を１に設定する\r\n   */\r\n  public reset(model: CubismModel): void {\r\n    let beginIndex = 0;\r\n\r\n    for (let i = 0; i < this._partGroupCounts.getSize(); ++i) {\r\n      const groupCount: number = this._partGroupCounts.at(i);\r\n\r\n      for (let j: number = beginIndex; j < beginIndex + groupCount; ++j) {\r\n        this._partGroups.at(j).initialize(model);\r\n\r\n        const partsIndex: number = this._partGroups.at(j).partIndex;\r\n        const paramIndex: number = this._partGroups.at(j).parameterIndex;\r\n\r\n        if (partsIndex < 0) {\r\n          continue;\r\n        }\r\n\r\n        model.setPartOpacityByIndex(partsIndex, j == beginIndex ? 1.0 : 0.0);\r\n        model.setParameterValueByIndex(paramIndex, j == beginIndex ? 1.0 : 0.0);\r\n\r\n        for (let k = 0; k < this._partGroups.at(j).link.getSize(); ++k) {\r\n          this._partGroups.at(j).link.at(k).initialize(model);\r\n        }\r\n      }\r\n\r\n      beginIndex += groupCount;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パーツの不透明度をコピー\r\n   *\r\n   * @param model 対象のモデル\r\n   */\r\n  public copyPartOpacities(model: CubismModel): void {\r\n    for (\r\n      let groupIndex = 0;\r\n      groupIndex < this._partGroups.getSize();\r\n      ++groupIndex\r\n    ) {\r\n      const partData: PartData = this._partGroups.at(groupIndex);\r\n\r\n      if (partData.link.getSize() == 0) {\r\n        continue; // 連動するパラメータはない\r\n      }\r\n\r\n      const partIndex: number = this._partGroups.at(groupIndex).partIndex;\r\n      const opacity: number = model.getPartOpacityByIndex(partIndex);\r\n\r\n      for (\r\n        let linkIndex = 0;\r\n        linkIndex < partData.link.getSize();\r\n        ++linkIndex\r\n      ) {\r\n        const linkPart: PartData = partData.link.at(linkIndex);\r\n        const linkPartIndex: number = linkPart.partIndex;\r\n\r\n        if (linkPartIndex < 0) {\r\n          continue;\r\n        }\r\n\r\n        model.setPartOpacityByIndex(linkPartIndex, opacity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パーツのフェード操作を行う。\r\n   * @param model 対象のモデル\r\n   * @param deltaTimeSeconds デルタ時間[秒]\r\n   * @param beginIndex フェード操作を行うパーツグループの先頭インデックス\r\n   * @param partGroupCount フェード操作を行うパーツグループの個数\r\n   */\r\n  public doFade(\r\n    model: CubismModel,\r\n    deltaTimeSeconds: number,\r\n    beginIndex: number,\r\n    partGroupCount: number\r\n  ): void {\r\n    let visiblePartIndex = -1;\r\n    let newOpacity = 1.0;\r\n\r\n    const phi = 0.5;\r\n    const backOpacityThreshold = 0.15;\r\n\r\n    // 現在、表示状態になっているパーツを取得\r\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\r\n      const partIndex: number = this._partGroups.at(i).partIndex;\r\n      const paramIndex: number = this._partGroups.at(i).parameterIndex;\r\n\r\n      if (model.getParameterValueByIndex(paramIndex) > Epsilon) {\r\n        if (visiblePartIndex >= 0) {\r\n          break;\r\n        }\r\n\r\n        visiblePartIndex = i;\r\n        newOpacity = model.getPartOpacityByIndex(partIndex);\r\n\r\n        // 新しい不透明度を計算\r\n        newOpacity += deltaTimeSeconds / this._fadeTimeSeconds;\r\n\r\n        if (newOpacity > 1.0) {\r\n          newOpacity = 1.0;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (visiblePartIndex < 0) {\r\n      visiblePartIndex = 0;\r\n      newOpacity = 1.0;\r\n    }\r\n\r\n    // 表示パーツ、非表示パーツの不透明度を設定する\r\n    for (let i: number = beginIndex; i < beginIndex + partGroupCount; ++i) {\r\n      const partsIndex: number = this._partGroups.at(i).partIndex;\r\n\r\n      // 表示パーツの設定\r\n      if (visiblePartIndex == i) {\r\n        model.setPartOpacityByIndex(partsIndex, newOpacity); // 先に設定\r\n      }\r\n      // 非表示パーツの設定\r\n      else {\r\n        let opacity: number = model.getPartOpacityByIndex(partsIndex);\r\n        let a1: number; // 計算によって求められる不透明度\r\n\r\n        if (newOpacity < phi) {\r\n          a1 = (newOpacity * (phi - 1)) / phi + 1.0; // (0,1),(phi,phi)を通る直線式\r\n        } else {\r\n          a1 = ((1 - newOpacity) * phi) / (1.0 - phi); // (1,0),(phi,phi)を通る直線式\r\n        }\r\n\r\n        // 背景の見える割合を制限する場合\r\n        const backOpacity: number = (1.0 - a1) * (1.0 - newOpacity);\r\n\r\n        if (backOpacity > backOpacityThreshold) {\r\n          a1 = 1.0 - backOpacityThreshold / (1.0 - newOpacity);\r\n        }\r\n\r\n        if (opacity > a1) {\r\n          opacity = a1; // 計算の不透明度よりも大きければ（濃ければ）不透明度を上げる\r\n        }\r\n\r\n        model.setPartOpacityByIndex(partsIndex, opacity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._fadeTimeSeconds = DefaultFadeInSeconds;\r\n    this._lastModel = null;\r\n    this._partGroups = new csmVector<PartData>();\r\n    this._partGroupCounts = new csmVector<number>();\r\n  }\r\n\r\n  _partGroups: csmVector<PartData>; // パーツグループ\r\n  _partGroupCounts: csmVector<number>; // それぞれのパーツグループの個数\r\n  _fadeTimeSeconds: number; // フェード時間[秒]\r\n  _lastModel: CubismModel; // 前回操作したモデル\r\n}\r\n\r\n/**\r\n * パーツにまつわるデータを管理\r\n */\r\nexport class PartData {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(v?: PartData) {\r\n    this.parameterIndex = 0;\r\n    this.partIndex = 0;\r\n    this.link = new csmVector<PartData>();\r\n\r\n    if (v != undefined) {\r\n      this.partId = v.partId;\r\n\r\n      for (\r\n        const ite: iterator<PartData> = v.link.begin();\r\n        ite.notEqual(v.link.end());\r\n        ite.preIncrement()\r\n      ) {\r\n        this.link.pushBack(ite.ptr().clone());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * =演算子のオーバーロード\r\n   */\r\n  public assignment(v: PartData): PartData {\r\n    this.partId = v.partId;\r\n\r\n    for (\r\n      const ite: iterator<PartData> = v.link.begin();\r\n      ite.notEqual(v.link.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      this.link.pushBack(ite.ptr().clone());\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 初期化\r\n   * @param model 初期化に使用するモデル\r\n   */\r\n  public initialize(model: CubismModel): void {\r\n    this.parameterIndex = model.getParameterIndex(this.partId);\r\n    this.partIndex = model.getPartIndex(this.partId);\r\n\r\n    model.setParameterValueByIndex(this.parameterIndex, 1);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのコピーを生成する\r\n   */\r\n  public clone(): PartData {\r\n    const clonePartData: PartData = new PartData();\r\n\r\n    clonePartData.partId = this.partId;\r\n    clonePartData.parameterIndex = this.parameterIndex;\r\n    clonePartData.partIndex = this.partIndex;\r\n    clonePartData.link = new csmVector<PartData>();\r\n\r\n    for (\r\n      let ite: iterator<PartData> = this.link.begin();\r\n      ite.notEqual(this.link.end());\r\n      ite.increment()\r\n    ) {\r\n      clonePartData.link.pushBack(ite.ptr().clone());\r\n    }\r\n\r\n    return clonePartData;\r\n  }\r\n\r\n  partId: CubismIdHandle; // パーツID\r\n  parameterIndex: number; // パラメータのインデックス\r\n  partIndex: number; // パーツのインデックス\r\n  link: csmVector<PartData>; // 連動するパラメータ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismpose';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismPose = $.CubismPose;\r\n  export type CubismPose = $.CubismPose;\r\n  export const PartData = $.PartData;\r\n  export type PartData = $.PartData;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from './id/cubismid';\r\nimport { csmMap } from './type/csmmap';\r\n\r\n/**\r\n * モデル設定情報を取り扱う関数を宣言した純粋仮想クラス。\r\n *\r\n * このクラスを継承することで、モデル設定情報を取り扱うクラスになる。\r\n */\r\nexport abstract class ICubismModelSetting {\r\n  /**\r\n   * Mocファイルの名前を取得する\r\n   * @return Mocファイルの名前\r\n   */\r\n  public abstract getModelFileName(): string;\r\n\r\n  /**\r\n   * モデルが使用するテクスチャの数を取得する\r\n   * テクスチャの数\r\n   */\r\n  public abstract getTextureCount(): number;\r\n\r\n  /**\r\n   * テクスチャが配置されたディレクトリの名前を取得する\r\n   * @return テクスチャが配置されたディレクトリの名前\r\n   */\r\n  public abstract getTextureDirectory(): string;\r\n\r\n  /**\r\n   * モデルが使用するテクスチャの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return テクスチャの名前\r\n   */\r\n  public abstract getTextureFileName(index: number): string;\r\n\r\n  /**\r\n   * モデルに設定された当たり判定の数を取得する\r\n   * @return モデルに設定された当たり判定の数\r\n   */\r\n  public abstract getHitAreasCount(): number;\r\n\r\n  /**\r\n   * 当たり判定に設定されたIDを取得する\r\n   *\r\n   * @param index 配列のindex\r\n   * @return 当たり判定に設定されたID\r\n   */\r\n  public abstract getHitAreaId(index: number): CubismIdHandle;\r\n\r\n  /**\r\n   * 当たり判定に設定された名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 当たり判定に設定された名前\r\n   */\r\n  public abstract getHitAreaName(index: number): string;\r\n\r\n  /**\r\n   * 物理演算設定ファイルの名前を取得する\r\n   * @return 物理演算設定ファイルの名前\r\n   */\r\n  public abstract getPhysicsFileName(): string;\r\n\r\n  /**\r\n   * パーツ切り替え設定ファイルの名前を取得する\r\n   * @return パーツ切り替え設定ファイルの名前\r\n   */\r\n  public abstract getPoseFileName(): string;\r\n\r\n  /**\r\n   * 表情設定ファイルの数を取得する\r\n   * @return 表情設定ファイルの数\r\n   */\r\n  public abstract getExpressionCount(): number;\r\n\r\n  /**\r\n   * 表情設定ファイルを識別する名前（別名）を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 表情の名前\r\n   */\r\n  public abstract getExpressionName(index: number): string;\r\n\r\n  /**\r\n   * 表情設定ファイルの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return 表情設定ファイルの名前\r\n   */\r\n  public abstract getExpressionFileName(index: number): string;\r\n\r\n  /**\r\n   * モーショングループの数を取得する\r\n   * @return モーショングループの数\r\n   */\r\n  public abstract getMotionGroupCount(): number;\r\n\r\n  /**\r\n   * モーショングループの名前を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return モーショングループの名前\r\n   */\r\n  public abstract getMotionGroupName(index: number): string;\r\n\r\n  /**\r\n   * モーショングループに含まれるモーションの数を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @return モーショングループの数\r\n   */\r\n  public abstract getMotionCount(groupName: string): number;\r\n\r\n  /**\r\n   * グループ名とインデックス値からモーションファイル名を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index     配列のインデックス値\r\n   * @return モーションファイルの名前\r\n   */\r\n  public abstract getMotionFileName(groupName: string, index: number): string;\r\n\r\n  /**\r\n   * モーションに対応するサウンドファイルの名前を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return サウンドファイルの名前\r\n   */\r\n  public abstract getMotionSoundFileName(\r\n    groupName: string,\r\n    index: number\r\n  ): string;\r\n\r\n  /**\r\n   * モーション開始時のフェードイン処理時間を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return フェードイン処理時間[秒]\r\n   */\r\n  public abstract getMotionFadeInTimeValue(\r\n    groupName: string,\r\n    index: number\r\n  ): number;\r\n\r\n  /**\r\n   * モーション終了時のフェードアウト処理時間を取得する\r\n   * @param groupName モーショングループの名前\r\n   * @param index 配列のインデックス値\r\n   * @return フェードアウト処理時間[秒]\r\n   */\r\n  public abstract getMotionFadeOutTimeValue(\r\n    groupName: string,\r\n    index: number\r\n  ): number;\r\n\r\n  /**\r\n   * ユーザーデータのファイル名を取得する\r\n   * @return ユーザーデータのファイル名\r\n   */\r\n  public abstract getUserDataFile(): string;\r\n\r\n  /**\r\n   * レイアウト情報を取得する\r\n   * @param outLayoutMap csmMapクラスのインスタンス\r\n   * @return true レイアウト情報が存在する\r\n   * @return false レイアウト情報が存在しない\r\n   */\r\n  public abstract getLayoutMap(outLayoutMap: csmMap<string, number>): boolean;\r\n\r\n  /**\r\n   * 目パチに関連付けられたパラメータの数を取得する\r\n   * @return 目パチに関連付けられたパラメータの数\r\n   */\r\n  public abstract getEyeBlinkParameterCount(): number;\r\n\r\n  /**\r\n   * 目パチに関連付けられたパラメータのIDを取得する\r\n   * @param index 配列のインデックス値\r\n   * @return パラメータID\r\n   */\r\n  public abstract getEyeBlinkParameterId(index: number): CubismIdHandle;\r\n\r\n  /**\r\n   * リップシンクに関連付けられたパラメータの数を取得する\r\n   * @return リップシンクに関連付けられたパラメータの数\r\n   */\r\n  public abstract getLipSyncParameterCount(): number;\r\n\r\n  /**\r\n   * リップシンクに関連付けられたパラメータの数を取得する\r\n   * @param index 配列のインデックス値\r\n   * @return パラメータID\r\n   */\r\n  public abstract getLipSyncParameterId(index: number): CubismIdHandle;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './icubismmodelsetting';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const ICubismModelSetting = $.ICubismModelSetting;\r\n  export type ICubismModelSetting = $.ICubismModelSetting;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmString } from '../type/csmstring';\r\n\r\n/**\r\n * パラメータ名・パーツ名・Drawable名を保持\r\n *\r\n * パラメータ名・パーツ名・Drawable名を保持するクラス。\r\n */\r\nexport class CubismId {\r\n  /**\r\n   * ID名を取得する\r\n   */\r\n  public getString(): csmString {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(id: string | csmString) {\r\n    if (typeof id === 'string') {\r\n      this._id = new csmString(id);\r\n      return;\r\n    }\r\n\r\n    this._id = id;\r\n  }\r\n\r\n  /**\r\n   * idを比較\r\n   * @param c 比較するid\r\n   * @return 同じならばtrue,異なっていればfalseを返す\r\n   */\r\n  public isEqual(c: string | csmString | CubismId): boolean {\r\n    if (typeof c === 'string') {\r\n      return this._id.isEqual(c);\r\n    } else if (c instanceof csmString) {\r\n      return this._id.isEqual(c.s);\r\n    } else if (c instanceof CubismId) {\r\n      return this._id.isEqual(c._id.s);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * idを比較\r\n   * @param c 比較するid\r\n   * @return 同じならばtrue,異なっていればfalseを返す\r\n   */\r\n  public isNotEqual(c: string | csmString | CubismId): boolean {\r\n    if (typeof c == 'string') {\r\n      return !this._id.isEqual(c);\r\n    } else if (c instanceof csmString) {\r\n      return !this._id.isEqual(c.s);\r\n    } else if (c instanceof CubismId) {\r\n      return !this._id.isEqual(c._id.s);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _id: csmString; // ID名\r\n}\r\n\r\nexport declare type CubismIdHandle = CubismId;\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismid';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismId = $.CubismId;\r\n  export type CubismId = $.CubismId;\r\n  export type CubismIdHandle = $.CubismIdHandle;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismId } from './cubismid';\r\n\r\n/**\r\n * ID名の管理\r\n *\r\n * ID名を管理する。\r\n */\r\nexport class CubismIdManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._ids = new csmVector<CubismId>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    for (let i = 0; i < this._ids.getSize(); ++i) {\r\n      this._ids.set(i, void 0);\r\n    }\r\n    this._ids = null;\r\n  }\r\n\r\n  /**\r\n   * ID名をリストから登録\r\n   *\r\n   * @param ids ID名リスト\r\n   * @param count IDの個数\r\n   */\r\n  public registerIds(ids: string[] | csmString[]): void {\r\n    for (let i = 0; i < ids.length; i++) {\r\n      this.registerId(ids[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID名を登録\r\n   *\r\n   * @param id ID名\r\n   */\r\n  public registerId(id: string | csmString): CubismId {\r\n    let result: CubismId = null;\r\n\r\n    if ('string' == typeof id) {\r\n      if ((result = this.findId(id)) != null) {\r\n        return result;\r\n      }\r\n\r\n      result = new CubismId(id);\r\n      this._ids.pushBack(result);\r\n    } else {\r\n      return this.registerId(id.s);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ID名からIDを取得する\r\n   *\r\n   * @param id ID名\r\n   */\r\n  public getId(id: csmString | string): CubismId {\r\n    return this.registerId(id);\r\n  }\r\n\r\n  /**\r\n   * ID名からIDの確認\r\n   *\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExist(id: csmString | string): boolean {\r\n    if ('string' == typeof id) {\r\n      return this.findId(id) != null;\r\n    }\r\n    return this.isExist(id.s);\r\n  }\r\n\r\n  /**\r\n   * ID名からIDを検索する。\r\n   *\r\n   * @param id ID名\r\n   * @return 登録されているID。なければNULL。\r\n   */\r\n  private findId(id: string): CubismId {\r\n    for (let i = 0; i < this._ids.getSize(); ++i) {\r\n      if (this._ids.at(i).getString().isEqual(id)) {\r\n        return this._ids.at(i);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _ids: csmVector<CubismId>; // 登録されているIDのリスト\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismidmanager';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismIdManager = $.CubismIdManager;\r\n  export type CubismIdManager = $.CubismIdManager;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdManager } from './id/cubismidmanager';\r\nimport { CubismRenderer } from './rendering/cubismrenderer';\r\nimport {\r\n  CSM_ASSERT,\r\n  CubismLogInfo,\r\n  CubismLogWarning,\r\n} from './utils/cubismdebug';\r\nimport { Value } from './utils/cubismjson';\r\n\r\nexport function strtod(s: string, endPtr: string[]): number {\r\n  let index = 0;\r\n  for (let i = 1; ; i++) {\r\n    const testC: string = s.slice(i - 1, i);\r\n\r\n    // 指数・マイナスの可能性があるのでスキップする\r\n    if (testC == 'e' || testC == '-' || testC == 'E') {\r\n      continue;\r\n    } // 文字列の範囲を広げていく\r\n\r\n    const test: string = s.substring(0, i);\r\n    const number = Number(test);\r\n    if (isNaN(number)) {\r\n      // 数値として認識できなくなったので終了\r\n      break;\r\n    } // 最後に数値としてできたindexを格納しておく\r\n\r\n    index = i;\r\n  }\r\n  let d = parseFloat(s); // パースした数値\r\n\r\n  if (isNaN(d)) {\r\n    // 数値として認識できなくなったので終了\r\n    d = NaN;\r\n  }\r\n\r\n  endPtr[0] = s.slice(index); // 後続の文字列\r\n  return d;\r\n}\r\n\r\n// ファイルスコープの変数を初期化\r\n\r\nlet s_isStarted = false;\r\nlet s_isInitialized = false;\r\nlet s_option: Option = null;\r\nlet s_cubismIdManager: CubismIdManager = null;\r\n\r\n/**\r\n * Framework内で使う定数の宣言\r\n */\r\nexport const Constant = Object.freeze<Record<string, number>>({\r\n  vertexOffset: 0, // メッシュ頂点のオフセット値\r\n  vertexStep: 2, // メッシュ頂点のステップ値\r\n});\r\n\r\nexport function csmDelete<T>(address: T): void {\r\n  if (!address) {\r\n    return;\r\n  }\r\n\r\n  address = void 0;\r\n}\r\n\r\n/**\r\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\r\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\r\n */\r\nexport class CubismFramework {\r\n  /**\r\n   * Cubism FrameworkのAPIを使用可能にする。\r\n   *  APIを実行する前に必ずこの関数を実行すること。\r\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\r\n   *\r\n   * @param    option      Optionクラスのインスタンス\r\n   *\r\n   * @return   準備処理が完了したらtrueが返ります。\r\n   */\r\n  public static startUp(option: Option = null): boolean {\r\n    if (s_isStarted) {\r\n      CubismLogInfo('CubismFramework.startUp() is already done.');\r\n      return s_isStarted;\r\n    }\r\n\r\n    s_option = option;\r\n\r\n    if (s_option != null) {\r\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\r\n    }\r\n\r\n    s_isStarted = true;\r\n\r\n    // Live2D Cubism Coreバージョン情報を表示\r\n    if (s_isStarted) {\r\n      const version: number = Live2DCubismCore.Version.csmGetVersion();\r\n      const major: number = (version & 0xff000000) >> 24;\r\n      const minor: number = (version & 0x00ff0000) >> 16;\r\n      const patch: number = version & 0x0000ffff;\r\n      const versionNumber: number = version;\r\n\r\n      CubismLogInfo(\r\n        `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\r\n        ('00' + major).slice(-2),\r\n        ('00' + minor).slice(-2),\r\n        ('0000' + patch).slice(-4),\r\n        versionNumber\r\n      );\r\n    }\r\n\r\n    CubismLogInfo('CubismFramework.startUp() is complete.');\r\n\r\n    return s_isStarted;\r\n  }\r\n\r\n  /**\r\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\r\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\r\n   */\r\n  public static cleanUp(): void {\r\n    s_isStarted = false;\r\n    s_isInitialized = false;\r\n    s_option = null;\r\n    s_cubismIdManager = null;\r\n  }\r\n\r\n  /**\r\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\r\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\r\n   *\r\n   * @param memorySize 初期化時メモリ量 [byte(s)]\r\n   *    複数モデル表示時などにモデルが更新されない際に使用してください。\r\n   *    指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\r\n   *    それ以外はすべて1024*1024*16 byteに丸めます。\r\n   */\r\n  public static initialize(memorySize = 0): void {\r\n    CSM_ASSERT(s_isStarted);\r\n    if (!s_isStarted) {\r\n      CubismLogWarning('CubismFramework is not started.');\r\n      return;\r\n    }\r\n\r\n    // --- s_isInitializedによる連続初期化ガード ---\r\n    // 連続してリソース確保が行われないようにする。\r\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\r\n    if (s_isInitialized) {\r\n      CubismLogWarning(\r\n        'CubismFramework.initialize() skipped, already initialized.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    //---- static 初期化 ----\r\n    Value.staticInitializeNotForClientCall();\r\n\r\n    s_cubismIdManager = new CubismIdManager();\r\n\r\n    // --- HACK: 初期化時メモリ量の拡張(単位byte) ---\r\n    // 複数モデル表示時などにモデルが更新されない際に使用してください。\r\n    // 指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\r\n    // それ以外はすべて1024*1024*16 byteに丸めます。\r\n    Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\r\n\r\n    s_isInitialized = true;\r\n\r\n    CubismLogInfo('CubismFramework.initialize() is complete.');\r\n  }\r\n\r\n  /**\r\n   * Cubism Framework内の全てのリソースを解放します。\r\n   *      ただし、外部で確保されたリソースについては解放しません。\r\n   *      外部で適切に破棄する必要があります。\r\n   */\r\n  public static dispose(): void {\r\n    CSM_ASSERT(s_isStarted);\r\n    if (!s_isStarted) {\r\n      CubismLogWarning('CubismFramework is not started.');\r\n      return;\r\n    }\r\n\r\n    // --- s_isInitializedによる未初期化解放ガード ---\r\n    // dispose()するには先にinitialize()を実行する必要がある。\r\n    if (!s_isInitialized) {\r\n      // false...リソース未確保の場合\r\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\r\n      return;\r\n    }\r\n\r\n    Value.staticReleaseNotForClientCall();\r\n\r\n    s_cubismIdManager.release();\r\n    s_cubismIdManager = null;\r\n\r\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\r\n    CubismRenderer.staticRelease();\r\n\r\n    s_isInitialized = false;\r\n\r\n    CubismLogInfo('CubismFramework.dispose() is complete.');\r\n  }\r\n\r\n  /**\r\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\r\n   * @return APIを使用する準備が完了していればtrueが返ります。\r\n   */\r\n  public static isStarted(): boolean {\r\n    return s_isStarted;\r\n  }\r\n\r\n  /**\r\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\r\n   * @return リソース確保が完了していればtrueが返ります\r\n   */\r\n  public static isInitialized(): boolean {\r\n    return s_isInitialized;\r\n  }\r\n\r\n  /**\r\n   * Core APIにバインドしたログ関数を実行する\r\n   *\r\n   * @praram message ログメッセージ\r\n   */\r\n  public static coreLogFunction(message: string): void {\r\n    // Return if logging not possible.\r\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\r\n      return;\r\n    }\r\n\r\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\r\n  }\r\n\r\n  /**\r\n   * 現在のログ出力レベル設定の値を返す。\r\n   *\r\n   * @return  現在のログ出力レベル設定の値\r\n   */\r\n  public static getLoggingLevel(): LogLevel {\r\n    if (s_option != null) {\r\n      return s_option.loggingLevel;\r\n    }\r\n    return LogLevel.LogLevel_Off;\r\n  }\r\n\r\n  /**\r\n   * IDマネージャのインスタンスを取得する\r\n   * @return CubismManagerクラスのインスタンス\r\n   */\r\n  public static getIdManager(): CubismIdManager {\r\n    return s_cubismIdManager;\r\n  }\r\n\r\n  /**\r\n   * 静的クラスとして使用する\r\n   * インスタンス化させない\r\n   */\r\n  private constructor() {}\r\n}\r\n\r\nexport class Option {\r\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\r\n  loggingLevel: LogLevel; // ログ出力レベルの設定\r\n}\r\n\r\n/**\r\n * ログ出力のレベル\r\n */\r\nexport enum LogLevel {\r\n  LogLevel_Verbose = 0, // 詳細ログ\r\n  LogLevel_Debug, // デバッグログ\r\n  LogLevel_Info, // Infoログ\r\n  LogLevel_Warning, // 警告ログ\r\n  LogLevel_Error, // エラーログ\r\n  LogLevel_Off, // ログ出力無効\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './live2dcubismframework';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const Constant = $.Constant;\r\n  export const csmDelete = $.csmDelete;\r\n  export const CubismFramework = $.CubismFramework;\r\n  export type CubismFramework = $.CubismFramework;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismVector2 } from './cubismvector2';\r\n\r\n/**\r\n * 数値計算などに使用するユーティリティクラス\r\n */\r\nexport class CubismMath {\r\n  static readonly Epsilon: number = 0.00001;\r\n\r\n  /**\r\n   * 第一引数の値を最小値と最大値の範囲に収めた値を返す\r\n   *\r\n   * @param value 収められる値\r\n   * @param min   範囲の最小値\r\n   * @param max   範囲の最大値\r\n   * @return 最小値と最大値の範囲に収めた値\r\n   */\r\n  static range(value: number, min: number, max: number): number {\r\n    if (value < min) {\r\n      value = min;\r\n    } else if (value > max) {\r\n      value = max;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * サイン関数の値を求める\r\n   *\r\n   * @param x 角度値（ラジアン）\r\n   * @return サイン関数sin(x)の値\r\n   */\r\n  static sin(x: number): number {\r\n    return Math.sin(x);\r\n  }\r\n\r\n  /**\r\n   * コサイン関数の値を求める\r\n   *\r\n   * @param x 角度値(ラジアン)\r\n   * @return コサイン関数cos(x)の値\r\n   */\r\n  static cos(x: number): number {\r\n    return Math.cos(x);\r\n  }\r\n\r\n  /**\r\n   * 値の絶対値を求める\r\n   *\r\n   * @param x 絶対値を求める値\r\n   * @return 値の絶対値\r\n   */\r\n  static abs(x: number): number {\r\n    return Math.abs(x);\r\n  }\r\n\r\n  /**\r\n   * 平方根(ルート)を求める\r\n   * @param x -> 平方根を求める値\r\n   * @return 値の平方根\r\n   */\r\n  static sqrt(x: number): number {\r\n    return Math.sqrt(x);\r\n  }\r\n\r\n  /**\r\n   * 立方根を求める\r\n   * @param x -> 立方根を求める値\r\n   * @return 値の立方根\r\n   */\r\n  static cbrt(x: number): number {\r\n    if (x === 0) {\r\n      return x;\r\n    }\r\n\r\n    let cx: number = x;\r\n    const isNegativeNumber: boolean = cx < 0;\r\n\r\n    if (isNegativeNumber) {\r\n      cx = -cx;\r\n    }\r\n\r\n    let ret: number;\r\n    if (cx === Infinity) {\r\n      ret = Infinity;\r\n    } else {\r\n      ret = Math.exp(Math.log(cx) / 3);\r\n      ret = (cx / (ret * ret) + 2 * ret) / 3;\r\n    }\r\n    return isNegativeNumber ? -ret : ret;\r\n  }\r\n\r\n  /**\r\n   * イージング処理されたサインを求める\r\n   * フェードイン・アウト時のイージングに利用できる\r\n   *\r\n   * @param value イージングを行う値\r\n   * @return イージング処理されたサイン値\r\n   */\r\n  static getEasingSine(value: number): number {\r\n    if (value < 0.0) {\r\n      return 0.0;\r\n    } else if (value > 1.0) {\r\n      return 1.0;\r\n    }\r\n\r\n    return 0.5 - 0.5 * this.cos(value * Math.PI);\r\n  }\r\n\r\n  /**\r\n   * 大きい方の値を返す\r\n   *\r\n   * @param left 左辺の値\r\n   * @param right 右辺の値\r\n   * @return 大きい方の値\r\n   */\r\n  static max(left: number, right: number): number {\r\n    return left > right ? left : right;\r\n  }\r\n\r\n  /**\r\n   * 小さい方の値を返す\r\n   *\r\n   * @param left  左辺の値\r\n   * @param right 右辺の値\r\n   * @return 小さい方の値\r\n   */\r\n  static min(left: number, right: number): number {\r\n    return left > right ? right : left;\r\n  }\r\n\r\n  /**\r\n   * 角度値をラジアン値に変換する\r\n   *\r\n   * @param degrees   角度値\r\n   * @return 角度値から変換したラジアン値\r\n   */\r\n  static degreesToRadian(degrees: number): number {\r\n    return (degrees / 180.0) * Math.PI;\r\n  }\r\n\r\n  /**\r\n   * ラジアン値を角度値に変換する\r\n   *\r\n   * @param radian    ラジアン値\r\n   * @return ラジアン値から変換した角度値\r\n   */\r\n  static radianToDegrees(radian: number): number {\r\n    return (radian * 180.0) / Math.PI;\r\n  }\r\n\r\n  /**\r\n   * ２つのベクトルからラジアン値を求める\r\n   *\r\n   * @param from  始点ベクトル\r\n   * @param to    終点ベクトル\r\n   * @return ラジアン値から求めた方向ベクトル\r\n   */\r\n  static directionToRadian(from: CubismVector2, to: CubismVector2): number {\r\n    const q1: number = Math.atan2(to.y, to.x);\r\n    const q2: number = Math.atan2(from.y, from.x);\r\n\r\n    let ret: number = q1 - q2;\r\n\r\n    while (ret < -Math.PI) {\r\n      ret += Math.PI * 2.0;\r\n    }\r\n\r\n    while (ret > Math.PI) {\r\n      ret -= Math.PI * 2.0;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * ２つのベクトルから角度値を求める\r\n   *\r\n   * @param from  始点ベクトル\r\n   * @param to    終点ベクトル\r\n   * @return 角度値から求めた方向ベクトル\r\n   */\r\n  static directionToDegrees(from: CubismVector2, to: CubismVector2): number {\r\n    const radian: number = this.directionToRadian(from, to);\r\n    let degree: number = this.radianToDegrees(radian);\r\n\r\n    if (to.x - from.x > 0.0) {\r\n      degree = -degree;\r\n    }\r\n\r\n    return degree;\r\n  }\r\n\r\n  /**\r\n   * ラジアン値を方向ベクトルに変換する。\r\n   *\r\n   * @param totalAngle    ラジアン値\r\n   * @return ラジアン値から変換した方向ベクトル\r\n   */\r\n\r\n  static radianToDirection(totalAngle: number): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2();\r\n\r\n    ret.x = this.sin(totalAngle);\r\n    ret.y = this.cos(totalAngle);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 三次方程式の三次項の係数が0になったときに補欠的に二次方程式の解をもとめる。\r\n   * a * x^2 + b * x + c = 0\r\n   *\r\n   * @param   a -> 二次項の係数値\r\n   * @param   b -> 一次項の係数値\r\n   * @param   c -> 定数項の値\r\n   * @return  二次方程式の解\r\n   */\r\n  static quadraticEquation(a: number, b: number, c: number): number {\r\n    if (this.abs(a) < CubismMath.Epsilon) {\r\n      if (this.abs(b) < CubismMath.Epsilon) {\r\n        return -c;\r\n      }\r\n      return -c / b;\r\n    }\r\n\r\n    return -(b + this.sqrt(b * b - 4.0 * a * c)) / (2.0 * a);\r\n  }\r\n\r\n  /**\r\n   * カルダノの公式によってベジェのt値に該当する３次方程式の解を求める。\r\n   * 重解になったときには0.0～1.0の値になる解を返す。\r\n   *\r\n   * a * x^3 + b * x^2 + c * x + d = 0\r\n   *\r\n   * @param   a -> 三次項の係数値\r\n   * @param   b -> 二次項の係数値\r\n   * @param   c -> 一次項の係数値\r\n   * @param   d -> 定数項の値\r\n   * @return  0.0～1.0の間にある解\r\n   */\r\n  static cardanoAlgorithmForBezier(\r\n    a: number,\r\n    b: number,\r\n    c: number,\r\n    d: number\r\n  ): number {\r\n    if (this.sqrt(a) < CubismMath.Epsilon) {\r\n      return this.range(this.quadraticEquation(b, c, d), 0.0, 1.0);\r\n    }\r\n\r\n    const ba: number = b / a;\r\n    const ca: number = c / a;\r\n    const da: number = d / a;\r\n\r\n    const p: number = (3.0 * ca - ba * ba) / 3.0;\r\n    const p3: number = p / 3.0;\r\n    const q: number = (2.0 * ba * ba * ba - 9.0 * ba * ca + 27.0 * da) / 27.0;\r\n    const q2: number = q / 2.0;\r\n    const discriminant: number = q2 * q2 + p3 * p3 * p3;\r\n\r\n    const center = 0.5;\r\n    const threshold: number = center + 0.01;\r\n\r\n    if (discriminant < 0.0) {\r\n      const mp3: number = -p / 3.0;\r\n      const mp33: number = mp3 * mp3 * mp3;\r\n      const r: number = this.sqrt(mp33);\r\n      const t: number = -q / (2.0 * r);\r\n      const cosphi: number = this.range(t, -1.0, 1.0);\r\n      const phi: number = Math.acos(cosphi);\r\n      const crtr: number = this.cbrt(r);\r\n      const t1: number = 2.0 * crtr;\r\n\r\n      const root1: number = t1 * this.cos(phi / 3.0) - ba / 3.0;\r\n      if (this.abs(root1 - center) < threshold) {\r\n        return this.range(root1, 0.0, 1.0);\r\n      }\r\n\r\n      const root2: number =\r\n        t1 * this.cos((phi + 2.0 * Math.PI) / 3.0) - ba / 3.0;\r\n      if (this.abs(root2 - center) < threshold) {\r\n        return this.range(root2, 0.0, 1.0);\r\n      }\r\n\r\n      const root3: number =\r\n        t1 * this.cos((phi + 4.0 * Math.PI) / 3.0) - ba / 3.0;\r\n      return this.range(root3, 0.0, 1.0);\r\n    }\r\n\r\n    if (discriminant == 0.0) {\r\n      let u1: number;\r\n      if (q2 < 0.0) {\r\n        u1 = this.cbrt(-q2);\r\n      } else {\r\n        u1 = -this.cbrt(q2);\r\n      }\r\n\r\n      const root1: number = 2.0 * u1 - ba / 3.0;\r\n      if (this.abs(root1 - center) < threshold) {\r\n        return this.range(root1, 0.0, 1.0);\r\n      }\r\n\r\n      const root2: number = -u1 - ba / 3.0;\r\n      return this.range(root2, 0.0, 1.0);\r\n    }\r\n\r\n    const sd: number = this.sqrt(discriminant);\r\n    const u1: number = this.cbrt(sd - q2);\r\n    const v1: number = this.cbrt(sd + q2);\r\n    const root1: number = u1 - v1 - ba / 3.0;\r\n    return this.range(root1, 0.0, 1.0);\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  private constructor() {}\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmath';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMath = $.CubismMath;\r\n  export type CubismMath = $.CubismMath;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 4x4の行列\r\n *\r\n * 4x4行列の便利クラス。\r\n */\r\nexport class CubismMatrix44 {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\r\n    this.loadIdentity();\r\n  }\r\n\r\n  /**\r\n   * 受け取った２つの行列の乗算を行う。\r\n   *\r\n   * @param a 行列a\r\n   * @param b 行列b\r\n   * @return 乗算結果の行列\r\n   */\r\n  public static multiply(\r\n    a: Float32Array,\r\n    b: Float32Array,\r\n    dst: Float32Array\r\n  ): void {\r\n    const c: Float32Array = new Float32Array([\r\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n      0.0,\r\n    ]);\r\n\r\n    const n = 4;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      for (let j = 0; j < n; ++j) {\r\n        for (let k = 0; k < n; ++k) {\r\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 16; ++i) {\r\n      dst[i] = c[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 単位行列に初期化する\r\n   */\r\n  public loadIdentity(): void {\r\n    const c: Float32Array = new Float32Array([\r\n      1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    this.setMatrix(c);\r\n  }\r\n\r\n  /**\r\n   * 行列を設定\r\n   *\r\n   * @param tr 16個の浮動小数点数で表される4x4の行列\r\n   */\r\n  public setMatrix(tr: Float32Array): void {\r\n    for (let i = 0; i < 16; ++i) {\r\n      this._tr[i] = tr[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 行列を浮動小数点数の配列で取得\r\n   *\r\n   * @return 16個の浮動小数点数で表される4x4の行列\r\n   */\r\n  public getArray(): Float32Array {\r\n    return this._tr;\r\n  }\r\n\r\n  /**\r\n   * X軸の拡大率を取得\r\n   * @return X軸の拡大率\r\n   */\r\n  public getScaleX(): number {\r\n    return this._tr[0];\r\n  }\r\n\r\n  /**\r\n   * Y軸の拡大率を取得する\r\n   *\r\n   * @return Y軸の拡大率\r\n   */\r\n  public getScaleY(): number {\r\n    return this._tr[5];\r\n  }\r\n\r\n  /**\r\n   * X軸の移動量を取得\r\n   * @return X軸の移動量\r\n   */\r\n  public getTranslateX(): number {\r\n    return this._tr[12];\r\n  }\r\n\r\n  /**\r\n   * Y軸の移動量を取得\r\n   * @return Y軸の移動量\r\n   */\r\n  public getTranslateY(): number {\r\n    return this._tr[13];\r\n  }\r\n\r\n  /**\r\n   * X軸の値を現在の行列で計算\r\n   *\r\n   * @param src X軸の値\r\n   * @return 現在の行列で計算されたX軸の値\r\n   */\r\n  public transformX(src: number): number {\r\n    return this._tr[0] * src + this._tr[12];\r\n  }\r\n\r\n  /**\r\n   * Y軸の値を現在の行列で計算\r\n   *\r\n   * @param src Y軸の値\r\n   * @return 現在の行列で計算されたY軸の値\r\n   */\r\n  public transformY(src: number): number {\r\n    return this._tr[5] * src + this._tr[13];\r\n  }\r\n\r\n  /**\r\n   * X軸の値を現在の行列で逆計算\r\n   */\r\n  public invertTransformX(src: number): number {\r\n    return (src - this._tr[12]) / this._tr[0];\r\n  }\r\n\r\n  /**\r\n   * Y軸の値を現在の行列で逆計算\r\n   */\r\n  public invertTransformY(src: number): number {\r\n    return (src - this._tr[13]) / this._tr[5];\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の位置を起点にして移動\r\n   *\r\n   * 現在の行列の位置を起点にして相対的に移動する。\r\n   *\r\n   * @param x X軸の移動量\r\n   * @param y Y軸の移動量\r\n   */\r\n  public translateRelative(x: number, y: number): void {\r\n    const tr1: Float32Array = new Float32Array([\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      x,\r\n      y,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の位置を移動\r\n   *\r\n   * 現在の行列の位置を指定した位置へ移動する\r\n   *\r\n   * @param x X軸の移動量\r\n   * @param y y軸の移動量\r\n   */\r\n  public translate(x: number, y: number): void {\r\n    this._tr[12] = x;\r\n    this._tr[13] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列のX軸の位置を指定した位置へ移動する\r\n   *\r\n   * @param x X軸の移動量\r\n   */\r\n  public translateX(x: number): void {\r\n    this._tr[12] = x;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列のY軸の位置を指定した位置へ移動する\r\n   *\r\n   * @param y Y軸の移動量\r\n   */\r\n  public translateY(y: number): void {\r\n    this._tr[13] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の拡大率を相対的に設定する\r\n   *\r\n   * @param x X軸の拡大率\r\n   * @param y Y軸の拡大率\r\n   */\r\n  public scaleRelative(x: number, y: number): void {\r\n    const tr1: Float32Array = new Float32Array([\r\n      x,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      y,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の拡大率を指定した倍率に設定する\r\n   *\r\n   * @param x X軸の拡大率\r\n   * @param y Y軸の拡大率\r\n   */\r\n  public scale(x: number, y: number): void {\r\n    this._tr[0] = x;\r\n    this._tr[5] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列に行列を乗算\r\n   *\r\n   * @param m 行列\r\n   */\r\n  public multiplyByMatrix(m: CubismMatrix44): void {\r\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのコピーを生成する\r\n   */\r\n  public clone(): CubismMatrix44 {\r\n    const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\r\n\r\n    for (let i = 0; i < this._tr.length; i++) {\r\n      cloneMatrix._tr[i] = this._tr[i];\r\n    }\r\n\r\n    return cloneMatrix;\r\n  }\r\n\r\n  protected _tr: Float32Array; // 4x4行列データ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmatrix44';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMatrix44 = $.CubismMatrix44;\r\n  export type CubismMatrix44 = $.CubismMatrix44;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmMap, iterator } from '../type/csmmap';\r\nimport { CubismMatrix44 } from './cubismmatrix44';\r\n\r\n/**\r\n * モデル座標設定用の4x4行列\r\n *\r\n * モデル座標設定用の4x4行列クラス\r\n */\r\nexport class CubismModelMatrix extends CubismMatrix44 {\r\n  /**\r\n   * コンストラクタ\r\n   *\r\n   * @param w 横幅\r\n   * @param h 縦幅\r\n   */\r\n  constructor(w?: number, h?: number) {\r\n    super();\r\n\r\n    this._width = w !== undefined ? w : 0.0;\r\n    this._height = h !== undefined ? h : 0.0;\r\n\r\n    this.setHeight(2.0);\r\n  }\r\n\r\n  /**\r\n   * 横幅を設定\r\n   *\r\n   * @param w 横幅\r\n   */\r\n  public setWidth(w: number): void {\r\n    const scaleX: number = w / this._width;\r\n    const scaleY: number = scaleX;\r\n    this.scale(scaleX, scaleY);\r\n  }\r\n\r\n  /**\r\n   * 縦幅を設定\r\n   * @param h 縦幅\r\n   */\r\n  public setHeight(h: number): void {\r\n    const scaleX: number = h / this._height;\r\n    const scaleY: number = scaleX;\r\n    this.scale(scaleX, scaleY);\r\n  }\r\n\r\n  /**\r\n   * 位置を設定\r\n   *\r\n   * @param x X軸の位置\r\n   * @param y Y軸の位置\r\n   */\r\n  public setPosition(x: number, y: number): void {\r\n    this.translate(x, y);\r\n  }\r\n\r\n  /**\r\n   * 中心位置を設定\r\n   *\r\n   * @param x X軸の中心位置\r\n   * @param y Y軸の中心位置\r\n   *\r\n   * @note widthかheightを設定したあとでないと、拡大率が正しく取得できないためずれる。\r\n   */\r\n  public setCenterPosition(x: number, y: number) {\r\n    this.centerX(x);\r\n    this.centerY(y);\r\n  }\r\n\r\n  /**\r\n   * 上辺の位置を設定する\r\n   *\r\n   * @param y 上辺のY軸位置\r\n   */\r\n  public top(y: number): void {\r\n    this.setY(y);\r\n  }\r\n\r\n  /**\r\n   * 下辺の位置を設定する\r\n   *\r\n   * @param y 下辺のY軸位置\r\n   */\r\n  public bottom(y: number) {\r\n    const h: number = this._height * this.getScaleY();\r\n\r\n    this.translateY(y - h);\r\n  }\r\n\r\n  /**\r\n   * 左辺の位置を設定\r\n   *\r\n   * @param x 左辺のX軸位置\r\n   */\r\n  public left(x: number): void {\r\n    this.setX(x);\r\n  }\r\n\r\n  /**\r\n   * 右辺の位置を設定\r\n   *\r\n   * @param x 右辺のX軸位置\r\n   */\r\n  public right(x: number): void {\r\n    const w = this._width * this.getScaleX();\r\n\r\n    this.translateX(x - w);\r\n  }\r\n\r\n  /**\r\n   * X軸の中心位置を設定\r\n   *\r\n   * @param x X軸の中心位置\r\n   */\r\n  public centerX(x: number): void {\r\n    const w = this._width * this.getScaleX();\r\n\r\n    this.translateX(x - w / 2.0);\r\n  }\r\n\r\n  /**\r\n   * X軸の位置を設定\r\n   *\r\n   * @param x X軸の位置\r\n   */\r\n  public setX(x: number): void {\r\n    this.translateX(x);\r\n  }\r\n\r\n  /**\r\n   * Y軸の中心位置を設定\r\n   *\r\n   * @param y Y軸の中心位置\r\n   */\r\n  public centerY(y: number): void {\r\n    const h: number = this._height * this.getScaleY();\r\n\r\n    this.translateY(y - h / 2.0);\r\n  }\r\n\r\n  /**\r\n   * Y軸の位置を設定する\r\n   *\r\n   * @param y Y軸の位置\r\n   */\r\n  public setY(y: number): void {\r\n    this.translateY(y);\r\n  }\r\n\r\n  /**\r\n   * レイアウト情報から位置を設定\r\n   *\r\n   * @param layout レイアウト情報\r\n   */\r\n  public setupFromLayout(layout: csmMap<string, number>): void {\r\n    const keyWidth = 'width';\r\n    const keyHeight = 'height';\r\n    const keyX = 'x';\r\n    const keyY = 'y';\r\n    const keyCenterX = 'center_x';\r\n    const keyCenterY = 'center_y';\r\n    const keyTop = 'top';\r\n    const keyBottom = 'bottom';\r\n    const keyLeft = 'left';\r\n    const keyRight = 'right';\r\n\r\n    for (\r\n      const ite: iterator<string, number> = layout.begin();\r\n      ite.notEqual(layout.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      const key: string = ite.ptr().first;\r\n      const value: number = ite.ptr().second;\r\n\r\n      if (key == keyWidth) {\r\n        this.setWidth(value);\r\n      } else if (key == keyHeight) {\r\n        this.setHeight(value);\r\n      }\r\n    }\r\n\r\n    for (\r\n      const ite: iterator<string, number> = layout.begin();\r\n      ite.notEqual(layout.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      const key: string = ite.ptr().first;\r\n      const value: number = ite.ptr().second;\r\n\r\n      if (key == keyX) {\r\n        this.setX(value);\r\n      } else if (key == keyY) {\r\n        this.setY(value);\r\n      } else if (key == keyCenterX) {\r\n        this.centerX(value);\r\n      } else if (key == keyCenterY) {\r\n        this.centerY(value);\r\n      } else if (key == keyTop) {\r\n        this.top(value);\r\n      } else if (key == keyBottom) {\r\n        this.bottom(value);\r\n      } else if (key == keyLeft) {\r\n        this.left(value);\r\n      } else if (key == keyRight) {\r\n        this.right(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _width: number; // 横幅\r\n  private _height: number; // 縦幅\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmodelmatrix';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismModelMatrix = $.CubismModelMatrix;\r\n  export type CubismModelMatrix = $.CubismModelMatrix;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMath } from './cubismmath';\r\n\r\nconst FrameRate = 30;\r\nconst Epsilon = 0.01;\r\n\r\n/**\r\n * 顔の向きの制御機能\r\n *\r\n * 顔の向きの制御機能を提供するクラス。\r\n */\r\nexport class CubismTargetPoint {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._faceTargetX = 0.0;\r\n    this._faceTargetY = 0.0;\r\n    this._faceX = 0.0;\r\n    this._faceY = 0.0;\r\n    this._faceVX = 0.0;\r\n    this._faceVY = 0.0;\r\n    this._lastTimeSeconds = 0.0;\r\n    this._userTimeSeconds = 0.0;\r\n  }\r\n\r\n  /**\r\n   * 更新処理\r\n   */\r\n  public update(deltaTimeSeconds: number): void {\r\n    // デルタ時間を加算する\r\n    this._userTimeSeconds += deltaTimeSeconds;\r\n\r\n    // 首を中央から左右に振るときの平均的な速さは 秒速度。加速・減速を考慮して、その２倍を最高速度とする\r\n    // 顔の振り具合を、中央（0.0）から、左右は（+-1.0）とする\r\n    const faceParamMaxV: number = 40.0 / 10.0; // 7.5秒間に40分移動(5.3/sc)\r\n    const maxV: number = (faceParamMaxV * 1.0) / FrameRate; // 1frameあたりに変化できる速度の上限\r\n\r\n    if (this._lastTimeSeconds == 0.0) {\r\n      this._lastTimeSeconds = this._userTimeSeconds;\r\n      return;\r\n    }\r\n\r\n    const deltaTimeWeight: number =\r\n      (this._userTimeSeconds - this._lastTimeSeconds) * FrameRate;\r\n    this._lastTimeSeconds = this._userTimeSeconds;\r\n\r\n    // 最高速度になるまでの時間を\r\n    const timeToMaxSpeed = 0.15;\r\n    const frameToMaxSpeed: number = timeToMaxSpeed * FrameRate; // sec * frame/sec\r\n    const maxA: number = (deltaTimeWeight * maxV) / frameToMaxSpeed; // 1frameあたりの加速度\r\n\r\n    // 目指す向きは、（dx, dy）方向のベクトルとなる\r\n    const dx: number = this._faceTargetX - this._faceX;\r\n    const dy: number = this._faceTargetY - this._faceY;\r\n\r\n    if (CubismMath.abs(dx) <= Epsilon && CubismMath.abs(dy) <= Epsilon) {\r\n      return; // 変化なし\r\n    }\r\n\r\n    // 速度の最大よりも大きい場合は、速度を落とす\r\n    const d: number = CubismMath.sqrt(dx * dx + dy * dy);\r\n\r\n    // 進行方向の最大速度ベクトル\r\n    const vx: number = (maxV * dx) / d;\r\n    const vy: number = (maxV * dy) / d;\r\n\r\n    // 現在の速度から、新規速度への変化（加速度）を求める\r\n    let ax: number = vx - this._faceVX;\r\n    let ay: number = vy - this._faceVY;\r\n\r\n    const a: number = CubismMath.sqrt(ax * ax + ay * ay);\r\n\r\n    // 加速のとき\r\n    if (a < -maxA || a > maxA) {\r\n      ax *= maxA / a;\r\n      ay *= maxA / a;\r\n    }\r\n\r\n    // 加速度を元の速度に足して、新速度とする\r\n    this._faceVX += ax;\r\n    this._faceVY += ay;\r\n\r\n    // 目的の方向に近づいたとき、滑らかに減速するための処理\r\n    // 設定された加速度で止まる事の出来る距離と速度の関係から\r\n    // 現在とりうる最高速度を計算し、それ以上の時は速度を落とす\r\n    // ※本来、人間は筋力で力（加速度）を調整できるため、より自由度が高いが、簡単な処理で済ませている\r\n    {\r\n      // 加速度、速度、距離の関係式。\r\n      //            2  6           2               3\r\n      //      sqrt(a  t  + 16 a h t  - 8 a h) - a t\r\n      // v = --------------------------------------\r\n      //                    2\r\n      //                 4 t  - 2\r\n      // (t=1)\r\n      // \t時刻tは、あらかじめ加速度、速度を1/60(フレームレート、単位なし)で\r\n      // \t考えているので、t＝１として消してよい（※未検証）\r\n\r\n      const maxV: number =\r\n        0.5 *\r\n        (CubismMath.sqrt(maxA * maxA + 16.0 * maxA * d - 8.0 * maxA * d) -\r\n          maxA);\r\n      const curV: number = CubismMath.sqrt(\r\n        this._faceVX * this._faceVX + this._faceVY * this._faceVY\r\n      );\r\n\r\n      if (curV > maxV) {\r\n        // 現在の速度 > 最高速度のとき、最高速度まで減速\r\n        this._faceVX *= maxV / curV;\r\n        this._faceVY *= maxV / curV;\r\n      }\r\n    }\r\n\r\n    this._faceX += this._faceVX;\r\n    this._faceY += this._faceVY;\r\n  }\r\n\r\n  /**\r\n   * X軸の顔の向きの値を取得\r\n   *\r\n   * @return X軸の顔の向きの値（-1.0 ~ 1.0）\r\n   */\r\n  public getX(): number {\r\n    return this._faceX;\r\n  }\r\n\r\n  /**\r\n   * Y軸の顔の向きの値を取得\r\n   *\r\n   * @return Y軸の顔の向きの値（-1.0 ~ 1.0）\r\n   */\r\n  public getY(): number {\r\n    return this._faceY;\r\n  }\r\n\r\n  /**\r\n   * 顔の向きの目標値を設定\r\n   *\r\n   * @param x X軸の顔の向きの値（-1.0 ~ 1.0）\r\n   * @param y Y軸の顔の向きの値（-1.0 ~ 1.0）\r\n   */\r\n  public set(x: number, y: number): void {\r\n    this._faceTargetX = x;\r\n    this._faceTargetY = y;\r\n  }\r\n\r\n  private _faceTargetX: number; // 顔の向きのX目標値（この値に近づいていく）\r\n  private _faceTargetY: number; // 顔の向きのY目標値（この値に近づいていく）\r\n  private _faceX: number; // 顔の向きX（-1.0 ~ 1.0）\r\n  private _faceY: number; // 顔の向きY（-1.0 ~ 1.0）\r\n  private _faceVX: number; // 顔の向きの変化速度X\r\n  private _faceVY: number; // 顔の向きの変化速度Y\r\n  private _lastTimeSeconds: number; // 最後の実行時間[秒]\r\n  private _userTimeSeconds: number; // デルタ時間の積算値[秒]\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismtargetpoint';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismTargetPoint = $.CubismTargetPoint;\r\n  export type CubismTargetPoint = $.CubismTargetPoint;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 2次元ベクトル型\r\n *\r\n * 2次元ベクトル型の機能を提供する。\r\n */\r\nexport class CubismVector2 {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(public x?: number, public y?: number) {\r\n    this.x = x == undefined ? 0.0 : x;\r\n\r\n    this.y = y == undefined ? 0.0 : y;\r\n  }\r\n\r\n  /**\r\n   * ベクトルの加算\r\n   *\r\n   * @param vector2 加算するベクトル値\r\n   * @return 加算結果 ベクトル値\r\n   */\r\n  public add(vector2: CubismVector2): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n    ret.x = this.x + vector2.x;\r\n    ret.y = this.y + vector2.y;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * ベクトルの減算\r\n   *\r\n   * @param vector2 減算するベクトル値\r\n   * @return 減算結果 ベクトル値\r\n   */\r\n  public substract(vector2: CubismVector2): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n    ret.x = this.x - vector2.x;\r\n    ret.y = this.y - vector2.y;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * ベクトルの乗算\r\n   *\r\n   * @param vector2 乗算するベクトル値\r\n   * @return 乗算結果 ベクトル値\r\n   */\r\n  public multiply(vector2: CubismVector2): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n    ret.x = this.x * vector2.x;\r\n    ret.y = this.y * vector2.y;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * ベクトルの乗算(スカラー)\r\n   *\r\n   * @param scalar 乗算するスカラー値\r\n   * @return 乗算結果 ベクトル値\r\n   */\r\n  public multiplyByScaler(scalar: number): CubismVector2 {\r\n    return this.multiply(new CubismVector2(scalar, scalar));\r\n  }\r\n\r\n  /**\r\n   * ベクトルの除算\r\n   *\r\n   * @param vector2 除算するベクトル値\r\n   * @return 除算結果 ベクトル値\r\n   */\r\n  public division(vector2: CubismVector2): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n    ret.x = this.x / vector2.x;\r\n    ret.y = this.y / vector2.y;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * ベクトルの除算(スカラー)\r\n   *\r\n   * @param scalar 除算するスカラー値\r\n   * @return 除算結果 ベクトル値\r\n   */\r\n  public divisionByScalar(scalar: number): CubismVector2 {\r\n    return this.division(new CubismVector2(scalar, scalar));\r\n  }\r\n\r\n  /**\r\n   * ベクトルの長さを取得する\r\n   *\r\n   * @return ベクトルの長さ\r\n   */\r\n  public getLength(): number {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y);\r\n  }\r\n\r\n  /**\r\n   * ベクトルの距離の取得\r\n   *\r\n   * @param a 点\r\n   * @return ベクトルの距離\r\n   */\r\n  public getDistanceWith(a: CubismVector2): number {\r\n    return Math.sqrt(\r\n      (this.x - a.x) * (this.x - a.x) + (this.y - a.y) * (this.y - a.y)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * ドット積の計算\r\n   *\r\n   * @param a 値\r\n   * @return 結果\r\n   */\r\n  public dot(a: CubismVector2): number {\r\n    return this.x * a.x + this.y * a.y;\r\n  }\r\n\r\n  /**\r\n   * 正規化の適用\r\n   */\r\n  public normalize(): void {\r\n    const length: number = Math.pow(this.x * this.x + this.y * this.y, 0.5);\r\n\r\n    this.x = this.x / length;\r\n    this.y = this.y / length;\r\n  }\r\n\r\n  /**\r\n   * 等しさの確認（等しいか？）\r\n   *\r\n   * 値が等しいか？\r\n   *\r\n   * @param rhs 確認する値\r\n   * @return true 値は等しい\r\n   * @return false 値は等しくない\r\n   */\r\n  public isEqual(rhs: CubismVector2): boolean {\r\n    return this.x == rhs.x && this.y == rhs.y;\r\n  }\r\n\r\n  /**\r\n   * 等しさの確認（等しくないか？）\r\n   *\r\n   * 値が等しくないか？\r\n   *\r\n   * @param rhs 確認する値\r\n   * @return true 値は等しくない\r\n   * @return false 値は等しい\r\n   */\r\n  public isNotEqual(rhs: CubismVector2): boolean {\r\n    return !this.isEqual(rhs);\r\n  }\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismvector2';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismVector2 = $.CubismVector2;\r\n  export type CubismVector2 = $.CubismVector2;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMatrix44 } from './cubismmatrix44';\r\n\r\n/**\r\n * カメラの位置変更に使うと便利な4x4行列\r\n *\r\n * カメラの位置変更に使うと便利な4x4行列のクラス。\r\n */\r\nexport class CubismViewMatrix extends CubismMatrix44 {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._screenLeft = 0.0;\r\n    this._screenRight = 0.0;\r\n    this._screenTop = 0.0;\r\n    this._screenBottom = 0.0;\r\n    this._maxLeft = 0.0;\r\n    this._maxRight = 0.0;\r\n    this._maxTop = 0.0;\r\n    this._maxBottom = 0.0;\r\n    this._maxScale = 0.0;\r\n    this._minScale = 0.0;\r\n  }\r\n\r\n  /**\r\n   * 移動を調整\r\n   *\r\n   * @param x X軸の移動量\r\n   * @param y Y軸の移動量\r\n   */\r\n  public adjustTranslate(x: number, y: number): void {\r\n    if (this._tr[0] * this._maxLeft + (this._tr[12] + x) > this._screenLeft) {\r\n      x = this._screenLeft - this._tr[0] * this._maxLeft - this._tr[12];\r\n    }\r\n\r\n    if (this._tr[0] * this._maxRight + (this._tr[12] + x) < this._screenRight) {\r\n      x = this._screenRight - this._tr[0] * this._maxRight - this._tr[12];\r\n    }\r\n\r\n    if (this._tr[5] * this._maxTop + (this._tr[13] + y) < this._screenTop) {\r\n      y = this._screenTop - this._tr[5] * this._maxTop - this._tr[13];\r\n    }\r\n\r\n    if (\r\n      this._tr[5] * this._maxBottom + (this._tr[13] + y) >\r\n      this._screenBottom\r\n    ) {\r\n      y = this._screenBottom - this._tr[5] * this._maxBottom - this._tr[13];\r\n    }\r\n\r\n    const tr1: Float32Array = new Float32Array([\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      x,\r\n      y,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * 拡大率を調整\r\n   *\r\n   * @param cx 拡大を行うX軸の中心位置\r\n   * @param cy 拡大を行うY軸の中心位置\r\n   * @param scale 拡大率\r\n   */\r\n  public adjustScale(cx: number, cy: number, scale: number): void {\r\n    const maxScale: number = this.getMaxScale();\r\n    const minScale: number = this.getMinScale();\r\n\r\n    const targetScale = scale * this._tr[0];\r\n\r\n    if (targetScale < minScale) {\r\n      if (this._tr[0] > 0.0) {\r\n        scale = minScale / this._tr[0];\r\n      }\r\n    } else if (targetScale > maxScale) {\r\n      if (this._tr[0] > 0.0) {\r\n        scale = maxScale / this._tr[0];\r\n      }\r\n    }\r\n\r\n    const tr1: Float32Array = new Float32Array([\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      cx,\r\n      cy,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    const tr2: Float32Array = new Float32Array([\r\n      scale,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      scale,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    const tr3: Float32Array = new Float32Array([\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      -cx,\r\n      -cy,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr3, this._tr, this._tr);\r\n    CubismMatrix44.multiply(tr2, this._tr, this._tr);\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座養生の範囲の設定\r\n   *\r\n   * @param left      左辺のX軸の位置\r\n   * @param right     右辺のX軸の位置\r\n   * @param bottom    下辺のY軸の位置\r\n   * @param top       上辺のY軸の位置\r\n   */\r\n  public setScreenRect(\r\n    left: number,\r\n    right: number,\r\n    bottom: number,\r\n    top: number\r\n  ): void {\r\n    this._screenLeft = left;\r\n    this._screenRight = right;\r\n    this._screenBottom = bottom;\r\n    this._screenTop = top;\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座標上の移動可能範囲の設定\r\n   * @param left      左辺のX軸の位置\r\n   * @param right     右辺のX軸の位置\r\n   * @param bottom    下辺のY軸の位置\r\n   * @param top       上辺のY軸の位置\r\n   */\r\n  public setMaxScreenRect(\r\n    left: number,\r\n    right: number,\r\n    bottom: number,\r\n    top: number\r\n  ): void {\r\n    this._maxLeft = left;\r\n    this._maxRight = right;\r\n    this._maxTop = top;\r\n    this._maxBottom = bottom;\r\n  }\r\n\r\n  /**\r\n   * 最大拡大率の設定\r\n   * @param maxScale 最大拡大率\r\n   */\r\n  public setMaxScale(maxScale: number): void {\r\n    this._maxScale = maxScale;\r\n  }\r\n\r\n  /**\r\n   * 最小拡大率の設定\r\n   * @param minScale 最小拡大率\r\n   */\r\n  public setMinScale(minScale: number): void {\r\n    this._minScale = minScale;\r\n  }\r\n\r\n  /**\r\n   * 最大拡大率の取得\r\n   * @return 最大拡大率\r\n   */\r\n  public getMaxScale(): number {\r\n    return this._maxScale;\r\n  }\r\n\r\n  /**\r\n   * 最小拡大率の取得\r\n   * @return 最小拡大率\r\n   */\r\n  public getMinScale(): number {\r\n    return this._minScale;\r\n  }\r\n\r\n  /**\r\n   * 拡大率が最大になっているかを確認する\r\n   *\r\n   * @return true 拡大率は最大\r\n   * @return false 拡大率は最大ではない\r\n   */\r\n  public isMaxScale(): boolean {\r\n    return this.getScaleX() >= this._maxScale;\r\n  }\r\n\r\n  /**\r\n   * 拡大率が最小になっているかを確認する\r\n   *\r\n   * @return true 拡大率は最小\r\n   * @return false 拡大率は最小ではない\r\n   */\r\n  public isMinScale(): boolean {\r\n    return this.getScaleX() <= this._minScale;\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座標の左辺のＸ軸位置を取得する\r\n   * @return デバイスに対応する論理座標の左辺のX軸位置\r\n   */\r\n  public getScreenLeft(): number {\r\n    return this._screenLeft;\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座標の右辺のＸ軸位置を取得する\r\n   * @return デバイスに対応する論理座標の右辺のX軸位置\r\n   */\r\n  public getScreenRight(): number {\r\n    return this._screenRight;\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座標の下辺のY軸位置を取得する\r\n   * @return デバイスに対応する論理座標の下辺のY軸位置\r\n   */\r\n  public getScreenBottom(): number {\r\n    return this._screenBottom;\r\n  }\r\n\r\n  /**\r\n   * デバイスに対応する論理座標の上辺のY軸位置を取得する\r\n   * @return デバイスに対応する論理座標の上辺のY軸位置\r\n   */\r\n  public getScreenTop(): number {\r\n    return this._screenTop;\r\n  }\r\n\r\n  /**\r\n   * 左辺のX軸位置の最大値の取得\r\n   * @return 左辺のX軸位置の最大値\r\n   */\r\n  public getMaxLeft(): number {\r\n    return this._maxLeft;\r\n  }\r\n\r\n  /**\r\n   * 右辺のX軸位置の最大値の取得\r\n   * @return 右辺のX軸位置の最大値\r\n   */\r\n  public getMaxRight(): number {\r\n    return this._maxRight;\r\n  }\r\n\r\n  /**\r\n   * 下辺のY軸位置の最大値の取得\r\n   * @return 下辺のY軸位置の最大値\r\n   */\r\n  public getMaxBottom(): number {\r\n    return this._maxBottom;\r\n  }\r\n\r\n  /**\r\n   * 上辺のY軸位置の最大値の取得\r\n   * @return 上辺のY軸位置の最大値\r\n   */\r\n  public getMaxTop(): number {\r\n    return this._maxTop;\r\n  }\r\n\r\n  private _screenLeft: number; // デバイスに対応する論理座標上の範囲（左辺X軸位置）\r\n  private _screenRight: number; // デバイスに対応する論理座標上の範囲（右辺X軸位置）\r\n  private _screenTop: number; // デバイスに対応する論理座標上の範囲（上辺Y軸位置）\r\n  private _screenBottom: number; // デバイスに対応する論理座標上の範囲（下辺Y軸位置）\r\n  private _maxLeft: number; // 論理座標上の移動可能範囲（左辺X軸位置）\r\n  private _maxRight: number; // 論理座標上の移動可能範囲（右辺X軸位置）\r\n  private _maxTop: number; // 論理座標上の移動可能範囲（上辺Y軸位置）\r\n  private _maxBottom: number; // 論理座標上の移動可能範囲（下辺Y軸位置）\r\n  private _maxScale: number; // 拡大率の最大値\r\n  private _minScale: number; // 拡大率の最小値\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismviewmatrix';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismViewMatrix = $.CubismViewMatrix;\r\n  export type CubismViewMatrix = $.CubismViewMatrix;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CSM_ASSERT } from '../utils/cubismdebug';\r\nimport { CubismModel } from './cubismmodel';\r\n\r\n/**\r\n * Mocデータの管理\r\n *\r\n * Mocデータの管理を行うクラス。\r\n */\r\nexport class CubismMoc {\r\n  /**\r\n   * Mocデータの作成\r\n   */\r\n  public static create(mocBytes: ArrayBuffer): CubismMoc {\r\n    let cubismMoc: CubismMoc = null;\r\n    const moc: Live2DCubismCore.Moc =\r\n      Live2DCubismCore.Moc.fromArrayBuffer(mocBytes);\r\n\r\n    if (moc) {\r\n      cubismMoc = new CubismMoc(moc);\r\n      cubismMoc._mocVersion = Live2DCubismCore.Version.csmGetMocVersion(\r\n        moc,\r\n        mocBytes\r\n      );\r\n    }\r\n\r\n    return cubismMoc;\r\n  }\r\n\r\n  /**\r\n   * Mocデータを削除\r\n   *\r\n   * Mocデータを削除する\r\n   */\r\n  public static delete(moc: CubismMoc): void {\r\n    moc._moc._release();\r\n    moc._moc = null;\r\n    moc = null;\r\n  }\r\n\r\n  /**\r\n   * モデルを作成する\r\n   *\r\n   * @return Mocデータから作成されたモデル\r\n   */\r\n  createModel(): CubismModel {\r\n    let cubismModel: CubismModel = null;\r\n\r\n    const model: Live2DCubismCore.Model = Live2DCubismCore.Model.fromMoc(\r\n      this._moc\r\n    );\r\n\r\n    if (model) {\r\n      cubismModel = new CubismModel(model);\r\n      cubismModel.initialize();\r\n\r\n      ++this._modelCount;\r\n    }\r\n\r\n    return cubismModel;\r\n  }\r\n\r\n  /**\r\n   * モデルを削除する\r\n   */\r\n  deleteModel(model: CubismModel): void {\r\n    if (model != null) {\r\n      model.release();\r\n      model = null;\r\n      --this._modelCount;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  private constructor(moc: Live2DCubismCore.Moc) {\r\n    this._moc = moc;\r\n    this._modelCount = 0;\r\n    this._mocVersion = 0;\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    CSM_ASSERT(this._modelCount == 0);\r\n\r\n    this._moc._release();\r\n    this._moc = null;\r\n  }\r\n\r\n  /**\r\n   * 最新の.moc3 Versionを取得\r\n   */\r\n  public getLatestMocVersion(): number {\r\n    return Live2DCubismCore.Version.csmGetLatestMocVersion();\r\n  }\r\n\r\n  /**\r\n   * 読み込んだモデルの.moc3 Versionを取得\r\n   */\r\n  public getMocVersion(): number {\r\n    return this._mocVersion;\r\n  }\r\n\r\n  _moc: Live2DCubismCore.Moc; // Mocデータ\r\n  _modelCount: number; // Mocデータから作られたモデルの個数\r\n  _mocVersion: number; // 読み込んだモデルの.moc3 Version\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmoc';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMoc = $.CubismMoc;\r\n  export type CubismMoc = $.CubismMoc;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport {\r\n  CubismBlendMode,\r\n  CubismTextureColor,\r\n} from '../rendering/cubismrenderer';\r\nimport { csmMap } from '../type/csmmap';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CSM_ASSERT } from '../utils/cubismdebug';\r\n\r\n/**\r\n * SDK側から与えられたDrawableの乗算色・スクリーン色上書きフラグと\r\n * その色を保持する構造体\r\n */\r\nexport class DrawableColorData {\r\n  isOverwritten = false;\r\n  Color: CubismTextureColor = new CubismTextureColor();\r\n}\r\n\r\n/**\r\n * テクスチャのカリング設定を管理するための構造体\r\n */\r\nexport class DrawableCullingData {\r\n  /**\r\n   * コンストラクタ\r\n   *\r\n   * @param isOverwritten\r\n   * @param isCulling\r\n   */\r\n  public constructor(isOverwritten = false, isCulling = false) {\r\n    isOverwritten = this.isOverwritten;\r\n    isCulling = this.isCulling;\r\n  }\r\n\r\n  public isOverwritten: boolean;\r\n  public isCulling: boolean;\r\n}\r\n\r\n/**\r\n * モデル\r\n *\r\n * Mocデータから生成されるモデルのクラス。\r\n */\r\nexport class CubismModel {\r\n  /**\r\n   * モデルのパラメータの更新\r\n   */\r\n  public update(): void {\r\n    // Update model\r\n    this._model.update();\r\n\r\n    this._model.drawables.resetDynamicFlags();\r\n  }\r\n\r\n  /**\r\n   * PixelsPerUnitを取得する\r\n   * @returns PixelsPerUnit\r\n   */\r\n  public getPixelsPerUnit(): number {\r\n    if (this._model == null) {\r\n      return 0.0;\r\n    }\r\n\r\n    return this._model.canvasinfo.PixelsPerUnit;\r\n  }\r\n\r\n  /**\r\n   * キャンバスの幅を取得する\r\n   */\r\n  public getCanvasWidth(): number {\r\n    if (this._model == null) {\r\n      return 0.0;\r\n    }\r\n\r\n    return (\r\n      this._model.canvasinfo.CanvasWidth / this._model.canvasinfo.PixelsPerUnit\r\n    );\r\n  }\r\n\r\n  /**\r\n   * キャンバスの高さを取得する\r\n   */\r\n  public getCanvasHeight(): number {\r\n    if (this._model == null) {\r\n      return 0.0;\r\n    }\r\n\r\n    return (\r\n      this._model.canvasinfo.CanvasHeight / this._model.canvasinfo.PixelsPerUnit\r\n    );\r\n  }\r\n\r\n  /**\r\n   * パラメータを保存する\r\n   */\r\n  public saveParameters(): void {\r\n    const parameterCount: number = this._model.parameters.count;\r\n    const savedParameterCount: number = this._savedParameters.getSize();\r\n\r\n    for (let i = 0; i < parameterCount; ++i) {\r\n      if (i < savedParameterCount) {\r\n        this._savedParameters.set(i, this._parameterValues[i]);\r\n      } else {\r\n        this._savedParameters.pushBack(this._parameterValues[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 乗算色を取得する\r\n   * @param index Drawablesのインデックス\r\n   * @returns 指定したdrawableの乗算色(RGBA)\r\n   */\r\n  public getMultiplyColor(index: number): CubismTextureColor {\r\n    // Drawableとモデル全体の乗算色上書きフラグがどちらもtrueな場合、モデル全体の上書きフラグが優先される\r\n    if (\r\n      this.getOverwriteFlagForModelMultiplyColors() ||\r\n      this.getOverwriteFlagForDrawableMultiplyColors(index)\r\n    ) {\r\n      return this._userMultiplyColors.at(index).Color;\r\n    }\r\n\r\n    const color = this.getDrawableMultiplyColor(index);\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * スクリーン色を取得する\r\n   * @param index Drawablesのインデックス\r\n   * @returns 指定したdrawableのスクリーン色(RGBA)\r\n   */\r\n  public getScreenColor(index: number): CubismTextureColor {\r\n    // Drawableとモデル全体のスクリーン色上書きフラグがどちらもtrueな場合、モデル全体の上書きフラグが優先される\r\n    if (\r\n      this.getOverwriteFlagForModelScreenColors() ||\r\n      this.getOverwriteFlagForDrawableScreenColors(index)\r\n    ) {\r\n      return this._userScreenColors.at(index).Color;\r\n    }\r\n\r\n    const color = this.getDrawableScreenColor(index);\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * 乗算色をセットする\r\n   * @param index Drawablesのインデックス\r\n   * @param color 設定する乗算色(CubismTextureColor)\r\n   */\r\n  public setMultiplyColorByTextureColor(\r\n    index: number,\r\n    color: CubismTextureColor\r\n  ) {\r\n    this.setMultiplyColorByRGBA(index, color.R, color.G, color.B, color.A);\r\n  }\r\n\r\n  /**\r\n   * 乗算色をセットする\r\n   * @param index Drawablesのインデックス\r\n   * @param r 設定する乗算色のR値\r\n   * @param g 設定する乗算色のG値\r\n   * @param b 設定する乗算色のB値\r\n   * @param a 設定する乗算色のA値\r\n   */\r\n  public setMultiplyColorByRGBA(\r\n    index: number,\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n    a = 1.0\r\n  ) {\r\n    this._userMultiplyColors.at(index).Color.R = r;\r\n    this._userMultiplyColors.at(index).Color.G = g;\r\n    this._userMultiplyColors.at(index).Color.B = b;\r\n    this._userMultiplyColors.at(index).Color.A = a;\r\n  }\r\n\r\n  /**\r\n   * スクリーン色をセットする\r\n   * @param index Drawablesのインデックス\r\n   * @param color 設定するスクリーン色(CubismTextureColor)\r\n   */\r\n  public setScreenColorByTextureColor(\r\n    index: number,\r\n    color: CubismTextureColor\r\n  ) {\r\n    this.setScreenColorByRGBA(index, color.R, color.G, color.B, color.A);\r\n  }\r\n\r\n  /**\r\n   * スクリーン色をセットする\r\n   * @param index Drawablesのインデックス\r\n   * @param r 設定するスクリーン色のR値\r\n   * @param g 設定するスクリーン色のG値\r\n   * @param b 設定するスクリーン色のB値\r\n   * @param a 設定するスクリーン色のA値\r\n   */\r\n  public setScreenColorByRGBA(\r\n    index: number,\r\n    r: number,\r\n    g: number,\r\n    b: number,\r\n    a = 1.0\r\n  ) {\r\n    this._userScreenColors.at(index).Color.R = r;\r\n    this._userScreenColors.at(index).Color.G = g;\r\n    this._userScreenColors.at(index).Color.B = b;\r\n    this._userScreenColors.at(index).Color.A = a;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したモデルの乗算色を上書きするか\r\n   * @returns true -> SDKからの情報を優先する\r\n   *          false -> モデルに設定されている色情報を使用\r\n   */\r\n  public getOverwriteFlagForModelMultiplyColors(): boolean {\r\n    return this._isOverwrittenModelMultiplyColors;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したモデルのスクリーン色を上書きするか\r\n   * @returns true -> SDKからの情報を優先する\r\n   *          false -> モデルに設定されている色情報を使用\r\n   */\r\n  public getOverwriteFlagForModelScreenColors(): boolean {\r\n    return this._isOverwrittenModelScreenColors;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したモデルの乗算色を上書きするかセットする\r\n   * @param value true -> SDKからの情報を優先する\r\n   *              false -> モデルに設定されている色情報を使用\r\n   */\r\n  public setOverwriteFlagForModelMultiplyColors(value: boolean) {\r\n    this._isOverwrittenModelMultiplyColors = value;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したモデルのスクリーン色を上書きするかセットする\r\n   * @param value true -> SDKからの情報を優先する\r\n   *              false -> モデルに設定されている色情報を使用\r\n   */\r\n  public setOverwriteFlagForModelScreenColors(value: boolean) {\r\n    this._isOverwrittenModelScreenColors = value;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したDrawableIndexの乗算色を上書きするか\r\n   * @returns true -> SDKからの情報を優先する\r\n   *          false -> モデルに設定されている色情報を使用\r\n   */\r\n  public getOverwriteFlagForDrawableMultiplyColors(\r\n    drawableindex: number\r\n  ): boolean {\r\n    return this._userMultiplyColors.at(drawableindex).isOverwritten;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したDrawableIndexのスクリーン色を上書きするか\r\n   * @returns true -> SDKからの情報を優先する\r\n   *          false -> モデルに設定されている色情報を使用\r\n   */\r\n  public getOverwriteFlagForDrawableScreenColors(\r\n    drawableindex: number\r\n  ): boolean {\r\n    return this._userMultiplyColors.at(drawableindex).isOverwritten;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したDrawableIndexの乗算色を上書きするかセットする\r\n   * @param value true -> SDKからの情報を優先する\r\n   *              false -> モデルに設定されている色情報を使用\r\n   */\r\n  public setOverwriteFlagForDrawableMultiplyColors(\r\n    drawableindex: number,\r\n    value: boolean\r\n  ) {\r\n    this._userMultiplyColors.at(drawableindex).isOverwritten = value;\r\n  }\r\n\r\n  /**\r\n   * SDKから指定したDrawableIndexのスクリーン色を上書きするかセットする\r\n   * @param value true -> SDKからの情報を優先する\r\n   *              false -> モデルに設定されている色情報を使用\r\n   */\r\n  public setOverwriteFlagForDrawableScreenColors(\r\n    drawableindex: number,\r\n    value: boolean\r\n  ) {\r\n    this._userScreenColors.at(drawableindex).isOverwritten = value;\r\n  }\r\n\r\n  /**\r\n   * Drawableのカリング情報を取得する。\r\n   *\r\n   * @param   drawableIndex   Drawableのインデックス\r\n   * @return  Drawableのカリング情報\r\n   */\r\n  public getDrawableCulling(drawableIndex: number): boolean {\r\n    if (\r\n      this.getOverwriteFlagForModelCullings() ||\r\n      this.getOverwriteFlagForDrawableCullings(drawableIndex)\r\n    ) {\r\n      return this._userCullings.at(drawableIndex).isCulling;\r\n    }\r\n\r\n    const constantFlags = this._model.drawables.constantFlags;\r\n    return !Live2DCubismCore.Utils.hasIsDoubleSidedBit(\r\n      constantFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableのカリング情報を設定する。\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @param isCulling カリング情報\r\n   */\r\n  public setDrawableCulling(drawableIndex: number, isCulling: boolean): void {\r\n    this._userCullings.at(drawableIndex).isCulling = isCulling;\r\n  }\r\n\r\n  /**\r\n   * SDKからモデル全体のカリング設定を上書きするか。\r\n   *\r\n   * @retval  true    ->  SDK上のカリング設定を使用\r\n   * @retval  false   ->  モデルのカリング設定を使用\r\n   */\r\n  public getOverwriteFlagForModelCullings(): boolean {\r\n    return this._isOverwrittenCullings;\r\n  }\r\n\r\n  /**\r\n   * SDKからモデル全体のカリング設定を上書きするかを設定する。\r\n   *\r\n   * @param isOverwrittenCullings SDK上のカリング設定を使うならtrue、モデルのカリング設定を使うならfalse\r\n   */\r\n  public setOverwriteFlagForModelCullings(\r\n    isOverwrittenCullings: boolean\r\n  ): void {\r\n    this._isOverwrittenCullings = isOverwrittenCullings;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @retval  true    ->  SDK上のカリング設定を使用\r\n   * @retval  false   ->  モデルのカリング設定を使用\r\n   */\r\n  public getOverwriteFlagForDrawableCullings(drawableIndex: number): boolean {\r\n    return this._userCullings.at(drawableIndex).isOverwritten;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @param isOverwrittenCullings SDK上のカリング設定を使うならtrue、モデルのカリング設定を使うならfalse\r\n   */\r\n  public setOverwriteFlagForDrawableCullings(\r\n    drawableIndex: number,\r\n    isOverwrittenCullings: boolean\r\n  ): void {\r\n    this._userCullings.at(drawableIndex).isOverwritten = isOverwrittenCullings;\r\n  }\r\n\r\n  /**\r\n   * モデルを取得\r\n   */\r\n  public getModel(): Live2DCubismCore.Model {\r\n    return this._model;\r\n  }\r\n\r\n  /**\r\n   * パーツのインデックスを取得\r\n   * @param partId パーツのID\r\n   * @return パーツのインデックス\r\n   */\r\n  public getPartIndex(partId: CubismIdHandle): number {\r\n    let partIndex: number;\r\n    const partCount: number = this._model.parts.count;\r\n\r\n    for (partIndex = 0; partIndex < partCount; ++partIndex) {\r\n      if (partId == this._partIds.at(partIndex)) {\r\n        return partIndex;\r\n      }\r\n    }\r\n\r\n    // モデルに存在していない場合、非存在パーツIDリスト内にあるかを検索し、そのインデックスを返す\r\n    if (this._notExistPartId.isExist(partId)) {\r\n      return this._notExistPartId.getValue(partId);\r\n    }\r\n\r\n    // 非存在パーツIDリストにない場合、新しく要素を追加する\r\n    partIndex = partCount + this._notExistPartId.getSize();\r\n    this._notExistPartId.setValue(partId, partIndex);\r\n    this._notExistPartOpacities.appendKey(partIndex);\r\n\r\n    return partIndex;\r\n  }\r\n\r\n  /**\r\n   * パーツの個数の取得\r\n   * @return パーツの個数\r\n   */\r\n  public getPartCount(): number {\r\n    const partCount: number = this._model.parts.count;\r\n    return partCount;\r\n  }\r\n\r\n  /**\r\n   * パーツの不透明度の設定(Index)\r\n   * @param partIndex パーツのインデックス\r\n   * @param opacity 不透明度\r\n   */\r\n  public setPartOpacityByIndex(partIndex: number, opacity: number): void {\r\n    if (this._notExistPartOpacities.isExist(partIndex)) {\r\n      this._notExistPartOpacities.setValue(partIndex, opacity);\r\n      return;\r\n    }\r\n\r\n    // インデックスの範囲内検知\r\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\r\n\r\n    this._partOpacities[partIndex] = opacity;\r\n  }\r\n\r\n  /**\r\n   * パーツの不透明度の設定(Id)\r\n   * @param partId パーツのID\r\n   * @param opacity パーツの不透明度\r\n   */\r\n  public setPartOpacityById(partId: CubismIdHandle, opacity: number): void {\r\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\r\n    const index: number = this.getPartIndex(partId);\r\n\r\n    if (index < 0) {\r\n      return; // パーツがないのでスキップ\r\n    }\r\n\r\n    this.setPartOpacityByIndex(index, opacity);\r\n  }\r\n\r\n  /**\r\n   * パーツの不透明度の取得(index)\r\n   * @param partIndex パーツのインデックス\r\n   * @return パーツの不透明度\r\n   */\r\n  public getPartOpacityByIndex(partIndex: number): number {\r\n    if (this._notExistPartOpacities.isExist(partIndex)) {\r\n      // モデルに存在しないパーツIDの場合、非存在パーツリストから不透明度を返す。\r\n      return this._notExistPartOpacities.getValue(partIndex);\r\n    }\r\n\r\n    // インデックスの範囲内検知\r\n    CSM_ASSERT(0 <= partIndex && partIndex < this.getPartCount());\r\n\r\n    return this._partOpacities[partIndex];\r\n  }\r\n\r\n  /**\r\n   * パーツの不透明度の取得(id)\r\n   * @param partId パーツのＩｄ\r\n   * @return パーツの不透明度\r\n   */\r\n  public getPartOpacityById(partId: CubismIdHandle): number {\r\n    // 高速化のためにPartIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\r\n    const index: number = this.getPartIndex(partId);\r\n\r\n    if (index < 0) {\r\n      return 0; // パーツが無いのでスキップ\r\n    }\r\n\r\n    return this.getPartOpacityByIndex(index);\r\n  }\r\n\r\n  /**\r\n   * パラメータのインデックスの取得\r\n   * @param パラメータID\r\n   * @return パラメータのインデックス\r\n   */\r\n  public getParameterIndex(parameterId: CubismIdHandle): number {\r\n    let parameterIndex: number;\r\n    const idCount: number = this._model.parameters.count;\r\n\r\n    for (parameterIndex = 0; parameterIndex < idCount; ++parameterIndex) {\r\n      if (parameterId != this._parameterIds.at(parameterIndex)) {\r\n        continue;\r\n      }\r\n\r\n      return parameterIndex;\r\n    }\r\n\r\n    // モデルに存在していない場合、非存在パラメータIDリスト内を検索し、そのインデックスを返す\r\n    if (this._notExistParameterId.isExist(parameterId)) {\r\n      return this._notExistParameterId.getValue(parameterId);\r\n    }\r\n\r\n    // 非存在パラメータIDリストにない場合新しく要素を追加する\r\n    parameterIndex =\r\n      this._model.parameters.count + this._notExistParameterId.getSize();\r\n\r\n    this._notExistParameterId.setValue(parameterId, parameterIndex);\r\n    this._notExistParameterValues.appendKey(parameterIndex);\r\n\r\n    return parameterIndex;\r\n  }\r\n\r\n  /**\r\n   * パラメータの個数の取得\r\n   * @return パラメータの個数\r\n   */\r\n  public getParameterCount(): number {\r\n    return this._model.parameters.count;\r\n  }\r\n\r\n  /**\r\n   * パラメータの種類の取得\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @return csmParameterType_Normal -> 通常のパラメータ\r\n   *          csmParameterType_BlendShape -> ブレンドシェイプパラメータ\r\n   */\r\n  public getParameterType(\r\n    parameterIndex: number\r\n  ): Live2DCubismCore.csmParameterType {\r\n    return this._model.parameters.types[parameterIndex];\r\n  }\r\n\r\n  /**\r\n   * パラメータの最大値の取得\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @return パラメータの最大値\r\n   */\r\n  public getParameterMaximumValue(parameterIndex: number): number {\r\n    return this._model.parameters.maximumValues[parameterIndex];\r\n  }\r\n\r\n  /**\r\n   * パラメータの最小値の取得\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @return パラメータの最小値\r\n   */\r\n  public getParameterMinimumValue(parameterIndex: number): number {\r\n    return this._model.parameters.minimumValues[parameterIndex];\r\n  }\r\n\r\n  /**\r\n   * パラメータのデフォルト値の取得\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @return パラメータのデフォルト値\r\n   */\r\n  public getParameterDefaultValue(parameterIndex: number): number {\r\n    return this._model.parameters.defaultValues[parameterIndex];\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の取得\r\n   * @param parameterIndex    パラメータのインデックス\r\n   * @return パラメータの値\r\n   */\r\n  public getParameterValueByIndex(parameterIndex: number): number {\r\n    if (this._notExistParameterValues.isExist(parameterIndex)) {\r\n      return this._notExistParameterValues.getValue(parameterIndex);\r\n    }\r\n\r\n    // インデックスの範囲内検知\r\n    CSM_ASSERT(\r\n      0 <= parameterIndex && parameterIndex < this.getParameterCount()\r\n    );\r\n\r\n    return this._parameterValues[parameterIndex];\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の取得\r\n   * @param parameterId    パラメータのID\r\n   * @return パラメータの値\r\n   */\r\n  public getParameterValueById(parameterId: CubismIdHandle): number {\r\n    // 高速化のためにparameterIndexを取得できる機構になっているが、外部からの設定の時は呼び出し頻度が低いため不要\r\n    const parameterIndex: number = this.getParameterIndex(parameterId);\r\n    return this.getParameterValueByIndex(parameterIndex);\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の設定\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @param value パラメータの値\r\n   * @param weight 重み\r\n   */\r\n  public setParameterValueByIndex(\r\n    parameterIndex: number,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    if (this._notExistParameterValues.isExist(parameterIndex)) {\r\n      this._notExistParameterValues.setValue(\r\n        parameterIndex,\r\n        weight == 1\r\n          ? value\r\n          : this._notExistParameterValues.getValue(parameterIndex) *\r\n              (1 - weight) +\r\n              value * weight\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    // インデックスの範囲内検知\r\n    CSM_ASSERT(\r\n      0 <= parameterIndex && parameterIndex < this.getParameterCount()\r\n    );\r\n\r\n    if (this._model.parameters.maximumValues[parameterIndex] < value) {\r\n      value = this._model.parameters.maximumValues[parameterIndex];\r\n    }\r\n    if (this._model.parameters.minimumValues[parameterIndex] > value) {\r\n      value = this._model.parameters.minimumValues[parameterIndex];\r\n    }\r\n\r\n    this._parameterValues[parameterIndex] =\r\n      weight == 1\r\n        ? value\r\n        : (this._parameterValues[parameterIndex] =\r\n            this._parameterValues[parameterIndex] * (1 - weight) +\r\n            value * weight);\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の設定\r\n   * @param parameterId パラメータのID\r\n   * @param value パラメータの値\r\n   * @param weight 重み\r\n   */\r\n  public setParameterValueById(\r\n    parameterId: CubismIdHandle,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    const index: number = this.getParameterIndex(parameterId);\r\n    this.setParameterValueByIndex(index, value, weight);\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の加算(index)\r\n   * @param parameterIndex パラメータインデックス\r\n   * @param value 加算する値\r\n   * @param weight 重み\r\n   */\r\n  public addParameterValueByIndex(\r\n    parameterIndex: number,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    this.setParameterValueByIndex(\r\n      parameterIndex,\r\n      this.getParameterValueByIndex(parameterIndex) + value * weight\r\n    );\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の加算(id)\r\n   * @param parameterId パラメータＩＤ\r\n   * @param value 加算する値\r\n   * @param weight 重み\r\n   */\r\n  public addParameterValueById(\r\n    parameterId: any,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    const index: number = this.getParameterIndex(parameterId);\r\n    this.addParameterValueByIndex(index, value, weight);\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の乗算\r\n   * @param parameterId パラメータのID\r\n   * @param value 乗算する値\r\n   * @param weight 重み\r\n   */\r\n  public multiplyParameterValueById(\r\n    parameterId: CubismIdHandle,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    const index: number = this.getParameterIndex(parameterId);\r\n    this.multiplyParameterValueByIndex(index, value, weight);\r\n  }\r\n\r\n  /**\r\n   * パラメータの値の乗算\r\n   * @param parameterIndex パラメータのインデックス\r\n   * @param value 乗算する値\r\n   * @param weight 重み\r\n   */\r\n  public multiplyParameterValueByIndex(\r\n    parameterIndex: number,\r\n    value: number,\r\n    weight = 1.0\r\n  ): void {\r\n    this.setParameterValueByIndex(\r\n      parameterIndex,\r\n      this.getParameterValueByIndex(parameterIndex) *\r\n        (1.0 + (value - 1.0) * weight)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableのインデックスの取得\r\n   * @param drawableId DrawableのID\r\n   * @return Drawableのインデックス\r\n   */\r\n  public getDrawableIndex(drawableId: CubismIdHandle): number {\r\n    const drawableCount = this._model.drawables.count;\r\n\r\n    for (\r\n      let drawableIndex = 0;\r\n      drawableIndex < drawableCount;\r\n      ++drawableIndex\r\n    ) {\r\n      if (this._drawableIds.at(drawableIndex) == drawableId) {\r\n        return drawableIndex;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Drawableの個数の取得\r\n   * @return drawableの個数\r\n   */\r\n  public getDrawableCount(): number {\r\n    const drawableCount = this._model.drawables.count;\r\n    return drawableCount;\r\n  }\r\n\r\n  /**\r\n   * DrawableのIDを取得する\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableのID\r\n   */\r\n  public getDrawableId(drawableIndex: number): CubismIdHandle {\r\n    const parameterIds: string[] = this._model.drawables.ids;\r\n    return CubismFramework.getIdManager().getId(parameterIds[drawableIndex]);\r\n  }\r\n\r\n  /**\r\n   * Drawableの描画順リストの取得\r\n   * @return Drawableの描画順リスト\r\n   */\r\n  public getDrawableRenderOrders(): Int32Array {\r\n    const renderOrders: Int32Array = this._model.drawables.renderOrders;\r\n    return renderOrders;\r\n  }\r\n\r\n  /**\r\n   * @deprecated\r\n   * 関数名が誤っていたため、代替となる getDrawableTextureIndex を追加し、この関数は非推奨となりました。\r\n   *\r\n   * Drawableのテクスチャインデックスリストの取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableのテクスチャインデックスリスト\r\n   */\r\n  public getDrawableTextureIndices(drawableIndex: number): number {\r\n    return this.getDrawableTextureIndex(drawableIndex);\r\n  }\r\n\r\n  /**\r\n   * Drawableのテクスチャインデックスの取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableのテクスチャインデックス\r\n   */\r\n  public getDrawableTextureIndex(drawableIndex: number): number {\r\n    const textureIndices: Int32Array = this._model.drawables.textureIndices;\r\n    return textureIndices[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * DrawableのVertexPositionsの変化情報の取得\r\n   *\r\n   * 直近のCubismModel.update関数でDrawableの頂点情報が変化したかを取得する。\r\n   *\r\n   * @param   drawableIndex   Drawableのインデックス\r\n   * @retval  true    Drawableの頂点情報が直近のCubismModel.update関数で変化した\r\n   * @retval  false   Drawableの頂点情報が直近のCubismModel.update関数で変化していない\r\n   */\r\n  public getDrawableDynamicFlagVertexPositionsDidChange(\r\n    drawableIndex: number\r\n  ): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(\r\n      dynamicFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点インデックスの個数の取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの頂点インデックスの個数\r\n   */\r\n  public getDrawableVertexIndexCount(drawableIndex: number): number {\r\n    const indexCounts: Int32Array = this._model.drawables.indexCounts;\r\n    return indexCounts[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点の個数の取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの頂点の個数\r\n   */\r\n  public getDrawableVertexCount(drawableIndex: number): number {\r\n    const vertexCounts = this._model.drawables.vertexCounts;\r\n    return vertexCounts[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点リストの取得\r\n   * @param drawableIndex drawableのインデックス\r\n   * @return drawableの頂点リスト\r\n   */\r\n  public getDrawableVertices(drawableIndex: number): Float32Array {\r\n    return this.getDrawableVertexPositions(drawableIndex);\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点インデックスリストの取得\r\n   * @param drarableIndex Drawableのインデックス\r\n   * @return drawableの頂点インデックスリスト\r\n   */\r\n  public getDrawableVertexIndices(drawableIndex: number): Uint16Array {\r\n    const indicesArray: Uint16Array[] = this._model.drawables.indices;\r\n    return indicesArray[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点リストの取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの頂点リスト\r\n   */\r\n  public getDrawableVertexPositions(drawableIndex: number): Float32Array {\r\n    const verticesArray: Float32Array[] = this._model.drawables.vertexPositions;\r\n    return verticesArray[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの頂点のUVリストの取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの頂点UVリスト\r\n   */\r\n  public getDrawableVertexUvs(drawableIndex: number): Float32Array {\r\n    const uvsArray: Float32Array[] = this._model.drawables.vertexUvs;\r\n    return uvsArray[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの不透明度の取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの不透明度\r\n   */\r\n  public getDrawableOpacity(drawableIndex: number): number {\r\n    const opacities: Float32Array = this._model.drawables.opacities;\r\n    return opacities[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableの乗算色の取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの乗算色(RGBA)\r\n   * スクリーン色はRGBAで取得されるが、Aは必ず0\r\n   */\r\n  public getDrawableMultiplyColor(drawableIndex: number): CubismTextureColor {\r\n    const multiplyColors: Float32Array = this._model.drawables.multiplyColors;\r\n    const index = drawableIndex * 4;\r\n    const multiplyColor: CubismTextureColor = new CubismTextureColor();\r\n    multiplyColor.R = multiplyColors[index];\r\n    multiplyColor.G = multiplyColors[index + 1];\r\n    multiplyColor.B = multiplyColors[index + 2];\r\n    multiplyColor.A = multiplyColors[index + 3];\r\n    return multiplyColor;\r\n  }\r\n\r\n  /**\r\n   * Drawableのスクリーン色の取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableのスクリーン色(RGBA)\r\n   * スクリーン色はRGBAで取得されるが、Aは必ず0\r\n   */\r\n  public getDrawableScreenColor(drawableIndex: number): CubismTextureColor {\r\n    const screenColors: Float32Array = this._model.drawables.screenColors;\r\n    const index = drawableIndex * 4;\r\n    const screenColor: CubismTextureColor = new CubismTextureColor();\r\n    screenColor.R = screenColors[index];\r\n    screenColor.G = screenColors[index + 1];\r\n    screenColor.B = screenColors[index + 2];\r\n    screenColor.A = screenColors[index + 3];\r\n    return screenColor;\r\n  }\r\n\r\n  /**\r\n   * Drawableの親パーツのインデックスの取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableの親パーツのインデックス\r\n   */\r\n  public getDrawableParentPartIndex(drawableIndex: number): number {\r\n    return this._model.drawables.parentPartIndices[drawableIndex];\r\n  }\r\n\r\n  /**\r\n   * Drawableのブレンドモードを取得\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return drawableのブレンドモード\r\n   */\r\n  public getDrawableBlendMode(drawableIndex: number): CubismBlendMode {\r\n    const constantFlags = this._model.drawables.constantFlags;\r\n\r\n    return Live2DCubismCore.Utils.hasBlendAdditiveBit(\r\n      constantFlags[drawableIndex]\r\n    )\r\n      ? CubismBlendMode.CubismBlendMode_Additive\r\n      : Live2DCubismCore.Utils.hasBlendMultiplicativeBit(\r\n          constantFlags[drawableIndex]\r\n        )\r\n      ? CubismBlendMode.CubismBlendMode_Multiplicative\r\n      : CubismBlendMode.CubismBlendMode_Normal;\r\n  }\r\n\r\n  /**\r\n   * Drawableのマスクの反転使用の取得\r\n   *\r\n   * Drawableのマスク使用時の反転設定を取得する。\r\n   * マスクを使用しない場合は無視される。\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return Drawableの反転設定\r\n   */\r\n  public getDrawableInvertedMaskBit(drawableIndex: number): boolean {\r\n    const constantFlags: Uint8Array = this._model.drawables.constantFlags;\r\n\r\n    return Live2DCubismCore.Utils.hasIsInvertedMaskBit(\r\n      constantFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableのクリッピングマスクリストの取得\r\n   * @return Drawableのクリッピングマスクリスト\r\n   */\r\n  public getDrawableMasks(): Int32Array[] {\r\n    const masks: Int32Array[] = this._model.drawables.masks;\r\n    return masks;\r\n  }\r\n\r\n  /**\r\n   * Drawableのクリッピングマスクの個数リストの取得\r\n   * @return Drawableのクリッピングマスクの個数リスト\r\n   */\r\n  public getDrawableMaskCounts(): Int32Array {\r\n    const maskCounts: Int32Array = this._model.drawables.maskCounts;\r\n    return maskCounts;\r\n  }\r\n\r\n  /**\r\n   * クリッピングマスクの使用状態\r\n   *\r\n   * @return true クリッピングマスクを使用している\r\n   * @return false クリッピングマスクを使用していない\r\n   */\r\n  public isUsingMasking(): boolean {\r\n    for (let d = 0; d < this._model.drawables.count; ++d) {\r\n      if (this._model.drawables.maskCounts[d] <= 0) {\r\n        continue;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Drawableの表示情報を取得する\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return true Drawableが表示\r\n   * @return false Drawableが非表示\r\n   */\r\n  public getDrawableDynamicFlagIsVisible(drawableIndex: number): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasIsVisibleBit(dynamicFlags[drawableIndex]);\r\n  }\r\n\r\n  /**\r\n   * DrawableのDrawOrderの変化情報の取得\r\n   *\r\n   * 直近のCubismModel.update関数でdrawableのdrawOrderが変化したかを取得する。\r\n   * drawOrderはartMesh上で指定する0から1000の情報\r\n   * @param drawableIndex drawableのインデックス\r\n   * @return true drawableの不透明度が直近のCubismModel.update関数で変化した\r\n   * @return false drawableの不透明度が直近のCubismModel.update関数で変化している\r\n   */\r\n  public getDrawableDynamicFlagVisibilityDidChange(\r\n    drawableIndex: number\r\n  ): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasVisibilityDidChangeBit(\r\n      dynamicFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableの不透明度の変化情報の取得\r\n   *\r\n   * 直近のCubismModel.update関数でdrawableの不透明度が変化したかを取得する。\r\n   *\r\n   * @param drawableIndex drawableのインデックス\r\n   * @return true Drawableの不透明度が直近のCubismModel.update関数で変化した\r\n   * @return false Drawableの不透明度が直近のCubismModel.update関数で変化してない\r\n   */\r\n  public getDrawableDynamicFlagOpacityDidChange(\r\n    drawableIndex: number\r\n  ): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasOpacityDidChangeBit(\r\n      dynamicFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableの描画順序の変化情報の取得\r\n   *\r\n   * 直近のCubismModel.update関数でDrawableの描画の順序が変化したかを取得する。\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return true Drawableの描画の順序が直近のCubismModel.update関数で変化した\r\n   * @return false Drawableの描画の順序が直近のCubismModel.update関数で変化してない\r\n   */\r\n  public getDrawableDynamicFlagRenderOrderDidChange(\r\n    drawableIndex: number\r\n  ): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(\r\n      dynamicFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Drawableの乗算色・スクリーン色の変化情報の取得\r\n   *\r\n   * 直近のCubismModel.update関数でDrawableの乗算色・スクリーン色が変化したかを取得する。\r\n   *\r\n   * @param drawableIndex Drawableのインデックス\r\n   * @return true Drawableの乗算色・スクリーン色が直近のCubismModel.update関数で変化した\r\n   * @return false Drawableの乗算色・スクリーン色が直近のCubismModel.update関数で変化してない\r\n   */\r\n  public getDrawableDynamicFlagBlendColorDidChange(\r\n    drawableIndex: number\r\n  ): boolean {\r\n    const dynamicFlags: Uint8Array = this._model.drawables.dynamicFlags;\r\n    return Live2DCubismCore.Utils.hasBlendColorDidChangeBit(\r\n      dynamicFlags[drawableIndex]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 保存されたパラメータの読み込み\r\n   */\r\n  public loadParameters(): void {\r\n    let parameterCount: number = this._model.parameters.count;\r\n    const savedParameterCount: number = this._savedParameters.getSize();\r\n\r\n    if (parameterCount > savedParameterCount) {\r\n      parameterCount = savedParameterCount;\r\n    }\r\n\r\n    for (let i = 0; i < parameterCount; ++i) {\r\n      this._parameterValues[i] = this._savedParameters.at(i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初期化する\r\n   */\r\n  public initialize(): void {\r\n    CSM_ASSERT(this._model);\r\n\r\n    this._parameterValues = this._model.parameters.values;\r\n    this._partOpacities = this._model.parts.opacities;\r\n    this._parameterMaximumValues = this._model.parameters.maximumValues;\r\n    this._parameterMinimumValues = this._model.parameters.minimumValues;\r\n\r\n    {\r\n      const parameterIds: string[] = this._model.parameters.ids;\r\n      const parameterCount: number = this._model.parameters.count;\r\n\r\n      this._parameterIds.prepareCapacity(parameterCount);\r\n      for (let i = 0; i < parameterCount; ++i) {\r\n        this._parameterIds.pushBack(\r\n          CubismFramework.getIdManager().getId(parameterIds[i])\r\n        );\r\n      }\r\n    }\r\n\r\n    {\r\n      const partIds: string[] = this._model.parts.ids;\r\n      const partCount: number = this._model.parts.count;\r\n\r\n      this._partIds.prepareCapacity(partCount);\r\n      for (let i = 0; i < partCount; ++i) {\r\n        this._partIds.pushBack(\r\n          CubismFramework.getIdManager().getId(partIds[i])\r\n        );\r\n      }\r\n    }\r\n\r\n    {\r\n      const drawableIds: string[] = this._model.drawables.ids;\r\n      const drawableCount: number = this._model.drawables.count;\r\n\r\n      this._userMultiplyColors = new csmVector<DrawableColorData>();\r\n      this._userMultiplyColors.updateSize(\r\n        drawableCount,\r\n        DrawableColorData,\r\n        true\r\n      );\r\n\r\n      this._userScreenColors = new csmVector<DrawableColorData>();\r\n      this._userScreenColors.updateSize(drawableCount, DrawableColorData, true);\r\n\r\n      // カリング設定\r\n      this._userCullings = new csmVector<DrawableCullingData>();\r\n      this._userCullings.updateSize(drawableCount, DrawableCullingData, true);\r\n      const userCulling: DrawableCullingData = new DrawableCullingData(\r\n        false,\r\n        false\r\n      );\r\n\r\n      this._drawableIds.prepareCapacity(drawableCount);\r\n      for (let i = 0; i < drawableCount; ++i) {\r\n        this._drawableIds.pushBack(\r\n          CubismFramework.getIdManager().getId(drawableIds[i])\r\n        );\r\n\r\n        // shaderに影響しない色で初期化\r\n        this.setMultiplyColorByRGBA(i, 1.0, 1.0, 1.0, 1.0);\r\n        this.setScreenColorByRGBA(i, 0.0, 0.0, 0.0, 1.0);\r\n\r\n        this._userCullings.pushBack(userCulling);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param model モデル\r\n   */\r\n  public constructor(model: Live2DCubismCore.Model) {\r\n    this._model = model;\r\n    this._parameterValues = null;\r\n    this._parameterMaximumValues = null;\r\n    this._parameterMinimumValues = null;\r\n    this._partOpacities = null;\r\n    this._savedParameters = new csmVector<number>();\r\n    this._parameterIds = new csmVector<CubismIdHandle>();\r\n    this._drawableIds = new csmVector<CubismIdHandle>();\r\n    this._partIds = new csmVector<CubismIdHandle>();\r\n    this._isOverwrittenModelMultiplyColors = false;\r\n    this._isOverwrittenModelScreenColors = false;\r\n    this._isOverwrittenCullings = false;\r\n    this._userMultiplyColors = null;\r\n    this._userScreenColors = null;\r\n\r\n    this._notExistPartId = new csmMap<CubismIdHandle, number>();\r\n    this._notExistParameterId = new csmMap<CubismIdHandle, number>();\r\n    this._notExistParameterValues = new csmMap<number, number>();\r\n    this._notExistPartOpacities = new csmMap<number, number>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    this._model.release();\r\n    this._model = null;\r\n  }\r\n\r\n  private _notExistPartOpacities: csmMap<number, number>; // 存在していないパーツの不透明度のリスト\r\n  private _notExistPartId: csmMap<CubismIdHandle, number>; // 存在していないパーツIDのリスト\r\n\r\n  private _notExistParameterValues: csmMap<number, number>; // 存在していないパラメータの値のリスト\r\n  private _notExistParameterId: csmMap<CubismIdHandle, number>; // 存在していないパラメータIDのリスト\r\n\r\n  private _savedParameters: csmVector<number>; // 保存されたパラメータ\r\n\r\n  private _isOverwrittenModelMultiplyColors: boolean; // SDK上でモデル全体の乗算色を上書きするか判定するフラグ\r\n  private _isOverwrittenModelScreenColors: boolean; // SDK上でモデル全体のスクリーン色を上書きするか判定するフラグ\r\n  private _userMultiplyColors: csmVector<DrawableColorData>; // Drawableごとに設定する乗算色と上書きフラグを管理するリスト\r\n  private _userScreenColors: csmVector<DrawableColorData>; // Drawableごとに設定するスクリーン色と上書きフラグを管理するリスト\r\n\r\n  private _model: Live2DCubismCore.Model; // モデル\r\n\r\n  private _parameterValues: Float32Array; // パラメータの値のリスト\r\n  private _parameterMaximumValues: Float32Array; // パラメータの最大値のリスト\r\n  private _parameterMinimumValues: Float32Array; // パラメータの最小値のリスト\r\n\r\n  private _partOpacities: Float32Array; // パーツの不透明度のリスト\r\n\r\n  private _parameterIds: csmVector<CubismIdHandle>;\r\n  private _partIds: csmVector<CubismIdHandle>;\r\n  private _drawableIds: csmVector<CubismIdHandle>;\r\n\r\n  private _isOverwrittenCullings: boolean; // モデルのカリング設定をすべて上書きするか？\r\n  private _userCullings: csmVector<DrawableCullingData>; // カリング設定の配列\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmodel';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismModel = $.CubismModel;\r\n  export type CubismModel = $.CubismModel;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismModelUserDataJson } from './cubismmodeluserdatajson';\r\n\r\nconst ArtMesh = 'ArtMesh';\r\n\r\n/**\r\n * ユーザーデータインターフェース\r\n *\r\n * Jsonから読み込んだユーザーデータを記録しておくための構造体\r\n */\r\nexport class CubismModelUserDataNode {\r\n  targetType: CubismIdHandle; // ユーザーデータターゲットタイプ\r\n  targetId: CubismIdHandle; // ユーザーデータターゲットのID\r\n  value: csmString; // ユーザーデータ\r\n}\r\n\r\n/**\r\n * ユーザデータの管理クラス\r\n *\r\n * ユーザデータをロード、管理、検索インターフェイス、解放までを行う。\r\n */\r\nexport class CubismModelUserData {\r\n  /**\r\n   * インスタンスの作成\r\n   *\r\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\r\n   * @param size      バッファのサイズ\r\n   * @return 作成されたインスタンス\r\n   */\r\n  public static create(buffer: ArrayBuffer, size: number): CubismModelUserData {\r\n    const ret: CubismModelUserData = new CubismModelUserData();\r\n\r\n    ret.parseUserData(buffer, size);\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * インスタンスを破棄する\r\n   *\r\n   * @param modelUserData 破棄するインスタンス\r\n   */\r\n  public static delete(modelUserData: CubismModelUserData): void {\r\n    if (modelUserData != null) {\r\n      modelUserData.release();\r\n      modelUserData = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ArtMeshのユーザーデータのリストの取得\r\n   *\r\n   * @return ユーザーデータリスト\r\n   */\r\n  public getArtMeshUserDatas(): csmVector<CubismModelUserDataNode> {\r\n    return this._artMeshUserDataNode;\r\n  }\r\n\r\n  /**\r\n   * userdata3.jsonのパース\r\n   *\r\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\r\n   * @param size      バッファのサイズ\r\n   */\r\n  public parseUserData(buffer: ArrayBuffer, size: number): void {\r\n    let json: CubismModelUserDataJson = new CubismModelUserDataJson(\r\n      buffer,\r\n      size\r\n    );\r\n\r\n    const typeOfArtMesh = CubismFramework.getIdManager().getId(ArtMesh);\r\n    const nodeCount: number = json.getUserDataCount();\r\n\r\n    for (let i = 0; i < nodeCount; i++) {\r\n      const addNode: CubismModelUserDataNode = new CubismModelUserDataNode();\r\n\r\n      addNode.targetId = json.getUserDataId(i);\r\n      addNode.targetType = CubismFramework.getIdManager().getId(\r\n        json.getUserDataTargetType(i)\r\n      );\r\n      addNode.value = new csmString(json.getUserDataValue(i));\r\n      this._userDataNodes.pushBack(addNode);\r\n\r\n      if (addNode.targetType == typeOfArtMesh) {\r\n        this._artMeshUserDataNode.pushBack(addNode);\r\n      }\r\n    }\r\n\r\n    json.release();\r\n    json = void 0;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._userDataNodes = new csmVector<CubismModelUserDataNode>();\r\n    this._artMeshUserDataNode = new csmVector<CubismModelUserDataNode>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   *\r\n   * ユーザーデータ構造体配列を解放する\r\n   */\r\n  public release(): void {\r\n    for (let i = 0; i < this._userDataNodes.getSize(); ++i) {\r\n      this._userDataNodes.set(i, null);\r\n    }\r\n\r\n    this._userDataNodes = null;\r\n  }\r\n\r\n  private _userDataNodes: csmVector<CubismModelUserDataNode>; // ユーザーデータ構造体配列\r\n  private _artMeshUserDataNode: csmVector<CubismModelUserDataNode>; // 閲覧リストの保持\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmodeluserdata';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismModelUserData = $.CubismModelUserData;\r\n  export type CubismModelUserData = $.CubismModelUserData;\r\n  export const CubismModelUserDataNode = $.CubismModelUserDataNode;\r\n  export type CubismModelUserDataNode = $.CubismModelUserDataNode;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { CubismJson } from '../utils/cubismjson';\r\n\r\nconst Meta = 'Meta';\r\nconst UserDataCount = 'UserDataCount';\r\nconst TotalUserDataSize = 'TotalUserDataSize';\r\nconst UserData = 'UserData';\r\nconst Target = 'Target';\r\nconst Id = 'Id';\r\nconst Value = 'Value';\r\n\r\nexport class CubismModelUserDataJson {\r\n  /**\r\n   * コンストラクタ\r\n   * @param buffer    userdata3.jsonが読み込まれているバッファ\r\n   * @param size      バッファのサイズ\r\n   */\r\n  public constructor(buffer: ArrayBuffer, size: number) {\r\n    this._json = CubismJson.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    CubismJson.delete(this._json);\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータ個数の取得\r\n   * @return ユーザーデータの個数\r\n   */\r\n  public getUserDataCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(UserDataCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータ総文字列数の取得\r\n   *\r\n   * @return ユーザーデータ総文字列数\r\n   */\r\n  public getTotalUserDataSize(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalUserDataSize)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータのタイプの取得\r\n   *\r\n   * @return ユーザーデータのタイプ\r\n   */\r\n  public getUserDataTargetType(i: number): string {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(UserData)\r\n      .getValueByIndex(i)\r\n      .getValueByString(Target)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータのターゲットIDの取得\r\n   *\r\n   * @param i インデックス\r\n   * @return ユーザーデータターゲットID\r\n   */\r\n  public getUserDataId(i: number): CubismIdHandle {\r\n    return CubismFramework.getIdManager().getId(\r\n      this._json\r\n        .getRoot()\r\n        .getValueByString(UserData)\r\n        .getValueByIndex(i)\r\n        .getValueByString(Id)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * ユーザーデータの文字列の取得\r\n   *\r\n   * @param i インデックス\r\n   * @return ユーザーデータ\r\n   */\r\n  public getUserDataValue(i: number): string {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(UserData)\r\n      .getValueByIndex(i)\r\n      .getValueByString(Value)\r\n      .getRawString();\r\n  }\r\n\r\n  private _json: CubismJson;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmodeluserdatajson';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismModelUserDataJson = $.CubismModelUserDataJson;\r\n  export type CubismModelUserDataJson = $.CubismModelUserDataJson;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismBreath } from '../effect/cubismbreath';\r\nimport { CubismEyeBlink } from '../effect/cubismeyeblink';\r\nimport { CubismPose } from '../effect/cubismpose';\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { Constant } from '../live2dcubismframework';\r\nimport { CubismModelMatrix } from '../math/cubismmodelmatrix';\r\nimport { CubismTargetPoint } from '../math/cubismtargetpoint';\r\nimport { ACubismMotion, FinishedMotionCallback } from '../motion/acubismmotion';\r\nimport { CubismExpressionMotion } from '../motion/cubismexpressionmotion';\r\nimport { CubismMotion } from '../motion/cubismmotion';\r\nimport { CubismMotionManager } from '../motion/cubismmotionmanager';\r\nimport { CubismMotionQueueManager } from '../motion/cubismmotionqueuemanager';\r\nimport { CubismPhysics } from '../physics/cubismphysics';\r\nimport { CubismRenderer_WebGL } from '../rendering/cubismrenderer_webgl';\r\nimport { csmString } from '../type/csmstring';\r\nimport { CubismLogError, CubismLogInfo } from '../utils/cubismdebug';\r\nimport { CubismMoc } from './cubismmoc';\r\nimport { CubismModel } from './cubismmodel';\r\nimport { CubismModelUserData } from './cubismmodeluserdata';\r\n\r\n/**\r\n * ユーザーが実際に使用するモデル\r\n *\r\n * ユーザーが実際に使用するモデルの基底クラス。これを継承してユーザーが実装する。\r\n */\r\nexport class CubismUserModel {\r\n  /**\r\n   * 初期化状態の取得\r\n   *\r\n   * 初期化されている状態か？\r\n   *\r\n   * @return true     初期化されている\r\n   * @return false    初期化されていない\r\n   */\r\n  public isInitialized(): boolean {\r\n    return this._initialized;\r\n  }\r\n\r\n  /**\r\n   * 初期化状態の設定\r\n   *\r\n   * 初期化状態を設定する。\r\n   *\r\n   * @param v 初期化状態\r\n   */\r\n  public setInitialized(v: boolean): void {\r\n    this._initialized = v;\r\n  }\r\n\r\n  /**\r\n   * 更新状態の取得\r\n   *\r\n   * 更新されている状態か？\r\n   *\r\n   * @return true     更新されている\r\n   * @return false    更新されていない\r\n   */\r\n  public isUpdating(): boolean {\r\n    return this._updating;\r\n  }\r\n\r\n  /**\r\n   * 更新状態の設定\r\n   *\r\n   * 更新状態を設定する\r\n   *\r\n   * @param v 更新状態\r\n   */\r\n  public setUpdating(v: boolean): void {\r\n    this._updating = v;\r\n  }\r\n\r\n  /**\r\n   * マウスドラッグ情報の設定\r\n   * @param ドラッグしているカーソルのX位置\r\n   * @param ドラッグしているカーソルのY位置\r\n   */\r\n  public setDragging(x: number, y: number): void {\r\n    this._dragManager.set(x, y);\r\n  }\r\n\r\n  /**\r\n   * 加速度の情報を設定する\r\n   * @param x X軸方向の加速度\r\n   * @param y Y軸方向の加速度\r\n   * @param z Z軸方向の加速度\r\n   */\r\n  public setAcceleration(x: number, y: number, z: number): void {\r\n    this._accelerationX = x;\r\n    this._accelerationY = y;\r\n    this._accelerationZ = z;\r\n  }\r\n\r\n  /**\r\n   * モデル行列を取得する\r\n   * @return モデル行列\r\n   */\r\n  public getModelMatrix(): CubismModelMatrix {\r\n    return this._modelMatrix;\r\n  }\r\n\r\n  /**\r\n   * 不透明度の設定\r\n   * @param a 不透明度\r\n   */\r\n  public setOpacity(a: number): void {\r\n    this._opacity = a;\r\n  }\r\n\r\n  /**\r\n   * 不透明度の取得\r\n   * @return 不透明度\r\n   */\r\n  public getOpacity(): number {\r\n    return this._opacity;\r\n  }\r\n\r\n  /**\r\n   * モデルデータを読み込む\r\n   *\r\n   * @param buffer    moc3ファイルが読み込まれているバッファ\r\n   */\r\n  public loadModel(buffer: ArrayBuffer) {\r\n    this._moc = CubismMoc.create(buffer);\r\n\r\n    if (this._moc == null) {\r\n      CubismLogError('Failed to CubismMoc.create().');\r\n      return;\r\n    }\r\n\r\n    this._model = this._moc.createModel();\r\n\r\n    if (this._model == null) {\r\n      CubismLogError('Failed to CreateModel().');\r\n      return;\r\n    }\r\n\r\n    this._model.saveParameters();\r\n    this._modelMatrix = new CubismModelMatrix(\r\n      this._model.getCanvasWidth(),\r\n      this._model.getCanvasHeight()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * モーションデータを読み込む\r\n   * @param buffer motion3.jsonファイルが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   * @param name モーションの名前\r\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\r\n   * @return モーションクラス\r\n   */\r\n  public loadMotion = (\r\n    buffer: ArrayBuffer,\r\n    size: number,\r\n    name: string,\r\n    onFinishedMotionHandler?: FinishedMotionCallback\r\n  ) => CubismMotion.create(buffer, size, onFinishedMotionHandler);\r\n\r\n  /**\r\n   * 表情データの読み込み\r\n   * @param buffer expファイルが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   * @param name 表情の名前\r\n   */\r\n  public loadExpression(\r\n    buffer: ArrayBuffer,\r\n    size: number,\r\n    name: string\r\n  ): ACubismMotion {\r\n    return CubismExpressionMotion.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * ポーズデータの読み込み\r\n   * @param buffer pose3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   */\r\n  public loadPose(buffer: ArrayBuffer, size: number): void {\r\n    this._pose = CubismPose.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * モデルに付属するユーザーデータを読み込む\r\n   * @param buffer userdata3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   */\r\n  public loadUserData(buffer: ArrayBuffer, size: number): void {\r\n    this._modelUserData = CubismModelUserData.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * 物理演算データの読み込み\r\n   * @param buffer  physics3.jsonが読み込まれているバッファ\r\n   * @param size    バッファのサイズ\r\n   */\r\n  public loadPhysics(buffer: ArrayBuffer, size: number): void {\r\n    this._physics = CubismPhysics.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * 当たり判定の取得\r\n   * @param drawableId 検証したいDrawableのID\r\n   * @param pointX X位置\r\n   * @param pointY Y位置\r\n   * @return true ヒットしている\r\n   * @return false ヒットしていない\r\n   */\r\n  public isHit(\r\n    drawableId: CubismIdHandle,\r\n    pointX: number,\r\n    pointY: number\r\n  ): boolean {\r\n    const drawIndex: number = this._model.getDrawableIndex(drawableId);\r\n\r\n    if (drawIndex < 0) {\r\n      return false; // 存在しない場合はfalse\r\n    }\r\n\r\n    const count: number = this._model.getDrawableVertexCount(drawIndex);\r\n    const vertices: Float32Array = this._model.getDrawableVertices(drawIndex);\r\n\r\n    let left: number = vertices[0];\r\n    let right: number = vertices[0];\r\n    let top: number = vertices[1];\r\n    let bottom: number = vertices[1];\r\n\r\n    for (let j = 1; j < count; ++j) {\r\n      const x = vertices[Constant.vertexOffset + j * Constant.vertexStep];\r\n      const y = vertices[Constant.vertexOffset + j * Constant.vertexStep + 1];\r\n\r\n      if (x < left) {\r\n        left = x; // Min x\r\n      }\r\n\r\n      if (x > right) {\r\n        right = x; // Max x\r\n      }\r\n\r\n      if (y < top) {\r\n        top = y; // Min y\r\n      }\r\n\r\n      if (y > bottom) {\r\n        bottom = y; // Max y\r\n      }\r\n    }\r\n\r\n    const tx: number = this._modelMatrix.invertTransformX(pointX);\r\n    const ty: number = this._modelMatrix.invertTransformY(pointY);\r\n\r\n    return left <= tx && tx <= right && top <= ty && ty <= bottom;\r\n  }\r\n\r\n  /**\r\n   * モデルの取得\r\n   * @return モデル\r\n   */\r\n  public getModel(): CubismModel {\r\n    return this._model;\r\n  }\r\n\r\n  /**\r\n   * レンダラの取得\r\n   * @return レンダラ\r\n   */\r\n  public getRenderer(): CubismRenderer_WebGL {\r\n    return this._renderer;\r\n  }\r\n\r\n  /**\r\n   * レンダラを作成して初期化を実行する\r\n   * @param maskBufferCount バッファの生成数\r\n   */\r\n  public createRenderer(maskBufferCount = 1): void {\r\n    if (this._renderer) {\r\n      this.deleteRenderer();\r\n    }\r\n\r\n    this._renderer = new CubismRenderer_WebGL();\r\n    this._renderer.initialize(this._model, maskBufferCount);\r\n  }\r\n\r\n  /**\r\n   * レンダラの解放\r\n   */\r\n  public deleteRenderer(): void {\r\n    if (this._renderer != null) {\r\n      this._renderer.release();\r\n      this._renderer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * イベント発火時の標準処理\r\n   *\r\n   * Eventが再生処理時にあった場合の処理をする。\r\n   * 継承で上書きすることを想定している。\r\n   * 上書きしない場合はログ出力をする。\r\n   *\r\n   * @param eventValue 発火したイベントの文字列データ\r\n   */\r\n  public motionEventFired(eventValue: csmString): void {\r\n    CubismLogInfo('{0}', eventValue.s);\r\n  }\r\n\r\n  /**\r\n   * イベント用のコールバック\r\n   *\r\n   * CubismMotionQueueManagerにイベント用に登録するためのCallback。\r\n   * CubismUserModelの継承先のEventFiredを呼ぶ。\r\n   *\r\n   * @param caller 発火したイベントを管理していたモーションマネージャー、比較用\r\n   * @param eventValue 発火したイベントの文字列データ\r\n   * @param customData CubismUserModelを継承したインスタンスを想定\r\n   */\r\n  public static cubismDefaultMotionEventCallback(\r\n    caller: CubismMotionQueueManager,\r\n    eventValue: csmString,\r\n    customData: CubismUserModel\r\n  ): void {\r\n    const model: CubismUserModel = customData;\r\n\r\n    if (model != null) {\r\n      model.motionEventFired(eventValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    // 各変数初期化\r\n    this._moc = null;\r\n    this._model = null;\r\n    this._motionManager = null;\r\n    this._expressionManager = null;\r\n    this._eyeBlink = null;\r\n    this._breath = null;\r\n    this._modelMatrix = null;\r\n    this._pose = null;\r\n    this._dragManager = null;\r\n    this._physics = null;\r\n    this._modelUserData = null;\r\n    this._initialized = false;\r\n    this._updating = false;\r\n    this._opacity = 1.0;\r\n    this._lipsync = true;\r\n    this._lastLipSyncValue = 0.0;\r\n    this._dragX = 0.0;\r\n    this._dragY = 0.0;\r\n    this._accelerationX = 0.0;\r\n    this._accelerationY = 0.0;\r\n    this._accelerationZ = 0.0;\r\n    this._debugMode = false;\r\n    this._renderer = null;\r\n\r\n    // モーションマネージャーを作成\r\n    this._motionManager = new CubismMotionManager();\r\n    this._motionManager.setEventCallback(\r\n      CubismUserModel.cubismDefaultMotionEventCallback,\r\n      this\r\n    );\r\n\r\n    // 表情マネージャーを作成\r\n    this._expressionManager = new CubismMotionManager();\r\n\r\n    // ドラッグによるアニメーション\r\n    this._dragManager = new CubismTargetPoint();\r\n  }\r\n\r\n  /**\r\n   * デストラクタに相当する処理\r\n   */\r\n  public release() {\r\n    if (this._motionManager != null) {\r\n      this._motionManager.release();\r\n      this._motionManager = null;\r\n    }\r\n\r\n    if (this._expressionManager != null) {\r\n      this._expressionManager.release();\r\n      this._expressionManager = null;\r\n    }\r\n\r\n    if (this._moc != null) {\r\n      this._moc.deleteModel(this._model);\r\n      this._moc.release();\r\n      this._moc = null;\r\n    }\r\n\r\n    this._modelMatrix = null;\r\n\r\n    CubismPose.delete(this._pose);\r\n    CubismEyeBlink.delete(this._eyeBlink);\r\n    CubismBreath.delete(this._breath);\r\n\r\n    this._dragManager = null;\r\n\r\n    CubismPhysics.delete(this._physics);\r\n    CubismModelUserData.delete(this._modelUserData);\r\n\r\n    this.deleteRenderer();\r\n  }\r\n\r\n  protected _moc: CubismMoc; // Mocデータ\r\n  protected _model: CubismModel; // Modelインスタンス\r\n\r\n  protected _motionManager: CubismMotionManager; // モーション管理\r\n  protected _expressionManager: CubismMotionManager; // 表情管理\r\n  protected _eyeBlink: CubismEyeBlink; // 自動まばたき\r\n  protected _breath: CubismBreath; // 呼吸\r\n  protected _modelMatrix: CubismModelMatrix; // モデル行列\r\n  protected _pose: CubismPose; // ポーズ管理\r\n  protected _dragManager: CubismTargetPoint; // マウスドラッグ\r\n  protected _physics: CubismPhysics; // 物理演算\r\n  protected _modelUserData: CubismModelUserData; // ユーザーデータ\r\n\r\n  protected _initialized: boolean; // 初期化されたかどうか\r\n  protected _updating: boolean; // 更新されたかどうか\r\n  protected _opacity: number; // 不透明度\r\n  protected _lipsync: boolean; // リップシンクするかどうか\r\n  protected _lastLipSyncValue: number; // 最後のリップシンクの制御地\r\n  protected _dragX: number; // マウスドラッグのX位置\r\n  protected _dragY: number; // マウスドラッグのY位置\r\n  protected _accelerationX: number; // X軸方向の加速度\r\n  protected _accelerationY: number; // Y軸方向の加速度\r\n  protected _accelerationZ: number; // Z軸方向の加速度\r\n  protected _debugMode: boolean; // デバッグモードかどうか\r\n\r\n  private _renderer: CubismRenderer_WebGL; // レンダラ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismusermodel';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismUserModel = $.CubismUserModel;\r\n  export type CubismUserModel = $.CubismUserModel;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMath } from '../math/cubismmath';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CSM_ASSERT } from '../utils/cubismdebug';\r\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\r\n\r\n/** モーション再生終了コールバック関数定義 */\r\nexport type FinishedMotionCallback = (self: ACubismMotion) => void;\r\n\r\n/**\r\n * モーションの抽象基底クラス\r\n *\r\n * モーションの抽象基底クラス。MotionQueueManagerによってモーションの再生を管理する。\r\n */\r\nexport abstract class ACubismMotion {\r\n  /**\r\n   * インスタンスの破棄\r\n   */\r\n  public static delete(motion: ACubismMotion): void {\r\n    motion.release();\r\n    motion = null;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._fadeInSeconds = -1.0;\r\n    this._fadeOutSeconds = -1.0;\r\n    this._weight = 1.0;\r\n    this._offsetSeconds = 0.0; // 再生の開始時刻\r\n    this._firedEventValues = new csmVector<csmString>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    this._weight = 0.0;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータ\r\n   * @param model 対象のモデル\r\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\r\n   * @param userTimeSeconds デルタ時間の積算値[秒]\r\n   */\r\n  public updateParameters(\r\n    model: CubismModel,\r\n    motionQueueEntry: CubismMotionQueueEntry,\r\n    userTimeSeconds: number\r\n  ): void {\r\n    if (!motionQueueEntry.isAvailable() || motionQueueEntry.isFinished()) {\r\n      return;\r\n    }\r\n\r\n    if (!motionQueueEntry.isStarted()) {\r\n      motionQueueEntry.setIsStarted(true);\r\n      motionQueueEntry.setStartTime(userTimeSeconds - this._offsetSeconds); // モーションの開始時刻を記録\r\n      motionQueueEntry.setFadeInStartTime(userTimeSeconds); // フェードインの開始時刻\r\n\r\n      const duration: number = this.getDuration();\r\n\r\n      if (motionQueueEntry.getEndTime() < 0) {\r\n        // 開始していないうちに終了設定している場合がある。\r\n        motionQueueEntry.setEndTime(\r\n          duration <= 0 ? -1 : motionQueueEntry.getStartTime() + duration\r\n        );\r\n        // duration == -1 の場合はループする\r\n      }\r\n    }\r\n\r\n    let fadeWeight: number = this._weight; // 現在の値と掛け合わせる割合\r\n\r\n    //---- フェードイン・アウトの処理 ----\r\n    // 単純なサイン関数でイージングする\r\n    const fadeIn: number =\r\n      this._fadeInSeconds == 0.0\r\n        ? 1.0\r\n        : CubismMath.getEasingSine(\r\n            (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\r\n              this._fadeInSeconds\r\n          );\r\n\r\n    const fadeOut: number =\r\n      this._fadeOutSeconds == 0.0 || motionQueueEntry.getEndTime() < 0.0\r\n        ? 1.0\r\n        : CubismMath.getEasingSine(\r\n            (motionQueueEntry.getEndTime() - userTimeSeconds) /\r\n              this._fadeOutSeconds\r\n          );\r\n\r\n    fadeWeight = fadeWeight * fadeIn * fadeOut;\r\n\r\n    motionQueueEntry.setState(userTimeSeconds, fadeWeight);\r\n\r\n    CSM_ASSERT(0.0 <= fadeWeight && fadeWeight <= 1.0);\r\n\r\n    //---- 全てのパラメータIDをループする ----\r\n    this.doUpdateParameters(\r\n      model,\r\n      userTimeSeconds,\r\n      fadeWeight,\r\n      motionQueueEntry\r\n    );\r\n\r\n    // 後処理\r\n    // 終了時刻を過ぎたら終了フラグを立てる(CubismMotionQueueManager)\r\n    if (\r\n      motionQueueEntry.getEndTime() > 0 &&\r\n      motionQueueEntry.getEndTime() < userTimeSeconds\r\n    ) {\r\n      motionQueueEntry.setIsFinished(true); // 終了\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フェードインの時間を設定する\r\n   * @param fadeInSeconds フェードインにかかる時間[秒]\r\n   */\r\n  public setFadeInTime(fadeInSeconds: number): void {\r\n    this._fadeInSeconds = fadeInSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードアウトの時間を設定する\r\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\r\n   */\r\n  public setFadeOutTime(fadeOutSeconds: number): void {\r\n    this._fadeOutSeconds = fadeOutSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードアウトにかかる時間の取得\r\n   * @return フェードアウトにかかる時間[秒]\r\n   */\r\n  public getFadeOutTime(): number {\r\n    return this._fadeOutSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードインにかかる時間の取得\r\n   * @return フェードインにかかる時間[秒]\r\n   */\r\n  public getFadeInTime(): number {\r\n    return this._fadeInSeconds;\r\n  }\r\n\r\n  /**\r\n   * モーション適用の重みの設定\r\n   * @param weight 重み（0.0 - 1.0）\r\n   */\r\n  public setWeight(weight: number): void {\r\n    this._weight = weight;\r\n  }\r\n\r\n  /**\r\n   * モーション適用の重みの取得\r\n   * @return 重み（0.0 - 1.0）\r\n   */\r\n  public getWeight(): number {\r\n    return this._weight;\r\n  }\r\n\r\n  /**\r\n   * モーションの長さの取得\r\n   * @return モーションの長さ[秒]\r\n   *\r\n   * @note ループの時は「-1」。\r\n   *       ループでない場合は、オーバーライドする。\r\n   *       正の値の時は取得される時間で終了する。\r\n   *       「-1」の時は外部から停止命令がない限り終わらない処理となる。\r\n   */\r\n  public getDuration(): number {\r\n    return -1.0;\r\n  }\r\n\r\n  /**\r\n   * モーションのループ1回分の長さの取得\r\n   * @return モーションのループ一回分の長さ[秒]\r\n   *\r\n   * @note ループしない場合は、getDuration()と同じ値を返す\r\n   *       ループ一回分の長さが定義できない場合(プログラム的に動き続けるサブクラスなど)の場合は「-1」を返す\r\n   */\r\n  public getLoopDuration(): number {\r\n    return -1.0;\r\n  }\r\n\r\n  /**\r\n   * モーション再生の開始時刻の設定\r\n   * @param offsetSeconds モーション再生の開始時刻[秒]\r\n   */\r\n  public setOffsetTime(offsetSeconds: number): void {\r\n    this._offsetSeconds = offsetSeconds;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータ更新\r\n   *\r\n   * イベント発火のチェック。\r\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\r\n   *\r\n   * @param beforeCheckTimeSeconds 前回のイベントチェック時間[秒]\r\n   * @param motionTimeSeconds 今回の再生時間[秒]\r\n   */\r\n  public getFiredEvent(\r\n    beforeCheckTimeSeconds: number,\r\n    motionTimeSeconds: number\r\n  ): csmVector<csmString> {\r\n    return this._firedEventValues;\r\n  }\r\n\r\n  /**\r\n   * モーションを更新して、モデルにパラメータ値を反映する\r\n   * @param model 対象のモデル\r\n   * @param userTimeSeconds デルタ時間の積算値[秒]\r\n   * @param weight モーションの重み\r\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\r\n   * @return true モデルへパラメータ値の反映あり\r\n   * @return false モデルへのパラメータ値の反映なし（モーションの変化なし）\r\n   */\r\n  public abstract doUpdateParameters(\r\n    model: CubismModel,\r\n    userTimeSeconds: number,\r\n    weight: number,\r\n    motionQueueEntry: CubismMotionQueueEntry\r\n  ): void;\r\n\r\n  /**\r\n   * モーション再生終了コールバックの登録\r\n   *\r\n   * モーション再生終了コールバックを登録する。\r\n   * isFinishedフラグを設定するタイミングで呼び出される。\r\n   * 以下の状態の際には呼び出されない:\r\n   *   1. 再生中のモーションが「ループ」として設定されているとき\r\n   *   2. コールバックが登録されていない時\r\n   *\r\n   * @param onFinishedMotionHandler モーション再生終了コールバック関数\r\n   */\r\n  public setFinishedMotionHandler = (\r\n    onFinishedMotionHandler: FinishedMotionCallback\r\n  ) => (this._onFinishedMotion = onFinishedMotionHandler);\r\n\r\n  /**\r\n   * モーション再生終了コールバックの取得\r\n   *\r\n   * モーション再生終了コールバックを取得する。\r\n   *\r\n   * @return 登録されているモーション再生終了コールバック関数\r\n   */\r\n  public getFinishedMotionHandler = () => this._onFinishedMotion;\r\n\r\n  public _fadeInSeconds: number; // フェードインにかかる時間[秒]\r\n  public _fadeOutSeconds: number; // フェードアウトにかかる時間[秒]\r\n  public _weight: number; // モーションの重み\r\n  public _offsetSeconds: number; // モーション再生の開始時間[秒]\r\n\r\n  public _firedEventValues: csmVector<csmString>;\r\n\r\n  // モーション再生終了コールバック関数\r\n  public _onFinishedMotion?: FinishedMotionCallback;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './acubismmotion';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const ACubismMotion = $.ACubismMotion;\r\n  export type ACubismMotion = $.ACubismMotion;\r\n  export type FinishedMotionCallback = $.FinishedMotionCallback;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismJson, Value } from '../utils/cubismjson';\r\nimport { ACubismMotion } from './acubismmotion';\r\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\r\n\r\n// exp3.jsonのキーとデフォルト\r\nconst ExpressionKeyFadeIn = 'FadeInTime';\r\nconst ExpressionKeyFadeOut = 'FadeOutTime';\r\nconst ExpressionKeyParameters = 'Parameters';\r\nconst ExpressionKeyId = 'Id';\r\nconst ExpressionKeyValue = 'Value';\r\nconst ExpressionKeyBlend = 'Blend';\r\nconst BlendValueAdd = 'Add';\r\nconst BlendValueMultiply = 'Multiply';\r\nconst BlendValueOverwrite = 'Overwrite';\r\nconst DefaultFadeTime = 1.0;\r\n\r\n/**\r\n * 表情のモーション\r\n *\r\n * 表情のモーションクラス。\r\n */\r\nexport class CubismExpressionMotion extends ACubismMotion {\r\n  /**\r\n   * インスタンスを作成する。\r\n   * @param buffer expファイルが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   * @return 作成されたインスタンス\r\n   */\r\n  public static create(\r\n    buffer: ArrayBuffer,\r\n    size: number\r\n  ): CubismExpressionMotion {\r\n    const expression: CubismExpressionMotion = new CubismExpressionMotion();\r\n\r\n    const json: CubismJson = CubismJson.create(buffer, size);\r\n    const root: Value = json.getRoot();\r\n\r\n    expression.setFadeInTime(\r\n      root.getValueByString(ExpressionKeyFadeIn).toFloat(DefaultFadeTime)\r\n    ); // フェードイン\r\n    expression.setFadeOutTime(\r\n      root.getValueByString(ExpressionKeyFadeOut).toFloat(DefaultFadeTime)\r\n    ); // フェードアウト\r\n\r\n    // 各パラメータについて\r\n    const parameterCount = root\r\n      .getValueByString(ExpressionKeyParameters)\r\n      .getSize();\r\n    expression._parameters.prepareCapacity(parameterCount);\r\n\r\n    for (let i = 0; i < parameterCount; ++i) {\r\n      const param: Value = root\r\n        .getValueByString(ExpressionKeyParameters)\r\n        .getValueByIndex(i);\r\n      const parameterId: CubismIdHandle = CubismFramework.getIdManager().getId(\r\n        param.getValueByString(ExpressionKeyId).getRawString()\r\n      ); // パラメータID\r\n\r\n      const value: number = param\r\n        .getValueByString(ExpressionKeyValue)\r\n        .toFloat(); // 値\r\n\r\n      // 計算方法の設定\r\n      let blendType: ExpressionBlendType;\r\n\r\n      if (\r\n        param.getValueByString(ExpressionKeyBlend).isNull() ||\r\n        param.getValueByString(ExpressionKeyBlend).getString() == BlendValueAdd\r\n      ) {\r\n        blendType = ExpressionBlendType.ExpressionBlendType_Add;\r\n      } else if (\r\n        param.getValueByString(ExpressionKeyBlend).getString() ==\r\n        BlendValueMultiply\r\n      ) {\r\n        blendType = ExpressionBlendType.ExpressionBlendType_Multiply;\r\n      } else if (\r\n        param.getValueByString(ExpressionKeyBlend).getString() ==\r\n        BlendValueOverwrite\r\n      ) {\r\n        blendType = ExpressionBlendType.ExpressionBlendType_Overwrite;\r\n      } else {\r\n        // その他 仕様にない値を設定した時は加算モードにすることで復旧\r\n        blendType = ExpressionBlendType.ExpressionBlendType_Add;\r\n      }\r\n\r\n      // 設定オブジェクトを作成してリストに追加する\r\n      const item: ExpressionParameter = new ExpressionParameter();\r\n\r\n      item.parameterId = parameterId;\r\n      item.blendType = blendType;\r\n      item.value = value;\r\n\r\n      expression._parameters.pushBack(item);\r\n    }\r\n\r\n    CubismJson.delete(json); // JSONデータは不要になったら削除する\r\n    return expression;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータの更新の実行\r\n   * @param model 対象のモデル\r\n   * @param userTimeSeconds デルタ時間の積算値[秒]\r\n   * @param weight モーションの重み\r\n   * @param motionQueueEntry CubismMotionQueueManagerで管理されているモーション\r\n   */\r\n  public doUpdateParameters(\r\n    model: CubismModel,\r\n    userTimeSeconds: number,\r\n    weight: number,\r\n    motionQueueEntry: CubismMotionQueueEntry\r\n  ): void {\r\n    for (let i = 0; i < this._parameters.getSize(); ++i) {\r\n      const parameter: ExpressionParameter = this._parameters.at(i);\r\n\r\n      switch (parameter.blendType) {\r\n        case ExpressionBlendType.ExpressionBlendType_Add: {\r\n          model.addParameterValueById(\r\n            parameter.parameterId,\r\n            parameter.value,\r\n            weight\r\n          );\r\n          break;\r\n        }\r\n        case ExpressionBlendType.ExpressionBlendType_Multiply: {\r\n          model.multiplyParameterValueById(\r\n            parameter.parameterId,\r\n            parameter.value,\r\n            weight\r\n          );\r\n          break;\r\n        }\r\n        case ExpressionBlendType.ExpressionBlendType_Overwrite: {\r\n          model.setParameterValueById(\r\n            parameter.parameterId,\r\n            parameter.value,\r\n            weight\r\n          );\r\n          break;\r\n        }\r\n        default:\r\n          // 仕様にない値を設定した時はすでに加算モードになっている\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    this._parameters = new csmVector<ExpressionParameter>();\r\n  }\r\n\r\n  _parameters: csmVector<ExpressionParameter>; // 表情のパラメータ情報リスト\r\n}\r\n\r\n/**\r\n * 表情パラメータ値の計算方式\r\n */\r\nexport enum ExpressionBlendType {\r\n  ExpressionBlendType_Add = 0, // 加算\r\n  ExpressionBlendType_Multiply = 1, // 乗算\r\n  ExpressionBlendType_Overwrite = 2, // 上書き\r\n}\r\n\r\n/**\r\n * 表情のパラメータ情報\r\n */\r\nexport class ExpressionParameter {\r\n  parameterId: CubismIdHandle; // パラメータID\r\n  blendType: ExpressionBlendType; // パラメータの演算種類\r\n  value: number; // 値\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismexpressionmotion';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismExpressionMotion = $.CubismExpressionMotion;\r\n  export type CubismExpressionMotion = $.CubismExpressionMotion;\r\n  export const ExpressionBlendType = $.ExpressionBlendType;\r\n  export type ExpressionBlendType = $.ExpressionBlendType;\r\n  export const ExpressionParameter = $.ExpressionParameter;\r\n  export type ExpressionParameter = $.ExpressionParameter;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { CubismMath } from '../math/cubismmath';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\nimport {\r\n  CSM_ASSERT,\r\n  CubismLogDebug,\r\n  CubismLogWarning,\r\n} from '../utils/cubismdebug';\r\nimport { ACubismMotion, FinishedMotionCallback } from './acubismmotion';\r\nimport {\r\n  CubismMotionCurve,\r\n  CubismMotionCurveTarget,\r\n  CubismMotionData,\r\n  CubismMotionEvent,\r\n  CubismMotionPoint,\r\n  CubismMotionSegment,\r\n  CubismMotionSegmentType,\r\n} from './cubismmotioninternal';\r\nimport { CubismMotionJson, EvaluationOptionFlag } from './cubismmotionjson';\r\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\r\n\r\nconst EffectNameEyeBlink = 'EyeBlink';\r\nconst EffectNameLipSync = 'LipSync';\r\nconst TargetNameModel = 'Model';\r\nconst TargetNameParameter = 'Parameter';\r\nconst TargetNamePartOpacity = 'PartOpacity';\r\n\r\n/**\r\n * Cubism SDK R2 以前のモーションを再現させるなら true 、アニメータのモーションを正しく再現するなら false 。\r\n */\r\nconst UseOldBeziersCurveMotion = false;\r\n\r\nfunction lerpPoints(\r\n  a: CubismMotionPoint,\r\n  b: CubismMotionPoint,\r\n  t: number\r\n): CubismMotionPoint {\r\n  const result: CubismMotionPoint = new CubismMotionPoint();\r\n\r\n  result.time = a.time + (b.time - a.time) * t;\r\n  result.value = a.value + (b.value - a.value) * t;\r\n\r\n  return result;\r\n}\r\n\r\nfunction linearEvaluate(points: CubismMotionPoint[], time: number): number {\r\n  let t: number = (time - points[0].time) / (points[1].time - points[0].time);\r\n\r\n  if (t < 0.0) {\r\n    t = 0.0;\r\n  }\r\n\r\n  return points[0].value + (points[1].value - points[0].value) * t;\r\n}\r\n\r\nfunction bezierEvaluate(points: CubismMotionPoint[], time: number): number {\r\n  let t: number = (time - points[0].time) / (points[3].time - points[0].time);\r\n\r\n  if (t < 0.0) {\r\n    t = 0.0;\r\n  }\r\n\r\n  const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\r\n  const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\r\n  const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\r\n\r\n  const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\r\n  const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\r\n\r\n  return lerpPoints(p012, p123, t).value;\r\n}\r\n\r\nfunction bezierEvaluateBinarySearch(\r\n  points: CubismMotionPoint[],\r\n  time: number\r\n): number {\r\n  const x_error = 0.01;\r\n\r\n  const x: number = time;\r\n  let x1: number = points[0].time;\r\n  let x2: number = points[3].time;\r\n  let cx1: number = points[1].time;\r\n  let cx2: number = points[2].time;\r\n\r\n  let ta = 0.0;\r\n  let tb = 1.0;\r\n  let t = 0.0;\r\n  let i = 0;\r\n\r\n  for (let var33 = true; i < 20; ++i) {\r\n    if (x < x1 + x_error) {\r\n      t = ta;\r\n      break;\r\n    }\r\n\r\n    if (x2 - x_error < x) {\r\n      t = tb;\r\n      break;\r\n    }\r\n\r\n    let centerx: number = (cx1 + cx2) * 0.5;\r\n    cx1 = (x1 + cx1) * 0.5;\r\n    cx2 = (x2 + cx2) * 0.5;\r\n    const ctrlx12: number = (cx1 + centerx) * 0.5;\r\n    const ctrlx21: number = (cx2 + centerx) * 0.5;\r\n    centerx = (ctrlx12 + ctrlx21) * 0.5;\r\n    if (x < centerx) {\r\n      tb = (ta + tb) * 0.5;\r\n      if (centerx - x_error < x) {\r\n        t = tb;\r\n        break;\r\n      }\r\n\r\n      x2 = centerx;\r\n      cx2 = ctrlx12;\r\n    } else {\r\n      ta = (ta + tb) * 0.5;\r\n      if (x < centerx + x_error) {\r\n        t = ta;\r\n        break;\r\n      }\r\n\r\n      x1 = centerx;\r\n      cx1 = ctrlx21;\r\n    }\r\n  }\r\n\r\n  if (i == 20) {\r\n    t = (ta + tb) * 0.5;\r\n  }\r\n\r\n  if (t < 0.0) {\r\n    t = 0.0;\r\n  }\r\n  if (t > 1.0) {\r\n    t = 1.0;\r\n  }\r\n\r\n  const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\r\n  const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\r\n  const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\r\n\r\n  const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\r\n  const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\r\n\r\n  return lerpPoints(p012, p123, t).value;\r\n}\r\n\r\nfunction bezierEvaluateCardanoInterpretation(\r\n  points: CubismMotionPoint[],\r\n  time: number\r\n): number {\r\n  const x: number = time;\r\n  const x1: number = points[0].time;\r\n  const x2: number = points[3].time;\r\n  const cx1: number = points[1].time;\r\n  const cx2: number = points[2].time;\r\n\r\n  const a: number = x2 - 3.0 * cx2 + 3.0 * cx1 - x1;\r\n  const b: number = 3.0 * cx2 - 6.0 * cx1 + 3.0 * x1;\r\n  const c: number = 3.0 * cx1 - 3.0 * x1;\r\n  const d: number = x1 - x;\r\n\r\n  const t: number = CubismMath.cardanoAlgorithmForBezier(a, b, c, d);\r\n\r\n  const p01: CubismMotionPoint = lerpPoints(points[0], points[1], t);\r\n  const p12: CubismMotionPoint = lerpPoints(points[1], points[2], t);\r\n  const p23: CubismMotionPoint = lerpPoints(points[2], points[3], t);\r\n\r\n  const p012: CubismMotionPoint = lerpPoints(p01, p12, t);\r\n  const p123: CubismMotionPoint = lerpPoints(p12, p23, t);\r\n\r\n  return lerpPoints(p012, p123, t).value;\r\n}\r\n\r\nfunction steppedEvaluate(points: CubismMotionPoint[], time: number): number {\r\n  return points[0].value;\r\n}\r\n\r\nfunction inverseSteppedEvaluate(\r\n  points: CubismMotionPoint[],\r\n  time: number\r\n): number {\r\n  return points[1].value;\r\n}\r\n\r\nfunction evaluateCurve(\r\n  motionData: CubismMotionData,\r\n  index: number,\r\n  time: number\r\n): number {\r\n  // Find segment to evaluate.\r\n  const curve: CubismMotionCurve = motionData.curves.at(index);\r\n\r\n  let target = -1;\r\n  const totalSegmentCount: number = curve.baseSegmentIndex + curve.segmentCount;\r\n  let pointPosition = 0;\r\n  for (let i: number = curve.baseSegmentIndex; i < totalSegmentCount; ++i) {\r\n    // Get first point of next segment.\r\n    pointPosition =\r\n      motionData.segments.at(i).basePointIndex +\r\n      (motionData.segments.at(i).segmentType ==\r\n      CubismMotionSegmentType.CubismMotionSegmentType_Bezier\r\n        ? 3\r\n        : 1);\r\n\r\n    // Break if time lies within current segment.\r\n    if (motionData.points.at(pointPosition).time > time) {\r\n      target = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (target == -1) {\r\n    return motionData.points.at(pointPosition).value;\r\n  }\r\n\r\n  const segment: CubismMotionSegment = motionData.segments.at(target);\r\n\r\n  return segment.evaluate(motionData.points.get(segment.basePointIndex), time);\r\n}\r\n\r\n/**\r\n * モーションクラス\r\n *\r\n * モーションのクラス。\r\n */\r\nexport class CubismMotion extends ACubismMotion {\r\n  /**\r\n   * インスタンスを作成する\r\n   *\r\n   * @param buffer motion3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\r\n   * @return 作成されたインスタンス\r\n   */\r\n  public static create(\r\n    buffer: ArrayBuffer,\r\n    size: number,\r\n    onFinishedMotionHandler?: FinishedMotionCallback\r\n  ): CubismMotion {\r\n    const ret = new CubismMotion();\r\n\r\n    ret.parse(buffer, size);\r\n    ret._sourceFrameRate = ret._motionData.fps;\r\n    ret._loopDurationSeconds = ret._motionData.duration;\r\n    ret._onFinishedMotion = onFinishedMotionHandler;\r\n\r\n    // NOTE: Editorではループありのモーション書き出しは非対応\r\n    // ret->_loop = (ret->_motionData->Loop > 0);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータの更新の実行\r\n   * @param model             対象のモデル\r\n   * @param userTimeSeconds   現在の時刻[秒]\r\n   * @param fadeWeight        モーションの重み\r\n   * @param motionQueueEntry  CubismMotionQueueManagerで管理されているモーション\r\n   */\r\n  public doUpdateParameters(\r\n    model: CubismModel,\r\n    userTimeSeconds: number,\r\n    fadeWeight: number,\r\n    motionQueueEntry: CubismMotionQueueEntry\r\n  ): void {\r\n    if (this._modelCurveIdEyeBlink == null) {\r\n      this._modelCurveIdEyeBlink =\r\n        CubismFramework.getIdManager().getId(EffectNameEyeBlink);\r\n    }\r\n\r\n    if (this._modelCurveIdLipSync == null) {\r\n      this._modelCurveIdLipSync =\r\n        CubismFramework.getIdManager().getId(EffectNameLipSync);\r\n    }\r\n\r\n    let timeOffsetSeconds: number =\r\n      userTimeSeconds - motionQueueEntry.getStartTime();\r\n\r\n    if (timeOffsetSeconds < 0.0) {\r\n      timeOffsetSeconds = 0.0; // エラー回避\r\n    }\r\n\r\n    let lipSyncValue: number = Number.MAX_VALUE;\r\n    let eyeBlinkValue: number = Number.MAX_VALUE;\r\n\r\n    //まばたき、リップシンクのうちモーションの適用を検出するためのビット（maxFlagCount個まで\r\n    const MaxTargetSize = 64;\r\n    let lipSyncFlags = 0;\r\n    let eyeBlinkFlags = 0;\r\n\r\n    //瞬き、リップシンクのターゲット数が上限を超えている場合\r\n    if (this._eyeBlinkParameterIds.getSize() > MaxTargetSize) {\r\n      CubismLogDebug(\r\n        'too many eye blink targets : {0}',\r\n        this._eyeBlinkParameterIds.getSize()\r\n      );\r\n    }\r\n    if (this._lipSyncParameterIds.getSize() > MaxTargetSize) {\r\n      CubismLogDebug(\r\n        'too many lip sync targets : {0}',\r\n        this._lipSyncParameterIds.getSize()\r\n      );\r\n    }\r\n\r\n    const tmpFadeIn: number =\r\n      this._fadeInSeconds <= 0.0\r\n        ? 1.0\r\n        : CubismMath.getEasingSine(\r\n            (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\r\n              this._fadeInSeconds\r\n          );\r\n\r\n    const tmpFadeOut: number =\r\n      this._fadeOutSeconds <= 0.0 || motionQueueEntry.getEndTime() < 0.0\r\n        ? 1.0\r\n        : CubismMath.getEasingSine(\r\n            (motionQueueEntry.getEndTime() - userTimeSeconds) /\r\n              this._fadeOutSeconds\r\n          );\r\n    let value: number;\r\n    let c: number, parameterIndex: number;\r\n\r\n    // 'Repeat' time as necessary.\r\n    let time: number = timeOffsetSeconds;\r\n\r\n    if (this._isLoop) {\r\n      while (time > this._motionData.duration) {\r\n        time -= this._motionData.duration;\r\n      }\r\n    }\r\n\r\n    const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\r\n\r\n    // Evaluate model curves.\r\n    for (\r\n      c = 0;\r\n      c < this._motionData.curveCount &&\r\n      curves.at(c).type ==\r\n        CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\r\n      ++c\r\n    ) {\r\n      // Evaluate curve and call handler.\r\n      value = evaluateCurve(this._motionData, c, time);\r\n\r\n      if (curves.at(c).id == this._modelCurveIdEyeBlink) {\r\n        eyeBlinkValue = value;\r\n      } else if (curves.at(c).id == this._modelCurveIdLipSync) {\r\n        lipSyncValue = value;\r\n      }\r\n    }\r\n\r\n    let parameterMotionCurveCount = 0;\r\n\r\n    for (\r\n      ;\r\n      c < this._motionData.curveCount &&\r\n      curves.at(c).type ==\r\n        CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\r\n      ++c\r\n    ) {\r\n      parameterMotionCurveCount++;\r\n\r\n      // Find parameter index.\r\n      parameterIndex = model.getParameterIndex(curves.at(c).id);\r\n\r\n      // Skip curve evaluation if no value in sink.\r\n      if (parameterIndex == -1) {\r\n        continue;\r\n      }\r\n\r\n      const sourceValue: number =\r\n        model.getParameterValueByIndex(parameterIndex);\r\n\r\n      // Evaluate curve and apply value.\r\n      value = evaluateCurve(this._motionData, c, time);\r\n\r\n      if (eyeBlinkValue != Number.MAX_VALUE) {\r\n        for (\r\n          let i = 0;\r\n          i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize;\r\n          ++i\r\n        ) {\r\n          if (this._eyeBlinkParameterIds.at(i) == curves.at(c).id) {\r\n            value *= eyeBlinkValue;\r\n            eyeBlinkFlags |= 1 << i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (lipSyncValue != Number.MAX_VALUE) {\r\n        for (\r\n          let i = 0;\r\n          i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize;\r\n          ++i\r\n        ) {\r\n          if (this._lipSyncParameterIds.at(i) == curves.at(c).id) {\r\n            value += lipSyncValue;\r\n            lipSyncFlags |= 1 << i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      let v: number;\r\n\r\n      // パラメータごとのフェード\r\n      if (curves.at(c).fadeInTime < 0.0 && curves.at(c).fadeOutTime < 0.0) {\r\n        // モーションのフェードを適用\r\n        v = sourceValue + (value - sourceValue) * fadeWeight;\r\n      } else {\r\n        // パラメータに対してフェードインかフェードアウトが設定してある場合はそちらを適用\r\n        let fin: number;\r\n        let fout: number;\r\n\r\n        if (curves.at(c).fadeInTime < 0.0) {\r\n          fin = tmpFadeIn;\r\n        } else {\r\n          fin =\r\n            curves.at(c).fadeInTime == 0.0\r\n              ? 1.0\r\n              : CubismMath.getEasingSine(\r\n                  (userTimeSeconds - motionQueueEntry.getFadeInStartTime()) /\r\n                    curves.at(c).fadeInTime\r\n                );\r\n        }\r\n\r\n        if (curves.at(c).fadeOutTime < 0.0) {\r\n          fout = tmpFadeOut;\r\n        } else {\r\n          fout =\r\n            curves.at(c).fadeOutTime == 0.0 ||\r\n            motionQueueEntry.getEndTime() < 0.0\r\n              ? 1.0\r\n              : CubismMath.getEasingSine(\r\n                  (motionQueueEntry.getEndTime() - userTimeSeconds) /\r\n                    curves.at(c).fadeOutTime\r\n                );\r\n        }\r\n\r\n        const paramWeight: number = this._weight * fin * fout;\r\n\r\n        // パラメータごとのフェードを適用\r\n        v = sourceValue + (value - sourceValue) * paramWeight;\r\n      }\r\n\r\n      model.setParameterValueByIndex(parameterIndex, v, 1.0);\r\n    }\r\n\r\n    {\r\n      if (eyeBlinkValue != Number.MAX_VALUE) {\r\n        for (\r\n          let i = 0;\r\n          i < this._eyeBlinkParameterIds.getSize() && i < MaxTargetSize;\r\n          ++i\r\n        ) {\r\n          const sourceValue: number = model.getParameterValueById(\r\n            this._eyeBlinkParameterIds.at(i)\r\n          );\r\n\r\n          // モーションでの上書きがあった時にはまばたきは適用しない\r\n          if ((eyeBlinkFlags >> i) & 0x01) {\r\n            continue;\r\n          }\r\n\r\n          const v: number =\r\n            sourceValue + (eyeBlinkValue - sourceValue) * fadeWeight;\r\n\r\n          model.setParameterValueById(this._eyeBlinkParameterIds.at(i), v);\r\n        }\r\n      }\r\n\r\n      if (lipSyncValue != Number.MAX_VALUE) {\r\n        for (\r\n          let i = 0;\r\n          i < this._lipSyncParameterIds.getSize() && i < MaxTargetSize;\r\n          ++i\r\n        ) {\r\n          const sourceValue: number = model.getParameterValueById(\r\n            this._lipSyncParameterIds.at(i)\r\n          );\r\n\r\n          // モーションでの上書きがあった時にはリップシンクは適用しない\r\n          if ((lipSyncFlags >> i) & 0x01) {\r\n            continue;\r\n          }\r\n\r\n          const v: number =\r\n            sourceValue + (lipSyncValue - sourceValue) * fadeWeight;\r\n\r\n          model.setParameterValueById(this._lipSyncParameterIds.at(i), v);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (\r\n      ;\r\n      c < this._motionData.curveCount &&\r\n      curves.at(c).type ==\r\n        CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\r\n      ++c\r\n    ) {\r\n      // Find parameter index.\r\n      parameterIndex = model.getParameterIndex(curves.at(c).id);\r\n\r\n      // Skip curve evaluation if no value in sink.\r\n      if (parameterIndex == -1) {\r\n        continue;\r\n      }\r\n\r\n      // Evaluate curve and apply value.\r\n      value = evaluateCurve(this._motionData, c, time);\r\n\r\n      model.setParameterValueByIndex(parameterIndex, value);\r\n    }\r\n\r\n    if (timeOffsetSeconds >= this._motionData.duration) {\r\n      if (this._isLoop) {\r\n        motionQueueEntry.setStartTime(userTimeSeconds); // 最初の状態へ\r\n        if (this._isLoopFadeIn) {\r\n          // ループ内でループ用フェードインが有効の時は、フェードイン設定し直し\r\n          motionQueueEntry.setFadeInStartTime(userTimeSeconds);\r\n        }\r\n      } else {\r\n        if (this._onFinishedMotion) {\r\n          this._onFinishedMotion(this);\r\n        }\r\n\r\n        motionQueueEntry.setIsFinished(true);\r\n      }\r\n    }\r\n    this._lastWeight = fadeWeight;\r\n  }\r\n\r\n  /**\r\n   * ループ情報の設定\r\n   * @param loop ループ情報\r\n   */\r\n  public setIsLoop(loop: boolean): void {\r\n    this._isLoop = loop;\r\n  }\r\n\r\n  /**\r\n   * ループ情報の取得\r\n   * @return true ループする\r\n   * @return false ループしない\r\n   */\r\n  public isLoop(): boolean {\r\n    return this._isLoop;\r\n  }\r\n\r\n  /**\r\n   * ループ時のフェードイン情報の設定\r\n   * @param loopFadeIn  ループ時のフェードイン情報\r\n   */\r\n  public setIsLoopFadeIn(loopFadeIn: boolean): void {\r\n    this._isLoopFadeIn = loopFadeIn;\r\n  }\r\n\r\n  /**\r\n   * ループ時のフェードイン情報の取得\r\n   *\r\n   * @return  true    する\r\n   * @return  false   しない\r\n   */\r\n  public isLoopFadeIn(): boolean {\r\n    return this._isLoopFadeIn;\r\n  }\r\n\r\n  /**\r\n   * モーションの長さを取得する。\r\n   *\r\n   * @return  モーションの長さ[秒]\r\n   */\r\n  public getDuration(): number {\r\n    return this._isLoop ? -1.0 : this._loopDurationSeconds;\r\n  }\r\n\r\n  /**\r\n   * モーションのループ時の長さを取得する。\r\n   *\r\n   * @return  モーションのループ時の長さ[秒]\r\n   */\r\n  public getLoopDuration(): number {\r\n    return this._loopDurationSeconds;\r\n  }\r\n\r\n  /**\r\n   * パラメータに対するフェードインの時間を設定する。\r\n   *\r\n   * @param parameterId     パラメータID\r\n   * @param value           フェードインにかかる時間[秒]\r\n   */\r\n  public setParameterFadeInTime(\r\n    parameterId: CubismIdHandle,\r\n    value: number\r\n  ): void {\r\n    const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\r\n\r\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\r\n      if (parameterId == curves.at(i).id) {\r\n        curves.at(i).fadeInTime = value;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パラメータに対するフェードアウトの時間の設定\r\n   * @param parameterId     パラメータID\r\n   * @param value           フェードアウトにかかる時間[秒]\r\n   */\r\n  public setParameterFadeOutTime(\r\n    parameterId: CubismIdHandle,\r\n    value: number\r\n  ): void {\r\n    const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\r\n\r\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\r\n      if (parameterId == curves.at(i).id) {\r\n        curves.at(i).fadeOutTime = value;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パラメータに対するフェードインの時間の取得\r\n   * @param    parameterId     パラメータID\r\n   * @return   フェードインにかかる時間[秒]\r\n   */\r\n  public getParameterFadeInTime(parameterId: CubismIdHandle): number {\r\n    const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\r\n\r\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\r\n      if (parameterId == curves.at(i).id) {\r\n        return curves.at(i).fadeInTime;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * パラメータに対するフェードアウトの時間を取得\r\n   *\r\n   * @param   parameterId     パラメータID\r\n   * @return   フェードアウトにかかる時間[秒]\r\n   */\r\n  public getParameterFadeOutTime(parameterId: CubismIdHandle): number {\r\n    const curves: csmVector<CubismMotionCurve> = this._motionData.curves;\r\n\r\n    for (let i = 0; i < this._motionData.curveCount; ++i) {\r\n      if (parameterId == curves.at(i).id) {\r\n        return curves.at(i).fadeOutTime;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * 自動エフェクトがかかっているパラメータIDリストの設定\r\n   * @param eyeBlinkParameterIds    自動まばたきがかかっているパラメータIDのリスト\r\n   * @param lipSyncParameterIds     リップシンクがかかっているパラメータIDのリスト\r\n   */\r\n  public setEffectIds(\r\n    eyeBlinkParameterIds: csmVector<CubismIdHandle>,\r\n    lipSyncParameterIds: csmVector<CubismIdHandle>\r\n  ): void {\r\n    this._eyeBlinkParameterIds = eyeBlinkParameterIds;\r\n    this._lipSyncParameterIds = lipSyncParameterIds;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._sourceFrameRate = 30.0;\r\n    this._loopDurationSeconds = -1.0;\r\n    this._isLoop = false; // trueから false へデフォルトを変更\r\n    this._isLoopFadeIn = true; // ループ時にフェードインが有効かどうかのフラグ\r\n    this._lastWeight = 0.0;\r\n    this._motionData = null;\r\n    this._modelCurveIdEyeBlink = null;\r\n    this._modelCurveIdLipSync = null;\r\n    this._eyeBlinkParameterIds = null;\r\n    this._lipSyncParameterIds = null;\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    this._motionData = void 0;\r\n    this._motionData = null;\r\n  }\r\n\r\n  /**\r\n   * motion3.jsonをパースする。\r\n   *\r\n   * @param motionJson  motion3.jsonが読み込まれているバッファ\r\n   * @param size        バッファのサイズ\r\n   */\r\n  public parse(motionJson: ArrayBuffer, size: number): void {\r\n    this._motionData = new CubismMotionData();\r\n\r\n    let json: CubismMotionJson = new CubismMotionJson(motionJson, size);\r\n\r\n    this._motionData.duration = json.getMotionDuration();\r\n    this._motionData.loop = json.isMotionLoop();\r\n    this._motionData.curveCount = json.getMotionCurveCount();\r\n    this._motionData.fps = json.getMotionFps();\r\n    this._motionData.eventCount = json.getEventCount();\r\n\r\n    const areBeziersRestructed: boolean = json.getEvaluationOptionFlag(\r\n      EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted\r\n    );\r\n\r\n    if (json.isExistMotionFadeInTime()) {\r\n      this._fadeInSeconds =\r\n        json.getMotionFadeInTime() < 0.0 ? 1.0 : json.getMotionFadeInTime();\r\n    } else {\r\n      this._fadeInSeconds = 1.0;\r\n    }\r\n\r\n    if (json.isExistMotionFadeOutTime()) {\r\n      this._fadeOutSeconds =\r\n        json.getMotionFadeOutTime() < 0.0 ? 1.0 : json.getMotionFadeOutTime();\r\n    } else {\r\n      this._fadeOutSeconds = 1.0;\r\n    }\r\n\r\n    this._motionData.curves.updateSize(\r\n      this._motionData.curveCount,\r\n      CubismMotionCurve,\r\n      true\r\n    );\r\n    this._motionData.segments.updateSize(\r\n      json.getMotionTotalSegmentCount(),\r\n      CubismMotionSegment,\r\n      true\r\n    );\r\n    this._motionData.points.updateSize(\r\n      json.getMotionTotalPointCount(),\r\n      CubismMotionPoint,\r\n      true\r\n    );\r\n    this._motionData.events.updateSize(\r\n      this._motionData.eventCount,\r\n      CubismMotionEvent,\r\n      true\r\n    );\r\n\r\n    let totalPointCount = 0;\r\n    let totalSegmentCount = 0;\r\n\r\n    // Curves\r\n    for (\r\n      let curveCount = 0;\r\n      curveCount < this._motionData.curveCount;\r\n      ++curveCount\r\n    ) {\r\n      if (json.getMotionCurveTarget(curveCount) == TargetNameModel) {\r\n        this._motionData.curves.at(curveCount).type =\r\n          CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\r\n      } else if (json.getMotionCurveTarget(curveCount) == TargetNameParameter) {\r\n        this._motionData.curves.at(curveCount).type =\r\n          CubismMotionCurveTarget.CubismMotionCurveTarget_Parameter;\r\n      } else if (\r\n        json.getMotionCurveTarget(curveCount) == TargetNamePartOpacity\r\n      ) {\r\n        this._motionData.curves.at(curveCount).type =\r\n          CubismMotionCurveTarget.CubismMotionCurveTarget_PartOpacity;\r\n      } else {\r\n        CubismLogWarning(\r\n          'Warning : Unable to get segment type from Curve! The number of \"CurveCount\" may be incorrect!'\r\n        );\r\n      }\r\n\r\n      this._motionData.curves.at(curveCount).id =\r\n        json.getMotionCurveId(curveCount);\r\n\r\n      this._motionData.curves.at(curveCount).baseSegmentIndex =\r\n        totalSegmentCount;\r\n\r\n      this._motionData.curves.at(curveCount).fadeInTime =\r\n        json.isExistMotionCurveFadeInTime(curveCount)\r\n          ? json.getMotionCurveFadeInTime(curveCount)\r\n          : -1.0;\r\n      this._motionData.curves.at(curveCount).fadeOutTime =\r\n        json.isExistMotionCurveFadeOutTime(curveCount)\r\n          ? json.getMotionCurveFadeOutTime(curveCount)\r\n          : -1.0;\r\n\r\n      // Segments\r\n      for (\r\n        let segmentPosition = 0;\r\n        segmentPosition < json.getMotionCurveSegmentCount(curveCount);\r\n\r\n      ) {\r\n        if (segmentPosition == 0) {\r\n          this._motionData.segments.at(totalSegmentCount).basePointIndex =\r\n            totalPointCount;\r\n\r\n          this._motionData.points.at(totalPointCount).time =\r\n            json.getMotionCurveSegment(curveCount, segmentPosition);\r\n          this._motionData.points.at(totalPointCount).value =\r\n            json.getMotionCurveSegment(curveCount, segmentPosition + 1);\r\n\r\n          totalPointCount += 1;\r\n          segmentPosition += 2;\r\n        } else {\r\n          this._motionData.segments.at(totalSegmentCount).basePointIndex =\r\n            totalPointCount - 1;\r\n        }\r\n\r\n        const segment: number = json.getMotionCurveSegment(\r\n          curveCount,\r\n          segmentPosition\r\n        );\r\n        switch (segment) {\r\n          case CubismMotionSegmentType.CubismMotionSegmentType_Linear: {\r\n            this._motionData.segments.at(totalSegmentCount).segmentType =\r\n              CubismMotionSegmentType.CubismMotionSegmentType_Linear;\r\n            this._motionData.segments.at(totalSegmentCount).evaluate =\r\n              linearEvaluate;\r\n\r\n            this._motionData.points.at(totalPointCount).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1);\r\n            this._motionData.points.at(totalPointCount).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2);\r\n\r\n            totalPointCount += 1;\r\n            segmentPosition += 3;\r\n\r\n            break;\r\n          }\r\n          case CubismMotionSegmentType.CubismMotionSegmentType_Bezier: {\r\n            this._motionData.segments.at(totalSegmentCount).segmentType =\r\n              CubismMotionSegmentType.CubismMotionSegmentType_Bezier;\r\n\r\n            if (areBeziersRestructed || UseOldBeziersCurveMotion) {\r\n              this._motionData.segments.at(totalSegmentCount).evaluate =\r\n                bezierEvaluate;\r\n            } else {\r\n              this._motionData.segments.at(totalSegmentCount).evaluate =\r\n                bezierEvaluateCardanoInterpretation;\r\n            }\r\n\r\n            this._motionData.points.at(totalPointCount).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1);\r\n            this._motionData.points.at(totalPointCount).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2);\r\n\r\n            this._motionData.points.at(totalPointCount + 1).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 3);\r\n            this._motionData.points.at(totalPointCount + 1).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 4);\r\n\r\n            this._motionData.points.at(totalPointCount + 2).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 5);\r\n            this._motionData.points.at(totalPointCount + 2).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 6);\r\n\r\n            totalPointCount += 3;\r\n            segmentPosition += 7;\r\n\r\n            break;\r\n          }\r\n\r\n          case CubismMotionSegmentType.CubismMotionSegmentType_Stepped: {\r\n            this._motionData.segments.at(totalSegmentCount).segmentType =\r\n              CubismMotionSegmentType.CubismMotionSegmentType_Stepped;\r\n            this._motionData.segments.at(totalSegmentCount).evaluate =\r\n              steppedEvaluate;\r\n\r\n            this._motionData.points.at(totalPointCount).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1);\r\n            this._motionData.points.at(totalPointCount).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2);\r\n\r\n            totalPointCount += 1;\r\n            segmentPosition += 3;\r\n\r\n            break;\r\n          }\r\n\r\n          case CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped: {\r\n            this._motionData.segments.at(totalSegmentCount).segmentType =\r\n              CubismMotionSegmentType.CubismMotionSegmentType_InverseStepped;\r\n            this._motionData.segments.at(totalSegmentCount).evaluate =\r\n              inverseSteppedEvaluate;\r\n\r\n            this._motionData.points.at(totalPointCount).time =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 1);\r\n            this._motionData.points.at(totalPointCount).value =\r\n              json.getMotionCurveSegment(curveCount, segmentPosition + 2);\r\n\r\n            totalPointCount += 1;\r\n            segmentPosition += 3;\r\n\r\n            break;\r\n          }\r\n          default: {\r\n            CSM_ASSERT(0);\r\n            break;\r\n          }\r\n        }\r\n\r\n        ++this._motionData.curves.at(curveCount).segmentCount;\r\n        ++totalSegmentCount;\r\n      }\r\n    }\r\n\r\n    for (\r\n      let userdatacount = 0;\r\n      userdatacount < json.getEventCount();\r\n      ++userdatacount\r\n    ) {\r\n      this._motionData.events.at(userdatacount).fireTime =\r\n        json.getEventTime(userdatacount);\r\n      this._motionData.events.at(userdatacount).value =\r\n        json.getEventValue(userdatacount);\r\n    }\r\n\r\n    json.release();\r\n    json = void 0;\r\n    json = null;\r\n  }\r\n\r\n  /**\r\n   * モデルのパラメータ更新\r\n   *\r\n   * イベント発火のチェック。\r\n   * 入力する時間は呼ばれるモーションタイミングを０とした秒数で行う。\r\n   *\r\n   * @param beforeCheckTimeSeconds   前回のイベントチェック時間[秒]\r\n   * @param motionTimeSeconds        今回の再生時間[秒]\r\n   */\r\n  public getFiredEvent(\r\n    beforeCheckTimeSeconds: number,\r\n    motionTimeSeconds: number\r\n  ): csmVector<csmString> {\r\n    this._firedEventValues.updateSize(0);\r\n\r\n    // イベントの発火チェック\r\n    for (let u = 0; u < this._motionData.eventCount; ++u) {\r\n      if (\r\n        this._motionData.events.at(u).fireTime > beforeCheckTimeSeconds &&\r\n        this._motionData.events.at(u).fireTime <= motionTimeSeconds\r\n      ) {\r\n        this._firedEventValues.pushBack(\r\n          new csmString(this._motionData.events.at(u).value.s)\r\n        );\r\n      }\r\n    }\r\n\r\n    return this._firedEventValues;\r\n  }\r\n\r\n  public _sourceFrameRate: number; // ロードしたファイルのFPS。記述が無ければデフォルト値15fpsとなる\r\n  public _loopDurationSeconds: number; // mtnファイルで定義される一連のモーションの長さ\r\n  public _isLoop: boolean; // ループするか?\r\n  public _isLoopFadeIn: boolean; // ループ時にフェードインが有効かどうかのフラグ。初期値では有効。\r\n  public _lastWeight: number; // 最後に設定された重み\r\n\r\n  public _motionData: CubismMotionData; // 実際のモーションデータ本体\r\n\r\n  public _eyeBlinkParameterIds: csmVector<CubismIdHandle>; // 自動まばたきを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\r\n  public _lipSyncParameterIds: csmVector<CubismIdHandle>; // リップシンクを適用するパラメータIDハンドルのリスト。  モデル（モデルセッティング）とパラメータを対応付ける。\r\n\r\n  public _modelCurveIdEyeBlink: CubismIdHandle; // モデルが持つ自動まばたき用パラメータIDのハンドル。  モデルとモーションを対応付ける。\r\n  public _modelCurveIdLipSync: CubismIdHandle; // モデルが持つリップシンク用パラメータIDのハンドル。  モデルとモーションを対応付ける。\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotion';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotion = $.CubismMotion;\r\n  export type CubismMotion = $.CubismMotion;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\n\r\n/**\r\n * @brief モーションカーブの種類\r\n *\r\n * モーションカーブの種類。\r\n */\r\nexport enum CubismMotionCurveTarget {\r\n  CubismMotionCurveTarget_Model, // モデルに対して\r\n  CubismMotionCurveTarget_Parameter, // パラメータに対して\r\n  CubismMotionCurveTarget_PartOpacity, // パーツの不透明度に対して\r\n}\r\n\r\n/**\r\n * @brief モーションカーブのセグメントの種類\r\n *\r\n * モーションカーブのセグメントの種類。\r\n */\r\nexport enum CubismMotionSegmentType {\r\n  CubismMotionSegmentType_Linear = 0, // リニア\r\n  CubismMotionSegmentType_Bezier = 1, // ベジェ曲線\r\n  CubismMotionSegmentType_Stepped = 2, // ステップ\r\n  CubismMotionSegmentType_InverseStepped = 3, // インバースステップ\r\n}\r\n\r\n/**\r\n * @brief モーションカーブの制御点\r\n *\r\n * モーションカーブの制御点。\r\n */\r\nexport class CubismMotionPoint {\r\n  time = 0.0; // 時間[秒]\r\n  value = 0.0; // 値\r\n}\r\n\r\n/**\r\n * モーションカーブのセグメントの評価関数\r\n *\r\n * @param   points      モーションカーブの制御点リスト\r\n * @param   time        評価する時間[秒]\r\n */\r\nexport interface csmMotionSegmentEvaluationFunction {\r\n  (points: CubismMotionPoint[], time: number): number;\r\n}\r\n\r\n/**\r\n * @brief モーションカーブのセグメント\r\n *\r\n * モーションカーブのセグメント。\r\n */\r\nexport class CubismMotionSegment {\r\n  /**\r\n   * @brief コンストラクタ\r\n   *\r\n   * コンストラクタ。\r\n   */\r\n  public constructor() {\r\n    this.evaluate = null;\r\n    this.basePointIndex = 0;\r\n    this.segmentType = 0;\r\n  }\r\n\r\n  evaluate: csmMotionSegmentEvaluationFunction; // 使用する評価関数\r\n  basePointIndex: number; // 最初のセグメントへのインデックス\r\n  segmentType: number; // セグメントの種類\r\n}\r\n\r\n/**\r\n * @brief モーションカーブ\r\n *\r\n * モーションカーブ。\r\n */\r\nexport class CubismMotionCurve {\r\n  public constructor() {\r\n    this.type = CubismMotionCurveTarget.CubismMotionCurveTarget_Model;\r\n    this.segmentCount = 0;\r\n    this.baseSegmentIndex = 0;\r\n    this.fadeInTime = 0.0;\r\n    this.fadeOutTime = 0.0;\r\n  }\r\n\r\n  type: CubismMotionCurveTarget; // カーブの種類\r\n  id: CubismIdHandle; // カーブのID\r\n  segmentCount: number; // セグメントの個数\r\n  baseSegmentIndex: number; // 最初のセグメントのインデックス\r\n  fadeInTime: number; // フェードインにかかる時間[秒]\r\n  fadeOutTime: number; // フェードアウトにかかる時間[秒]\r\n}\r\n\r\n/**\r\n * イベント。\r\n */\r\nexport class CubismMotionEvent {\r\n  fireTime = 0.0;\r\n  value: csmString;\r\n}\r\n\r\n/**\r\n * @brief モーションデータ\r\n *\r\n * モーションデータ。\r\n */\r\nexport class CubismMotionData {\r\n  public constructor() {\r\n    this.duration = 0.0;\r\n    this.loop = false;\r\n    this.curveCount = 0;\r\n    this.eventCount = 0;\r\n    this.fps = 0.0;\r\n\r\n    this.curves = new csmVector<CubismMotionCurve>();\r\n    this.segments = new csmVector<CubismMotionSegment>();\r\n    this.points = new csmVector<CubismMotionPoint>();\r\n    this.events = new csmVector<CubismMotionEvent>();\r\n  }\r\n\r\n  duration: number; // モーションの長さ[秒]\r\n  loop: boolean; // ループするかどうか\r\n  curveCount: number; // カーブの個数\r\n  eventCount: number; // UserDataの個数\r\n  fps: number; // フレームレート\r\n  curves: csmVector<CubismMotionCurve>; // カーブのリスト\r\n  segments: csmVector<CubismMotionSegment>; // セグメントのリスト\r\n  points: csmVector<CubismMotionPoint>; // ポイントのリスト\r\n  events: csmVector<CubismMotionEvent>; // イベントのリスト\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotioninternal';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotionCurve = $.CubismMotionCurve;\r\n  export type CubismMotionCurve = $.CubismMotionCurve;\r\n  export const CubismMotionCurveTarget = $.CubismMotionCurveTarget;\r\n  export type CubismMotionCurveTarget = $.CubismMotionCurveTarget;\r\n  export const CubismMotionData = $.CubismMotionData;\r\n  export type CubismMotionData = $.CubismMotionData;\r\n  export const CubismMotionEvent = $.CubismMotionEvent;\r\n  export type CubismMotionEvent = $.CubismMotionEvent;\r\n  export const CubismMotionPoint = $.CubismMotionPoint;\r\n  export type CubismMotionPoint = $.CubismMotionPoint;\r\n  export const CubismMotionSegment = $.CubismMotionSegment;\r\n  export type CubismMotionSegment = $.CubismMotionSegment;\r\n  export const CubismMotionSegmentType = $.CubismMotionSegmentType;\r\n  export type CubismMotionSegmentType = $.CubismMotionSegmentType;\r\n  export type csmMotionSegmentEvaluationFunction =\r\n    $.csmMotionSegmentEvaluationFunction;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { csmString } from '../type/csmstring';\r\nimport { CubismJson, JsonMap } from '../utils/cubismjson';\r\n\r\n// JSON keys\r\nconst Meta = 'Meta';\r\nconst Duration = 'Duration';\r\nconst Loop = 'Loop';\r\nconst AreBeziersRestricted = 'AreBeziersRestricted';\r\nconst CurveCount = 'CurveCount';\r\nconst Fps = 'Fps';\r\nconst TotalSegmentCount = 'TotalSegmentCount';\r\nconst TotalPointCount = 'TotalPointCount';\r\nconst Curves = 'Curves';\r\nconst Target = 'Target';\r\nconst Id = 'Id';\r\nconst FadeInTime = 'FadeInTime';\r\nconst FadeOutTime = 'FadeOutTime';\r\nconst Segments = 'Segments';\r\nconst UserData = 'UserData';\r\nconst UserDataCount = 'UserDataCount';\r\nconst TotalUserDataSize = 'TotalUserDataSize';\r\nconst Time = 'Time';\r\nconst Value = 'Value';\r\n\r\n/**\r\n * motion3.jsonのコンテナ。\r\n */\r\nexport class CubismMotionJson {\r\n  /**\r\n   * コンストラクタ\r\n   * @param buffer motion3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   */\r\n  public constructor(buffer: ArrayBuffer, size: number) {\r\n    this._json = CubismJson.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    CubismJson.delete(this._json);\r\n  }\r\n\r\n  /**\r\n   * モーションの長さを取得する\r\n   * @return モーションの長さ[秒]\r\n   */\r\n  public getMotionDuration(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(Duration)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのループ情報の取得\r\n   * @return true ループする\r\n   * @return false ループしない\r\n   */\r\n  public isMotionLoop(): boolean {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(Loop)\r\n      .toBoolean();\r\n  }\r\n\r\n  public getEvaluationOptionFlag(flagType: number): boolean {\r\n    if (\r\n      EvaluationOptionFlag.EvaluationOptionFlag_AreBeziersRistricted == flagType\r\n    ) {\r\n      return this._json\r\n        .getRoot()\r\n        .getValueByString(Meta)\r\n        .getValueByString(AreBeziersRestricted)\r\n        .toBoolean();\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * モーションカーブの個数の取得\r\n   * @return モーションカーブの個数\r\n   */\r\n  public getMotionCurveCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(CurveCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * モーションのフレームレートの取得\r\n   * @return フレームレート[FPS]\r\n   */\r\n  public getMotionFps(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(Fps)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのセグメントの総合計の取得\r\n   * @return モーションのセグメントの取得\r\n   */\r\n  public getMotionTotalSegmentCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalSegmentCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブの制御店の総合計の取得\r\n   * @return モーションのカーブの制御点の総合計\r\n   */\r\n  public getMotionTotalPointCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalPointCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * モーションのフェードイン時間の存在\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExistMotionFadeInTime(): boolean {\r\n    return !this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(FadeInTime)\r\n      .isNull();\r\n  }\r\n\r\n  /**\r\n   * モーションのフェードアウト時間の存在\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExistMotionFadeOutTime(): boolean {\r\n    return !this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(FadeOutTime)\r\n      .isNull();\r\n  }\r\n\r\n  /**\r\n   * モーションのフェードイン時間の取得\r\n   * @return フェードイン時間[秒]\r\n   */\r\n  public getMotionFadeInTime(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(FadeInTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのフェードアウト時間の取得\r\n   * @return フェードアウト時間[秒]\r\n   */\r\n  public getMotionFadeOutTime(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(FadeOutTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブの種類の取得\r\n   * @param curveIndex カーブのインデックス\r\n   * @return カーブの種類\r\n   */\r\n  public getMotionCurveTarget(curveIndex: number): string {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(Target)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのIDの取得\r\n   * @param curveIndex カーブのインデックス\r\n   * @return カーブのID\r\n   */\r\n  public getMotionCurveId(curveIndex: number): CubismIdHandle {\r\n    return CubismFramework.getIdManager().getId(\r\n      this._json\r\n        .getRoot()\r\n        .getValueByString(Curves)\r\n        .getValueByIndex(curveIndex)\r\n        .getValueByString(Id)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのフェードイン時間の存在\r\n   * @param curveIndex カーブのインデックス\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExistMotionCurveFadeInTime(curveIndex: number): boolean {\r\n    return !this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(FadeInTime)\r\n      .isNull();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのフェードアウト時間の存在\r\n   * @param curveIndex カーブのインデックス\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExistMotionCurveFadeOutTime(curveIndex: number): boolean {\r\n    return !this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(FadeOutTime)\r\n      .isNull();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのフェードイン時間の取得\r\n   * @param curveIndex カーブのインデックス\r\n   * @return フェードイン時間[秒]\r\n   */\r\n  public getMotionCurveFadeInTime(curveIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(FadeInTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのフェードアウト時間の取得\r\n   * @param curveIndex カーブのインデックス\r\n   * @return フェードアウト時間[秒]\r\n   */\r\n  public getMotionCurveFadeOutTime(curveIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(FadeOutTime)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのセグメントの個数を取得する\r\n   * @param curveIndex カーブのインデックス\r\n   * @return モーションのカーブのセグメントの個数\r\n   */\r\n  public getMotionCurveSegmentCount(curveIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(Segments)\r\n      .getVector()\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * モーションのカーブのセグメントの値の取得\r\n   * @param curveIndex カーブのインデックス\r\n   * @param segmentIndex セグメントのインデックス\r\n   * @return セグメントの値\r\n   */\r\n  public getMotionCurveSegment(\r\n    curveIndex: number,\r\n    segmentIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Curves)\r\n      .getValueByIndex(curveIndex)\r\n      .getValueByString(Segments)\r\n      .getValueByIndex(segmentIndex)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * イベントの個数の取得\r\n   * @return イベントの個数\r\n   */\r\n  public getEventCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(UserDataCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   *  イベントの総文字数の取得\r\n   * @return イベントの総文字数\r\n   */\r\n  public getTotalEventValueSize(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalUserDataSize)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * イベントの時間の取得\r\n   * @param userDataIndex イベントのインデックス\r\n   * @return イベントの時間[秒]\r\n   */\r\n  public getEventTime(userDataIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(UserData)\r\n      .getValueByIndex(userDataIndex)\r\n      .getValueByString(Time)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * イベントの取得\r\n   * @param userDataIndex イベントのインデックス\r\n   * @return イベントの文字列\r\n   */\r\n  public getEventValue(userDataIndex: number): csmString {\r\n    return new csmString(\r\n      this._json\r\n        .getRoot()\r\n        .getValueByString(UserData)\r\n        .getValueByIndex(userDataIndex)\r\n        .getValueByString(Value)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  _json: CubismJson; // motion3.jsonのデータ\r\n}\r\n\r\n/**\r\n * @brief ベジェカーブの解釈方法のフラグタイプ\r\n */\r\nexport enum EvaluationOptionFlag {\r\n  EvaluationOptionFlag_AreBeziersRistricted = 0, ///< ベジェハンドルの規制状態\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotionjson';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotionJson = $.CubismMotionJson;\r\n  export type CubismMotionJson = $.CubismMotionJson;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { ACubismMotion } from './acubismmotion';\r\nimport {\r\n  CubismMotionQueueEntryHandle,\r\n  CubismMotionQueueManager,\r\n} from './cubismmotionqueuemanager';\r\n\r\n/**\r\n * モーションの管理\r\n *\r\n * モーションの管理を行うクラス\r\n */\r\nexport class CubismMotionManager extends CubismMotionQueueManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._currentPriority = 0;\r\n    this._reservePriority = 0;\r\n  }\r\n\r\n  /**\r\n   * 再生中のモーションの優先度の取得\r\n   * @return  モーションの優先度\r\n   */\r\n  public getCurrentPriority(): number {\r\n    return this._currentPriority;\r\n  }\r\n\r\n  /**\r\n   * 予約中のモーションの優先度を取得する。\r\n   * @return  モーションの優先度\r\n   */\r\n  public getReservePriority(): number {\r\n    return this._reservePriority;\r\n  }\r\n\r\n  /**\r\n   * 予約中のモーションの優先度を設定する。\r\n   * @param   val     優先度\r\n   */\r\n  public setReservePriority(val: number): void {\r\n    this._reservePriority = val;\r\n  }\r\n\r\n  /**\r\n   * 優先度を設定してモーションを開始する。\r\n   *\r\n   * @param motion          モーション\r\n   * @param autoDelete      再生が狩猟したモーションのインスタンスを削除するならtrue\r\n   * @param priority        優先度\r\n   * @return                開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\r\n   */\r\n  public startMotionPriority(\r\n    motion: ACubismMotion,\r\n    autoDelete: boolean,\r\n    priority: number\r\n  ): CubismMotionQueueEntryHandle {\r\n    if (priority == this._reservePriority) {\r\n      this._reservePriority = 0; // 予約を解除\r\n    }\r\n\r\n    this._currentPriority = priority; // 再生中モーションの優先度を設定\r\n\r\n    return super.startMotion(motion, autoDelete, this._userTimeSeconds);\r\n  }\r\n\r\n  /**\r\n   * モーションを更新して、モデルにパラメータ値を反映する。\r\n   *\r\n   * @param model   対象のモデル\r\n   * @param deltaTimeSeconds    デルタ時間[秒]\r\n   * @return  true    更新されている\r\n   * @return  false   更新されていない\r\n   */\r\n  public updateMotion(model: CubismModel, deltaTimeSeconds: number): boolean {\r\n    this._userTimeSeconds += deltaTimeSeconds;\r\n\r\n    const updated: boolean = super.doUpdateMotion(model, this._userTimeSeconds);\r\n\r\n    if (this.isFinished()) {\r\n      this._currentPriority = 0; // 再生中のモーションの優先度を解除\r\n    }\r\n\r\n    return updated;\r\n  }\r\n\r\n  /**\r\n   * モーションを予約する。\r\n   *\r\n   * @param   priority    優先度\r\n   * @return  true    予約できた\r\n   * @return  false   予約できなかった\r\n   */\r\n  public reserveMotion(priority: number): boolean {\r\n    if (\r\n      priority <= this._reservePriority ||\r\n      priority <= this._currentPriority\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    this._reservePriority = priority;\r\n\r\n    return true;\r\n  }\r\n\r\n  _currentPriority: number; // 現在再生中のモーションの優先度\r\n  _reservePriority: number; // 再生予定のモーションの優先度。再生中は0になる。モーションファイルを別スレッドで読み込むときの機能。\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotionmanager';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotionManager = $.CubismMotionManager;\r\n  export type CubismMotionManager = $.CubismMotionManager;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { ACubismMotion } from './acubismmotion';\r\nimport { CubismMotionQueueEntryHandle } from './cubismmotionqueuemanager';\r\n\r\n/**\r\n * CubismMotionQueueManagerで再生している各モーションの管理クラス。\r\n */\r\nexport class CubismMotionQueueEntry {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._autoDelete = false;\r\n    this._motion = null;\r\n    this._available = true;\r\n    this._finished = false;\r\n    this._started = false;\r\n    this._startTimeSeconds = -1.0;\r\n    this._fadeInStartTimeSeconds = 0.0;\r\n    this._endTimeSeconds = -1.0;\r\n    this._stateTimeSeconds = 0.0;\r\n    this._stateWeight = 0.0;\r\n    this._lastEventCheckSeconds = 0.0;\r\n    this._motionQueueEntryHandle = this;\r\n    this._fadeOutSeconds = 0.0;\r\n    this._isTriggeredFadeOut = false;\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    if (this._autoDelete && this._motion) {\r\n      ACubismMotion.delete(this._motion); //\r\n    }\r\n  }\r\n\r\n  /**\r\n   * フェードアウト時間と開始判定の設定\r\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\r\n   */\r\n  public setFadeOut(fadeOutSeconds: number): void {\r\n    this._fadeOutSeconds = fadeOutSeconds;\r\n    this._isTriggeredFadeOut = true;\r\n  }\r\n\r\n  /**\r\n   * フェードアウトの開始\r\n   * @param fadeOutSeconds フェードアウトにかかる時間[秒]\r\n   * @param userTimeSeconds デルタ時間の積算値[秒]\r\n   */\r\n  public startFadeOut(fadeOutSeconds: number, userTimeSeconds: number): void {\r\n    const newEndTimeSeconds: number = userTimeSeconds + fadeOutSeconds;\r\n    this._isTriggeredFadeOut = true;\r\n\r\n    if (\r\n      this._endTimeSeconds < 0.0 ||\r\n      newEndTimeSeconds < this._endTimeSeconds\r\n    ) {\r\n      this._endTimeSeconds = newEndTimeSeconds;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * モーションの終了の確認\r\n   *\r\n   * @return true モーションが終了した\r\n   * @return false 終了していない\r\n   */\r\n  public isFinished(): boolean {\r\n    return this._finished;\r\n  }\r\n\r\n  /**\r\n   * モーションの開始の確認\r\n   * @return true モーションが開始した\r\n   * @return false 開始していない\r\n   */\r\n  public isStarted(): boolean {\r\n    return this._started;\r\n  }\r\n\r\n  /**\r\n   * モーションの開始時刻の取得\r\n   * @return モーションの開始時刻[秒]\r\n   */\r\n  public getStartTime(): number {\r\n    return this._startTimeSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードインの開始時刻の取得\r\n   * @return フェードインの開始時刻[秒]\r\n   */\r\n  public getFadeInStartTime(): number {\r\n    return this._fadeInStartTimeSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードインの終了時刻の取得\r\n   * @return フェードインの終了時刻の取得\r\n   */\r\n  public getEndTime(): number {\r\n    return this._endTimeSeconds;\r\n  }\r\n\r\n  /**\r\n   * モーションの開始時刻の設定\r\n   * @param startTime モーションの開始時刻\r\n   */\r\n  public setStartTime(startTime: number): void {\r\n    this._startTimeSeconds = startTime;\r\n  }\r\n\r\n  /**\r\n   * フェードインの開始時刻の設定\r\n   * @param startTime フェードインの開始時刻[秒]\r\n   */\r\n  public setFadeInStartTime(startTime: number): void {\r\n    this._fadeInStartTimeSeconds = startTime;\r\n  }\r\n\r\n  /**\r\n   * フェードインの終了時刻の設定\r\n   * @param endTime フェードインの終了時刻[秒]\r\n   */\r\n  public setEndTime(endTime: number): void {\r\n    this._endTimeSeconds = endTime;\r\n  }\r\n\r\n  /**\r\n   * モーションの終了の設定\r\n   * @param f trueならモーションの終了\r\n   */\r\n  public setIsFinished(f: boolean): void {\r\n    this._finished = f;\r\n  }\r\n\r\n  /**\r\n   * モーション開始の設定\r\n   * @param f trueならモーションの開始\r\n   */\r\n  public setIsStarted(f: boolean): void {\r\n    this._started = f;\r\n  }\r\n\r\n  /**\r\n   * モーションの有効性の確認\r\n   * @return true モーションは有効\r\n   * @return false モーションは無効\r\n   */\r\n  public isAvailable(): boolean {\r\n    return this._available;\r\n  }\r\n\r\n  /**\r\n   * モーションの有効性の設定\r\n   * @param v trueならモーションは有効\r\n   */\r\n  public setIsAvailable(v: boolean): void {\r\n    this._available = v;\r\n  }\r\n\r\n  /**\r\n   * モーションの状態の設定\r\n   * @param timeSeconds 現在時刻[秒]\r\n   * @param weight モーション尾重み\r\n   */\r\n  public setState(timeSeconds: number, weight: number): void {\r\n    this._stateTimeSeconds = timeSeconds;\r\n    this._stateWeight = weight;\r\n  }\r\n\r\n  /**\r\n   * モーションの現在時刻の取得\r\n   * @return モーションの現在時刻[秒]\r\n   */\r\n  public getStateTime(): number {\r\n    return this._stateTimeSeconds;\r\n  }\r\n\r\n  /**\r\n   * モーションの重みの取得\r\n   * @return モーションの重み\r\n   */\r\n  public getStateWeight(): number {\r\n    return this._stateWeight;\r\n  }\r\n\r\n  /**\r\n   * 最後にイベントの発火をチェックした時間を取得\r\n   *\r\n   * @return 最後にイベントの発火をチェックした時間[秒]\r\n   */\r\n  public getLastCheckEventSeconds(): number {\r\n    return this._lastEventCheckSeconds;\r\n  }\r\n\r\n  /**\r\n   * 最後にイベントをチェックした時間を設定\r\n   * @param checkSeconds 最後にイベントをチェックした時間[秒]\r\n   */\r\n  public setLastCheckEventSeconds(checkSeconds: number): void {\r\n    this._lastEventCheckSeconds = checkSeconds;\r\n  }\r\n\r\n  /**\r\n   * フェードアウト開始判定の取得\r\n   * @return フェードアウト開始するかどうか\r\n   */\r\n  public isTriggeredFadeOut(): boolean {\r\n    return this._isTriggeredFadeOut;\r\n  }\r\n\r\n  /**\r\n   * フェードアウト時間の取得\r\n   * @return フェードアウト時間[秒]\r\n   */\r\n  public getFadeOutSeconds(): number {\r\n    return this._fadeOutSeconds;\r\n  }\r\n\r\n  _autoDelete: boolean; // 自動削除\r\n  _motion: ACubismMotion; // モーション\r\n\r\n  _available: boolean; // 有効化フラグ\r\n  _finished: boolean; // 終了フラグ\r\n  _started: boolean; // 開始フラグ\r\n  _startTimeSeconds: number; // モーション再生開始時刻[秒]\r\n  _fadeInStartTimeSeconds: number; // フェードイン開始時刻（ループの時は初回のみ）[秒]\r\n  _endTimeSeconds: number; // 終了予定時刻[秒]\r\n  _stateTimeSeconds: number; // 時刻の状態[秒]\r\n  _stateWeight: number; // 重みの状態\r\n  _lastEventCheckSeconds: number; // 最終のMotion側のチェックした時間\r\n  private _fadeOutSeconds: number; // フェードアウト時間[秒]\r\n  private _isTriggeredFadeOut: boolean; // フェードアウト開始フラグ\r\n\r\n  _motionQueueEntryHandle: CubismMotionQueueEntryHandle; // インスタンスごとに一意の値を持つ識別番号\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotionqueueentry';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotionQueueEntry = $.CubismMotionQueueEntry;\r\n  export type CubismMotionQueueEntry = $.CubismMotionQueueEntry;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { ACubismMotion } from './acubismmotion';\r\nimport { CubismMotionQueueEntry } from './cubismmotionqueueentry';\r\nimport { csmVector, iterator } from '../type/csmvector';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmString } from '../type/csmstring';\r\n\r\n/**\r\n * モーション再生の管理\r\n *\r\n * モーション再生の管理用クラス。CubismMotionモーションなどACubismMotionのサブクラスを再生するために使用する。\r\n *\r\n * @note 再生中に別のモーションが StartMotion()された場合は、新しいモーションに滑らかに変化し旧モーションは中断する。\r\n *       表情用モーション、体用モーションなどを分けてモーション化した場合など、\r\n *       複数のモーションを同時に再生させる場合は、複数のCubismMotionQueueManagerインスタンスを使用する。\r\n */\r\nexport class CubismMotionQueueManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._userTimeSeconds = 0.0;\r\n    this._eventCallBack = null;\r\n    this._eventCustomData = null;\r\n    this._motions = new csmVector<CubismMotionQueueEntry>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ\r\n   */\r\n  public release(): void {\r\n    for (let i = 0; i < this._motions.getSize(); ++i) {\r\n      if (this._motions.at(i)) {\r\n        this._motions.at(i).release();\r\n        this._motions.set(i, null);\r\n      }\r\n    }\r\n\r\n    this._motions = null;\r\n  }\r\n\r\n  /**\r\n   * 指定したモーションの開始\r\n   *\r\n   * 指定したモーションを開始する。同じタイプのモーションが既にある場合は、既存のモーションに終了フラグを立て、フェードアウトを開始させる。\r\n   *\r\n   * @param   motion          開始するモーション\r\n   * @param   autoDelete      再生が終了したモーションのインスタンスを削除するなら true\r\n   * @param   userTimeSeconds デルタ時間の積算値[秒]\r\n   * @return                      開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するIsFinished()の引数で使用する。開始できない時は「-1」\r\n   */\r\n  public startMotion(\r\n    motion: ACubismMotion,\r\n    autoDelete: boolean,\r\n    userTimeSeconds: number\r\n  ): CubismMotionQueueEntryHandle {\r\n    if (motion == null) {\r\n      return InvalidMotionQueueEntryHandleValue;\r\n    }\r\n\r\n    let motionQueueEntry: CubismMotionQueueEntry = null;\r\n\r\n    // 既にモーションがあれば終了フラグを立てる\r\n    for (let i = 0; i < this._motions.getSize(); ++i) {\r\n      motionQueueEntry = this._motions.at(i);\r\n      if (motionQueueEntry == null) {\r\n        continue;\r\n      }\r\n\r\n      motionQueueEntry.setFadeOut(motionQueueEntry._motion.getFadeOutTime()); // フェードアウト設定\r\n    }\r\n\r\n    motionQueueEntry = new CubismMotionQueueEntry(); // 終了時に破棄する\r\n    motionQueueEntry._autoDelete = autoDelete;\r\n    motionQueueEntry._motion = motion;\r\n\r\n    this._motions.pushBack(motionQueueEntry);\r\n\r\n    return motionQueueEntry._motionQueueEntryHandle;\r\n  }\r\n\r\n  /**\r\n   * 全てのモーションの終了の確認\r\n   * @return true 全て終了している\r\n   * @return false 終了していない\r\n   */\r\n  public isFinished(): boolean {\r\n    // ------- 処理を行う -------\r\n    // 既にモーションがあれば終了フラグを立てる\r\n\r\n    for (\r\n      let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\r\n      ite.notEqual(this._motions.end());\r\n\r\n    ) {\r\n      let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\r\n\r\n      if (motionQueueEntry == null) {\r\n        ite = this._motions.erase(ite); // 削除\r\n        continue;\r\n      }\r\n\r\n      const motion: ACubismMotion = motionQueueEntry._motion;\r\n\r\n      if (motion == null) {\r\n        motionQueueEntry.release();\r\n        motionQueueEntry = null;\r\n        ite = this._motions.erase(ite); // 削除\r\n        continue;\r\n      }\r\n\r\n      // ----- 終了済みの処理があれば削除する ------\r\n      if (!motionQueueEntry.isFinished()) {\r\n        return false;\r\n      } else {\r\n        ite.preIncrement();\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 指定したモーションの終了の確認\r\n   * @param motionQueueEntryNumber モーションの識別番号\r\n   * @return true 全て終了している\r\n   * @return false 終了していない\r\n   */\r\n  public isFinishedByHandle(\r\n    motionQueueEntryNumber: CubismMotionQueueEntryHandle\r\n  ): boolean {\r\n    for (\r\n      let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\r\n      ite.notEqual(this._motions.end());\r\n      ite.increment()\r\n    ) {\r\n      const motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\r\n\r\n      if (motionQueueEntry == null) {\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber &&\r\n        !motionQueueEntry.isFinished()\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 全てのモーションを停止する\r\n   */\r\n  public stopAllMotions(): void {\r\n    // ------- 処理を行う -------\r\n    // 既にモーションがあれば終了フラグを立てる\r\n\r\n    for (\r\n      let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\r\n      ite.notEqual(this._motions.end());\r\n\r\n    ) {\r\n      let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\r\n\r\n      if (motionQueueEntry == null) {\r\n        ite = this._motions.erase(ite);\r\n\r\n        continue;\r\n      }\r\n\r\n      // ----- 終了済みの処理があれば削除する ------\r\n      motionQueueEntry.release();\r\n      motionQueueEntry = null;\r\n      ite = this._motions.erase(ite); // 削除\r\n    }\r\n  }\r\n\r\n  /**\r\n       * 指定したCubismMotionQueueEntryの取得\r\n\r\n        * @param   motionQueueEntryNumber  モーションの識別番号\r\n        * @return  指定したCubismMotionQueueEntry\r\n        * @return  null   見つからなかった\r\n        */\r\n  public getCubismMotionQueueEntry(\r\n    motionQueueEntryNumber: any\r\n  ): CubismMotionQueueEntry {\r\n    //------- 処理を行う -------\r\n    for (\r\n      let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\r\n      ite.notEqual(this._motions.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      const motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\r\n\r\n      if (motionQueueEntry == null) {\r\n        continue;\r\n      }\r\n\r\n      if (motionQueueEntry._motionQueueEntryHandle == motionQueueEntryNumber) {\r\n        return motionQueueEntry;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * イベントを受け取るCallbackの登録\r\n   *\r\n   * @param callback コールバック関数\r\n   * @param customData コールバックに返されるデータ\r\n   */\r\n  public setEventCallback(\r\n    callback: CubismMotionEventFunction,\r\n    customData: any = null\r\n  ): void {\r\n    this._eventCallBack = callback;\r\n    this._eventCustomData = customData;\r\n  }\r\n\r\n  /**\r\n   * モーションを更新して、モデルにパラメータ値を反映する。\r\n   *\r\n   * @param   model   対象のモデル\r\n   * @param   userTimeSeconds   デルタ時間の積算値[秒]\r\n   * @return  true    モデルへパラメータ値の反映あり\r\n   * @return  false   モデルへパラメータ値の反映なし(モーションの変化なし)\r\n   */\r\n  public doUpdateMotion(model: CubismModel, userTimeSeconds: number): boolean {\r\n    let updated = false;\r\n\r\n    // ------- 処理を行う --------\r\n    // 既にモーションがあれば終了フラグを立てる\r\n\r\n    for (\r\n      let ite: iterator<CubismMotionQueueEntry> = this._motions.begin();\r\n      ite.notEqual(this._motions.end());\r\n\r\n    ) {\r\n      let motionQueueEntry: CubismMotionQueueEntry = ite.ptr();\r\n\r\n      if (motionQueueEntry == null) {\r\n        ite = this._motions.erase(ite); // 削除\r\n        continue;\r\n      }\r\n\r\n      const motion: ACubismMotion = motionQueueEntry._motion;\r\n\r\n      if (motion == null) {\r\n        motionQueueEntry.release();\r\n        motionQueueEntry = null;\r\n        ite = this._motions.erase(ite); // 削除\r\n\r\n        continue;\r\n      }\r\n\r\n      // ------ 値を反映する ------\r\n      motion.updateParameters(model, motionQueueEntry, userTimeSeconds);\r\n      updated = true;\r\n\r\n      // ------ ユーザトリガーイベントを検査する ----\r\n      const firedList: csmVector<csmString> = motion.getFiredEvent(\r\n        motionQueueEntry.getLastCheckEventSeconds() -\r\n          motionQueueEntry.getStartTime(),\r\n        userTimeSeconds - motionQueueEntry.getStartTime()\r\n      );\r\n\r\n      for (let i = 0; i < firedList.getSize(); ++i) {\r\n        this._eventCallBack(this, firedList.at(i), this._eventCustomData);\r\n      }\r\n\r\n      motionQueueEntry.setLastCheckEventSeconds(userTimeSeconds);\r\n\r\n      // ------ 終了済みの処理があれば削除する ------\r\n      if (motionQueueEntry.isFinished()) {\r\n        motionQueueEntry.release();\r\n        motionQueueEntry = null;\r\n        ite = this._motions.erase(ite); // 削除\r\n      } else {\r\n        if (motionQueueEntry.isTriggeredFadeOut()) {\r\n          motionQueueEntry.startFadeOut(\r\n            motionQueueEntry.getFadeOutSeconds(),\r\n            userTimeSeconds\r\n          );\r\n        }\r\n        ite.preIncrement();\r\n      }\r\n    }\r\n\r\n    return updated;\r\n  }\r\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\r\n\r\n  _motions: csmVector<CubismMotionQueueEntry>; // モーション\r\n  _eventCallBack: CubismMotionEventFunction; // コールバック関数\r\n  _eventCustomData: any; // コールバックに戻されるデータ\r\n}\r\n\r\n/**\r\n * イベントのコールバック関数を定義\r\n *\r\n * イベントのコールバックに登録できる関数の型情報\r\n * @param caller        発火したイベントを再生させたCubismMotionQueueManager\r\n * @param eventValue    発火したイベントの文字列データ\r\n * @param customData   コールバックに返される登録時に指定されたデータ\r\n */\r\nexport interface CubismMotionEventFunction {\r\n  (\r\n    caller: CubismMotionQueueManager,\r\n    eventValue: csmString,\r\n    customData: any\r\n  ): void;\r\n}\r\n\r\n/**\r\n * モーションの識別番号\r\n *\r\n * モーションの識別番号の定義\r\n */\r\nexport declare type CubismMotionQueueEntryHandle = any;\r\nexport const InvalidMotionQueueEntryHandleValue: CubismMotionQueueEntryHandle =\r\n  -1;\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmotionqueuemanager';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMotionQueueManager = $.CubismMotionQueueManager;\r\n  export type CubismMotionQueueManager = $.CubismMotionQueueManager;\r\n  export const InvalidMotionQueueEntryHandleValue =\r\n    $.InvalidMotionQueueEntryHandleValue;\r\n  export type CubismMotionQueueEntryHandle = $.CubismMotionQueueEntryHandle;\r\n  export type CubismMotionEventFunction = $.CubismMotionEventFunction;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMath } from '../math/cubismmath';\r\nimport { CubismVector2 } from '../math/cubismvector2';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport {\r\n  CubismPhysicsInput,\r\n  CubismPhysicsNormalization,\r\n  CubismPhysicsOutput,\r\n  CubismPhysicsParticle,\r\n  CubismPhysicsRig,\r\n  CubismPhysicsSource,\r\n  CubismPhysicsSubRig,\r\n  CubismPhysicsTargetType,\r\n} from './cubismphysicsinternal';\r\nimport { CubismPhysicsJson } from './cubismphysicsjson';\r\n\r\n// physics types tags.\r\nconst PhysicsTypeTagX = 'X';\r\nconst PhysicsTypeTagY = 'Y';\r\nconst PhysicsTypeTagAngle = 'Angle';\r\n\r\n// Constant of air resistance.\r\nconst AirResistance = 5.0;\r\n\r\n// Constant of maximum weight of input and output ratio.\r\nconst MaximumWeight = 100.0;\r\n\r\n// Constant of threshold of movement.\r\nconst MovementThreshold = 0.001;\r\n\r\n// Constant of maximum allowed delta time\r\nconst MaxDeltaTime = 5.0;\r\n\r\n/**\r\n * 物理演算クラス\r\n */\r\nexport class CubismPhysics {\r\n  /**\r\n   * インスタンスの作成\r\n   * @param buffer    physics3.jsonが読み込まれているバッファ\r\n   * @param size      バッファのサイズ\r\n   * @return 作成されたインスタンス\r\n   */\r\n  public static create(buffer: ArrayBuffer, size: number): CubismPhysics {\r\n    const ret: CubismPhysics = new CubismPhysics();\r\n\r\n    ret.parse(buffer, size);\r\n    ret._physicsRig.gravity.y = 0;\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * インスタンスを破棄する\r\n   * @param physics 破棄するインスタンス\r\n   */\r\n  public static delete(physics: CubismPhysics): void {\r\n    if (physics != null) {\r\n      physics.release();\r\n      physics = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * physics3.jsonをパースする。\r\n   * @param physicsJson physics3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   */\r\n  public parse(physicsJson: ArrayBuffer, size: number): void {\r\n    this._physicsRig = new CubismPhysicsRig();\r\n\r\n    let json: CubismPhysicsJson = new CubismPhysicsJson(physicsJson, size);\r\n\r\n    this._physicsRig.gravity = json.getGravity();\r\n    this._physicsRig.wind = json.getWind();\r\n    this._physicsRig.subRigCount = json.getSubRigCount();\r\n\r\n    this._physicsRig.fps = json.getFps();\r\n\r\n    this._physicsRig.settings.updateSize(\r\n      this._physicsRig.subRigCount,\r\n      CubismPhysicsSubRig,\r\n      true\r\n    );\r\n    this._physicsRig.inputs.updateSize(\r\n      json.getTotalInputCount(),\r\n      CubismPhysicsInput,\r\n      true\r\n    );\r\n    this._physicsRig.outputs.updateSize(\r\n      json.getTotalOutputCount(),\r\n      CubismPhysicsOutput,\r\n      true\r\n    );\r\n    this._physicsRig.particles.updateSize(\r\n      json.getVertexCount(),\r\n      CubismPhysicsParticle,\r\n      true\r\n    );\r\n\r\n    this._currentRigOutputs.clear();\r\n    this._previousRigOutputs.clear();\r\n\r\n    let inputIndex = 0,\r\n      outputIndex = 0,\r\n      particleIndex = 0;\r\n\r\n    for (let i = 0; i < this._physicsRig.settings.getSize(); ++i) {\r\n      this._physicsRig.settings.at(i).normalizationPosition.minimum =\r\n        json.getNormalizationPositionMinimumValue(i);\r\n      this._physicsRig.settings.at(i).normalizationPosition.maximum =\r\n        json.getNormalizationPositionMaximumValue(i);\r\n      this._physicsRig.settings.at(i).normalizationPosition.defalut =\r\n        json.getNormalizationPositionDefaultValue(i);\r\n\r\n      this._physicsRig.settings.at(i).normalizationAngle.minimum =\r\n        json.getNormalizationAngleMinimumValue(i);\r\n      this._physicsRig.settings.at(i).normalizationAngle.maximum =\r\n        json.getNormalizationAngleMaximumValue(i);\r\n      this._physicsRig.settings.at(i).normalizationAngle.defalut =\r\n        json.getNormalizationAngleDefaultValue(i);\r\n\r\n      // Input\r\n      this._physicsRig.settings.at(i).inputCount = json.getInputCount(i);\r\n      this._physicsRig.settings.at(i).baseInputIndex = inputIndex;\r\n\r\n      for (let j = 0; j < this._physicsRig.settings.at(i).inputCount; ++j) {\r\n        this._physicsRig.inputs.at(inputIndex + j).sourceParameterIndex = -1;\r\n        this._physicsRig.inputs.at(inputIndex + j).weight = json.getInputWeight(\r\n          i,\r\n          j\r\n        );\r\n        this._physicsRig.inputs.at(inputIndex + j).reflect =\r\n          json.getInputReflect(i, j);\r\n\r\n        if (json.getInputType(i, j) == PhysicsTypeTagX) {\r\n          this._physicsRig.inputs.at(inputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_X;\r\n          this._physicsRig.inputs.at(\r\n            inputIndex + j\r\n          ).getNormalizedParameterValue =\r\n            getInputTranslationXFromNormalizedParameterValue;\r\n        } else if (json.getInputType(i, j) == PhysicsTypeTagY) {\r\n          this._physicsRig.inputs.at(inputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_Y;\r\n          this._physicsRig.inputs.at(\r\n            inputIndex + j\r\n          ).getNormalizedParameterValue =\r\n            getInputTranslationYFromNormalizedParamterValue;\r\n        } else if (json.getInputType(i, j) == PhysicsTypeTagAngle) {\r\n          this._physicsRig.inputs.at(inputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_Angle;\r\n          this._physicsRig.inputs.at(\r\n            inputIndex + j\r\n          ).getNormalizedParameterValue =\r\n            getInputAngleFromNormalizedParameterValue;\r\n        }\r\n\r\n        this._physicsRig.inputs.at(inputIndex + j).source.targetType =\r\n          CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\r\n        this._physicsRig.inputs.at(inputIndex + j).source.id =\r\n          json.getInputSourceId(i, j);\r\n      }\r\n      inputIndex += this._physicsRig.settings.at(i).inputCount;\r\n\r\n      // Output\r\n      this._physicsRig.settings.at(i).outputCount = json.getOutputCount(i);\r\n      this._physicsRig.settings.at(i).baseOutputIndex = outputIndex;\r\n\r\n      const currentRigOutput = new PhysicsOutput();\r\n      currentRigOutput.outputs.resize(\r\n        this._physicsRig.settings.at(i).outputCount\r\n      );\r\n\r\n      const previousRigOutput = new PhysicsOutput();\r\n      previousRigOutput.outputs.resize(\r\n        this._physicsRig.settings.at(i).outputCount\r\n      );\r\n\r\n      for (let j = 0; j < this._physicsRig.settings.at(i).outputCount; ++j) {\r\n        // initialize\r\n        currentRigOutput.outputs[j] = 0.0;\r\n        previousRigOutput.outputs[j] = 0.0;\r\n\r\n        this._physicsRig.outputs.at(outputIndex + j).destinationParameterIndex =\r\n          -1;\r\n        this._physicsRig.outputs.at(outputIndex + j).vertexIndex =\r\n          json.getOutputVertexIndex(i, j);\r\n        this._physicsRig.outputs.at(outputIndex + j).angleScale =\r\n          json.getOutputAngleScale(i, j);\r\n        this._physicsRig.outputs.at(outputIndex + j).weight =\r\n          json.getOutputWeight(i, j);\r\n        this._physicsRig.outputs.at(outputIndex + j).destination.targetType =\r\n          CubismPhysicsTargetType.CubismPhysicsTargetType_Parameter;\r\n\r\n        this._physicsRig.outputs.at(outputIndex + j).destination.id =\r\n          json.getOutputDestinationId(i, j);\r\n\r\n        if (json.getOutputType(i, j) == PhysicsTypeTagX) {\r\n          this._physicsRig.outputs.at(outputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_X;\r\n          this._physicsRig.outputs.at(outputIndex + j).getValue =\r\n            getOutputTranslationX;\r\n          this._physicsRig.outputs.at(outputIndex + j).getScale =\r\n            getOutputScaleTranslationX;\r\n        } else if (json.getOutputType(i, j) == PhysicsTypeTagY) {\r\n          this._physicsRig.outputs.at(outputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_Y;\r\n          this._physicsRig.outputs.at(outputIndex + j).getValue =\r\n            getOutputTranslationY;\r\n          this._physicsRig.outputs.at(outputIndex + j).getScale =\r\n            getOutputScaleTranslationY;\r\n        } else if (json.getOutputType(i, j) == PhysicsTypeTagAngle) {\r\n          this._physicsRig.outputs.at(outputIndex + j).type =\r\n            CubismPhysicsSource.CubismPhysicsSource_Angle;\r\n          this._physicsRig.outputs.at(outputIndex + j).getValue =\r\n            getOutputAngle;\r\n          this._physicsRig.outputs.at(outputIndex + j).getScale =\r\n            getOutputScaleAngle;\r\n        }\r\n\r\n        this._physicsRig.outputs.at(outputIndex + j).reflect =\r\n          json.getOutputReflect(i, j);\r\n      }\r\n\r\n      this._currentRigOutputs.pushBack(currentRigOutput);\r\n      this._previousRigOutputs.pushBack(previousRigOutput);\r\n\r\n      outputIndex += this._physicsRig.settings.at(i).outputCount;\r\n\r\n      // Particle\r\n      this._physicsRig.settings.at(i).particleCount = json.getParticleCount(i);\r\n      this._physicsRig.settings.at(i).baseParticleIndex = particleIndex;\r\n\r\n      for (let j = 0; j < this._physicsRig.settings.at(i).particleCount; ++j) {\r\n        this._physicsRig.particles.at(particleIndex + j).mobility =\r\n          json.getParticleMobility(i, j);\r\n        this._physicsRig.particles.at(particleIndex + j).delay =\r\n          json.getParticleDelay(i, j);\r\n        this._physicsRig.particles.at(particleIndex + j).acceleration =\r\n          json.getParticleAcceleration(i, j);\r\n        this._physicsRig.particles.at(particleIndex + j).radius =\r\n          json.getParticleRadius(i, j);\r\n        this._physicsRig.particles.at(particleIndex + j).position =\r\n          json.getParticlePosition(i, j);\r\n      }\r\n\r\n      particleIndex += this._physicsRig.settings.at(i).particleCount;\r\n    }\r\n\r\n    this.initialize();\r\n\r\n    json.release();\r\n    json = void 0;\r\n    json = null;\r\n  }\r\n\r\n  /**\r\n   * 現在のパラメータ値で物理演算が安定化する状態を演算する。\r\n   * @param model 物理演算の結果を適用するモデル\r\n   */\r\n  public stabilization(model: CubismModel): void {\r\n    let totalAngle: { angle: number };\r\n    let weight: number;\r\n    let radAngle: number;\r\n    let outputValue: number;\r\n    const totalTranslation: CubismVector2 = new CubismVector2();\r\n    let currentSetting: CubismPhysicsSubRig;\r\n    let currentInputs: CubismPhysicsInput[];\r\n    let currentOutputs: CubismPhysicsOutput[];\r\n    let currentParticles: CubismPhysicsParticle[];\r\n\r\n    let parameterValues: Float32Array;\r\n    let parameterMaximumValues: Float32Array;\r\n    let parameterMinimumValues: Float32Array;\r\n    let parameterDefaultValues: Float32Array;\r\n\r\n    parameterValues = model.getModel().parameters.values;\r\n    parameterMaximumValues = model.getModel().parameters.maximumValues;\r\n    parameterMinimumValues = model.getModel().parameters.minimumValues;\r\n    parameterDefaultValues = model.getModel().parameters.defaultValues;\r\n\r\n    if ((this._parameterCaches?.length ?? 0) < model.getParameterCount()) {\r\n      this._parameterCaches = new Float32Array(model.getParameterCount());\r\n    }\r\n\r\n    if ((this._parameterInputCaches?.length ?? 0) < model.getParameterCount()) {\r\n      this._parameterInputCaches = new Float32Array(model.getParameterCount());\r\n    }\r\n\r\n    for (let j = 0; j < model.getParameterCount(); ++j) {\r\n      this._parameterCaches[j] = parameterValues[j];\r\n      this._parameterInputCaches[j] = parameterValues[j];\r\n    }\r\n\r\n    for (\r\n      let settingIndex = 0;\r\n      settingIndex < this._physicsRig.subRigCount;\r\n      ++settingIndex\r\n    ) {\r\n      totalAngle = { angle: 0.0 };\r\n      totalTranslation.x = 0.0;\r\n      totalTranslation.y = 0.0;\r\n      currentSetting = this._physicsRig.settings.at(settingIndex);\r\n      currentInputs = this._physicsRig.inputs.get(\r\n        currentSetting.baseInputIndex\r\n      );\r\n      currentOutputs = this._physicsRig.outputs.get(\r\n        currentSetting.baseOutputIndex\r\n      );\r\n      currentParticles = this._physicsRig.particles.get(\r\n        currentSetting.baseParticleIndex\r\n      );\r\n\r\n      // Load input parameters\r\n      for (let i = 0; i < currentSetting.inputCount; ++i) {\r\n        weight = currentInputs[i].weight / MaximumWeight;\r\n\r\n        if (currentInputs[i].sourceParameterIndex == -1) {\r\n          currentInputs[i].sourceParameterIndex = model.getParameterIndex(\r\n            currentInputs[i].source.id\r\n          );\r\n        }\r\n\r\n        currentInputs[i].getNormalizedParameterValue(\r\n          totalTranslation,\r\n          totalAngle,\r\n          parameterValues[currentInputs[i].sourceParameterIndex],\r\n          parameterMinimumValues[currentInputs[i].sourceParameterIndex],\r\n          parameterMaximumValues[currentInputs[i].sourceParameterIndex],\r\n          parameterDefaultValues[currentInputs[i].sourceParameterIndex],\r\n          currentSetting.normalizationPosition,\r\n          currentSetting.normalizationAngle,\r\n          currentInputs[i].reflect,\r\n          weight\r\n        );\r\n\r\n        this._parameterCaches[currentInputs[i].sourceParameterIndex] =\r\n          parameterValues[currentInputs[i].sourceParameterIndex];\r\n      }\r\n\r\n      radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\r\n\r\n      totalTranslation.x =\r\n        totalTranslation.x * CubismMath.cos(radAngle) -\r\n        totalTranslation.y * CubismMath.sin(radAngle);\r\n      totalTranslation.y =\r\n        totalTranslation.x * CubismMath.sin(radAngle) +\r\n        totalTranslation.y * CubismMath.cos(radAngle);\r\n\r\n      // Calculate particles position.\r\n      updateParticlesForStabilization(\r\n        currentParticles,\r\n        currentSetting.particleCount,\r\n        totalTranslation,\r\n        totalAngle.angle,\r\n        this._options.wind,\r\n        MovementThreshold * currentSetting.normalizationPosition.maximum\r\n      );\r\n\r\n      // Update output parameters.\r\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\r\n        const particleIndex = currentOutputs[i].vertexIndex;\r\n\r\n        if (currentOutputs[i].destinationParameterIndex == -1) {\r\n          currentOutputs[i].destinationParameterIndex = model.getParameterIndex(\r\n            currentOutputs[i].destination.id\r\n          );\r\n        }\r\n\r\n        if (\r\n          particleIndex < 1 ||\r\n          particleIndex >= currentSetting.particleCount\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        let translation: CubismVector2 = new CubismVector2();\r\n        translation = currentParticles[particleIndex].position.substract(\r\n          currentParticles[particleIndex - 1].position\r\n        );\r\n\r\n        outputValue = currentOutputs[i].getValue(\r\n          translation,\r\n          currentParticles,\r\n          particleIndex,\r\n          currentOutputs[i].reflect,\r\n          this._options.gravity\r\n        );\r\n\r\n        this._currentRigOutputs.at(settingIndex).outputs[i] = outputValue;\r\n        this._previousRigOutputs.at(settingIndex).outputs[i] = outputValue;\r\n\r\n        const destinationParameterIndex: number =\r\n          currentOutputs[i].destinationParameterIndex;\r\n\r\n        const outParameterCaches: Float32Array =\r\n          !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\r\n            ? JSON.parse(\r\n                JSON.stringify(\r\n                  parameterValues.subarray(destinationParameterIndex)\r\n                )\r\n              ) // 値渡しするため、JSON.parse, JSON.stringify\r\n            : parameterValues.slice(destinationParameterIndex);\r\n\r\n        updateOutputParameterValue(\r\n          outParameterCaches,\r\n          parameterMinimumValues[destinationParameterIndex],\r\n          parameterMaximumValues[destinationParameterIndex],\r\n          outputValue,\r\n          currentOutputs[i]\r\n        );\r\n\r\n        // 値を反映\r\n        for (\r\n          let offset: number = destinationParameterIndex, outParamIndex = 0;\r\n          offset < this._parameterCaches.length;\r\n          offset++, outParamIndex++\r\n        ) {\r\n          parameterValues[offset] = this._parameterCaches[offset] =\r\n            outParameterCaches[outParamIndex];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 物理演算の評価\r\n   *\r\n   * Pendulum interpolation weights\r\n   *\r\n   * 振り子の計算結果は保存され、パラメータへの出力は保存された前回の結果で補間されます。\r\n   * The result of the pendulum calculation is saved and\r\n   * the output to the parameters is interpolated with the saved previous result of the pendulum calculation.\r\n   *\r\n   * 図で示すと[1]と[2]で補間されます。\r\n   * The figure shows the interpolation between [1] and [2].\r\n   *\r\n   * 補間の重みは最新の振り子計算タイミングと次回のタイミングの間で見た現在時間で決定する。\r\n   * The weight of the interpolation are determined by the current time seen between\r\n   * the latest pendulum calculation timing and the next timing.\r\n   *\r\n   * 図で示すと[2]と[4]の間でみた(3)の位置の重みになる。\r\n   * Figure shows the weight of position (3) as seen between [2] and [4].\r\n   *\r\n   * 解釈として振り子計算のタイミングと重み計算のタイミングがズレる。\r\n   * As an interpretation, the pendulum calculation and weights are misaligned.\r\n   *\r\n   * physics3.jsonにFPS情報が存在しない場合は常に前の振り子状態で設定される。\r\n   * If there is no FPS information in physics3.json, it is always set in the previous pendulum state.\r\n   *\r\n   * この仕様は補間範囲を逸脱したことが原因の震えたような見た目を回避を目的にしている。\r\n   * The purpose of this specification is to avoid the quivering appearance caused by deviations from the interpolation range.\r\n   *\r\n   * ------------ time -------------->\r\n   *\r\n   *                 |+++++|------| <- weight\r\n   * ==[1]====#=====[2]---(3)----(4)\r\n   *          ^ output contents\r\n   *\r\n   * 1:_previousRigOutputs\r\n   * 2:_currentRigOutputs\r\n   * 3:_currentRemainTime (now rendering)\r\n   * 4:next particles timing\r\n   * @param model 物理演算の結果を適用するモデル\r\n   * @param deltaTimeSeconds デルタ時間[秒]\r\n   */\r\n  public evaluate(model: CubismModel, deltaTimeSeconds: number): void {\r\n    let totalAngle: { angle: number };\r\n    let weight: number;\r\n    let radAngle: number;\r\n    let outputValue: number;\r\n    const totalTranslation: CubismVector2 = new CubismVector2();\r\n    let currentSetting: CubismPhysicsSubRig;\r\n    let currentInputs: CubismPhysicsInput[];\r\n    let currentOutputs: CubismPhysicsOutput[];\r\n    let currentParticles: CubismPhysicsParticle[];\r\n\r\n    if (0.0 >= deltaTimeSeconds) {\r\n      return;\r\n    }\r\n\r\n    let parameterValues: Float32Array;\r\n    let parameterMaximumValues: Float32Array;\r\n    let parameterMinimumValues: Float32Array;\r\n    let parameterDefaultValues: Float32Array;\r\n\r\n    let physicsDeltaTime: number;\r\n    this._currentRemainTime += deltaTimeSeconds;\r\n    if (this._currentRemainTime > MaxDeltaTime) {\r\n      this._currentRemainTime = 0.0;\r\n    }\r\n\r\n    parameterValues = model.getModel().parameters.values;\r\n    parameterMaximumValues = model.getModel().parameters.maximumValues;\r\n    parameterMinimumValues = model.getModel().parameters.minimumValues;\r\n    parameterDefaultValues = model.getModel().parameters.defaultValues;\r\n\r\n    if ((this._parameterCaches?.length ?? 0) < model.getParameterCount()) {\r\n      this._parameterCaches = new Float32Array(model.getParameterCount());\r\n    }\r\n\r\n    if ((this._parameterInputCaches?.length ?? 0) < model.getParameterCount()) {\r\n      this._parameterInputCaches = new Float32Array(model.getParameterCount());\r\n      for (let j = 0; j < model.getParameterCount(); ++j) {\r\n        this._parameterInputCaches[j] = parameterValues[j];\r\n      }\r\n    }\r\n\r\n    if (this._physicsRig.fps > 0.0) {\r\n      physicsDeltaTime = 1.0 / this._physicsRig.fps;\r\n    } else {\r\n      physicsDeltaTime = deltaTimeSeconds;\r\n    }\r\n\r\n    while (this._currentRemainTime >= physicsDeltaTime) {\r\n      // copyRigOutputs _currentRigOutputs to _previousRigOutputs\r\n      for (\r\n        let settingIndex = 0;\r\n        settingIndex < this._physicsRig.subRigCount;\r\n        ++settingIndex\r\n      ) {\r\n        currentSetting = this._physicsRig.settings.at(settingIndex);\r\n        currentOutputs = this._physicsRig.outputs.get(\r\n          currentSetting.baseOutputIndex\r\n        );\r\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\r\n          this._previousRigOutputs.at(settingIndex).outputs[i] =\r\n            this._currentRigOutputs.at(settingIndex).outputs[i];\r\n        }\r\n      }\r\n\r\n      // 入力キャッシュとパラメータで線形補間してUpdateParticlesするタイミングでの入力を計算する。\r\n      // Calculate the input at the timing to UpdateParticles by linear interpolation with the _parameterInputCache and parameterValue.\r\n      // _parameterCacheはグループ間での値の伝搬の役割があるので_parameterInputCacheとの分離が必要。\r\n      // _parameterCache needs to be separated from _parameterInputCache because of its role in propagating values between groups.\r\n      const inputWeight = physicsDeltaTime / this._currentRemainTime;\r\n      for (let j = 0; j < model.getParameterCount(); ++j) {\r\n        this._parameterCaches[j] =\r\n          this._parameterInputCaches[j] * (1.0 - inputWeight) +\r\n          parameterValues[j] * inputWeight;\r\n        this._parameterInputCaches[j] = this._parameterCaches[j];\r\n      }\r\n\r\n      for (\r\n        let settingIndex = 0;\r\n        settingIndex < this._physicsRig.subRigCount;\r\n        ++settingIndex\r\n      ) {\r\n        totalAngle = { angle: 0.0 };\r\n        totalTranslation.x = 0.0;\r\n        totalTranslation.y = 0.0;\r\n        currentSetting = this._physicsRig.settings.at(settingIndex);\r\n        currentInputs = this._physicsRig.inputs.get(\r\n          currentSetting.baseInputIndex\r\n        );\r\n        currentOutputs = this._physicsRig.outputs.get(\r\n          currentSetting.baseOutputIndex\r\n        );\r\n        currentParticles = this._physicsRig.particles.get(\r\n          currentSetting.baseParticleIndex\r\n        );\r\n\r\n        // Load input parameters\r\n        for (let i = 0; i < currentSetting.inputCount; ++i) {\r\n          weight = currentInputs[i].weight / MaximumWeight;\r\n\r\n          if (currentInputs[i].sourceParameterIndex == -1) {\r\n            currentInputs[i].sourceParameterIndex = model.getParameterIndex(\r\n              currentInputs[i].source.id\r\n            );\r\n          }\r\n\r\n          currentInputs[i].getNormalizedParameterValue(\r\n            totalTranslation,\r\n            totalAngle,\r\n            this._parameterCaches[currentInputs[i].sourceParameterIndex],\r\n            parameterMinimumValues[currentInputs[i].sourceParameterIndex],\r\n            parameterMaximumValues[currentInputs[i].sourceParameterIndex],\r\n            parameterDefaultValues[currentInputs[i].sourceParameterIndex],\r\n            currentSetting.normalizationPosition,\r\n            currentSetting.normalizationAngle,\r\n            currentInputs[i].reflect,\r\n            weight\r\n          );\r\n        }\r\n\r\n        radAngle = CubismMath.degreesToRadian(-totalAngle.angle);\r\n\r\n        totalTranslation.x =\r\n          totalTranslation.x * CubismMath.cos(radAngle) -\r\n          totalTranslation.y * CubismMath.sin(radAngle);\r\n        totalTranslation.y =\r\n          totalTranslation.x * CubismMath.sin(radAngle) +\r\n          totalTranslation.y * CubismMath.cos(radAngle);\r\n\r\n        // Calculate particles position.\r\n        updateParticles(\r\n          currentParticles,\r\n          currentSetting.particleCount,\r\n          totalTranslation,\r\n          totalAngle.angle,\r\n          this._options.wind,\r\n          MovementThreshold * currentSetting.normalizationPosition.maximum,\r\n          physicsDeltaTime,\r\n          AirResistance\r\n        );\r\n\r\n        // Update output parameters.\r\n        for (let i = 0; i < currentSetting.outputCount; ++i) {\r\n          const particleIndex = currentOutputs[i].vertexIndex;\r\n\r\n          if (currentOutputs[i].destinationParameterIndex == -1) {\r\n            currentOutputs[i].destinationParameterIndex =\r\n              model.getParameterIndex(currentOutputs[i].destination.id);\r\n          }\r\n\r\n          if (\r\n            particleIndex < 1 ||\r\n            particleIndex >= currentSetting.particleCount\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          const translation: CubismVector2 = new CubismVector2();\r\n          translation.x =\r\n            currentParticles[particleIndex].position.x -\r\n            currentParticles[particleIndex - 1].position.x;\r\n          translation.y =\r\n            currentParticles[particleIndex].position.y -\r\n            currentParticles[particleIndex - 1].position.y;\r\n\r\n          outputValue = currentOutputs[i].getValue(\r\n            translation,\r\n            currentParticles,\r\n            particleIndex,\r\n            currentOutputs[i].reflect,\r\n            this._options.gravity\r\n          );\r\n\r\n          this._currentRigOutputs.at(settingIndex).outputs[i] = outputValue;\r\n\r\n          const destinationParameterIndex: number =\r\n            currentOutputs[i].destinationParameterIndex;\r\n          const outParameterCaches: Float32Array =\r\n            !Float32Array.prototype.slice &&\r\n            'subarray' in Float32Array.prototype\r\n              ? JSON.parse(\r\n                  JSON.stringify(\r\n                    this._parameterCaches.subarray(destinationParameterIndex)\r\n                  )\r\n                ) // 値渡しするため、JSON.parse, JSON.stringify\r\n              : this._parameterCaches.slice(destinationParameterIndex);\r\n\r\n          updateOutputParameterValue(\r\n            outParameterCaches,\r\n            parameterMinimumValues[destinationParameterIndex],\r\n            parameterMaximumValues[destinationParameterIndex],\r\n            outputValue,\r\n            currentOutputs[i]\r\n          );\r\n\r\n          // 値を反映\r\n          for (\r\n            let offset: number = destinationParameterIndex, outParamIndex = 0;\r\n            offset < this._parameterCaches.length;\r\n            offset++, outParamIndex++\r\n          ) {\r\n            this._parameterCaches[offset] = outParameterCaches[outParamIndex];\r\n          }\r\n        }\r\n      }\r\n      this._currentRemainTime -= physicsDeltaTime;\r\n    }\r\n\r\n    const alpha: number = this._currentRemainTime / physicsDeltaTime;\r\n    this.interpolate(model, alpha);\r\n  }\r\n\r\n  /**\r\n   * 物理演算結果の適用\r\n   * 振り子演算の最新の結果と一つ前の結果から指定した重みで適用する。\r\n   * @param model 物理演算の結果を適用するモデル\r\n   * @param weight 最新結果の重み\r\n   */\r\n  public interpolate(model: CubismModel, weight: number): void {\r\n    let currentOutputs: CubismPhysicsOutput[];\r\n    let currentSetting: CubismPhysicsSubRig;\r\n    let parameterValues: Float32Array;\r\n    let parameterMaximumValues: Float32Array;\r\n    let parameterMinimumValues: Float32Array;\r\n\r\n    parameterValues = model.getModel().parameters.values;\r\n    parameterMaximumValues = model.getModel().parameters.maximumValues;\r\n    parameterMinimumValues = model.getModel().parameters.minimumValues;\r\n\r\n    for (\r\n      let settingIndex = 0;\r\n      settingIndex < this._physicsRig.subRigCount;\r\n      ++settingIndex\r\n    ) {\r\n      currentSetting = this._physicsRig.settings.at(settingIndex);\r\n      currentOutputs = this._physicsRig.outputs.get(\r\n        currentSetting.baseOutputIndex\r\n      );\r\n\r\n      // Load input parameters.\r\n      for (let i = 0; i < currentSetting.outputCount; ++i) {\r\n        if (currentOutputs[i].destinationParameterIndex == -1) {\r\n          continue;\r\n        }\r\n\r\n        const destinationParameterIndex: number =\r\n          currentOutputs[i].destinationParameterIndex;\r\n        const outParameterValues: Float32Array =\r\n          !Float32Array.prototype.slice && 'subarray' in Float32Array.prototype\r\n            ? JSON.parse(\r\n                JSON.stringify(\r\n                  parameterValues.subarray(destinationParameterIndex)\r\n                )\r\n              ) // 値渡しするため、JSON.parse, JSON.stringify\r\n            : parameterValues.slice(destinationParameterIndex);\r\n\r\n        updateOutputParameterValue(\r\n          outParameterValues,\r\n          parameterMinimumValues[destinationParameterIndex],\r\n          parameterMaximumValues[destinationParameterIndex],\r\n          this._previousRigOutputs.at(settingIndex).outputs[i] * (1 - weight) +\r\n            this._currentRigOutputs.at(settingIndex).outputs[i] * weight,\r\n          currentOutputs[i]\r\n        );\r\n\r\n        // 値を反映\r\n        for (\r\n          let offset: number = destinationParameterIndex, outParamIndex = 0;\r\n          offset < parameterValues.length;\r\n          offset++, outParamIndex++\r\n        ) {\r\n          parameterValues[offset] = outParameterValues[outParamIndex];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * オプションの設定\r\n   * @param options オプション\r\n   */\r\n  public setOptions(options: Options): void {\r\n    this._options = options;\r\n  }\r\n\r\n  /**\r\n   * オプションの取得\r\n   * @return オプション\r\n   */\r\n  public getOption(): Options {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._physicsRig = null;\r\n\r\n    // set default options\r\n    this._options = new Options();\r\n    this._options.gravity.y = -1.0;\r\n    this._options.gravity.x = 0.0;\r\n    this._options.wind.x = 0.0;\r\n    this._options.wind.y = 0.0;\r\n    this._currentRigOutputs = new csmVector<PhysicsOutput>();\r\n    this._previousRigOutputs = new csmVector<PhysicsOutput>();\r\n    this._currentRemainTime = 0.0;\r\n    this._parameterCaches = null;\r\n    this._parameterInputCaches = null;\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    this._physicsRig = void 0;\r\n    this._physicsRig = null;\r\n  }\r\n\r\n  /**\r\n   * 初期化する\r\n   */\r\n  public initialize(): void {\r\n    let strand: CubismPhysicsParticle[];\r\n    let currentSetting: CubismPhysicsSubRig;\r\n    let radius: CubismVector2;\r\n\r\n    for (\r\n      let settingIndex = 0;\r\n      settingIndex < this._physicsRig.subRigCount;\r\n      ++settingIndex\r\n    ) {\r\n      currentSetting = this._physicsRig.settings.at(settingIndex);\r\n      strand = this._physicsRig.particles.get(currentSetting.baseParticleIndex);\r\n\r\n      // Initialize the top of particle.\r\n      strand[0].initialPosition = new CubismVector2(0.0, 0.0);\r\n      strand[0].lastPosition = new CubismVector2(\r\n        strand[0].initialPosition.x,\r\n        strand[0].initialPosition.y\r\n      );\r\n      strand[0].lastGravity = new CubismVector2(0.0, -1.0);\r\n      strand[0].lastGravity.y *= -1.0;\r\n      strand[0].velocity = new CubismVector2(0.0, 0.0);\r\n      strand[0].force = new CubismVector2(0.0, 0.0);\r\n\r\n      // Initialize particles.\r\n      for (let i = 1; i < currentSetting.particleCount; ++i) {\r\n        radius = new CubismVector2(0.0, 0.0);\r\n        radius.y = strand[i].radius;\r\n        strand[i].initialPosition = new CubismVector2(\r\n          strand[i - 1].initialPosition.x + radius.x,\r\n          strand[i - 1].initialPosition.y + radius.y\r\n        );\r\n        strand[i].position = new CubismVector2(\r\n          strand[i].initialPosition.x,\r\n          strand[i].initialPosition.y\r\n        );\r\n        strand[i].lastPosition = new CubismVector2(\r\n          strand[i].initialPosition.x,\r\n          strand[i].initialPosition.y\r\n        );\r\n        strand[i].lastGravity = new CubismVector2(0.0, -1.0);\r\n        strand[i].lastGravity.y *= -1.0;\r\n        strand[i].velocity = new CubismVector2(0.0, 0.0);\r\n        strand[i].force = new CubismVector2(0.0, 0.0);\r\n      }\r\n    }\r\n  }\r\n\r\n  _physicsRig: CubismPhysicsRig; // 物理演算のデータ\r\n  _options: Options; // オプション\r\n\r\n  _currentRigOutputs: csmVector<PhysicsOutput>; ///< 最新の振り子計算の結果\r\n  _previousRigOutputs: csmVector<PhysicsOutput>; ///< 一つ前の振り子計算の結果\r\n\r\n  _currentRemainTime: number; ///< 物理演算が処理していない時間\r\n\r\n  _parameterCaches: Float32Array; ///< Evaluateで利用するパラメータのキャッシュ\r\n  _parameterInputCaches: Float32Array; ///< UpdateParticlesが動くときの入力をキャッシュ\r\n}\r\n\r\n/**\r\n * 物理演算のオプション\r\n */\r\nexport class Options {\r\n  constructor() {\r\n    this.gravity = new CubismVector2(0, 0);\r\n    this.wind = new CubismVector2(0, 0);\r\n  }\r\n\r\n  gravity: CubismVector2; // 重力方向\r\n  wind: CubismVector2; // 風の方向\r\n}\r\n\r\n/**\r\n * パラメータに適用する前の物理演算の出力結果\r\n */\r\nexport class PhysicsOutput {\r\n  constructor() {\r\n    this.outputs = new csmVector<number>(0);\r\n  }\r\n\r\n  outputs: csmVector<number>; // 物理演算出力結果\r\n}\r\n\r\n/**\r\n * Gets sign.\r\n *\r\n * @param value Evaluation target value.\r\n *\r\n * @return Sign of value.\r\n */\r\nfunction sign(value: number): number {\r\n  let ret = 0;\r\n\r\n  if (value > 0.0) {\r\n    ret = 1;\r\n  } else if (value < 0.0) {\r\n    ret = -1;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction getInputTranslationXFromNormalizedParameterValue(\r\n  targetTranslation: CubismVector2,\r\n  targetAngle: { angle: number },\r\n  value: number,\r\n  parameterMinimumValue: number,\r\n  parameterMaximumValue: number,\r\n  parameterDefaultValue: number,\r\n  normalizationPosition: CubismPhysicsNormalization,\r\n  normalizationAngle: CubismPhysicsNormalization,\r\n  isInverted: boolean,\r\n  weight: number\r\n): void {\r\n  targetTranslation.x +=\r\n    normalizeParameterValue(\r\n      value,\r\n      parameterMinimumValue,\r\n      parameterMaximumValue,\r\n      parameterDefaultValue,\r\n      normalizationPosition.minimum,\r\n      normalizationPosition.maximum,\r\n      normalizationPosition.defalut,\r\n      isInverted\r\n    ) * weight;\r\n}\r\n\r\nfunction getInputTranslationYFromNormalizedParamterValue(\r\n  targetTranslation: CubismVector2,\r\n  targetAngle: { angle: number },\r\n  value: number,\r\n  parameterMinimumValue: number,\r\n  parameterMaximumValue: number,\r\n  parameterDefaultValue: number,\r\n  normalizationPosition: CubismPhysicsNormalization,\r\n  normalizationAngle: CubismPhysicsNormalization,\r\n  isInverted: boolean,\r\n  weight: number\r\n): void {\r\n  targetTranslation.y +=\r\n    normalizeParameterValue(\r\n      value,\r\n      parameterMinimumValue,\r\n      parameterMaximumValue,\r\n      parameterDefaultValue,\r\n      normalizationPosition.minimum,\r\n      normalizationPosition.maximum,\r\n      normalizationPosition.defalut,\r\n      isInverted\r\n    ) * weight;\r\n}\r\n\r\nfunction getInputAngleFromNormalizedParameterValue(\r\n  targetTranslation: CubismVector2,\r\n  targetAngle: { angle: number },\r\n  value: number,\r\n  parameterMinimumValue: number,\r\n  parameterMaximumValue: number,\r\n  parameterDefaultValue: number,\r\n  normalizaitionPosition: CubismPhysicsNormalization,\r\n  normalizationAngle: CubismPhysicsNormalization,\r\n  isInverted: boolean,\r\n  weight: number\r\n): void {\r\n  targetAngle.angle +=\r\n    normalizeParameterValue(\r\n      value,\r\n      parameterMinimumValue,\r\n      parameterMaximumValue,\r\n      parameterDefaultValue,\r\n      normalizationAngle.minimum,\r\n      normalizationAngle.maximum,\r\n      normalizationAngle.defalut,\r\n      isInverted\r\n    ) * weight;\r\n}\r\n\r\nfunction getOutputTranslationX(\r\n  translation: CubismVector2,\r\n  particles: CubismPhysicsParticle[],\r\n  particleIndex: number,\r\n  isInverted: boolean,\r\n  parentGravity: CubismVector2\r\n): number {\r\n  let outputValue: number = translation.x;\r\n\r\n  if (isInverted) {\r\n    outputValue *= -1.0;\r\n  }\r\n\r\n  return outputValue;\r\n}\r\n\r\nfunction getOutputTranslationY(\r\n  translation: CubismVector2,\r\n  particles: CubismPhysicsParticle[],\r\n  particleIndex: number,\r\n  isInverted: boolean,\r\n  parentGravity: CubismVector2\r\n): number {\r\n  let outputValue: number = translation.y;\r\n\r\n  if (isInverted) {\r\n    outputValue *= -1.0;\r\n  }\r\n  return outputValue;\r\n}\r\n\r\nfunction getOutputAngle(\r\n  translation: CubismVector2,\r\n  particles: CubismPhysicsParticle[],\r\n  particleIndex: number,\r\n  isInverted: boolean,\r\n  parentGravity: CubismVector2\r\n): number {\r\n  let outputValue: number;\r\n\r\n  if (particleIndex >= 2) {\r\n    parentGravity = particles[particleIndex - 1].position.substract(\r\n      particles[particleIndex - 2].position\r\n    );\r\n  } else {\r\n    parentGravity = parentGravity.multiplyByScaler(-1.0);\r\n  }\r\n\r\n  outputValue = CubismMath.directionToRadian(parentGravity, translation);\r\n\r\n  if (isInverted) {\r\n    outputValue *= -1.0;\r\n  }\r\n\r\n  return outputValue;\r\n}\r\n\r\nfunction getRangeValue(min: number, max: number): number {\r\n  const maxValue: number = CubismMath.max(min, max);\r\n  const minValue: number = CubismMath.min(min, max);\r\n\r\n  return CubismMath.abs(maxValue - minValue);\r\n}\r\n\r\nfunction getDefaultValue(min: number, max: number): number {\r\n  const minValue: number = CubismMath.min(min, max);\r\n  return minValue + getRangeValue(min, max) / 2.0;\r\n}\r\n\r\nfunction getOutputScaleTranslationX(\r\n  translationScale: CubismVector2,\r\n  angleScale: number\r\n): number {\r\n  return JSON.parse(JSON.stringify(translationScale.x));\r\n}\r\n\r\nfunction getOutputScaleTranslationY(\r\n  translationScale: CubismVector2,\r\n  angleScale: number\r\n): number {\r\n  return JSON.parse(JSON.stringify(translationScale.y));\r\n}\r\n\r\nfunction getOutputScaleAngle(\r\n  translationScale: CubismVector2,\r\n  angleScale: number\r\n): number {\r\n  return JSON.parse(JSON.stringify(angleScale));\r\n}\r\n\r\n/**\r\n * Updates particles.\r\n *\r\n * @param strand                Target array of particle.\r\n * @param strandCount           Count of particle.\r\n * @param totalTranslation      Total translation value.\r\n * @param totalAngle            Total angle.\r\n * @param windDirection         Direction of Wind.\r\n * @param thresholdValue        Threshold of movement.\r\n * @param deltaTimeSeconds      Delta time.\r\n * @param airResistance         Air resistance.\r\n */\r\nfunction updateParticles(\r\n  strand: CubismPhysicsParticle[],\r\n  strandCount: number,\r\n  totalTranslation: CubismVector2,\r\n  totalAngle: number,\r\n  windDirection: CubismVector2,\r\n  thresholdValue: number,\r\n  deltaTimeSeconds: number,\r\n  airResistance: number\r\n) {\r\n  let totalRadian: number;\r\n  let delay: number;\r\n  let radian: number;\r\n  let currentGravity: CubismVector2;\r\n  let direction: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n  let velocity: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n  let force: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n  let newDirection: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n\r\n  strand[0].position = new CubismVector2(\r\n    totalTranslation.x,\r\n    totalTranslation.y\r\n  );\r\n\r\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\r\n  currentGravity = CubismMath.radianToDirection(totalRadian);\r\n  currentGravity.normalize();\r\n\r\n  for (let i = 1; i < strandCount; ++i) {\r\n    strand[i].force = currentGravity\r\n      .multiplyByScaler(strand[i].acceleration)\r\n      .add(windDirection);\r\n\r\n    strand[i].lastPosition = new CubismVector2(\r\n      strand[i].position.x,\r\n      strand[i].position.y\r\n    );\r\n\r\n    delay = strand[i].delay * deltaTimeSeconds * 30.0;\r\n\r\n    direction = strand[i].position.substract(strand[i - 1].position);\r\n\r\n    radian =\r\n      CubismMath.directionToRadian(strand[i].lastGravity, currentGravity) /\r\n      airResistance;\r\n\r\n    direction.x =\r\n      CubismMath.cos(radian) * direction.x -\r\n      direction.y * CubismMath.sin(radian);\r\n    direction.y =\r\n      CubismMath.sin(radian) * direction.x +\r\n      direction.y * CubismMath.cos(radian);\r\n\r\n    strand[i].position = strand[i - 1].position.add(direction);\r\n\r\n    velocity = strand[i].velocity.multiplyByScaler(delay);\r\n    force = strand[i].force.multiplyByScaler(delay).multiplyByScaler(delay);\r\n\r\n    strand[i].position = strand[i].position.add(velocity).add(force);\r\n\r\n    newDirection = strand[i].position.substract(strand[i - 1].position);\r\n    newDirection.normalize();\r\n\r\n    strand[i].position = strand[i - 1].position.add(\r\n      newDirection.multiplyByScaler(strand[i].radius)\r\n    );\r\n\r\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\r\n      strand[i].position.x = 0.0;\r\n    }\r\n\r\n    if (delay != 0.0) {\r\n      strand[i].velocity = strand[i].position.substract(strand[i].lastPosition);\r\n      strand[i].velocity = strand[i].velocity.divisionByScalar(delay);\r\n      strand[i].velocity = strand[i].velocity.multiplyByScaler(\r\n        strand[i].mobility\r\n      );\r\n    }\r\n\r\n    strand[i].force = new CubismVector2(0.0, 0.0);\r\n    strand[i].lastGravity = new CubismVector2(\r\n      currentGravity.x,\r\n      currentGravity.y\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Updates particles for stabilization.\r\n *\r\n * @param strand                Target array of particle.\r\n * @param strandCount           Count of particle.\r\n * @param totalTranslation      Total translation value.\r\n * @param totalAngle            Total angle.\r\n * @param windDirection         Direction of Wind.\r\n * @param thresholdValue        Threshold of movement.\r\n */\r\nfunction updateParticlesForStabilization(\r\n  strand: CubismPhysicsParticle[],\r\n  strandCount: number,\r\n  totalTranslation: CubismVector2,\r\n  totalAngle: number,\r\n  windDirection: CubismVector2,\r\n  thresholdValue: number\r\n) {\r\n  let totalRadian: number;\r\n  let currentGravity: CubismVector2;\r\n  let force: CubismVector2 = new CubismVector2(0.0, 0.0);\r\n\r\n  strand[0].position = new CubismVector2(\r\n    totalTranslation.x,\r\n    totalTranslation.y\r\n  );\r\n\r\n  totalRadian = CubismMath.degreesToRadian(totalAngle);\r\n  currentGravity = CubismMath.radianToDirection(totalRadian);\r\n  currentGravity.normalize();\r\n\r\n  for (let i = 1; i < strandCount; ++i) {\r\n    strand[i].force = currentGravity\r\n      .multiplyByScaler(strand[i].acceleration)\r\n      .add(windDirection);\r\n\r\n    strand[i].lastPosition = new CubismVector2(\r\n      strand[i].position.x,\r\n      strand[i].position.y\r\n    );\r\n\r\n    strand[i].velocity = new CubismVector2(0.0, 0.0);\r\n    force = strand[i].force;\r\n    force.normalize();\r\n\r\n    force = force.multiplyByScaler(strand[i].radius);\r\n    strand[i].position = strand[i - 1].position.add(force);\r\n\r\n    if (CubismMath.abs(strand[i].position.x) < thresholdValue) {\r\n      strand[i].position.x = 0.0;\r\n    }\r\n\r\n    strand[i].force = new CubismVector2(0.0, 0.0);\r\n    strand[i].lastGravity = new CubismVector2(\r\n      currentGravity.x,\r\n      currentGravity.y\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Updates output parameter value.\r\n * @param parameterValue            Target parameter value.\r\n * @param parameterValueMinimum     Minimum of parameter value.\r\n * @param parameterValueMaximum     Maximum of parameter value.\r\n * @param translation               Translation value.\r\n */\r\nfunction updateOutputParameterValue(\r\n  parameterValue: Float32Array,\r\n  parameterValueMinimum: number,\r\n  parameterValueMaximum: number,\r\n  translation: number,\r\n  output: CubismPhysicsOutput\r\n): void {\r\n  let outputScale: number;\r\n  let value: number;\r\n  let weight: number;\r\n\r\n  outputScale = output.getScale(output.translationScale, output.angleScale);\r\n\r\n  value = translation * outputScale;\r\n\r\n  if (value < parameterValueMinimum) {\r\n    if (value < output.valueBelowMinimum) {\r\n      output.valueBelowMinimum = value;\r\n    }\r\n\r\n    value = parameterValueMinimum;\r\n  } else if (value > parameterValueMaximum) {\r\n    if (value > output.valueExceededMaximum) {\r\n      output.valueExceededMaximum = value;\r\n    }\r\n\r\n    value = parameterValueMaximum;\r\n  }\r\n\r\n  weight = output.weight / MaximumWeight;\r\n\r\n  if (weight >= 1.0) {\r\n    parameterValue[0] = value;\r\n  } else {\r\n    value = parameterValue[0] * (1.0 - weight) + value * weight;\r\n    parameterValue[0] = value;\r\n  }\r\n}\r\n\r\nfunction normalizeParameterValue(\r\n  value: number,\r\n  parameterMinimum: number,\r\n  parameterMaximum: number,\r\n  parameterDefault: number,\r\n  normalizedMinimum: number,\r\n  normalizedMaximum: number,\r\n  normalizedDefault: number,\r\n  isInverted: boolean\r\n) {\r\n  let result = 0.0;\r\n\r\n  const maxValue: number = CubismMath.max(parameterMaximum, parameterMinimum);\r\n\r\n  if (maxValue < value) {\r\n    value = maxValue;\r\n  }\r\n\r\n  const minValue: number = CubismMath.min(parameterMaximum, parameterMinimum);\r\n\r\n  if (minValue > value) {\r\n    value = minValue;\r\n  }\r\n\r\n  const minNormValue: number = CubismMath.min(\r\n    normalizedMinimum,\r\n    normalizedMaximum\r\n  );\r\n  const maxNormValue: number = CubismMath.max(\r\n    normalizedMinimum,\r\n    normalizedMaximum\r\n  );\r\n  const middleNormValue: number = normalizedDefault;\r\n\r\n  const middleValue: number = getDefaultValue(minValue, maxValue);\r\n  const paramValue: number = value - middleValue;\r\n\r\n  switch (sign(paramValue)) {\r\n    case 1: {\r\n      const nLength: number = maxNormValue - middleNormValue;\r\n      const pLength: number = maxValue - middleValue;\r\n\r\n      if (pLength != 0.0) {\r\n        result = paramValue * (nLength / pLength);\r\n        result += middleNormValue;\r\n      }\r\n\r\n      break;\r\n    }\r\n    case -1: {\r\n      const nLength: number = minNormValue - middleNormValue;\r\n      const pLength: number = minValue - middleValue;\r\n\r\n      if (pLength != 0.0) {\r\n        result = paramValue * (nLength / pLength);\r\n        result += middleNormValue;\r\n      }\r\n\r\n      break;\r\n    }\r\n    case 0: {\r\n      result = middleNormValue;\r\n\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return isInverted ? result : result * -1.0;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismphysics';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismPhysics = $.CubismPhysics;\r\n  export type CubismPhysics = $.CubismPhysics;\r\n  export const Options = $.Options;\r\n  export type Options = $.Options;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismVector2 } from '../math/cubismvector2';\r\nimport { csmVector } from '../type/csmvector';\r\n\r\n/**\r\n * 物理演算の適用先の種類\r\n */\r\nexport enum CubismPhysicsTargetType {\r\n  CubismPhysicsTargetType_Parameter, // パラメータに対して適用\r\n}\r\n\r\n/**\r\n * 物理演算の入力の種類\r\n */\r\nexport enum CubismPhysicsSource {\r\n  CubismPhysicsSource_X, // X軸の位置から\r\n  CubismPhysicsSource_Y, // Y軸の位置から\r\n  CubismPhysicsSource_Angle, // 角度から\r\n}\r\n\r\n/**\r\n * @brief 物理演算で使用する外部の力\r\n *\r\n * 物理演算で使用する外部の力。\r\n */\r\nexport class PhysicsJsonEffectiveForces {\r\n  constructor() {\r\n    this.gravity = new CubismVector2(0, 0);\r\n    this.wind = new CubismVector2(0, 0);\r\n  }\r\n  gravity: CubismVector2; // 重力\r\n  wind: CubismVector2; // 風\r\n}\r\n\r\n/**\r\n * 物理演算のパラメータ情報\r\n */\r\nexport class CubismPhysicsParameter {\r\n  id: CubismIdHandle; // パラメータ\r\n  targetType: CubismPhysicsTargetType; // 適用先の種類\r\n}\r\n\r\n/**\r\n * 物理演算の正規化情報\r\n */\r\nexport class CubismPhysicsNormalization {\r\n  minimum: number; // 最大値\r\n  maximum: number; // 最小値\r\n  defalut: number; // デフォルト値\r\n}\r\n\r\n/**\r\n * 物理演算の演算委使用する物理点の情報\r\n */\r\nexport class CubismPhysicsParticle {\r\n  constructor() {\r\n    this.initialPosition = new CubismVector2(0, 0);\r\n    this.position = new CubismVector2(0, 0);\r\n    this.lastPosition = new CubismVector2(0, 0);\r\n    this.lastGravity = new CubismVector2(0, 0);\r\n    this.force = new CubismVector2(0, 0);\r\n    this.velocity = new CubismVector2(0, 0);\r\n  }\r\n\r\n  initialPosition: CubismVector2; // 初期位置\r\n  mobility: number; // 動きやすさ\r\n  delay: number; // 遅れ\r\n  acceleration: number; // 加速度\r\n  radius: number; // 距離\r\n  position: CubismVector2; // 現在の位置\r\n  lastPosition: CubismVector2; // 最後の位置\r\n  lastGravity: CubismVector2; // 最後の重力\r\n  force: CubismVector2; // 現在かかっている力\r\n  velocity: CubismVector2; // 現在の速度\r\n}\r\n\r\n/**\r\n * 物理演算の物理点の管理\r\n */\r\nexport class CubismPhysicsSubRig {\r\n  constructor() {\r\n    this.normalizationPosition = new CubismPhysicsNormalization();\r\n    this.normalizationAngle = new CubismPhysicsNormalization();\r\n  }\r\n  inputCount: number; // 入力の個数\r\n  outputCount: number; // 出力の個数\r\n  particleCount: number; // 物理点の個数\r\n  baseInputIndex: number; // 入力の最初のインデックス\r\n  baseOutputIndex: number; // 出力の最初のインデックス\r\n  baseParticleIndex: number; // 物理点の最初のインデックス\r\n  normalizationPosition: CubismPhysicsNormalization; // 正規化された位置\r\n  normalizationAngle: CubismPhysicsNormalization; // 正規化された角度\r\n}\r\n\r\n/**\r\n * 正規化されたパラメータの取得関数の宣言\r\n * @param targetTranslation     // 演算結果の移動値\r\n * @param targetAngle           // 演算結果の角度\r\n * @param value                 // パラメータの値\r\n * @param parameterMinimunValue // パラメータの最小値\r\n * @param parameterMaximumValue // パラメータの最大値\r\n * @param parameterDefaultValue // パラメータのデフォルト値\r\n * @param normalizationPosition // 正規化された位置\r\n * @param normalizationAngle    // 正規化された角度\r\n * @param isInverted            // 値が反転されているか？\r\n * @param weight                // 重み\r\n */\r\nexport interface normalizedPhysicsParameterValueGetter {\r\n  (\r\n    targetTranslation: CubismVector2,\r\n    targetAngle: { angle: number },\r\n    value: number,\r\n    parameterMinimunValue: number,\r\n    parameterMaximumValue: number,\r\n    parameterDefaultValue: number,\r\n    normalizationPosition: CubismPhysicsNormalization,\r\n    normalizationAngle: CubismPhysicsNormalization,\r\n    isInverted: boolean,\r\n    weight: number\r\n  ): void;\r\n}\r\n\r\n/**\r\n * 物理演算の値の取得関数の宣言\r\n * @param translation 移動値\r\n * @param particles 物理点のリスト\r\n * @param isInverted 値が反映されているか\r\n * @param parentGravity 重力\r\n * @return 値\r\n */\r\nexport interface physicsValueGetter {\r\n  (\r\n    translation: CubismVector2,\r\n    particles: CubismPhysicsParticle[],\r\n    particleIndex: number,\r\n    isInverted: boolean,\r\n    parentGravity: CubismVector2\r\n  ): number;\r\n}\r\n\r\n/**\r\n * 物理演算のスケールの取得関数の宣言\r\n * @param translationScale 移動値のスケール\r\n * @param angleScale    角度のスケール\r\n * @return スケール値\r\n */\r\nexport interface physicsScaleGetter {\r\n  (translationScale: CubismVector2, angleScale: number): number;\r\n}\r\n\r\n/**\r\n * 物理演算の入力情報\r\n */\r\nexport class CubismPhysicsInput {\r\n  constructor() {\r\n    this.source = new CubismPhysicsParameter();\r\n  }\r\n  source: CubismPhysicsParameter; // 入力元のパラメータ\r\n  sourceParameterIndex: number; // 入力元のパラメータのインデックス\r\n  weight: number; // 重み\r\n  type: number; // 入力の種類\r\n  reflect: boolean; // 値が反転されているかどうか\r\n  getNormalizedParameterValue: normalizedPhysicsParameterValueGetter; // 正規化されたパラメータ値の取得関数\r\n}\r\n\r\n/**\r\n * @brief 物理演算の出力情報\r\n *\r\n * 物理演算の出力情報。\r\n */\r\nexport class CubismPhysicsOutput {\r\n  constructor() {\r\n    this.destination = new CubismPhysicsParameter();\r\n    this.translationScale = new CubismVector2(0, 0);\r\n  }\r\n\r\n  destination: CubismPhysicsParameter; // 出力先のパラメータ\r\n  destinationParameterIndex: number; // 出力先のパラメータのインデックス\r\n  vertexIndex: number; // 振り子のインデックス\r\n  translationScale: CubismVector2; // 移動値のスケール\r\n  angleScale: number; // 角度のスケール\r\n  weight: number; // 重み\r\n  type: CubismPhysicsSource; // 出力の種類\r\n  reflect: boolean; // 値が反転されているかどうか\r\n  valueBelowMinimum: number; // 最小値を下回った時の値\r\n  valueExceededMaximum: number; // 最大値をこえた時の値\r\n  getValue: physicsValueGetter; // 物理演算の値の取得関数\r\n  getScale: physicsScaleGetter; // 物理演算のスケール値の取得関数\r\n}\r\n\r\n/**\r\n * @brief 物理演算のデータ\r\n *\r\n * 物理演算のデータ。\r\n */\r\nexport class CubismPhysicsRig {\r\n  constructor() {\r\n    this.settings = new csmVector<CubismPhysicsSubRig>();\r\n    this.inputs = new csmVector<CubismPhysicsInput>();\r\n    this.outputs = new csmVector<CubismPhysicsOutput>();\r\n    this.particles = new csmVector<CubismPhysicsParticle>();\r\n    this.gravity = new CubismVector2(0, 0);\r\n    this.wind = new CubismVector2(0, 0);\r\n    this.fps = 0.0;\r\n  }\r\n\r\n  subRigCount: number; // 物理演算の物理点の個数\r\n  settings: csmVector<CubismPhysicsSubRig>; // 物理演算の物理点の管理のリスト\r\n  inputs: csmVector<CubismPhysicsInput>; // 物理演算の入力のリスト\r\n  outputs: csmVector<CubismPhysicsOutput>; // 物理演算の出力のリスト\r\n  particles: csmVector<CubismPhysicsParticle>; // 物理演算の物理点のリスト\r\n  gravity: CubismVector2; // 重力\r\n  wind: CubismVector2; // 風\r\n  fps: number; //物理演算動作FPS\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismphysicsinternal';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismPhysicsInput = $.CubismPhysicsInput;\r\n  export type CubismPhysicsInput = $.CubismPhysicsInput;\r\n  export const CubismPhysicsNormalization = $.CubismPhysicsNormalization;\r\n  export type CubismPhysicsNormalization = $.CubismPhysicsNormalization;\r\n  export const CubismPhysicsOutput = $.CubismPhysicsOutput;\r\n  export type CubismPhysicsOutput = $.CubismPhysicsOutput;\r\n  export const CubismPhysicsParameter = $.CubismPhysicsParameter;\r\n  export type CubismPhysicsParameter = $.CubismPhysicsParameter;\r\n  export const CubismPhysicsParticle = $.CubismPhysicsParticle;\r\n  export type CubismPhysicsParticle = $.CubismPhysicsParticle;\r\n  export const CubismPhysicsRig = $.CubismPhysicsRig;\r\n  export type CubismPhysicsRig = $.CubismPhysicsRig;\r\n  export const CubismPhysicsSource = $.CubismPhysicsSource;\r\n  export type CubismPhysicsSource = $.CubismPhysicsSource;\r\n  export const CubismPhysicsSubRig = $.CubismPhysicsSubRig;\r\n  export type CubismPhysicsSubRig = $.CubismPhysicsSubRig;\r\n  export const CubismPhysicsTargetType = $.CubismPhysicsTargetType;\r\n  export type CubismPhysicsTargetType = $.CubismPhysicsTargetType;\r\n  export const PhysicsJsonEffectiveForces = $.PhysicsJsonEffectiveForces;\r\n  export type PhysicsJsonEffectiveForces = $.PhysicsJsonEffectiveForces;\r\n  export type normalizedPhysicsParameterValueGetter =\r\n    $.normalizedPhysicsParameterValueGetter;\r\n  export type physicsScaleGetter = $.physicsScaleGetter;\r\n  export type physicsValueGetter = $.physicsValueGetter;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdHandle } from '../id/cubismid';\r\nimport { CubismFramework } from '../live2dcubismframework';\r\nimport { CubismVector2 } from '../math/cubismvector2';\r\nimport { CubismJson } from '../utils/cubismjson';\r\n\r\n// JSON keys\r\nconst Position = 'Position';\r\nconst X = 'X';\r\nconst Y = 'Y';\r\nconst Angle = 'Angle';\r\nconst Type = 'Type';\r\nconst Id = 'Id';\r\n\r\n// Meta\r\nconst Meta = 'Meta';\r\nconst EffectiveForces = 'EffectiveForces';\r\nconst TotalInputCount = 'TotalInputCount';\r\nconst TotalOutputCount = 'TotalOutputCount';\r\nconst PhysicsSettingCount = 'PhysicsSettingCount';\r\nconst Gravity = 'Gravity';\r\nconst Wind = 'Wind';\r\nconst VertexCount = 'VertexCount';\r\nconst Fps = 'Fps';\r\n\r\n// PhysicsSettings\r\nconst PhysicsSettings = 'PhysicsSettings';\r\nconst Normalization = 'Normalization';\r\nconst Minimum = 'Minimum';\r\nconst Maximum = 'Maximum';\r\nconst Default = 'Default';\r\nconst Reflect = 'Reflect';\r\nconst Weight = 'Weight';\r\n\r\n// Input\r\nconst Input = 'Input';\r\nconst Source = 'Source';\r\n\r\n// Output\r\nconst Output = 'Output';\r\nconst Scale = 'Scale';\r\nconst VertexIndex = 'VertexIndex';\r\nconst Destination = 'Destination';\r\n\r\n// Particle\r\nconst Vertices = 'Vertices';\r\nconst Mobility = 'Mobility';\r\nconst Delay = 'Delay';\r\nconst Radius = 'Radius';\r\nconst Acceleration = 'Acceleration';\r\n\r\n/**\r\n * physics3.jsonのコンテナ。\r\n */\r\nexport class CubismPhysicsJson {\r\n  /**\r\n   * コンストラクタ\r\n   * @param buffer physics3.jsonが読み込まれているバッファ\r\n   * @param size バッファのサイズ\r\n   */\r\n  public constructor(buffer: ArrayBuffer, size: number) {\r\n    this._json = CubismJson.create(buffer, size);\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    CubismJson.delete(this._json);\r\n  }\r\n\r\n  /**\r\n   * 重力の取得\r\n   * @return 重力\r\n   */\r\n  public getGravity(): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0, 0);\r\n    ret.x = this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(EffectiveForces)\r\n      .getValueByString(Gravity)\r\n      .getValueByString(X)\r\n      .toFloat();\r\n    ret.y = this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(EffectiveForces)\r\n      .getValueByString(Gravity)\r\n      .getValueByString(Y)\r\n      .toFloat();\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 風の取得\r\n   * @return 風\r\n   */\r\n  public getWind(): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0, 0);\r\n    ret.x = this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(EffectiveForces)\r\n      .getValueByString(Wind)\r\n      .getValueByString(X)\r\n      .toFloat();\r\n    ret.y = this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(EffectiveForces)\r\n      .getValueByString(Wind)\r\n      .getValueByString(Y)\r\n      .toFloat();\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 物理演算設定FPSの取得\r\n   * @return 物理演算設定FPS\r\n   */\r\n  public getFps(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(Fps)\r\n      .toFloat(0.0);\r\n  }\r\n\r\n  /**\r\n   * 物理店の管理の個数の取得\r\n   * @return 物理店の管理の個数\r\n   */\r\n  public getSubRigCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(PhysicsSettingCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * 入力の総合計の取得\r\n   * @return 入力の総合計\r\n   */\r\n  public getTotalInputCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalInputCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * 出力の総合計の取得\r\n   * @return 出力の総合計\r\n   */\r\n  public getTotalOutputCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(TotalOutputCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * 物理点の個数の取得\r\n   * @return 物理点の個数\r\n   */\r\n  public getVertexCount(): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(Meta)\r\n      .getValueByString(VertexCount)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * 正規化された位置の最小値の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 正規化された位置の最小値\r\n   */\r\n  public getNormalizationPositionMinimumValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Position)\r\n      .getValueByString(Minimum)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 正規化された位置の最大値の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 正規化された位置の最大値\r\n   */\r\n  public getNormalizationPositionMaximumValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Position)\r\n      .getValueByString(Maximum)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 正規化された位置のデフォルト値の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 正規化された位置のデフォルト値\r\n   */\r\n  public getNormalizationPositionDefaultValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Position)\r\n      .getValueByString(Default)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 正規化された角度の最小値の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 正規化された角度の最小値\r\n   */\r\n  public getNormalizationAngleMinimumValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Angle)\r\n      .getValueByString(Minimum)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 正規化された角度の最大値の取得\r\n   * @param physicsSettingIndex\r\n   * @return 正規化された角度の最大値\r\n   */\r\n  public getNormalizationAngleMaximumValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Angle)\r\n      .getValueByString(Maximum)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 正規化された角度のデフォルト値の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 正規化された角度のデフォルト値\r\n   */\r\n  public getNormalizationAngleDefaultValue(\r\n    physicsSettingIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Normalization)\r\n      .getValueByString(Angle)\r\n      .getValueByString(Default)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 入力の個数の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 入力の個数\r\n   */\r\n  public getInputCount(physicsSettingIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Input)\r\n      .getVector()\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * 入力の重みの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param inputIndex 入力のインデックス\r\n   * @return 入力の重み\r\n   */\r\n  public getInputWeight(\r\n    physicsSettingIndex: number,\r\n    inputIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Input)\r\n      .getValueByIndex(inputIndex)\r\n      .getValueByString(Weight)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 入力の反転の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param inputIndex 入力のインデックス\r\n   * @return 入力の反転\r\n   */\r\n  public getInputReflect(\r\n    physicsSettingIndex: number,\r\n    inputIndex: number\r\n  ): boolean {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Input)\r\n      .getValueByIndex(inputIndex)\r\n      .getValueByString(Reflect)\r\n      .toBoolean();\r\n  }\r\n\r\n  /**\r\n   * 入力の種類の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param inputIndex 入力のインデックス\r\n   * @return 入力の種類\r\n   */\r\n  public getInputType(physicsSettingIndex: number, inputIndex: number): string {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Input)\r\n      .getValueByIndex(inputIndex)\r\n      .getValueByString(Type)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * 入力元のIDの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param inputIndex 入力のインデックス\r\n   * @return 入力元のID\r\n   */\r\n  public getInputSourceId(\r\n    physicsSettingIndex: number,\r\n    inputIndex: number\r\n  ): CubismIdHandle {\r\n    return CubismFramework.getIdManager().getId(\r\n      this._json\r\n        .getRoot()\r\n        .getValueByString(PhysicsSettings)\r\n        .getValueByIndex(physicsSettingIndex)\r\n        .getValueByString(Input)\r\n        .getValueByIndex(inputIndex)\r\n        .getValueByString(Source)\r\n        .getValueByString(Id)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 出力の個数の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @return 出力の個数\r\n   */\r\n  public getOutputCount(physicsSettingIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getVector()\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * 出力の物理点のインデックスの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力の物理点のインデックス\r\n   */\r\n  public getOutputVertexIndex(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getValueByIndex(outputIndex)\r\n      .getValueByString(VertexIndex)\r\n      .toInt();\r\n  }\r\n\r\n  /**\r\n   * 出力の角度のスケールを取得する\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力の角度のスケール\r\n   */\r\n  public getOutputAngleScale(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getValueByIndex(outputIndex)\r\n      .getValueByString(Scale)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 出力の重みの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力の重み\r\n   */\r\n  public getOutputWeight(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getValueByIndex(outputIndex)\r\n      .getValueByString(Weight)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 出力先のIDの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力先のID\r\n   */\r\n  public getOutputDestinationId(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): CubismIdHandle {\r\n    return CubismFramework.getIdManager().getId(\r\n      this._json\r\n        .getRoot()\r\n        .getValueByString(PhysicsSettings)\r\n        .getValueByIndex(physicsSettingIndex)\r\n        .getValueByString(Output)\r\n        .getValueByIndex(outputIndex)\r\n        .getValueByString(Destination)\r\n        .getValueByString(Id)\r\n        .getRawString()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 出力の種類の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力の種類\r\n   */\r\n  public getOutputType(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): string {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getValueByIndex(outputIndex)\r\n      .getValueByString(Type)\r\n      .getRawString();\r\n  }\r\n\r\n  /**\r\n   * 出力の反転の取得\r\n   * @param physicsSettingIndex 物理演算のインデックス\r\n   * @param outputIndex 出力のインデックス\r\n   * @return 出力の反転\r\n   */\r\n  public getOutputReflect(\r\n    physicsSettingIndex: number,\r\n    outputIndex: number\r\n  ): boolean {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Output)\r\n      .getValueByIndex(outputIndex)\r\n      .getValueByString(Reflect)\r\n      .toBoolean();\r\n  }\r\n\r\n  /**\r\n   * 物理点の個数の取得\r\n   * @param physicsSettingIndex 物理演算男設定のインデックス\r\n   * @return 物理点の個数\r\n   */\r\n  public getParticleCount(physicsSettingIndex: number): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getVector()\r\n      .getSize();\r\n  }\r\n\r\n  /**\r\n   * 物理点の動きやすさの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param vertexIndex 物理点のインデックス\r\n   * @return 物理点の動きやすさ\r\n   */\r\n  public getParticleMobility(\r\n    physicsSettingIndex: number,\r\n    vertexIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Mobility)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 物理点の遅れの取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param vertexIndex 物理点のインデックス\r\n   * @return 物理点の遅れ\r\n   */\r\n  public getParticleDelay(\r\n    physicsSettingIndex: number,\r\n    vertexIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Delay)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 物理点の加速度の取得\r\n   * @param physicsSettingIndex 物理演算の設定\r\n   * @param vertexIndex 物理点のインデックス\r\n   * @return 物理点の加速度\r\n   */\r\n  public getParticleAcceleration(\r\n    physicsSettingIndex: number,\r\n    vertexIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Acceleration)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 物理点の距離の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param vertexIndex 物理点のインデックス\r\n   * @return 物理点の距離\r\n   */\r\n  public getParticleRadius(\r\n    physicsSettingIndex: number,\r\n    vertexIndex: number\r\n  ): number {\r\n    return this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Radius)\r\n      .toFloat();\r\n  }\r\n\r\n  /**\r\n   * 物理点の位置の取得\r\n   * @param physicsSettingIndex 物理演算の設定のインデックス\r\n   * @param vertexInde 物理点のインデックス\r\n   * @return 物理点の位置\r\n   */\r\n  public getParticlePosition(\r\n    physicsSettingIndex: number,\r\n    vertexIndex: number\r\n  ): CubismVector2 {\r\n    const ret: CubismVector2 = new CubismVector2(0, 0);\r\n    ret.x = this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Position)\r\n      .getValueByString(X)\r\n      .toFloat();\r\n    ret.y = this._json\r\n      .getRoot()\r\n      .getValueByString(PhysicsSettings)\r\n      .getValueByIndex(physicsSettingIndex)\r\n      .getValueByString(Vertices)\r\n      .getValueByIndex(vertexIndex)\r\n      .getValueByString(Position)\r\n      .getValueByString(Y)\r\n      .toFloat();\r\n    return ret;\r\n  }\r\n\r\n  _json: CubismJson; // physics3.jsonデータ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismphysicsjson';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismPhysicsJson = $.CubismPhysicsJson;\r\n  export type CubismPhysicsJson = $.CubismPhysicsJson;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\r\nimport { CubismModel } from '../model/cubismmodel';\r\n\r\n/**\r\n * モデル描画を処理するレンダラ\r\n *\r\n * サブクラスに環境依存の描画命令を記述する。\r\n */\r\nexport abstract class CubismRenderer {\r\n  /**\r\n   * レンダラのインスタンスを生成して取得する\r\n   *\r\n   * @return レンダラのインスタンス\r\n   */\r\n  public static create(): CubismRenderer {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * レンダラのインスタンスを解放する\r\n   */\r\n  public static delete(renderer: CubismRenderer): void {\r\n    renderer = null;\r\n  }\r\n\r\n  /**\r\n   * レンダラの初期化処理を実行する\r\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\r\n   * @param model モデルのインスタンス\r\n   */\r\n  public initialize(model: CubismModel): void {\r\n    this._model = model;\r\n  }\r\n\r\n  /**\r\n   * モデルを描画する\r\n   */\r\n  public drawModel(): void {\r\n    if (this.getModel() == null) return;\r\n\r\n    this.saveProfile();\r\n\r\n    this.doDrawModel();\r\n\r\n    this.restoreProfile();\r\n  }\r\n\r\n  /**\r\n   * Model-View-Projection 行列をセットする\r\n   * 配列は複製されるので、元の配列は外で破棄して良い\r\n   * @param matrix44 Model-View-Projection 行列\r\n   */\r\n  public setMvpMatrix(matrix44: CubismMatrix44): void {\r\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\r\n  }\r\n\r\n  /**\r\n   * Model-View-Projection 行列を取得する\r\n   * @return Model-View-Projection 行列\r\n   */\r\n  public getMvpMatrix(): CubismMatrix44 {\r\n    return this._mvpMatrix4x4;\r\n  }\r\n\r\n  /**\r\n   * モデルの色をセットする\r\n   * 各色0.0~1.0の間で指定する（1.0が標準の状態）\r\n   * @param red 赤チャンネルの値\r\n   * @param green 緑チャンネルの値\r\n   * @param blue 青チャンネルの値\r\n   * @param alpha αチャンネルの値\r\n   */\r\n  public setModelColor(\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    alpha: number\r\n  ): void {\r\n    if (red < 0.0) {\r\n      red = 0.0;\r\n    } else if (red > 1.0) {\r\n      red = 1.0;\r\n    }\r\n\r\n    if (green < 0.0) {\r\n      green = 0.0;\r\n    } else if (green > 1.0) {\r\n      green = 1.0;\r\n    }\r\n\r\n    if (blue < 0.0) {\r\n      blue = 0.0;\r\n    } else if (blue > 1.0) {\r\n      blue = 1.0;\r\n    }\r\n\r\n    if (alpha < 0.0) {\r\n      alpha = 0.0;\r\n    } else if (alpha > 1.0) {\r\n      alpha = 1.0;\r\n    }\r\n\r\n    this._modelColor.R = red;\r\n    this._modelColor.G = green;\r\n    this._modelColor.B = blue;\r\n    this._modelColor.A = alpha;\r\n  }\r\n\r\n  /**\r\n   * モデルの色を取得する\r\n   * 各色0.0~1.0の間で指定する(1.0が標準の状態)\r\n   *\r\n   * @return RGBAのカラー情報\r\n   */\r\n  public getModelColor(): CubismTextureColor {\r\n    return JSON.parse(JSON.stringify(this._modelColor));\r\n  }\r\n\r\n  /**\r\n   * 乗算済みαの有効・無効をセットする\r\n   * 有効にするならtrue、無効にするならfalseをセットする\r\n   */\r\n  public setIsPremultipliedAlpha(enable: boolean): void {\r\n    this._isPremultipliedAlpha = enable;\r\n  }\r\n\r\n  /**\r\n   * 乗算済みαの有効・無効を取得する\r\n   * @return true 乗算済みのα有効\r\n   * @return false 乗算済みのα無効\r\n   */\r\n  public isPremultipliedAlpha(): boolean {\r\n    return this._isPremultipliedAlpha;\r\n  }\r\n\r\n  /**\r\n   * カリング（片面描画）の有効・無効をセットする。\r\n   * 有効にするならtrue、無効にするならfalseをセットする\r\n   */\r\n  public setIsCulling(culling: boolean): void {\r\n    this._isCulling = culling;\r\n  }\r\n\r\n  /**\r\n   * カリング（片面描画）の有効・無効を取得する。\r\n   * @return true カリング有効\r\n   * @return false カリング無効\r\n   */\r\n  public isCulling(): boolean {\r\n    return this._isCulling;\r\n  }\r\n\r\n  /**\r\n   * テクスチャの異方性フィルタリングのパラメータをセットする\r\n   * パラメータ値の影響度はレンダラの実装に依存する\r\n   * @param n パラメータの値\r\n   */\r\n  public setAnisotropy(n: number): void {\r\n    this._anisotropy = n;\r\n  }\r\n\r\n  /**\r\n   * テクスチャの異方性フィルタリングのパラメータをセットする\r\n   * @return 異方性フィルタリングのパラメータ\r\n   */\r\n  public getAnisotropy(): number {\r\n    return this._anisotropy;\r\n  }\r\n\r\n  /**\r\n   * レンダリングするモデルを取得する\r\n   * @return レンダリングするモデル\r\n   */\r\n  public getModel(): CubismModel {\r\n    return this._model;\r\n  }\r\n\r\n  /**\r\n   * マスク描画の方式を変更する。\r\n   * falseの場合、マスクを1枚のテクスチャに分割してレンダリングする（デフォルト）\r\n   * 高速だが、マスク個数の上限が36に限定され、質も荒くなる\r\n   * trueの場合、パーツ描画の前にその都度必要なマスクを描き直す\r\n   * レンダリング品質は高いが描画処理負荷は増す\r\n   * @param high 高精細マスクに切り替えるか？\r\n   */\r\n  public useHighPrecisionMask(high: boolean): void {\r\n    this._useHighPrecisionMask = high;\r\n  }\r\n\r\n  /**\r\n   * マスクの描画方式を取得する\r\n   * @return true 高精細方式\r\n   * @return false デフォルト\r\n   */\r\n  public isUsingHighPrecisionMask(): boolean {\r\n    return this._useHighPrecisionMask;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  protected constructor() {\r\n    this._isCulling = false;\r\n    this._isPremultipliedAlpha = false;\r\n    this._anisotropy = 0.0;\r\n    this._model = null;\r\n    this._modelColor = new CubismTextureColor();\r\n    this._useHighPrecisionMask = false;\r\n\r\n    // 単位行列に初期化\r\n    this._mvpMatrix4x4 = new CubismMatrix44();\r\n    this._mvpMatrix4x4.loadIdentity();\r\n  }\r\n\r\n  /**\r\n   * モデル描画の実装\r\n   */\r\n  public abstract doDrawModel(): void;\r\n\r\n  /**\r\n   * 描画オブジェクト（アートメッシュ）を描画する\r\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\r\n   * @param textureNo 描画するテクスチャ番号\r\n   * @param indexCount 描画オブジェクトのインデックス値\r\n   * @param vertexCount ポリゴンメッシュの頂点数\r\n   * @param indexArray ポリゴンメッシュ頂点のインデックス配列\r\n   * @param vertexArray ポリゴンメッシュの頂点配列\r\n   * @param uvArray uv配列\r\n   * @param opacity 不透明度\r\n   * @param colorBlendMode カラーブレンディングのタイプ\r\n   * @param invertedMask マスク使用時のマスクの反転使用\r\n   */\r\n  public abstract drawMesh(\r\n    textureNo: number,\r\n    indexCount: number,\r\n    vertexCount: number,\r\n    indexArray: Uint16Array,\r\n    vertexArray: Float32Array,\r\n    uvArray: Float32Array,\r\n    multiplyColor: CubismTextureColor,\r\n    screenColor: CubismTextureColor,\r\n    opacity: number,\r\n    colorBlendMode: CubismBlendMode,\r\n    invertedMask: boolean\r\n  ): void;\r\n\r\n  /**\r\n   * モデル描画直前のレンダラのステートを保持する\r\n   */\r\n  protected abstract saveProfile(): void;\r\n\r\n  /**\r\n   * モデル描画直前のレンダラのステートを復帰する\r\n   */\r\n  protected abstract restoreProfile(): void;\r\n\r\n  /**\r\n   * レンダラが保持する静的なリソースを開放する\r\n   */\r\n  public static staticRelease: any;\r\n\r\n  protected _mvpMatrix4x4: CubismMatrix44; // Model-View-Projection 行列\r\n  protected _modelColor: CubismTextureColor; // モデル自体のカラー（RGBA）\r\n  protected _isCulling: boolean; // カリングが有効ならtrue\r\n  protected _isPremultipliedAlpha: boolean; // 乗算済みαならtrue\r\n  protected _anisotropy: any; // テクスチャの異方性フィルタリングのパラメータ\r\n  protected _model: CubismModel; // レンダリング対象のモデル\r\n  protected _useHighPrecisionMask: boolean; // falseの場合、マスクを纏めて描画する trueの場合、マスクはパーツ描画ごとに書き直す\r\n}\r\n\r\nexport enum CubismBlendMode {\r\n  CubismBlendMode_Normal = 0, // 通常\r\n  CubismBlendMode_Additive = 1, // 加算\r\n  CubismBlendMode_Multiplicative = 2, // 乗算\r\n}\r\n\r\n/**\r\n * テクスチャの色をRGBAで扱うためのクラス\r\n */\r\nexport class CubismTextureColor {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this.R = 1.0;\r\n    this.G = 1.0;\r\n    this.B = 1.0;\r\n    this.A = 1.0;\r\n  }\r\n\r\n  R: number; // 赤チャンネル\r\n  G: number; // 緑チャンネル\r\n  B: number; // 青チャンネル\r\n  A: number; // αチャンネル\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismrenderer';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismBlendMode = $.CubismBlendMode;\r\n  export type CubismBlendMode = $.CubismBlendMode;\r\n  export const CubismRenderer = $.CubismRenderer;\r\n  export type CubismRenderer = $.CubismRenderer;\r\n  export const CubismTextureColor = $.CubismTextureColor;\r\n  export type CubismTextureColor = $.CubismTextureColor;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { Constant } from '../live2dcubismframework';\r\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\r\nimport { CubismModel } from '../model/cubismmodel';\r\nimport { csmMap } from '../type/csmmap';\r\nimport { csmRect } from '../type/csmrectf';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismLogError, CubismLogWarning } from '../utils/cubismdebug';\r\nimport {\r\n  CubismBlendMode,\r\n  CubismRenderer,\r\n  CubismTextureColor,\r\n} from './cubismrenderer';\r\n\r\nconst ColorChannelCount = 4; // 実験時に1チャンネルの場合は1、RGBだけの場合は3、アルファも含める場合は4\r\nconst ClippingMaskMaxCountOnDefault = 36; // 通常のフレームバッファ一枚あたりのマスク最大数\r\nconst ClippingMaskMaxCountOnMultiRenderTexture = 32; // フレームバッファが2枚以上ある場合のフレームバッファ一枚あたりのマスク最大数\r\n\r\nconst ShaderCount = 10; // シェーダーの数 = マスク生成用 + (通常用 + 加算 + 乗算) * (マスク無の乗算済アルファ対応版 + マスク有の乗算済アルファ対応版 + マスク有反転の乗算済アルファ対応版)\r\nlet s_instance: CubismShader_WebGL;\r\nlet s_viewport: number[];\r\nlet s_fbo: WebGLFramebuffer;\r\n\r\n/**\r\n * クリッピングマスクの処理を実行するクラス\r\n */\r\nexport class CubismClippingManager_WebGL {\r\n  /**\r\n   * カラーチャンネル（RGBA）のフラグを取得する\r\n   * @param channelNo カラーチャンネル（RGBA）の番号（0:R, 1:G, 2:B, 3:A）\r\n   */\r\n  public getChannelFlagAsColor(channelNo: number): CubismTextureColor {\r\n    return this._channelColors.at(channelNo);\r\n  }\r\n\r\n  /**\r\n   * テンポラリのレンダーテクスチャのアドレスを取得する\r\n   * FrameBufferObjectが存在しない場合、新しく生成する\r\n   *\r\n   * @return レンダーテクスチャの配列\r\n   */\r\n  public getMaskRenderTexture(): csmVector<WebGLFramebuffer> {\r\n    // テンポラリのRenderTextureを取得する\r\n    if (this._maskTexture && this._maskTexture.textures != null) {\r\n      // 前回使ったものを返す\r\n      this._maskTexture.frameNo = this._currentFrameNo;\r\n    } else {\r\n      // FrameBufferObjectが存在しない場合、新しく生成する\r\n      if (this._maskRenderTextures != null) {\r\n        this._maskRenderTextures.clear();\r\n      }\r\n      this._maskRenderTextures = new csmVector<WebGLFramebuffer>();\r\n\r\n      // ColorBufferObjectが存在しない場合、新しく生成する\r\n      if (this._maskColorBuffers != null) {\r\n        this._maskColorBuffers.clear();\r\n      }\r\n      this._maskColorBuffers = new csmVector<WebGLTexture>();\r\n\r\n      // クリッピングバッファサイズを取得\r\n      const size: number = this._clippingMaskBufferSize;\r\n\r\n      for (let index = 0; index < this._renderTextureCount; index++) {\r\n        this._maskColorBuffers.pushBack(this.gl.createTexture()); // 直接代入\r\n        this.gl.bindTexture(\r\n          this.gl.TEXTURE_2D,\r\n          this._maskColorBuffers.at(index)\r\n        );\r\n        this.gl.texImage2D(\r\n          this.gl.TEXTURE_2D,\r\n          0,\r\n          this.gl.RGBA,\r\n          size,\r\n          size,\r\n          0,\r\n          this.gl.RGBA,\r\n          this.gl.UNSIGNED_BYTE,\r\n          null\r\n        );\r\n        this.gl.texParameteri(\r\n          this.gl.TEXTURE_2D,\r\n          this.gl.TEXTURE_WRAP_S,\r\n          this.gl.CLAMP_TO_EDGE\r\n        );\r\n        this.gl.texParameteri(\r\n          this.gl.TEXTURE_2D,\r\n          this.gl.TEXTURE_WRAP_T,\r\n          this.gl.CLAMP_TO_EDGE\r\n        );\r\n        this.gl.texParameteri(\r\n          this.gl.TEXTURE_2D,\r\n          this.gl.TEXTURE_MIN_FILTER,\r\n          this.gl.LINEAR\r\n        );\r\n        this.gl.texParameteri(\r\n          this.gl.TEXTURE_2D,\r\n          this.gl.TEXTURE_MAG_FILTER,\r\n          this.gl.LINEAR\r\n        );\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n\r\n        this._maskRenderTextures.pushBack(this.gl.createFramebuffer());\r\n        this.gl.bindFramebuffer(\r\n          this.gl.FRAMEBUFFER,\r\n          this._maskRenderTextures.at(index)\r\n        );\r\n        this.gl.framebufferTexture2D(\r\n          this.gl.FRAMEBUFFER,\r\n          this.gl.COLOR_ATTACHMENT0,\r\n          this.gl.TEXTURE_2D,\r\n          this._maskColorBuffers.at(index),\r\n          0\r\n        );\r\n      }\r\n      this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo);\r\n\r\n      this._maskTexture = new CubismRenderTextureResource(\r\n        this._currentFrameNo,\r\n        this._maskRenderTextures\r\n      );\r\n    }\r\n\r\n    return this._maskTexture.textures;\r\n  }\r\n\r\n  /**\r\n   * WebGLレンダリングコンテキストを設定する\r\n   * @param gl WebGLレンダリングコンテキスト\r\n   */\r\n  public setGL(gl: WebGLRenderingContext): void {\r\n    this.gl = gl;\r\n  }\r\n\r\n  /**\r\n   * マスクされる描画オブジェクト群全体を囲む矩形（モデル座標系）を計算する\r\n   * @param model モデルのインスタンス\r\n   * @param clippingContext クリッピングマスクのコンテキスト\r\n   */\r\n  public calcClippedDrawTotalBounds(\r\n    model: CubismModel,\r\n    clippingContext: CubismClippingContext\r\n  ): void {\r\n    // 被クリッピングマスク（マスクされる描画オブジェクト）の全体の矩形\r\n    let clippedDrawTotalMinX: number = Number.MAX_VALUE;\r\n    let clippedDrawTotalMinY: number = Number.MAX_VALUE;\r\n    let clippedDrawTotalMaxX: number = Number.MIN_VALUE;\r\n    let clippedDrawTotalMaxY: number = Number.MIN_VALUE;\r\n\r\n    // このマスクが実際に必要か判定する\r\n    // このクリッピングを利用する「描画オブジェクト」がひとつでも使用可能であればマスクを生成する必要がある\r\n    const clippedDrawCount: number =\r\n      clippingContext._clippedDrawableIndexList.length;\r\n\r\n    for (\r\n      let clippedDrawableIndex = 0;\r\n      clippedDrawableIndex < clippedDrawCount;\r\n      clippedDrawableIndex++\r\n    ) {\r\n      // マスクを使用する描画オブジェクトの描画される矩形を求める\r\n      const drawableIndex: number =\r\n        clippingContext._clippedDrawableIndexList[clippedDrawableIndex];\r\n\r\n      const drawableVertexCount: number =\r\n        model.getDrawableVertexCount(drawableIndex);\r\n      const drawableVertexes: Float32Array =\r\n        model.getDrawableVertices(drawableIndex);\r\n\r\n      let minX: number = Number.MAX_VALUE;\r\n      let minY: number = Number.MAX_VALUE;\r\n      let maxX: number = -Number.MAX_VALUE;\r\n      let maxY: number = -Number.MAX_VALUE;\r\n\r\n      const loop: number = drawableVertexCount * Constant.vertexStep;\r\n      for (\r\n        let pi: number = Constant.vertexOffset;\r\n        pi < loop;\r\n        pi += Constant.vertexStep\r\n      ) {\r\n        const x: number = drawableVertexes[pi];\r\n        const y: number = drawableVertexes[pi + 1];\r\n\r\n        if (x < minX) {\r\n          minX = x;\r\n        }\r\n        if (x > maxX) {\r\n          maxX = x;\r\n        }\r\n        if (y < minY) {\r\n          minY = y;\r\n        }\r\n        if (y > maxY) {\r\n          maxY = y;\r\n        }\r\n      }\r\n\r\n      // 有効な点が一つも取れなかったのでスキップ\r\n      if (minX == Number.MAX_VALUE) {\r\n        continue;\r\n      }\r\n\r\n      // 全体の矩形に反映\r\n      if (minX < clippedDrawTotalMinX) {\r\n        clippedDrawTotalMinX = minX;\r\n      }\r\n      if (minY < clippedDrawTotalMinY) {\r\n        clippedDrawTotalMinY = minY;\r\n      }\r\n      if (maxX > clippedDrawTotalMaxX) {\r\n        clippedDrawTotalMaxX = maxX;\r\n      }\r\n      if (maxY > clippedDrawTotalMaxY) {\r\n        clippedDrawTotalMaxY = maxY;\r\n      }\r\n\r\n      if (clippedDrawTotalMinX == Number.MAX_VALUE) {\r\n        clippingContext._allClippedDrawRect.x = 0.0;\r\n        clippingContext._allClippedDrawRect.y = 0.0;\r\n        clippingContext._allClippedDrawRect.width = 0.0;\r\n        clippingContext._allClippedDrawRect.height = 0.0;\r\n        clippingContext._isUsing = false;\r\n      } else {\r\n        clippingContext._isUsing = true;\r\n        const w: number = clippedDrawTotalMaxX - clippedDrawTotalMinX;\r\n        const h: number = clippedDrawTotalMaxY - clippedDrawTotalMinY;\r\n        clippingContext._allClippedDrawRect.x = clippedDrawTotalMinX;\r\n        clippingContext._allClippedDrawRect.y = clippedDrawTotalMinY;\r\n        clippingContext._allClippedDrawRect.width = w;\r\n        clippingContext._allClippedDrawRect.height = h;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._currentMaskRenderTexture = null;\r\n    this._maskColorBuffers = null;\r\n    this._currentFrameNo = 0;\r\n    this._renderTextureCount = 0;\r\n    this._clippingMaskBufferSize = 256;\r\n    this._clippingContextListForMask = new csmVector<CubismClippingContext>();\r\n    this._clippingContextListForDraw = new csmVector<CubismClippingContext>();\r\n    this._channelColors = new csmVector<CubismTextureColor>();\r\n    this._tmpBoundsOnModel = new csmRect();\r\n    this._tmpMatrix = new CubismMatrix44();\r\n    this._tmpMatrixForMask = new CubismMatrix44();\r\n    this._tmpMatrixForDraw = new CubismMatrix44();\r\n    this._maskTexture = null;\r\n\r\n    let tmp: CubismTextureColor = new CubismTextureColor();\r\n    tmp.R = 1.0;\r\n    tmp.G = 0.0;\r\n    tmp.B = 0.0;\r\n    tmp.A = 0.0;\r\n    this._channelColors.pushBack(tmp);\r\n\r\n    tmp = new CubismTextureColor();\r\n    tmp.R = 0.0;\r\n    tmp.G = 1.0;\r\n    tmp.B = 0.0;\r\n    tmp.A = 0.0;\r\n    this._channelColors.pushBack(tmp);\r\n\r\n    tmp = new CubismTextureColor();\r\n    tmp.R = 0.0;\r\n    tmp.G = 0.0;\r\n    tmp.B = 1.0;\r\n    tmp.A = 0.0;\r\n    this._channelColors.pushBack(tmp);\r\n\r\n    tmp = new CubismTextureColor();\r\n    tmp.R = 0.0;\r\n    tmp.G = 0.0;\r\n    tmp.B = 0.0;\r\n    tmp.A = 1.0;\r\n    this._channelColors.pushBack(tmp);\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\r\n      if (this._clippingContextListForMask.at(i)) {\r\n        this._clippingContextListForMask.at(i).release();\r\n        this._clippingContextListForMask.set(i, void 0);\r\n      }\r\n      this._clippingContextListForMask.set(i, null);\r\n    }\r\n    this._clippingContextListForMask = null;\r\n\r\n    // _clippingContextListForDrawは_clippingContextListForMaskにあるインスタンスを指している。上記の処理により要素ごとのDELETEは不要。\r\n    for (let i = 0; i < this._clippingContextListForDraw.getSize(); i++) {\r\n      this._clippingContextListForDraw.set(i, null);\r\n    }\r\n    this._clippingContextListForDraw = null;\r\n\r\n    if (this._maskTexture) {\r\n      for (let i = 0; i < this._maskTexture.textures.getSize(); i++) {\r\n        this.gl.deleteFramebuffer(this._maskTexture.textures.at(i));\r\n      }\r\n      this._maskTexture.textures.clear();\r\n      this._maskTexture.textures = null;\r\n      this._maskTexture = null;\r\n    }\r\n\r\n    for (let i = 0; i < this._channelColors.getSize(); i++) {\r\n      this._channelColors.set(i, null);\r\n    }\r\n\r\n    this._channelColors = null;\r\n\r\n    // テクスチャ解放\r\n    if (this._maskColorBuffers != null) {\r\n      for (let index = 0; index < this._maskColorBuffers.getSize(); index++) {\r\n        this.gl.deleteTexture(this._maskColorBuffers.at(index));\r\n      }\r\n      this._maskColorBuffers.clear();\r\n    }\r\n    this._maskColorBuffers = null;\r\n\r\n    if (this._maskRenderTextures != null) {\r\n      this._maskRenderTextures.clear();\r\n    }\r\n    this._maskRenderTextures = null;\r\n\r\n    if (this._clearedFrameBufferflags != null) {\r\n      this._clearedFrameBufferflags.clear();\r\n    }\r\n    this._clearedFrameBufferflags = null;\r\n  }\r\n\r\n  /**\r\n   * マネージャの初期化処理\r\n   * クリッピングマスクを使う描画オブジェクトの登録を行う\r\n   * @param model モデルのインスタンス\r\n   * @param drawableCount 描画オブジェクトの数\r\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのインデックスのリスト\r\n   * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\r\n   * @param renderTextureCount バッファの生成数\r\n   */\r\n  public initialize(\r\n    model: CubismModel,\r\n    drawableCount: number,\r\n    drawableMasks: Int32Array[],\r\n    drawableMaskCounts: Int32Array,\r\n    renderTextureCount: number\r\n  ): void {\r\n    // レンダーテクスチャの合計枚数の設定\r\n    // 1以上の整数でない場合はそれぞれ警告を出す\r\n    if (renderTextureCount % 1 != 0) {\r\n      CubismLogWarning(\r\n        'The number of render textures must be specified as an integer. The decimal point is rounded down and corrected to an integer.'\r\n      );\r\n      // 小数点以下を除去\r\n      renderTextureCount = ~~renderTextureCount;\r\n    }\r\n    if (renderTextureCount < 1) {\r\n      CubismLogWarning(\r\n        'The number of render textures must be an integer greater than or equal to 1. Set the number of render textures to 1.'\r\n      );\r\n    }\r\n    // 負の値が使われている場合は強制的に1枚と設定する\r\n    this._renderTextureCount = renderTextureCount < 1 ? 1 : renderTextureCount;\r\n\r\n    this._clearedFrameBufferflags = new csmVector<boolean>(\r\n      this._renderTextureCount\r\n    );\r\n\r\n    // クリッピングマスクを使う描画オブジェクトをすべて登録する\r\n    // クリッピングマスクは、通常数個程度に限定して使うものとする\r\n    for (let i = 0; i < drawableCount; i++) {\r\n      if (drawableMaskCounts[i] <= 0) {\r\n        // クリッピングマスクが使用されていないアートメッシュ（多くの場合使用しない）\r\n        this._clippingContextListForDraw.pushBack(null);\r\n        continue;\r\n      }\r\n\r\n      // 既にあるClipContextと同じかチェックする\r\n      let clippingContext: CubismClippingContext = this.findSameClip(\r\n        drawableMasks[i],\r\n        drawableMaskCounts[i]\r\n      );\r\n      if (clippingContext == null) {\r\n        // 同一のマスクが存在していない場合は生成する\r\n        clippingContext = new CubismClippingContext(\r\n          this,\r\n          drawableMasks[i],\r\n          drawableMaskCounts[i]\r\n        );\r\n        this._clippingContextListForMask.pushBack(clippingContext);\r\n      }\r\n\r\n      clippingContext.addClippedDrawable(i);\r\n\r\n      this._clippingContextListForDraw.pushBack(clippingContext);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * クリッピングコンテキストを作成する。モデル描画時に実行する。\r\n   * @param model モデルのインスタンス\r\n   * @param renderer レンダラのインスタンス\r\n   */\r\n  public setupClippingContext(\r\n    model: CubismModel,\r\n    renderer: CubismRenderer_WebGL\r\n  ): void {\r\n    this._currentFrameNo++;\r\n\r\n    // 全てのクリッピングを用意する\r\n    // 同じクリップ（複数の場合はまとめて一つのクリップ）を使う場合は1度だけ設定する\r\n    let usingClipCount = 0;\r\n    for (\r\n      let clipIndex = 0;\r\n      clipIndex < this._clippingContextListForMask.getSize();\r\n      clipIndex++\r\n    ) {\r\n      // 1つのクリッピングマスクに関して\r\n      const cc: CubismClippingContext =\r\n        this._clippingContextListForMask.at(clipIndex);\r\n\r\n      // このクリップを利用する描画オブジェクト群全体を囲む矩形を計算\r\n      this.calcClippedDrawTotalBounds(model, cc);\r\n\r\n      if (cc._isUsing) {\r\n        usingClipCount++; // 使用中としてカウント\r\n      }\r\n    }\r\n\r\n    // マスク作成処理\r\n    if (usingClipCount > 0) {\r\n      // 各マスクのレイアウトを決定していく\r\n      this.setupLayoutBounds(\r\n        renderer.isUsingHighPrecisionMask() ? 0 : usingClipCount\r\n      );\r\n\r\n      if (!renderer.isUsingHighPrecisionMask()) {\r\n        // 生成したFrameBufferと同じサイズでビューポートを設定\r\n        this.gl.viewport(\r\n          0,\r\n          0,\r\n          this._clippingMaskBufferSize,\r\n          this._clippingMaskBufferSize\r\n        );\r\n\r\n        // 後の計算のためにインデックスの最初をセット\r\n        this._currentMaskRenderTexture = this.getMaskRenderTexture().at(0);\r\n\r\n        renderer.preDraw(); // バッファをクリアする\r\n\r\n        // ---------- マスク描画処理 ----------\r\n        // マスク用RenderTextureをactiveにセット\r\n        this.gl.bindFramebuffer(\r\n          this.gl.FRAMEBUFFER,\r\n          this._currentMaskRenderTexture\r\n        );\r\n      }\r\n\r\n      // サイズがレンダーテクスチャの枚数と合わない場合は合わせる\r\n      if (this._clearedFrameBufferflags.getSize() != this._renderTextureCount) {\r\n        this._clearedFrameBufferflags.clear();\r\n        this._clearedFrameBufferflags = new csmVector<boolean>(\r\n          this._renderTextureCount\r\n        );\r\n      }\r\n\r\n      // マスクのクリアフラグを毎フレーム開始時に初期化\r\n      for (\r\n        let index = 0;\r\n        index < this._clearedFrameBufferflags.getSize();\r\n        index++\r\n      ) {\r\n        this._clearedFrameBufferflags[index] = false;\r\n      }\r\n\r\n      // 実際にマスクを生成する\r\n      // 全てのマスクをどのようにレイアウトして描くかを決定し、ClipContext, ClippedDrawContextに記憶する\r\n      for (\r\n        let clipIndex = 0;\r\n        clipIndex < this._clippingContextListForMask.getSize();\r\n        clipIndex++\r\n      ) {\r\n        // --- 実際に1つのマスクを描く ---\r\n        const clipContext: CubismClippingContext =\r\n          this._clippingContextListForMask.at(clipIndex);\r\n        const allClipedDrawRect: csmRect = clipContext._allClippedDrawRect; // このマスクを使う、すべての描画オブジェクトの論理座標上の囲み矩形\r\n        const layoutBoundsOnTex01: csmRect = clipContext._layoutBounds; // この中にマスクを収める\r\n        const MARGIN = 0.05; // モデル座標上の矩形を、適宜マージンを付けて使う\r\n        let scaleX = 0;\r\n        let scaleY = 0;\r\n\r\n        // clipContextに設定したレンダーテクスチャをインデックスで取得\r\n        const clipContextRenderTexture = this.getMaskRenderTexture().at(\r\n          clipContext._bufferIndex\r\n        );\r\n\r\n        // 現在のレンダーテクスチャがclipContextのものと異なる場合\r\n        if (\r\n          this._currentMaskRenderTexture != clipContextRenderTexture &&\r\n          !renderer.isUsingHighPrecisionMask()\r\n        ) {\r\n          this._currentMaskRenderTexture = clipContextRenderTexture;\r\n          renderer.preDraw(); // バッファをクリアする\r\n          // マスク用RenderTextureをactiveにセット\r\n          this.gl.bindFramebuffer(\r\n            this.gl.FRAMEBUFFER,\r\n            this._currentMaskRenderTexture\r\n          );\r\n        }\r\n\r\n        if (renderer.isUsingHighPrecisionMask()) {\r\n          const ppu: number = model.getPixelsPerUnit();\r\n          const maskPixelSize: number =\r\n            clipContext.getClippingManager()._clippingMaskBufferSize;\r\n          const physicalMaskWidth: number =\r\n            layoutBoundsOnTex01.width * maskPixelSize;\r\n          const physicalMaskHeight: number =\r\n            layoutBoundsOnTex01.height * maskPixelSize;\r\n\r\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\r\n\r\n          if (this._tmpBoundsOnModel.width * ppu > physicalMaskWidth) {\r\n            this._tmpBoundsOnModel.expand(\r\n              allClipedDrawRect.width * MARGIN,\r\n              0.0\r\n            );\r\n            scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\r\n          } else {\r\n            scaleX = ppu / physicalMaskWidth;\r\n          }\r\n\r\n          if (this._tmpBoundsOnModel.height * ppu > physicalMaskHeight) {\r\n            this._tmpBoundsOnModel.expand(\r\n              0.0,\r\n              allClipedDrawRect.height * MARGIN\r\n            );\r\n            scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\r\n          } else {\r\n            scaleY = ppu / physicalMaskHeight;\r\n          }\r\n        } else {\r\n          this._tmpBoundsOnModel.setRect(allClipedDrawRect);\r\n          this._tmpBoundsOnModel.expand(\r\n            allClipedDrawRect.width * MARGIN,\r\n            allClipedDrawRect.height * MARGIN\r\n          );\r\n          //########## 本来は割り当てられた領域の全体を使わず必要最低限のサイズがよい\r\n\r\n          // シェーダ用の計算式を求める。回転を考慮しない場合は以下のとおり\r\n          // movePeriod' = movePeriod * scaleX + offX\t\t  [[ movePeriod' = (movePeriod - tmpBoundsOnModel.movePeriod)*scale + layoutBoundsOnTex01.movePeriod ]]\r\n          scaleX = layoutBoundsOnTex01.width / this._tmpBoundsOnModel.width;\r\n          scaleY = layoutBoundsOnTex01.height / this._tmpBoundsOnModel.height;\r\n        }\r\n\r\n        // マスク生成時に使う行列を求める\r\n        {\r\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\r\n          this._tmpMatrix.loadIdentity();\r\n          {\r\n            // layout0..1 を -1..1に変換\r\n            this._tmpMatrix.translateRelative(-1.0, -1.0);\r\n            this._tmpMatrix.scaleRelative(2.0, 2.0);\r\n          }\r\n          {\r\n            // view to layout0..1\r\n            this._tmpMatrix.translateRelative(\r\n              layoutBoundsOnTex01.x,\r\n              layoutBoundsOnTex01.y\r\n            );\r\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\r\n            this._tmpMatrix.translateRelative(\r\n              -this._tmpBoundsOnModel.x,\r\n              -this._tmpBoundsOnModel.y\r\n            );\r\n            // new = [translate][scale][translate]\r\n          }\r\n          // tmpMatrixForMaskが計算結果\r\n          this._tmpMatrixForMask.setMatrix(this._tmpMatrix.getArray());\r\n        }\r\n\r\n        //--------- draw時の mask 参照用行列を計算\r\n        {\r\n          // シェーダに渡す行列を求める <<<<<<<<<<<<<<<<<<<<<<<< 要最適化（逆順に計算すればシンプルにできる）\r\n          this._tmpMatrix.loadIdentity();\r\n          {\r\n            this._tmpMatrix.translateRelative(\r\n              layoutBoundsOnTex01.x,\r\n              layoutBoundsOnTex01.y\r\n            );\r\n            this._tmpMatrix.scaleRelative(scaleX, scaleY); // new = [translate][scale]\r\n            this._tmpMatrix.translateRelative(\r\n              -this._tmpBoundsOnModel.x,\r\n              -this._tmpBoundsOnModel.y\r\n            );\r\n            // new = [translate][scale][translate]\r\n          }\r\n          this._tmpMatrixForDraw.setMatrix(this._tmpMatrix.getArray());\r\n        }\r\n        clipContext._matrixForMask.setMatrix(this._tmpMatrixForMask.getArray());\r\n        clipContext._matrixForDraw.setMatrix(this._tmpMatrixForDraw.getArray());\r\n\r\n        if (!renderer.isUsingHighPrecisionMask()) {\r\n          const clipDrawCount: number = clipContext._clippingIdCount;\r\n          for (let i = 0; i < clipDrawCount; i++) {\r\n            const clipDrawIndex: number = clipContext._clippingIdList[i];\r\n\r\n            // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\r\n            if (\r\n              !model.getDrawableDynamicFlagVertexPositionsDidChange(\r\n                clipDrawIndex\r\n              )\r\n            ) {\r\n              continue;\r\n            }\r\n\r\n            renderer.setIsCulling(\r\n              model.getDrawableCulling(clipDrawIndex) != false\r\n            );\r\n\r\n            // マスクがクリアされていないなら処理する\r\n            if (!this._clearedFrameBufferflags[clipContext._bufferIndex]) {\r\n              // マスクをクリアする\r\n              // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\r\n              this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n              this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n              this._clearedFrameBufferflags[clipContext._bufferIndex] = true;\r\n            }\r\n\r\n            // 今回専用の変換を適用して描く\r\n            // チャンネルも切り替える必要がある(A,R,G,B)\r\n            renderer.setClippingContextBufferForMask(clipContext);\r\n            renderer.drawMesh(\r\n              model.getDrawableTextureIndex(clipDrawIndex),\r\n              model.getDrawableVertexIndexCount(clipDrawIndex),\r\n              model.getDrawableVertexCount(clipDrawIndex),\r\n              model.getDrawableVertexIndices(clipDrawIndex),\r\n              model.getDrawableVertices(clipDrawIndex),\r\n              model.getDrawableVertexUvs(clipDrawIndex),\r\n              model.getMultiplyColor(clipDrawIndex),\r\n              model.getScreenColor(clipDrawIndex),\r\n              model.getDrawableOpacity(clipDrawIndex),\r\n              CubismBlendMode.CubismBlendMode_Normal, // クリッピングは通常描画を強制\r\n              false // マスク生成時はクリッピングの反転使用は全く関係がない\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!renderer.isUsingHighPrecisionMask()) {\r\n        // --- 後処理 ---\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\r\n        renderer.setClippingContextBufferForMask(null);\r\n\r\n        this.gl.viewport(\r\n          s_viewport[0],\r\n          s_viewport[1],\r\n          s_viewport[2],\r\n          s_viewport[3]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 既にマスクを作っているかを確認\r\n   * 作っている様であれば該当するクリッピングマスクのインスタンスを返す\r\n   * 作っていなければNULLを返す\r\n   * @param drawableMasks 描画オブジェクトをマスクする描画オブジェクトのリスト\r\n   * @param drawableMaskCounts 描画オブジェクトをマスクする描画オブジェクトの数\r\n   * @return 該当するクリッピングマスクが存在すればインスタンスを返し、なければNULLを返す\r\n   */\r\n  public findSameClip(\r\n    drawableMasks: Int32Array,\r\n    drawableMaskCounts: number\r\n  ): CubismClippingContext {\r\n    // 作成済みClippingContextと一致するか確認\r\n    for (let i = 0; i < this._clippingContextListForMask.getSize(); i++) {\r\n      const clippingContext: CubismClippingContext =\r\n        this._clippingContextListForMask.at(i);\r\n      const count: number = clippingContext._clippingIdCount;\r\n\r\n      // 個数が違う場合は別物\r\n      if (count != drawableMaskCounts) {\r\n        continue;\r\n      }\r\n\r\n      let sameCount = 0;\r\n\r\n      // 同じIDを持つか確認。配列の数が同じなので、一致した個数が同じなら同じ物を持つとする\r\n      for (let j = 0; j < count; j++) {\r\n        const clipId: number = clippingContext._clippingIdList[j];\r\n\r\n        for (let k = 0; k < count; k++) {\r\n          if (drawableMasks[k] == clipId) {\r\n            sameCount++;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (sameCount == count) {\r\n        return clippingContext;\r\n      }\r\n    }\r\n\r\n    return null; // 見つからなかった\r\n  }\r\n\r\n  /**\r\n   * クリッピングコンテキストを配置するレイアウト\r\n   * 指定された数のレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする\r\n   * マスクグループの数が4以下ならRGBA各チャンネルに一つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する。\r\n   *\r\n   * @param usingClipCount 配置するクリッピングコンテキストの数\r\n   */\r\n  public setupLayoutBounds(usingClipCount: number): void {\r\n    const useClippingMaskMaxCount =\r\n      this._renderTextureCount <= 1\r\n        ? ClippingMaskMaxCountOnDefault\r\n        : ClippingMaskMaxCountOnMultiRenderTexture * this._renderTextureCount;\r\n\r\n    if (usingClipCount <= 0 || usingClipCount > useClippingMaskMaxCount) {\r\n      if (usingClipCount > useClippingMaskMaxCount) {\r\n        // マスクの制限数の警告を出す\r\n        CubismLogError(\r\n          'not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}',\r\n          usingClipCount - useClippingMaskMaxCount,\r\n          this._renderTextureCount,\r\n          usingClipCount\r\n        );\r\n      }\r\n      // この場合は一つのマスクターゲットを毎回クリアして使用する\r\n      for (\r\n        let index = 0;\r\n        index < this._clippingContextListForMask.getSize();\r\n        index++\r\n      ) {\r\n        const clipContext: CubismClippingContext =\r\n          this._clippingContextListForMask.at(index);\r\n        clipContext._layoutChannelNo = 0; // どうせ毎回消すので固定\r\n        clipContext._layoutBounds.x = 0.0;\r\n        clipContext._layoutBounds.y = 0.0;\r\n        clipContext._layoutBounds.width = 1.0;\r\n        clipContext._layoutBounds.height = 1.0;\r\n        clipContext._bufferIndex = 0;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // レンダーテクスチャが1枚なら9分割する（最大36枚）\r\n    const layoutCountMaxValue = this._renderTextureCount <= 1 ? 9 : 8;\r\n\r\n    // 指定された数のレンダーテクスチャを極力いっぱいに使ってマスクをレイアウトする（デフォルトなら1）\r\n    // マスクグループの数が4以下ならRGBA各チャンネルに1つずつマスクを配置し、5以上6以下ならRGBAを2,2,1,1と配置する\r\n    let countPerSheetDiv: number = usingClipCount / this._renderTextureCount; // レンダーテクスチャ1枚あたり何枚割り当てるか\r\n    let countPerSheetMod: number = usingClipCount % this._renderTextureCount; // この番号のレンダーテクスチャまでに一つずつ配分する\r\n\r\n    // 小数点は切り捨てる\r\n    countPerSheetDiv = ~~countPerSheetDiv;\r\n    countPerSheetMod = ~~countPerSheetMod;\r\n\r\n    // RGBAを順番に使っていく\r\n    let div: number = countPerSheetDiv / ColorChannelCount; // 1チャンネルに配置する基本のマスク\r\n    let mod: number = countPerSheetDiv % ColorChannelCount; // 余り、この番号のチャンネルまでに一つずつ配分する\r\n\r\n    // 小数点は切り捨てる\r\n    div = ~~div;\r\n    mod = ~~mod;\r\n\r\n    // RGBAそれぞれのチャンネルを用意していく（0:R, 1:G, 2:B, 3:A）\r\n    let curClipIndex = 0; // 順番に設定していく\r\n\r\n    for (\r\n      let renderTextureNo = 0;\r\n      renderTextureNo < this._renderTextureCount;\r\n      renderTextureNo++\r\n    ) {\r\n      for (let channelNo = 0; channelNo < ColorChannelCount; channelNo++) {\r\n        // このチャンネルにレイアウトする数\r\n        let layoutCount: number = div + (channelNo < mod ? 1 : 0);\r\n\r\n        // このレンダーテクスチャにまだ割り当てられていなければ追加する\r\n        const checkChannelNo = mod + 1 >= ColorChannelCount ? 0 : mod + 1;\r\n        if (layoutCount < layoutCountMaxValue && channelNo == checkChannelNo) {\r\n          layoutCount += renderTextureNo < countPerSheetMod ? 1 : 0;\r\n        }\r\n\r\n        // 分割方法を決定する\r\n        if (layoutCount == 0) {\r\n          // 何もしない\r\n        } else if (layoutCount == 1) {\r\n          // 全てをそのまま使う\r\n          const clipContext: CubismClippingContext =\r\n            this._clippingContextListForMask.at(curClipIndex++);\r\n          clipContext._layoutChannelNo = channelNo;\r\n          clipContext._layoutBounds.x = 0.0;\r\n          clipContext._layoutBounds.y = 0.0;\r\n          clipContext._layoutBounds.width = 1.0;\r\n          clipContext._layoutBounds.height = 1.0;\r\n          clipContext._bufferIndex = renderTextureNo;\r\n        } else if (layoutCount == 2) {\r\n          for (let i = 0; i < layoutCount; i++) {\r\n            let xpos: number = i % 2;\r\n\r\n            // 小数点は切り捨てる\r\n            xpos = ~~xpos;\r\n\r\n            const cc: CubismClippingContext =\r\n              this._clippingContextListForMask.at(curClipIndex++);\r\n            cc._layoutChannelNo = channelNo;\r\n\r\n            // UVを2つに分解して使う\r\n            cc._layoutBounds.x = xpos * 0.5;\r\n            cc._layoutBounds.y = 0.0;\r\n            cc._layoutBounds.width = 0.5;\r\n            cc._layoutBounds.height = 1.0;\r\n            cc._bufferIndex = renderTextureNo;\r\n          }\r\n        } else if (layoutCount <= 4) {\r\n          // 4分割して使う\r\n          for (let i = 0; i < layoutCount; i++) {\r\n            let xpos: number = i % 2;\r\n            let ypos: number = i / 2;\r\n\r\n            // 小数点は切り捨てる\r\n            xpos = ~~xpos;\r\n            ypos = ~~ypos;\r\n\r\n            const cc = this._clippingContextListForMask.at(curClipIndex++);\r\n            cc._layoutChannelNo = channelNo;\r\n\r\n            cc._layoutBounds.x = xpos * 0.5;\r\n            cc._layoutBounds.y = ypos * 0.5;\r\n            cc._layoutBounds.width = 0.5;\r\n            cc._layoutBounds.height = 0.5;\r\n            cc._bufferIndex = renderTextureNo;\r\n          }\r\n        } else if (layoutCount <= layoutCountMaxValue) {\r\n          // 9分割して使う\r\n          for (let i = 0; i < layoutCount; i++) {\r\n            let xpos = i % 3;\r\n            let ypos = i / 3;\r\n\r\n            // 小数点は切り捨てる\r\n            xpos = ~~xpos;\r\n            ypos = ~~ypos;\r\n\r\n            const cc: CubismClippingContext =\r\n              this._clippingContextListForMask.at(curClipIndex++);\r\n            cc._layoutChannelNo = channelNo;\r\n\r\n            cc._layoutBounds.x = xpos / 3.0;\r\n            cc._layoutBounds.y = ypos / 3.0;\r\n            cc._layoutBounds.width = 1.0 / 3.0;\r\n            cc._layoutBounds.height = 1.0 / 3.0;\r\n            cc._bufferIndex = renderTextureNo;\r\n          }\r\n        } else {\r\n          // マスクの制限枚数を超えた場合の処理\r\n          CubismLogError(\r\n            'not supported mask count : {0}\\n[Details] render texture count : {1}, mask count : {2}',\r\n            usingClipCount - useClippingMaskMaxCount,\r\n            this._renderTextureCount,\r\n            usingClipCount\r\n          );\r\n\r\n          // SetupShaderProgramでオーバーアクセスが発生するので仮で数値を入れる\r\n          // もちろん描画結果は正しいものではなくなる\r\n          for (let index = 0; index < layoutCount; index++) {\r\n            const cc: CubismClippingContext =\r\n              this._clippingContextListForMask.at(curClipIndex++);\r\n\r\n            cc._layoutChannelNo = 0;\r\n\r\n            cc._layoutBounds.x = 0.0;\r\n            cc._layoutBounds.y = 0.0;\r\n            cc._layoutBounds.width = 1.0;\r\n            cc._layoutBounds.height = 1.0;\r\n            cc._bufferIndex = 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * カラーバッファを取得する\r\n   * @return カラーバッファ\r\n   */\r\n  public getColorBuffer(): csmVector<WebGLTexture> {\r\n    return this._maskColorBuffers;\r\n  }\r\n\r\n  /**\r\n   * 画面描画に使用するクリッピングマスクのリストを取得する\r\n   * @return 画面描画に使用するクリッピングマスクのリスト\r\n   */\r\n  public getClippingContextListForDraw(): csmVector<CubismClippingContext> {\r\n    return this._clippingContextListForDraw;\r\n  }\r\n\r\n  /**\r\n   * マスクの合計数をカウント\r\n   * @returns\r\n   */\r\n  public getClippingMaskCount(): number {\r\n    return this._clippingContextListForMask.getSize();\r\n  }\r\n\r\n  /**\r\n   * クリッピングマスクバッファのサイズを設定する\r\n   * @param size クリッピングマスクバッファのサイズ\r\n   */\r\n  public setClippingMaskBufferSize(size: number): void {\r\n    this._clippingMaskBufferSize = size;\r\n  }\r\n\r\n  /**\r\n   * クリッピングマスクバッファのサイズを取得する\r\n   * @return クリッピングマスクバッファのサイズ\r\n   */\r\n  public getClippingMaskBufferSize(): number {\r\n    return this._clippingMaskBufferSize;\r\n  }\r\n\r\n  /**\r\n   * このバッファのレンダーテクスチャの枚数を取得する\r\n   * @return このバッファのレンダーテクスチャの枚数\r\n   */\r\n  public getRenderTextureCount(): number {\r\n    return this._renderTextureCount;\r\n  }\r\n\r\n  public _currentMaskRenderTexture: WebGLFramebuffer; // マスク用レンダーテクスチャのアドレス\r\n  public _maskRenderTextures: csmVector<WebGLFramebuffer>; // レンダーテクスチャのリスト\r\n  public _maskColorBuffers: csmVector<WebGLTexture>; // マスク用カラーバッファーのアドレスのリスト\r\n  public _currentFrameNo: number; // マスクテクスチャに与えるフレーム番号\r\n\r\n  public _channelColors: csmVector<CubismTextureColor>;\r\n  public _maskTexture: CubismRenderTextureResource; // マスク用のテクスチャリソースのリスト\r\n  public _clippingContextListForMask: csmVector<CubismClippingContext>; // マスク用クリッピングコンテキストのリスト\r\n  public _clippingContextListForDraw: csmVector<CubismClippingContext>; // 描画用クリッピングコンテキストのリスト\r\n  public _clippingMaskBufferSize: number; // クリッピングマスクのバッファサイズ（初期値:256）\r\n  public _renderTextureCount: number; // 生成するレンダーテクスチャの枚数\r\n\r\n  private _tmpMatrix: CubismMatrix44; // マスク計算用の行列\r\n  private _tmpMatrixForMask: CubismMatrix44; // マスク計算用の行列\r\n  private _tmpMatrixForDraw: CubismMatrix44; // マスク計算用の行列\r\n  private _tmpBoundsOnModel: csmRect; // マスク配置計算用の矩形\r\n  private _clearedFrameBufferflags: csmVector<boolean>; //マスクのクリアフラグの配列\r\n\r\n  gl: WebGLRenderingContext; // WebGLレンダリングコンテキスト\r\n}\r\n\r\n/**\r\n * レンダーテクスチャのリソースを定義する構造体\r\n * クリッピングマスクで使用する\r\n */\r\nexport class CubismRenderTextureResource {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   * @param frameNo レンダラーのフレーム番号\r\n   * @param texture テクスチャのアドレス\r\n   */\r\n  public constructor(frameNo: number, texture: csmVector<WebGLFramebuffer>) {\r\n    this.frameNo = frameNo;\r\n    this.textures = texture;\r\n  }\r\n\r\n  public frameNo: number; // レンダラのフレーム番号\r\n  public textures: csmVector<WebGLFramebuffer>; // テクスチャのアドレス\r\n}\r\n\r\n/**\r\n * クリッピングマスクのコンテキスト\r\n */\r\nexport class CubismClippingContext {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(\r\n    manager: CubismClippingManager_WebGL,\r\n    clippingDrawableIndices: Int32Array,\r\n    clipCount: number\r\n  ) {\r\n    this._owner = manager;\r\n\r\n    // クリップしている（＝マスク用の）Drawableのインデックスリスト\r\n    this._clippingIdList = clippingDrawableIndices;\r\n\r\n    // マスクの数\r\n    this._clippingIdCount = clipCount;\r\n\r\n    this._allClippedDrawRect = new csmRect();\r\n    this._layoutBounds = new csmRect();\r\n\r\n    this._clippedDrawableIndexList = [];\r\n\r\n    this._matrixForMask = new CubismMatrix44();\r\n    this._matrixForDraw = new CubismMatrix44();\r\n\r\n    this._bufferIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    if (this._layoutBounds != null) {\r\n      this._layoutBounds = null;\r\n    }\r\n\r\n    if (this._allClippedDrawRect != null) {\r\n      this._allClippedDrawRect = null;\r\n    }\r\n\r\n    if (this._clippedDrawableIndexList != null) {\r\n      this._clippedDrawableIndexList = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * このマスクにクリップされる描画オブジェクトを追加する\r\n   *\r\n   * @param drawableIndex クリッピング対象に追加する描画オブジェクトのインデックス\r\n   */\r\n  public addClippedDrawable(drawableIndex: number) {\r\n    this._clippedDrawableIndexList.push(drawableIndex);\r\n  }\r\n\r\n  /**\r\n   * このマスクを管理するマネージャのインスタンスを取得する\r\n   * @return クリッピングマネージャのインスタンス\r\n   */\r\n  public getClippingManager(): CubismClippingManager_WebGL {\r\n    return this._owner;\r\n  }\r\n\r\n  public setGl(gl: WebGLRenderingContext): void {\r\n    this._owner.setGL(gl);\r\n  }\r\n\r\n  public _isUsing: boolean; // 現在の描画状態でマスクの準備が必要ならtrue\r\n  public readonly _clippingIdList: Int32Array; // クリッピングマスクのIDリスト\r\n  public _clippingIdCount: number; // クリッピングマスクの数\r\n  public _layoutChannelNo: number; // RGBAのいずれのチャンネルにこのクリップを配置するか（0:R, 1:G, 2:B, 3:A）\r\n  public _layoutBounds: csmRect; // マスク用チャンネルのどの領域にマスクを入れるか（View座標-1~1, UVは0~1に直す）\r\n  public _allClippedDrawRect: csmRect; // このクリッピングで、クリッピングされるすべての描画オブジェクトの囲み矩形（毎回更新）\r\n  public _matrixForMask: CubismMatrix44; // マスクの位置計算結果を保持する行列\r\n  public _matrixForDraw: CubismMatrix44; // 描画オブジェクトの位置計算結果を保持する行列\r\n  public _clippedDrawableIndexList: number[]; // このマスクにクリップされる描画オブジェクトのリスト\r\n  public _bufferIndex: number; // このマスクが割り当てられるレンダーテクスチャ（フレームバッファ）やカラーバッファのインデックス\r\n\r\n  private _owner: CubismClippingManager_WebGL; // このマスクを管理しているマネージャのインスタンス\r\n}\r\n\r\nexport class CubismRendererProfile_WebGL {\r\n  private setGlEnable(index: GLenum, enabled: GLboolean): void {\r\n    if (enabled) this.gl.enable(index);\r\n    else this.gl.disable(index);\r\n  }\r\n\r\n  private setGlEnableVertexAttribArray(\r\n    index: GLuint,\r\n    enabled: GLboolean\r\n  ): void {\r\n    if (enabled) this.gl.enableVertexAttribArray(index);\r\n    else this.gl.disableVertexAttribArray(index);\r\n  }\r\n\r\n  public save(): void {\r\n    if (this.gl == null) {\r\n      CubismLogError(\r\n        \"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\"\r\n      );\r\n      return;\r\n    }\r\n    //-- push state --\r\n    this._lastArrayBufferBinding = this.gl.getParameter(\r\n      this.gl.ARRAY_BUFFER_BINDING\r\n    );\r\n    this._lastArrayBufferBinding = this.gl.getParameter(\r\n      this.gl.ELEMENT_ARRAY_BUFFER_BINDING\r\n    );\r\n    this._lastProgram = this.gl.getParameter(this.gl.CURRENT_PROGRAM);\r\n\r\n    this._lastActiveTexture = this.gl.getParameter(this.gl.ACTIVE_TEXTURE);\r\n    this.gl.activeTexture(this.gl.TEXTURE1); //テクスチャユニット1をアクティブに（以後の設定対象とする）\r\n    this._lastTexture1Binding2D = this.gl.getParameter(\r\n      this.gl.TEXTURE_BINDING_2D\r\n    );\r\n\r\n    this.gl.activeTexture(this.gl.TEXTURE0); //テクスチャユニット0をアクティブに（以後の設定対象とする）\r\n    this._lastTexture0Binding2D = this.gl.getParameter(\r\n      this.gl.TEXTURE_BINDING_2D\r\n    );\r\n\r\n    this._lastVertexAttribArrayEnabled[0] = this.gl.getVertexAttrib(\r\n      0,\r\n      this.gl.VERTEX_ATTRIB_ARRAY_ENABLED\r\n    );\r\n    this._lastVertexAttribArrayEnabled[1] = this.gl.getVertexAttrib(\r\n      1,\r\n      this.gl.VERTEX_ATTRIB_ARRAY_ENABLED\r\n    );\r\n    this._lastVertexAttribArrayEnabled[2] = this.gl.getVertexAttrib(\r\n      2,\r\n      this.gl.VERTEX_ATTRIB_ARRAY_ENABLED\r\n    );\r\n    this._lastVertexAttribArrayEnabled[3] = this.gl.getVertexAttrib(\r\n      3,\r\n      this.gl.VERTEX_ATTRIB_ARRAY_ENABLED\r\n    );\r\n\r\n    this._lastScissorTest = this.gl.isEnabled(this.gl.SCISSOR_TEST);\r\n    this._lastStencilTest = this.gl.isEnabled(this.gl.STENCIL_TEST);\r\n    this._lastDepthTest = this.gl.isEnabled(this.gl.DEPTH_TEST);\r\n    this._lastCullFace = this.gl.isEnabled(this.gl.CULL_FACE);\r\n    this._lastBlend = this.gl.isEnabled(this.gl.BLEND);\r\n\r\n    this._lastFrontFace = this.gl.getParameter(this.gl.FRONT_FACE);\r\n\r\n    this._lastColorMask = this.gl.getParameter(this.gl.COLOR_WRITEMASK);\r\n\r\n    // backup blending\r\n    this._lastBlending[0] = this.gl.getParameter(this.gl.BLEND_SRC_RGB);\r\n    this._lastBlending[1] = this.gl.getParameter(this.gl.BLEND_DST_RGB);\r\n    this._lastBlending[2] = this.gl.getParameter(this.gl.BLEND_SRC_ALPHA);\r\n    this._lastBlending[3] = this.gl.getParameter(this.gl.BLEND_DST_ALPHA);\r\n\r\n    // モデル描画直前のFBOとビューポートを保存\r\n    this._lastFBO = this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\r\n    this._lastViewport = this.gl.getParameter(this.gl.VIEWPORT);\r\n  }\r\n\r\n  public restore(): void {\r\n    if (this.gl == null) {\r\n      CubismLogError(\r\n        \"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\"\r\n      );\r\n      return;\r\n    }\r\n    this.gl.useProgram(this._lastProgram);\r\n\r\n    this.setGlEnableVertexAttribArray(0, this._lastVertexAttribArrayEnabled[0]);\r\n    this.setGlEnableVertexAttribArray(1, this._lastVertexAttribArrayEnabled[1]);\r\n    this.setGlEnableVertexAttribArray(2, this._lastVertexAttribArrayEnabled[2]);\r\n    this.setGlEnableVertexAttribArray(3, this._lastVertexAttribArrayEnabled[3]);\r\n\r\n    this.setGlEnable(this.gl.SCISSOR_TEST, this._lastScissorTest);\r\n    this.setGlEnable(this.gl.STENCIL_TEST, this._lastStencilTest);\r\n    this.setGlEnable(this.gl.DEPTH_TEST, this._lastDepthTest);\r\n    this.setGlEnable(this.gl.CULL_FACE, this._lastCullFace);\r\n    this.setGlEnable(this.gl.BLEND, this._lastBlend);\r\n\r\n    this.gl.frontFace(this._lastFrontFace);\r\n\r\n    this.gl.colorMask(\r\n      this._lastColorMask[0],\r\n      this._lastColorMask[1],\r\n      this._lastColorMask[2],\r\n      this._lastColorMask[3]\r\n    );\r\n\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this._lastArrayBufferBinding); //前にバッファがバインドされていたら破棄する必要がある\r\n    this.gl.bindBuffer(\r\n      this.gl.ELEMENT_ARRAY_BUFFER,\r\n      this._lastElementArrayBufferBinding\r\n    );\r\n\r\n    this.gl.activeTexture(this.gl.TEXTURE1); //テクスチャユニット1を復元\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture1Binding2D);\r\n\r\n    this.gl.activeTexture(this.gl.TEXTURE0); //テクスチャユニット0を復元\r\n    this.gl.bindTexture(this.gl.TEXTURE_2D, this._lastTexture0Binding2D);\r\n\r\n    this.gl.activeTexture(this._lastActiveTexture);\r\n\r\n    this.gl.blendFuncSeparate(\r\n      this._lastBlending[0],\r\n      this._lastBlending[1],\r\n      this._lastBlending[2],\r\n      this._lastBlending[3]\r\n    );\r\n  }\r\n\r\n  public setGl(gl: WebGLRenderingContext): void {\r\n    this.gl = gl;\r\n  }\r\n\r\n  constructor() {\r\n    this._lastVertexAttribArrayEnabled = new Array<GLboolean>(4);\r\n    this._lastColorMask = new Array<GLboolean>(4);\r\n    this._lastBlending = new Array<GLint>(4);\r\n    this._lastViewport = new Array<GLint>(4);\r\n  }\r\n\r\n  private _lastArrayBufferBinding: GLint; ///< モデル描画直前の頂点バッファ\r\n  private _lastElementArrayBufferBinding: GLint; ///< モデル描画直前のElementバッファ\r\n  private _lastProgram: GLint; ///< モデル描画直前のシェーダプログラムバッファ\r\n  private _lastActiveTexture: GLint; ///< モデル描画直前のアクティブなテクスチャ\r\n  private _lastTexture0Binding2D: GLint; ///< モデル描画直前のテクスチャユニット0\r\n  private _lastTexture1Binding2D: GLint; ///< モデル描画直前のテクスチャユニット1\r\n  private _lastVertexAttribArrayEnabled: GLboolean[]; ///< モデル描画直前のテクスチャユニット1\r\n  private _lastScissorTest: GLboolean; ///< モデル描画直前のGL_VERTEX_ATTRIB_ARRAY_ENABLEDパラメータ\r\n  private _lastBlend: GLboolean; ///< モデル描画直前のGL_SCISSOR_TESTパラメータ\r\n  private _lastStencilTest: GLboolean; ///< モデル描画直前のGL_STENCIL_TESTパラメータ\r\n  private _lastDepthTest: GLboolean; ///< モデル描画直前のGL_DEPTH_TESTパラメータ\r\n  private _lastCullFace: GLboolean; ///< モデル描画直前のGL_CULL_FACEパラメータ\r\n  private _lastFrontFace: GLint; ///< モデル描画直前のGL_CULL_FACEパラメータ\r\n  private _lastColorMask: GLboolean[]; ///< モデル描画直前のGL_COLOR_WRITEMASKパラメータ\r\n  private _lastBlending: GLint[]; ///< モデル描画直前のカラーブレンディングパラメータ\r\n  private _lastFBO: GLint; ///< モデル描画直前のフレームバッファ\r\n  private _lastViewport: GLint[]; ///< モデル描画直前のビューポート\r\n\r\n  gl: WebGLRenderingContext;\r\n}\r\n\r\n/**\r\n * WebGL用のシェーダープログラムを生成・破棄するクラス\r\n * シングルトンなクラスであり、CubismShader_WebGL.getInstanceからアクセスする。\r\n */\r\nexport class CubismShader_WebGL {\r\n  /**\r\n   * インスタンスを取得する（シングルトン）\r\n   * @return インスタンス\r\n   */\r\n  public static getInstance(): CubismShader_WebGL {\r\n    if (s_instance == null) {\r\n      s_instance = new CubismShader_WebGL();\r\n\r\n      return s_instance;\r\n    }\r\n    return s_instance;\r\n  }\r\n\r\n  /**\r\n   * インスタンスを開放する（シングルトン）\r\n   */\r\n  public static deleteInstance(): void {\r\n    if (s_instance) {\r\n      s_instance.release();\r\n      s_instance = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * privateなコンストラクタ\r\n   */\r\n  private constructor() {\r\n    this._shaderSets = new csmVector<CubismShaderSet>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    this.releaseShaderProgram();\r\n  }\r\n\r\n  /**\r\n   * シェーダープログラムの一連のセットアップを実行する\r\n   * @param renderer レンダラのインスタンス\r\n   * @param textureId GPUのテクスチャID\r\n   * @param vertexCount ポリゴンメッシュの頂点数\r\n   * @param vertexArray ポリゴンメッシュの頂点配列\r\n   * @param indexArray インデックスバッファの頂点配列\r\n   * @param uvArray uv配列\r\n   * @param opacity 不透明度\r\n   * @param colorBlendMode カラーブレンディングのタイプ\r\n   * @param baseColor ベースカラー\r\n   * @param isPremultipliedAlpha 乗算済みアルファかどうか\r\n   * @param matrix4x4 Model-View-Projection行列\r\n   * @param invertedMask マスクを反転して使用するフラグ\r\n   */\r\n  public setupShaderProgram(\r\n    renderer: CubismRenderer_WebGL,\r\n    textureId: WebGLTexture,\r\n    vertexCount: number,\r\n    vertexArray: Float32Array,\r\n    indexArray: Uint16Array,\r\n    uvArray: Float32Array,\r\n    bufferData: {\r\n      vertex: WebGLBuffer;\r\n      uv: WebGLBuffer;\r\n      index: WebGLBuffer;\r\n    },\r\n    opacity: number,\r\n    colorBlendMode: CubismBlendMode,\r\n    baseColor: CubismTextureColor,\r\n    multiplyColor: CubismTextureColor,\r\n    screenColor: CubismTextureColor,\r\n    isPremultipliedAlpha: boolean,\r\n    matrix4x4: CubismMatrix44,\r\n    invertedMask: boolean\r\n  ): void {\r\n    if (!isPremultipliedAlpha) {\r\n      CubismLogError('NoPremultipliedAlpha is not allowed');\r\n    }\r\n\r\n    if (this._shaderSets.getSize() == 0) {\r\n      this.generateShaders();\r\n    }\r\n\r\n    // Blending\r\n    let SRC_COLOR: number;\r\n    let DST_COLOR: number;\r\n    let SRC_ALPHA: number;\r\n    let DST_ALPHA: number;\r\n\r\n    if (renderer.getClippingContextBufferForMask() != null) {\r\n      // マスク生成時\r\n      const shaderSet: CubismShaderSet = this._shaderSets.at(\r\n        ShaderNames.ShaderNames_SetupMask\r\n      );\r\n      this.gl.useProgram(shaderSet.shaderProgram);\r\n\r\n      // テクスチャ設定\r\n      this.gl.activeTexture(this.gl.TEXTURE0);\r\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\r\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\r\n\r\n      // 頂点配列の設定(VBO)\r\n      if (bufferData.vertex == null) {\r\n        bufferData.vertex = this.gl.createBuffer();\r\n      }\r\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\r\n      this.gl.bufferData(\r\n        this.gl.ARRAY_BUFFER,\r\n        vertexArray,\r\n        this.gl.DYNAMIC_DRAW\r\n      );\r\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\r\n      this.gl.vertexAttribPointer(\r\n        shaderSet.attributePositionLocation,\r\n        2,\r\n        this.gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      // テクスチャ頂点の設定\r\n      if (bufferData.uv == null) {\r\n        bufferData.uv = this.gl.createBuffer();\r\n      }\r\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\r\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\r\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\r\n      this.gl.vertexAttribPointer(\r\n        shaderSet.attributeTexCoordLocation,\r\n        2,\r\n        this.gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      // チャンネル\r\n      const channelNo: number =\r\n        renderer.getClippingContextBufferForMask()._layoutChannelNo;\r\n      const colorChannel: CubismTextureColor = renderer\r\n        .getClippingContextBufferForMask()\r\n        .getClippingManager()\r\n        .getChannelFlagAsColor(channelNo);\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformChannelFlagLocation,\r\n        colorChannel.R,\r\n        colorChannel.G,\r\n        colorChannel.B,\r\n        colorChannel.A\r\n      );\r\n\r\n      this.gl.uniformMatrix4fv(\r\n        shaderSet.uniformClipMatrixLocation,\r\n        false,\r\n        renderer.getClippingContextBufferForMask()._matrixForMask.getArray()\r\n      );\r\n\r\n      const rect: csmRect =\r\n        renderer.getClippingContextBufferForMask()._layoutBounds;\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformBaseColorLocation,\r\n        rect.x * 2.0 - 1.0,\r\n        rect.y * 2.0 - 1.0,\r\n        rect.getRight() * 2.0 - 1.0,\r\n        rect.getBottom() * 2.0 - 1.0\r\n      );\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformMultiplyColorLocation,\r\n        multiplyColor.R,\r\n        multiplyColor.G,\r\n        multiplyColor.B,\r\n        multiplyColor.A\r\n      );\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformScreenColorLocation,\r\n        screenColor.R,\r\n        screenColor.G,\r\n        screenColor.B,\r\n        screenColor.A\r\n      );\r\n\r\n      SRC_COLOR = this.gl.ZERO;\r\n      DST_COLOR = this.gl.ONE_MINUS_SRC_COLOR;\r\n      SRC_ALPHA = this.gl.ZERO;\r\n      DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\r\n    } // マスク生成以外の場合\r\n    else {\r\n      const masked: boolean =\r\n        renderer.getClippingContextBufferForDraw() != null; // この描画オブジェクトはマスク対象か\r\n      const offset: number = masked ? (invertedMask ? 2 : 1) : 0;\r\n\r\n      let shaderSet: CubismShaderSet = new CubismShaderSet();\r\n\r\n      switch (colorBlendMode) {\r\n        case CubismBlendMode.CubismBlendMode_Normal:\r\n        default:\r\n          shaderSet = this._shaderSets.at(\r\n            ShaderNames.ShaderNames_NormalPremultipliedAlpha + offset\r\n          );\r\n          SRC_COLOR = this.gl.ONE;\r\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\r\n          SRC_ALPHA = this.gl.ONE;\r\n          DST_ALPHA = this.gl.ONE_MINUS_SRC_ALPHA;\r\n          break;\r\n\r\n        case CubismBlendMode.CubismBlendMode_Additive:\r\n          shaderSet = this._shaderSets.at(\r\n            ShaderNames.ShaderNames_AddPremultipliedAlpha + offset\r\n          );\r\n          SRC_COLOR = this.gl.ONE;\r\n          DST_COLOR = this.gl.ONE;\r\n          SRC_ALPHA = this.gl.ZERO;\r\n          DST_ALPHA = this.gl.ONE;\r\n          break;\r\n\r\n        case CubismBlendMode.CubismBlendMode_Multiplicative:\r\n          shaderSet = this._shaderSets.at(\r\n            ShaderNames.ShaderNames_MultPremultipliedAlpha + offset\r\n          );\r\n          SRC_COLOR = this.gl.DST_COLOR;\r\n          DST_COLOR = this.gl.ONE_MINUS_SRC_ALPHA;\r\n          SRC_ALPHA = this.gl.ZERO;\r\n          DST_ALPHA = this.gl.ONE;\r\n          break;\r\n      }\r\n\r\n      this.gl.useProgram(shaderSet.shaderProgram);\r\n\r\n      // 頂点配列の設定\r\n      if (bufferData.vertex == null) {\r\n        bufferData.vertex = this.gl.createBuffer();\r\n      }\r\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.vertex);\r\n      this.gl.bufferData(\r\n        this.gl.ARRAY_BUFFER,\r\n        vertexArray,\r\n        this.gl.DYNAMIC_DRAW\r\n      );\r\n      this.gl.enableVertexAttribArray(shaderSet.attributePositionLocation);\r\n      this.gl.vertexAttribPointer(\r\n        shaderSet.attributePositionLocation,\r\n        2,\r\n        this.gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      // テクスチャ頂点の設定\r\n      if (bufferData.uv == null) {\r\n        bufferData.uv = this.gl.createBuffer();\r\n      }\r\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, bufferData.uv);\r\n      this.gl.bufferData(this.gl.ARRAY_BUFFER, uvArray, this.gl.DYNAMIC_DRAW);\r\n      this.gl.enableVertexAttribArray(shaderSet.attributeTexCoordLocation);\r\n      this.gl.vertexAttribPointer(\r\n        shaderSet.attributeTexCoordLocation,\r\n        2,\r\n        this.gl.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      if (masked) {\r\n        this.gl.activeTexture(this.gl.TEXTURE1);\r\n        const tex: WebGLTexture = renderer\r\n          .getClippingContextBufferForDraw()\r\n          .getClippingManager()\r\n          .getColorBuffer()\r\n          .at(renderer.getClippingContextBufferForDraw()._bufferIndex);\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, tex);\r\n        this.gl.uniform1i(shaderSet.samplerTexture1Location, 1);\r\n\r\n        // view座標をClippingContextの座標に変換するための行列を設定\r\n        this.gl.uniformMatrix4fv(\r\n          shaderSet.uniformClipMatrixLocation,\r\n          false,\r\n          renderer.getClippingContextBufferForDraw()._matrixForDraw.getArray()\r\n        );\r\n\r\n        // 使用するカラーチャンネルを設定\r\n        const channelNo: number =\r\n          renderer.getClippingContextBufferForDraw()._layoutChannelNo;\r\n        const colorChannel: CubismTextureColor = renderer\r\n          .getClippingContextBufferForDraw()\r\n          .getClippingManager()\r\n          .getChannelFlagAsColor(channelNo);\r\n        this.gl.uniform4f(\r\n          shaderSet.uniformChannelFlagLocation,\r\n          colorChannel.R,\r\n          colorChannel.G,\r\n          colorChannel.B,\r\n          colorChannel.A\r\n        );\r\n      }\r\n\r\n      // テクスチャ設定\r\n      this.gl.activeTexture(this.gl.TEXTURE0);\r\n      this.gl.bindTexture(this.gl.TEXTURE_2D, textureId);\r\n      this.gl.uniform1i(shaderSet.samplerTexture0Location, 0);\r\n\r\n      // 座標変換\r\n      this.gl.uniformMatrix4fv(\r\n        shaderSet.uniformMatrixLocation,\r\n        false,\r\n        matrix4x4.getArray()\r\n      );\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformBaseColorLocation,\r\n        baseColor.R,\r\n        baseColor.G,\r\n        baseColor.B,\r\n        baseColor.A\r\n      );\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformMultiplyColorLocation,\r\n        multiplyColor.R,\r\n        multiplyColor.G,\r\n        multiplyColor.B,\r\n        multiplyColor.A\r\n      );\r\n\r\n      this.gl.uniform4f(\r\n        shaderSet.uniformScreenColorLocation,\r\n        screenColor.R,\r\n        screenColor.G,\r\n        screenColor.B,\r\n        screenColor.A\r\n      );\r\n    }\r\n\r\n    // IBOを作成し、データを転送\r\n    if (bufferData.index == null) {\r\n      bufferData.index = this.gl.createBuffer();\r\n    }\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, bufferData.index);\r\n    this.gl.bufferData(\r\n      this.gl.ELEMENT_ARRAY_BUFFER,\r\n      indexArray,\r\n      this.gl.DYNAMIC_DRAW\r\n    );\r\n    this.gl.blendFuncSeparate(SRC_COLOR, DST_COLOR, SRC_ALPHA, DST_ALPHA);\r\n  }\r\n\r\n  /**\r\n   * シェーダープログラムを解放する\r\n   */\r\n  public releaseShaderProgram(): void {\r\n    for (let i = 0; i < this._shaderSets.getSize(); i++) {\r\n      this.gl.deleteProgram(this._shaderSets.at(i).shaderProgram);\r\n      this._shaderSets.at(i).shaderProgram = 0;\r\n      this._shaderSets.set(i, void 0);\r\n      this._shaderSets.set(i, null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * シェーダープログラムを初期化する\r\n   * @param vertShaderSrc 頂点シェーダのソース\r\n   * @param fragShaderSrc フラグメントシェーダのソース\r\n   */\r\n  public generateShaders(): void {\r\n    for (let i = 0; i < ShaderCount; i++) {\r\n      this._shaderSets.pushBack(new CubismShaderSet());\r\n    }\r\n\r\n    this._shaderSets.at(0).shaderProgram = this.loadShaderProgram(\r\n      vertexShaderSrcSetupMask,\r\n      fragmentShaderSrcsetupMask\r\n    );\r\n\r\n    this._shaderSets.at(1).shaderProgram = this.loadShaderProgram(\r\n      vertexShaderSrc,\r\n      fragmentShaderSrcPremultipliedAlpha\r\n    );\r\n    this._shaderSets.at(2).shaderProgram = this.loadShaderProgram(\r\n      vertexShaderSrcMasked,\r\n      fragmentShaderSrcMaskPremultipliedAlpha\r\n    );\r\n    this._shaderSets.at(3).shaderProgram = this.loadShaderProgram(\r\n      vertexShaderSrcMasked,\r\n      fragmentShaderSrcMaskInvertedPremultipliedAlpha\r\n    );\r\n\r\n    // 加算も通常と同じシェーダーを利用する\r\n    this._shaderSets.at(4).shaderProgram = this._shaderSets.at(1).shaderProgram;\r\n    this._shaderSets.at(5).shaderProgram = this._shaderSets.at(2).shaderProgram;\r\n    this._shaderSets.at(6).shaderProgram = this._shaderSets.at(3).shaderProgram;\r\n\r\n    // 乗算も通常と同じシェーダーを利用する\r\n    this._shaderSets.at(7).shaderProgram = this._shaderSets.at(1).shaderProgram;\r\n    this._shaderSets.at(8).shaderProgram = this._shaderSets.at(2).shaderProgram;\r\n    this._shaderSets.at(9).shaderProgram = this._shaderSets.at(3).shaderProgram;\r\n\r\n    // SetupMask\r\n    this._shaderSets.at(0).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(0).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(0).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(0).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(0).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(0).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(0).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(0).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(0).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(0).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 通常（PremultipliedAlpha）\r\n    this._shaderSets.at(1).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(1).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(1).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(1).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(1).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(1).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(1).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(1).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(1).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(1).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(1).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(1).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(1).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(1).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 通常（クリッピング、PremultipliedAlpha）\r\n    this._shaderSets.at(2).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(2).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(2).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(2).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(2).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(2).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(2).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(2).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(2).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(2).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(2).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(2).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(2).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(2).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 通常（クリッピング・反転, PremultipliedAlpha）\r\n    this._shaderSets.at(3).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(3).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(3).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(3).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(3).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(3).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(3).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(3).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(3).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(3).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(3).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(3).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(3).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(3).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 加算（PremultipliedAlpha）\r\n    this._shaderSets.at(4).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(4).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(4).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(4).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(4).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(4).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(4).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(4).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(4).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(4).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(4).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(4).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(4).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(4).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 加算（クリッピング、PremultipliedAlpha）\r\n    this._shaderSets.at(5).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(5).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(5).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(5).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(5).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(5).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(5).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(5).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(5).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(5).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(5).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(5).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(5).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(5).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 加算（クリッピング・反転、PremultipliedAlpha）\r\n    this._shaderSets.at(6).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(6).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(6).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(6).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(6).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(6).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(6).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(6).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(6).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(6).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(6).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(6).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(6).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(6).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 乗算（PremultipliedAlpha）\r\n    this._shaderSets.at(7).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(7).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(7).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(7).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(7).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(7).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(7).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(7).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(7).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(7).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(7).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(7).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(7).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(7).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 乗算（クリッピング、PremultipliedAlpha）\r\n    this._shaderSets.at(8).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(8).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(8).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(8).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(8).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(8).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(8).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(8).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(8).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(8).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(8).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(8).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(8).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(8).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n\r\n    // 乗算（クリッピング・反転、PremultipliedAlpha）\r\n    this._shaderSets.at(9).attributePositionLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'a_position'\r\n      );\r\n    this._shaderSets.at(9).attributeTexCoordLocation =\r\n      this.gl.getAttribLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'a_texCoord'\r\n      );\r\n    this._shaderSets.at(9).samplerTexture0Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(9).shaderProgram,\r\n      's_texture0'\r\n    );\r\n    this._shaderSets.at(9).samplerTexture1Location = this.gl.getUniformLocation(\r\n      this._shaderSets.at(9).shaderProgram,\r\n      's_texture1'\r\n    );\r\n    this._shaderSets.at(9).uniformMatrixLocation = this.gl.getUniformLocation(\r\n      this._shaderSets.at(9).shaderProgram,\r\n      'u_matrix'\r\n    );\r\n    this._shaderSets.at(9).uniformClipMatrixLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'u_clipMatrix'\r\n      );\r\n    this._shaderSets.at(9).uniformChannelFlagLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'u_channelFlag'\r\n      );\r\n    this._shaderSets.at(9).uniformBaseColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'u_baseColor'\r\n      );\r\n    this._shaderSets.at(9).uniformMultiplyColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'u_multiplyColor'\r\n      );\r\n    this._shaderSets.at(9).uniformScreenColorLocation =\r\n      this.gl.getUniformLocation(\r\n        this._shaderSets.at(9).shaderProgram,\r\n        'u_screenColor'\r\n      );\r\n  }\r\n\r\n  /**\r\n   * シェーダプログラムをロードしてアドレスを返す\r\n   * @param vertexShaderSource    頂点シェーダのソース\r\n   * @param fragmentShaderSource  フラグメントシェーダのソース\r\n   * @return シェーダプログラムのアドレス\r\n   */\r\n  public loadShaderProgram(\r\n    vertexShaderSource: string,\r\n    fragmentShaderSource: string\r\n  ): WebGLProgram {\r\n    // Create Shader Program\r\n    let shaderProgram: WebGLProgram = this.gl.createProgram();\r\n\r\n    let vertShader = this.compileShaderSource(\r\n      this.gl.VERTEX_SHADER,\r\n      vertexShaderSource\r\n    );\r\n\r\n    if (!vertShader) {\r\n      CubismLogError('Vertex shader compile error!');\r\n      return 0;\r\n    }\r\n\r\n    let fragShader = this.compileShaderSource(\r\n      this.gl.FRAGMENT_SHADER,\r\n      fragmentShaderSource\r\n    );\r\n    if (!fragShader) {\r\n      CubismLogError('Vertex shader compile error!');\r\n      return 0;\r\n    }\r\n\r\n    // Attach vertex shader to program\r\n    this.gl.attachShader(shaderProgram, vertShader);\r\n\r\n    // Attach fragment shader to program\r\n    this.gl.attachShader(shaderProgram, fragShader);\r\n\r\n    // link program\r\n    this.gl.linkProgram(shaderProgram);\r\n    const linkStatus = this.gl.getProgramParameter(\r\n      shaderProgram,\r\n      this.gl.LINK_STATUS\r\n    );\r\n\r\n    // リンクに失敗したらシェーダーを削除\r\n    if (!linkStatus) {\r\n      CubismLogError('Failed to link program: {0}', shaderProgram);\r\n\r\n      this.gl.deleteShader(vertShader);\r\n      vertShader = 0;\r\n\r\n      this.gl.deleteShader(fragShader);\r\n      fragShader = 0;\r\n\r\n      if (shaderProgram) {\r\n        this.gl.deleteProgram(shaderProgram);\r\n        shaderProgram = 0;\r\n      }\r\n\r\n      return 0;\r\n    }\r\n\r\n    // Release vertex and fragment shaders.\r\n    this.gl.deleteShader(vertShader);\r\n    this.gl.deleteShader(fragShader);\r\n\r\n    return shaderProgram;\r\n  }\r\n\r\n  /**\r\n   * シェーダープログラムをコンパイルする\r\n   * @param shaderType シェーダタイプ(Vertex/Fragment)\r\n   * @param shaderSource シェーダソースコード\r\n   *\r\n   * @return コンパイルされたシェーダープログラム\r\n   */\r\n  public compileShaderSource(\r\n    shaderType: GLenum,\r\n    shaderSource: string\r\n  ): WebGLProgram {\r\n    const source: string = shaderSource;\r\n\r\n    const shader: WebGLProgram = this.gl.createShader(shaderType);\r\n    this.gl.shaderSource(shader, source);\r\n    this.gl.compileShader(shader);\r\n\r\n    if (!shader) {\r\n      const log: string = this.gl.getShaderInfoLog(shader);\r\n      CubismLogError('Shader compile log: {0} ', log);\r\n    }\r\n\r\n    const status: any = this.gl.getShaderParameter(\r\n      shader,\r\n      this.gl.COMPILE_STATUS\r\n    );\r\n    if (!status) {\r\n      this.gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  public setGl(gl: WebGLRenderingContext): void {\r\n    this.gl = gl;\r\n  }\r\n\r\n  _shaderSets: csmVector<CubismShaderSet>; // ロードしたシェーダープログラムを保持する変数\r\n  gl: WebGLRenderingContext; // webglコンテキスト\r\n}\r\n\r\n/**\r\n * CubismShader_WebGLのインナークラス\r\n */\r\nexport class CubismShaderSet {\r\n  shaderProgram: WebGLProgram; // シェーダープログラムのアドレス\r\n  attributePositionLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（Position）\r\n  attributeTexCoordLocation: GLuint; // シェーダープログラムに渡す変数のアドレス（TexCoord）\r\n  uniformMatrixLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Matrix）\r\n  uniformClipMatrixLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（ClipMatrix）\r\n  samplerTexture0Location: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Texture0）\r\n  samplerTexture1Location: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（Texture1）\r\n  uniformBaseColorLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（BaseColor）\r\n  uniformChannelFlagLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（ChannelFlag）\r\n  uniformMultiplyColorLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（MultiplyColor）\r\n  uniformScreenColorLocation: WebGLUniformLocation; // シェーダープログラムに渡す変数のアドレス（ScreenColor）\r\n}\r\n\r\nexport enum ShaderNames {\r\n  // SetupMask\r\n  ShaderNames_SetupMask,\r\n\r\n  // Normal\r\n  ShaderNames_NormalPremultipliedAlpha,\r\n  ShaderNames_NormalMaskedPremultipliedAlpha,\r\n  ShaderNames_NomralMaskedInvertedPremultipliedAlpha,\r\n\r\n  // Add\r\n  ShaderNames_AddPremultipliedAlpha,\r\n  ShaderNames_AddMaskedPremultipliedAlpha,\r\n  ShaderNames_AddMaskedPremultipliedAlphaInverted,\r\n\r\n  // Mult\r\n  ShaderNames_MultPremultipliedAlpha,\r\n  ShaderNames_MultMaskedPremultipliedAlpha,\r\n  ShaderNames_MultMaskedPremultipliedAlphaInverted,\r\n}\r\n\r\nexport const vertexShaderSrcSetupMask =\r\n  'attribute vec4     a_position;' +\r\n  'attribute vec2     a_texCoord;' +\r\n  'varying vec2       v_texCoord;' +\r\n  'varying vec4       v_myPos;' +\r\n  'uniform mat4       u_clipMatrix;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   gl_Position = u_clipMatrix * a_position;' +\r\n  '   v_myPos = u_clipMatrix * a_position;' +\r\n  '   v_texCoord = a_texCoord;' +\r\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\r\n  '}';\r\nexport const fragmentShaderSrcsetupMask =\r\n  'precision mediump float;' +\r\n  'varying vec2       v_texCoord;' +\r\n  'varying vec4       v_myPos;' +\r\n  'uniform vec4       u_baseColor;' +\r\n  'uniform vec4       u_channelFlag;' +\r\n  'uniform sampler2D  s_texture0;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   float isInside = ' +\r\n  '       step(u_baseColor.x, v_myPos.x/v_myPos.w)' +\r\n  '       * step(u_baseColor.y, v_myPos.y/v_myPos.w)' +\r\n  '       * step(v_myPos.x/v_myPos.w, u_baseColor.z)' +\r\n  '       * step(v_myPos.y/v_myPos.w, u_baseColor.w);' +\r\n  '   gl_FragColor = u_channelFlag * texture2D(s_texture0, v_texCoord).a * isInside;' +\r\n  '}';\r\n\r\n//----- バーテックスシェーダプログラム -----\r\n// Normal & Add & Mult 共通\r\nexport const vertexShaderSrc =\r\n  'attribute vec4     a_position;' + //v.vertex\r\n  'attribute vec2     a_texCoord;' + //v.texcoord\r\n  'varying vec2       v_texCoord;' + //v2f.texcoord\r\n  'uniform mat4       u_matrix;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   gl_Position = u_matrix * a_position;' +\r\n  '   v_texCoord = a_texCoord;' +\r\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\r\n  '}';\r\n\r\n// Normal & Add & Mult 共通（クリッピングされたものの描画用）\r\nexport const vertexShaderSrcMasked =\r\n  'attribute vec4     a_position;' +\r\n  'attribute vec2     a_texCoord;' +\r\n  'varying vec2       v_texCoord;' +\r\n  'varying vec4       v_clipPos;' +\r\n  'uniform mat4       u_matrix;' +\r\n  'uniform mat4       u_clipMatrix;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   gl_Position = u_matrix * a_position;' +\r\n  '   v_clipPos = u_clipMatrix * a_position;' +\r\n  '   v_texCoord = a_texCoord;' +\r\n  '   v_texCoord.y = 1.0 - v_texCoord.y;' +\r\n  '}';\r\n\r\n//----- フラグメントシェーダプログラム -----\r\n// Normal & Add & Mult 共通 （PremultipliedAlpha）\r\nexport const fragmentShaderSrcPremultipliedAlpha =\r\n  'precision mediump float;' +\r\n  'varying vec2       v_texCoord;' + //v2f.texcoord\r\n  'uniform vec4       u_baseColor;' +\r\n  'uniform sampler2D  s_texture0;' + //_MainTex\r\n  'uniform vec4       u_multiplyColor;' +\r\n  'uniform vec4       u_screenColor;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\r\n  '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\r\n  '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\r\n  '   vec4 color = texColor * u_baseColor;' +\r\n  '   gl_FragColor = vec4(color.rgb, color.a);' +\r\n  '}';\r\n\r\n// Normal （クリッピングされたものの描画用、PremultipliedAlpha兼用）\r\nexport const fragmentShaderSrcMaskPremultipliedAlpha =\r\n  'precision mediump float;' +\r\n  'varying vec2       v_texCoord;' +\r\n  'varying vec4       v_clipPos;' +\r\n  'uniform vec4       u_baseColor;' +\r\n  'uniform vec4       u_channelFlag;' +\r\n  'uniform sampler2D  s_texture0;' +\r\n  'uniform sampler2D  s_texture1;' +\r\n  'uniform vec4       u_multiplyColor;' +\r\n  'uniform vec4       u_screenColor;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\r\n  '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\r\n  '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\r\n  '   vec4 col_formask = texColor * u_baseColor;' +\r\n  '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\r\n  '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\r\n  '   col_formask = col_formask * maskVal;' +\r\n  '   gl_FragColor = col_formask;' +\r\n  '}';\r\n\r\n// Normal & Add & Mult 共通（クリッピングされて反転使用の描画用、PremultipliedAlphaの場合）\r\nexport const fragmentShaderSrcMaskInvertedPremultipliedAlpha =\r\n  'precision mediump float;' +\r\n  'varying vec2      v_texCoord;' +\r\n  'varying vec4      v_clipPos;' +\r\n  'uniform sampler2D s_texture0;' +\r\n  'uniform sampler2D s_texture1;' +\r\n  'uniform vec4      u_channelFlag;' +\r\n  'uniform vec4      u_baseColor;' +\r\n  'uniform vec4      u_multiplyColor;' +\r\n  'uniform vec4      u_screenColor;' +\r\n  'void main()' +\r\n  '{' +\r\n  '   vec4 texColor = texture2D(s_texture0, v_texCoord);' +\r\n  '   texColor.rgb = texColor.rgb * u_multiplyColor.rgb;' +\r\n  '   texColor.rgb = (texColor.rgb + u_screenColor.rgb * texColor.a) - (texColor.rgb * u_screenColor.rgb);' +\r\n  '   vec4 col_formask = texColor * u_baseColor;' +\r\n  '   vec4 clipMask = (1.0 - texture2D(s_texture1, v_clipPos.xy / v_clipPos.w)) * u_channelFlag;' +\r\n  '   float maskVal = clipMask.r + clipMask.g + clipMask.b + clipMask.a;' +\r\n  '   col_formask = col_formask * (1.0 - maskVal);' +\r\n  '   gl_FragColor = col_formask;' +\r\n  '}';\r\n\r\n/**\r\n * WebGL用の描画命令を実装したクラス\r\n */\r\nexport class CubismRenderer_WebGL extends CubismRenderer {\r\n  /**\r\n   * レンダラの初期化処理を実行する\r\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\r\n   *\r\n   * @param model モデルのインスタンス\r\n   * @param maskBufferCount バッファの生成数\r\n   */\r\n  public initialize(model: CubismModel, maskBufferCount = 1): void {\r\n    if (model.isUsingMasking()) {\r\n      this._clippingManager = new CubismClippingManager_WebGL(); // クリッピングマスク・バッファ前処理方式を初期化\r\n      this._clippingManager.initialize(\r\n        model,\r\n        model.getDrawableCount(),\r\n        model.getDrawableMasks(),\r\n        model.getDrawableMaskCounts(),\r\n        maskBufferCount\r\n      );\r\n    }\r\n\r\n    this._sortedDrawableIndexList.resize(model.getDrawableCount(), 0);\r\n\r\n    super.initialize(model); // 親クラスの処理を呼ぶ\r\n  }\r\n\r\n  /**\r\n   * WebGLテクスチャのバインド処理\r\n   * CubismRendererにテクスチャを設定し、CubismRenderer内でその画像を参照するためのIndex値を戻り値とする\r\n   * @param modelTextureNo セットするモデルテクスチャの番号\r\n   * @param glTextureNo WebGLテクスチャの番号\r\n   */\r\n  public bindTexture(modelTextureNo: number, glTexture: WebGLTexture): void {\r\n    this._textures.setValue(modelTextureNo, glTexture);\r\n  }\r\n\r\n  /**\r\n   * WebGLにバインドされたテクスチャのリストを取得する\r\n   * @return テクスチャのリスト\r\n   */\r\n  public getBindedTextures(): csmMap<number, WebGLTexture> {\r\n    return this._textures;\r\n  }\r\n\r\n  /**\r\n   * クリッピングマスクバッファのサイズを設定する\r\n   * マスク用のFrameBufferを破棄、再作成する為処理コストは高い\r\n   * @param size クリッピングマスクバッファのサイズ\r\n   */\r\n  public setClippingMaskBufferSize(size: number) {\r\n    // クリッピングマスクを利用しない場合は早期リターン\r\n    if (!this._model.isUsingMasking()) {\r\n      return;\r\n    }\r\n\r\n    // インスタンス破棄前にレンダーテクスチャの数を保存\r\n    const renderTextureCount: number =\r\n      this._clippingManager.getRenderTextureCount();\r\n\r\n    // FrameBufferのサイズを変更するためにインスタンスを破棄・再作成する\r\n    this._clippingManager.release();\r\n    this._clippingManager = void 0;\r\n    this._clippingManager = null;\r\n\r\n    this._clippingManager = new CubismClippingManager_WebGL();\r\n\r\n    this._clippingManager.setClippingMaskBufferSize(size);\r\n\r\n    this._clippingManager.initialize(\r\n      this.getModel(),\r\n      this.getModel().getDrawableCount(),\r\n      this.getModel().getDrawableMasks(),\r\n      this.getModel().getDrawableMaskCounts(),\r\n      renderTextureCount // インスタンス破棄前に保存したレンダーテクスチャの数\r\n    );\r\n  }\r\n\r\n  /**\r\n   * クリッピングマスクバッファのサイズを取得する\r\n   * @return クリッピングマスクバッファのサイズ\r\n   */\r\n  public getClippingMaskBufferSize(): number {\r\n    return this._model.isUsingMasking()\r\n      ? this._clippingManager.getClippingMaskBufferSize()\r\n      : -1;\r\n  }\r\n\r\n  /**\r\n   * レンダーテクスチャの枚数を取得する\r\n   * @return レンダーテクスチャの枚数\r\n   */\r\n  public getRenderTextureCount(): number {\r\n    return this._model.isUsingMasking()\r\n      ? this._clippingManager.getRenderTextureCount()\r\n      : -1;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._clippingContextBufferForMask = null;\r\n    this._clippingContextBufferForDraw = null;\r\n    this._rendererProfile = new CubismRendererProfile_WebGL();\r\n    this.firstDraw = true;\r\n    this._textures = new csmMap<number, number>();\r\n    this._sortedDrawableIndexList = new csmVector<number>();\r\n    this._bufferData = {\r\n      vertex: (WebGLBuffer = null),\r\n      uv: (WebGLBuffer = null),\r\n      index: (WebGLBuffer = null),\r\n    };\r\n\r\n    // テクスチャ対応マップの容量を確保しておく\r\n    this._textures.prepareCapacity(32, true);\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    if (this._clippingManager) {\r\n      this._clippingManager.release();\r\n      this._clippingManager = void 0;\r\n      this._clippingManager = null;\r\n    }\r\n\r\n    if (this.gl == null) {\r\n      return;\r\n    }\r\n    this.gl.deleteBuffer(this._bufferData.vertex);\r\n    this._bufferData.vertex = null;\r\n    this.gl.deleteBuffer(this._bufferData.uv);\r\n    this._bufferData.uv = null;\r\n    this.gl.deleteBuffer(this._bufferData.index);\r\n    this._bufferData.index = null;\r\n    this._bufferData = null;\r\n\r\n    this._textures = null;\r\n  }\r\n\r\n  /**\r\n   * モデルを描画する実際の処理\r\n   */\r\n  public doDrawModel(): void {\r\n    if (this.gl == null) {\r\n      CubismLogError(\r\n        \"'gl' is null. WebGLRenderingContext is required.\\nPlease call 'CubimRenderer_WebGL.startUp' function.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    //------------ クリッピングマスク・バッファ前処理方式の場合 ------------\r\n    if (this._clippingManager != null) {\r\n      this.preDraw();\r\n      this._clippingManager.setupClippingContext(this.getModel(), this);\r\n    }\r\n\r\n    // 上記クリッピング処理内でも一度PreDrawを呼ぶので注意!!\r\n    this.preDraw();\r\n\r\n    const drawableCount: number = this.getModel().getDrawableCount();\r\n    const renderOrder: Int32Array = this.getModel().getDrawableRenderOrders();\r\n\r\n    // インデックスを描画順でソート\r\n    for (let i = 0; i < drawableCount; ++i) {\r\n      const order: number = renderOrder[i];\r\n      this._sortedDrawableIndexList.set(order, i);\r\n    }\r\n\r\n    // 描画\r\n    for (let i = 0; i < drawableCount; ++i) {\r\n      const drawableIndex: number = this._sortedDrawableIndexList.at(i);\r\n\r\n      // Drawableが表示状態でなければ処理をパスする\r\n      if (!this.getModel().getDrawableDynamicFlagIsVisible(drawableIndex)) {\r\n        continue;\r\n      }\r\n\r\n      const clipContext =\r\n        this._clippingManager != null\r\n          ? this._clippingManager\r\n              .getClippingContextListForDraw()\r\n              .at(drawableIndex)\r\n          : null;\r\n\r\n      if (clipContext != null && this.isUsingHighPrecisionMask()) {\r\n        // 描くことになっていた\r\n        if (clipContext._isUsing) {\r\n          // 生成したFrameBufferと同じサイズでビューポートを設定\r\n          this.gl.viewport(\r\n            0,\r\n            0,\r\n            this._clippingManager.getClippingMaskBufferSize(),\r\n            this._clippingManager.getClippingMaskBufferSize()\r\n          );\r\n\r\n          this.preDraw(); // バッファをクリアする\r\n\r\n          // ---------- マスク描画処理 ----------\r\n          // マスク用RenderTextureをactiveにセット\r\n          this.gl.bindFramebuffer(\r\n            this.gl.FRAMEBUFFER,\r\n            clipContext\r\n              .getClippingManager()\r\n              .getMaskRenderTexture()\r\n              .at(clipContext._bufferIndex)\r\n          );\r\n\r\n          // マスクをクリアする\r\n          // (仮仕様) 1が無効（描かれない）領域、0が有効（描かれる）領域。（シェーダーCd*Csで0に近い値をかけてマスクを作る。1をかけると何も起こらない）\r\n          this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\r\n          this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        {\r\n          const clipDrawCount: number = clipContext._clippingIdCount;\r\n\r\n          for (let index = 0; index < clipDrawCount; index++) {\r\n            const clipDrawIndex: number = clipContext._clippingIdList[index];\r\n\r\n            // 頂点情報が更新されておらず、信頼性がない場合は描画をパスする\r\n            if (\r\n              !this._model.getDrawableDynamicFlagVertexPositionsDidChange(\r\n                clipDrawIndex\r\n              )\r\n            ) {\r\n              continue;\r\n            }\r\n\r\n            this.setIsCulling(\r\n              this._model.getDrawableCulling(clipDrawIndex) != false\r\n            );\r\n\r\n            // 今回専用の変換を適用して描く\r\n            // チャンネルも切り替える必要がある(A,R,G,B)\r\n            this.setClippingContextBufferForMask(clipContext);\r\n\r\n            this.drawMesh(\r\n              this.getModel().getDrawableTextureIndex(clipDrawIndex),\r\n              this.getModel().getDrawableVertexIndexCount(clipDrawIndex),\r\n              this.getModel().getDrawableVertexCount(clipDrawIndex),\r\n              this.getModel().getDrawableVertexIndices(clipDrawIndex),\r\n              this.getModel().getDrawableVertices(clipDrawIndex),\r\n              this.getModel().getDrawableVertexUvs(clipDrawIndex),\r\n              this.getModel().getMultiplyColor(clipDrawIndex),\r\n              this.getModel().getScreenColor(clipDrawIndex),\r\n              this.getModel().getDrawableOpacity(clipDrawIndex),\r\n              CubismBlendMode.CubismBlendMode_Normal, // クリッピングは通常描画を強制\r\n              false // マスク生成時はクリッピングの反転使用は全く関係がない\r\n            );\r\n          }\r\n        }\r\n\r\n        {\r\n          // --- 後処理 ---\r\n          this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, s_fbo); // 描画対象を戻す\r\n          this.setClippingContextBufferForMask(null);\r\n\r\n          this.gl.viewport(\r\n            s_viewport[0],\r\n            s_viewport[1],\r\n            s_viewport[2],\r\n            s_viewport[3]\r\n          );\r\n\r\n          this.preDraw(); // バッファをクリアする\r\n        }\r\n      }\r\n\r\n      // クリッピングマスクをセットする\r\n      this.setClippingContextBufferForDraw(clipContext);\r\n\r\n      this.setIsCulling(this.getModel().getDrawableCulling(drawableIndex));\r\n\r\n      this.drawMesh(\r\n        this.getModel().getDrawableTextureIndex(drawableIndex),\r\n        this.getModel().getDrawableVertexIndexCount(drawableIndex),\r\n        this.getModel().getDrawableVertexCount(drawableIndex),\r\n        this.getModel().getDrawableVertexIndices(drawableIndex),\r\n        this.getModel().getDrawableVertices(drawableIndex),\r\n        this.getModel().getDrawableVertexUvs(drawableIndex),\r\n        this.getModel().getMultiplyColor(drawableIndex),\r\n        this.getModel().getScreenColor(drawableIndex),\r\n        this.getModel().getDrawableOpacity(drawableIndex),\r\n        this.getModel().getDrawableBlendMode(drawableIndex),\r\n        this.getModel().getDrawableInvertedMaskBit(drawableIndex)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [オーバーライド]\r\n   * 描画オブジェクト（アートメッシュ）を描画する。\r\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\r\n   * @param textureNo 描画するテクスチャ番号\r\n   * @param indexCount 描画オブジェクトのインデックス値\r\n   * @param vertexCount ポリゴンメッシュの頂点数\r\n   * @param indexArray ポリゴンメッシュのインデックス配列\r\n   * @param vertexArray ポリゴンメッシュの頂点配列\r\n   * @param uvArray uv配列\r\n   * @param opacity 不透明度\r\n   * @param colorBlendMode カラー合成タイプ\r\n   * @param invertedMask マスク使用時のマスクの反転使用\r\n   */\r\n  public drawMesh(\r\n    textureNo: number,\r\n    indexCount: number,\r\n    vertexCount: number,\r\n    indexArray: Uint16Array,\r\n    vertexArray: Float32Array,\r\n    uvArray: Float32Array,\r\n    multiplyColor: CubismTextureColor,\r\n    screenColor: CubismTextureColor,\r\n    opacity: number,\r\n    colorBlendMode: CubismBlendMode,\r\n    invertedMask: boolean\r\n  ): void {\r\n    // 裏面描画の有効・無効\r\n    if (this.isCulling()) {\r\n      this.gl.enable(this.gl.CULL_FACE);\r\n    } else {\r\n      this.gl.disable(this.gl.CULL_FACE);\r\n    }\r\n\r\n    this.gl.frontFace(this.gl.CCW); // Cubism SDK OpenGLはマスク・アートメッシュ共にCCWが表面\r\n\r\n    const modelColorRGBA: CubismTextureColor = this.getModelColor();\r\n\r\n    if (this.getClippingContextBufferForMask() == null) {\r\n      // マスク生成時以外\r\n      modelColorRGBA.A *= opacity;\r\n      if (this.isPremultipliedAlpha()) {\r\n        modelColorRGBA.R *= modelColorRGBA.A;\r\n        modelColorRGBA.G *= modelColorRGBA.A;\r\n        modelColorRGBA.B *= modelColorRGBA.A;\r\n      }\r\n    }\r\n\r\n    let drawtexture: WebGLTexture; // シェーダに渡すテクスチャ\r\n\r\n    // テクスチャマップからバインド済みテクスチャＩＤを取得\r\n    // バインドされていなければダミーのテクスチャIDをセットする\r\n    if (this._textures.getValue(textureNo) != null) {\r\n      drawtexture = this._textures.getValue(textureNo);\r\n    } else {\r\n      drawtexture = null;\r\n    }\r\n\r\n    CubismShader_WebGL.getInstance().setupShaderProgram(\r\n      this,\r\n      drawtexture,\r\n      vertexCount,\r\n      vertexArray,\r\n      indexArray,\r\n      uvArray,\r\n      this._bufferData,\r\n      opacity,\r\n      colorBlendMode,\r\n      modelColorRGBA,\r\n      multiplyColor,\r\n      screenColor,\r\n      this.isPremultipliedAlpha(),\r\n      this.getMvpMatrix(),\r\n      invertedMask\r\n    );\r\n\r\n    // ポリゴンメッシュを描画する\r\n    this.gl.drawElements(\r\n      this.gl.TRIANGLES,\r\n      indexCount,\r\n      this.gl.UNSIGNED_SHORT,\r\n      0\r\n    );\r\n\r\n    // 後処理\r\n    this.gl.useProgram(null);\r\n    this.setClippingContextBufferForDraw(null);\r\n    this.setClippingContextBufferForMask(null);\r\n  }\r\n\r\n  protected saveProfile(): void {\r\n    this._rendererProfile.save();\r\n  }\r\n\r\n  protected restoreProfile(): void {\r\n    this._rendererProfile.restore();\r\n  }\r\n\r\n  /**\r\n   * レンダラが保持する静的なリソースを解放する\r\n   * WebGLの静的なシェーダープログラムを解放する\r\n   */\r\n  public static doStaticRelease(): void {\r\n    CubismShader_WebGL.deleteInstance();\r\n  }\r\n\r\n  /**\r\n   * レンダーステートを設定する\r\n   * @param fbo アプリケーション側で指定しているフレームバッファ\r\n   * @param viewport ビューポート\r\n   */\r\n  public setRenderState(fbo: WebGLFramebuffer, viewport: number[]): void {\r\n    s_fbo = fbo;\r\n    s_viewport = viewport;\r\n  }\r\n\r\n  /**\r\n   * 描画開始時の追加処理\r\n   * モデルを描画する前にクリッピングマスクに必要な処理を実装している\r\n   */\r\n  public preDraw(): void {\r\n    if (this.firstDraw) {\r\n      this.firstDraw = false;\r\n    }\r\n\r\n    this.gl.disable(this.gl.SCISSOR_TEST);\r\n    this.gl.disable(this.gl.STENCIL_TEST);\r\n    this.gl.disable(this.gl.DEPTH_TEST);\r\n\r\n    // カリング（1.0beta3）\r\n    this.gl.frontFace(this.gl.CW);\r\n\r\n    this.gl.enable(this.gl.BLEND);\r\n    this.gl.colorMask(true, true, true, true);\r\n\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null); // 前にバッファがバインドされていたら破棄する必要がある\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n    // 異方性フィルタリングを適用する\r\n    if (this.getAnisotropy() > 0.0 && this._extension) {\r\n      for (let i = 0; i < this._textures.getSize(); ++i) {\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this._textures.getValue(i));\r\n        this.gl.texParameterf(\r\n          this.gl.TEXTURE_2D,\r\n          this._extension.TEXTURE_MAX_ANISOTROPY_EXT,\r\n          this.getAnisotropy()\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * マスクテクスチャに描画するクリッピングコンテキストをセットする\r\n   */\r\n  public setClippingContextBufferForMask(clip: CubismClippingContext) {\r\n    this._clippingContextBufferForMask = clip;\r\n  }\r\n\r\n  /**\r\n   * マスクテクスチャに描画するクリッピングコンテキストを取得する\r\n   * @return マスクテクスチャに描画するクリッピングコンテキスト\r\n   */\r\n  public getClippingContextBufferForMask(): CubismClippingContext {\r\n    return this._clippingContextBufferForMask;\r\n  }\r\n\r\n  /**\r\n   * 画面上に描画するクリッピングコンテキストをセットする\r\n   */\r\n  public setClippingContextBufferForDraw(clip: CubismClippingContext): void {\r\n    this._clippingContextBufferForDraw = clip;\r\n  }\r\n\r\n  /**\r\n   * 画面上に描画するクリッピングコンテキストを取得する\r\n   * @return 画面上に描画するクリッピングコンテキスト\r\n   */\r\n  public getClippingContextBufferForDraw(): CubismClippingContext {\r\n    return this._clippingContextBufferForDraw;\r\n  }\r\n\r\n  /**\r\n   * glの設定\r\n   */\r\n  public startUp(gl: WebGLRenderingContext): void {\r\n    this.gl = gl;\r\n\r\n    if (this._clippingManager) {\r\n      this._clippingManager.setGL(gl);\r\n    }\r\n\r\n    CubismShader_WebGL.getInstance().setGl(gl);\r\n    this._rendererProfile.setGl(gl);\r\n\r\n    // 異方性フィルタリングが使用できるかチェック\r\n    this._extension =\r\n      this.gl.getExtension('EXT_texture_filter_anisotropic') ||\r\n      this.gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic') ||\r\n      this.gl.getExtension('MOZ_EXT_texture_filter_anisotropic');\r\n  }\r\n\r\n  _textures: csmMap<number, WebGLTexture>; // モデルが参照するテクスチャとレンダラでバインドしているテクスチャとのマップ\r\n  _sortedDrawableIndexList: csmVector<number>; // 描画オブジェクトのインデックスを描画順に並べたリスト\r\n  _clippingManager: CubismClippingManager_WebGL; // クリッピングマスク管理オブジェクト\r\n  _clippingContextBufferForMask: CubismClippingContext; // マスクテクスチャに描画するためのクリッピングコンテキスト\r\n  _clippingContextBufferForDraw: CubismClippingContext; // 画面上描画するためのクリッピングコンテキスト\r\n  _rendererProfile: CubismRendererProfile_WebGL;\r\n  firstDraw: boolean;\r\n  _bufferData: {\r\n    vertex: WebGLBuffer;\r\n    uv: WebGLBuffer;\r\n    index: WebGLBuffer;\r\n  }; // 頂点バッファデータ\r\n  _extension: any; // 拡張機能\r\n  gl: WebGLRenderingContext; // webglコンテキスト\r\n}\r\n\r\n/**\r\n * レンダラが保持する静的なリソースを開放する\r\n */\r\nCubismRenderer.staticRelease = (): void => {\r\n  CubismRenderer_WebGL.doStaticRelease();\r\n};\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismrenderer_webgl';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismClippingContext = $.CubismClippingContext;\r\n  export type CubismClippingContext = $.CubismClippingContext;\r\n  export const CubismClippingManager_WebGL = $.CubismClippingManager_WebGL;\r\n  export type CubismClippingManager_WebGL = $.CubismClippingManager_WebGL;\r\n  export const CubismRenderTextureResource = $.CubismRenderTextureResource;\r\n  export type CubismRenderTextureResource = $.CubismRenderTextureResource;\r\n  export const CubismRenderer_WebGL = $.CubismRenderer_WebGL;\r\n  export type CubismRenderer_WebGL = $.CubismRenderer_WebGL;\r\n  export const CubismShaderSet = $.CubismShaderSet;\r\n  export type CubismShaderSet = $.CubismShaderSet;\r\n  export const CubismShader_WebGL = $.CubismShader_WebGL;\r\n  export type CubismShader_WebGL = $.CubismShader_WebGL;\r\n  export const ShaderNames = $.ShaderNames;\r\n  export type ShaderNames = $.ShaderNames;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismLogDebug } from '../utils/cubismdebug';\r\n\r\n/**\r\n * Key-Valueのペアを定義するクラス\r\n * csmMapクラスの内部データで使用する。\r\n */\r\nexport class csmPair<_KeyT, _ValT> {\r\n  /**\r\n   * コンストラクタ\r\n   * @param key Keyとしてセットする値\r\n   * @param value Valueとしてセットする値\r\n   */\r\n  public constructor(key?: _KeyT, value?: _ValT) {\r\n    this.first = key == undefined ? null : key;\r\n\r\n    this.second = value == undefined ? null : value;\r\n  }\r\n\r\n  public first: _KeyT; // keyとして用いる変数\r\n  public second: _ValT; // valueとして用いる変数\r\n}\r\n\r\n/**\r\n * マップ型\r\n */\r\nexport class csmMap<_KeyT, _ValT> {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   * @param size 初期化時点で確保するサイズ\r\n   */\r\n  public constructor(size?: number) {\r\n    if (size != undefined) {\r\n      if (size < 1) {\r\n        this._keyValues = [];\r\n        this._dummyValue = null;\r\n        this._size = 0;\r\n      } else {\r\n        this._keyValues = new Array(size);\r\n        this._size = size;\r\n      }\r\n    } else {\r\n      this._keyValues = [];\r\n      this._dummyValue = null;\r\n      this._size = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * デストラクタ\r\n   */\r\n  public release() {\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * キーを追加する\r\n   * @param key 新たに追加するキー\r\n   */\r\n  public appendKey(key: _KeyT): void {\r\n    // 新しくKey/Valueのペアを作る\r\n    this.prepareCapacity(this._size + 1, false); // 1つ以上入る隙間を作る\r\n    // 新しいkey/valueのインデックスは_size\r\n\r\n    this._keyValues[this._size] = new csmPair<_KeyT, _ValT>(key);\r\n    this._size += 1;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[key]のオーバーロード(get)\r\n   * @param key 添字から特定されるValue値\r\n   */\r\n  public getValue(key: _KeyT): _ValT {\r\n    let found = -1;\r\n\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        found = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found >= 0) {\r\n      return this._keyValues[found].second;\r\n    } else {\r\n      this.appendKey(key); // 新規キーを追加\r\n      return this._keyValues[this._size - 1].second;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[key]のオーバーロード(set)\r\n   * @param key 添字から特定されるValue値\r\n   * @param value 代入するValue値\r\n   */\r\n  public setValue(key: _KeyT, value: _ValT): void {\r\n    let found = -1;\r\n\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        found = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found >= 0) {\r\n      this._keyValues[found].second = value;\r\n    } else {\r\n      this.appendKey(key); // 新規キーを追加\r\n      this._keyValues[this._size - 1].second = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 引数で渡したKeyを持つ要素が存在するか\r\n   * @param key 存在を確認するkey\r\n   * @return true 引数で渡したkeyを持つ要素が存在する\r\n   * @return false 引数で渡したkeyを持つ要素が存在しない\r\n   */\r\n  public isExist(key: _KeyT): boolean {\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * keyValueのポインタを全て解放する\r\n   */\r\n  public clear(): void {\r\n    this._keyValues = void 0;\r\n    this._keyValues = null;\r\n    this._keyValues = [];\r\n\r\n    this._size = 0;\r\n  }\r\n\r\n  /**\r\n   * コンテナのサイズを取得する\r\n   *\r\n   * @return コンテナのサイズ\r\n   */\r\n  public getSize(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * コンテナのキャパシティを確保する\r\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない。\r\n   * @param fitToSize trueなら指定したサイズに合わせる。falseならサイズを2倍確保しておく。\r\n   */\r\n  public prepareCapacity(newSize: number, fitToSize: boolean): void {\r\n    if (newSize > this._keyValues.length) {\r\n      if (this._keyValues.length == 0) {\r\n        if (!fitToSize && newSize < csmMap.DefaultSize)\r\n          newSize = csmMap.DefaultSize;\r\n        this._keyValues.length = newSize;\r\n      } else {\r\n        if (!fitToSize && newSize < this._keyValues.length * 2)\r\n          newSize = this._keyValues.length * 2;\r\n        this._keyValues.length = newSize;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンテナの先頭要素を返す\r\n   */\r\n  public begin(): iterator<_KeyT, _ValT> {\r\n    const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(this, 0);\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナの終端要素を返す\r\n   */\r\n  public end(): iterator<_KeyT, _ValT> {\r\n    const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\r\n      this,\r\n      this._size\r\n    ); // 終了\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナから要素を削除する\r\n   *\r\n   * @param ite 削除する要素\r\n   */\r\n  public erase(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\r\n    const index: number = ite._index;\r\n    if (index < 0 || this._size <= index) {\r\n      return ite; // 削除範囲外\r\n    }\r\n\r\n    // 削除\r\n    this._keyValues.splice(index, 1);\r\n    --this._size;\r\n\r\n    const ite2: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\r\n      this,\r\n      index\r\n    ); // 終了\r\n    return ite2;\r\n  }\r\n\r\n  /**\r\n   * コンテナの値を32ビット符号付き整数型でダンプする\r\n   */\r\n  public dumpAsInt() {\r\n    for (let i = 0; i < this._size; i++) {\r\n      CubismLogDebug('{0} ,', this._keyValues[i]);\r\n      CubismLogDebug('\\n');\r\n    }\r\n  }\r\n\r\n  public static readonly DefaultSize = 10; // コンテナの初期化のデフォルトサイズ\r\n  public _keyValues: csmPair<_KeyT, _ValT>[]; // key-valueペアの配列\r\n  public _dummyValue: _ValT; // 空の値を返す為のダミー\r\n  public _size: number; // コンテナの要素数\r\n}\r\n\r\n/**\r\n * csmMap<T>のイテレータ\r\n */\r\nexport class iterator<_KeyT, _ValT> {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(v?: csmMap<_KeyT, _ValT>, idx?: number) {\r\n    this._map = v != undefined ? v : new csmMap<_KeyT, _ValT>();\r\n\r\n    this._index = idx != undefined ? idx : 0;\r\n  }\r\n\r\n  /**\r\n   * =演算子のオーバーロード\r\n   */\r\n  public set(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\r\n    this._index = ite._index;\r\n    this._map = ite._map;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き++演算子のオーバーロード\r\n   */\r\n  public preIncrement(): iterator<_KeyT, _ValT> {\r\n    ++this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き--演算子のオーバーロード\r\n   */\r\n  public preDecrement(): iterator<_KeyT, _ValT> {\r\n    --this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 後置き++演算子のオーバーロード\r\n   */\r\n  public increment(): iterator<_KeyT, _ValT> {\r\n    const iteold = new iterator<_KeyT, _ValT>(this._map, this._index++); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * 後置き--演算子のオーバーロード\r\n   */\r\n  public decrement(): iterator<_KeyT, _ValT> {\r\n    const iteold = new iterator<_KeyT, _ValT>(this._map, this._index); // 古い値を保存\r\n    this._map = iteold._map;\r\n    this._index = iteold._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * *演算子のオーバーロード\r\n   */\r\n  public ptr(): csmPair<_KeyT, _ValT> {\r\n    return this._map._keyValues[this._index];\r\n  }\r\n\r\n  /**\r\n   * !=演算\r\n   */\r\n  public notEqual(ite: iterator<_KeyT, _ValT>): boolean {\r\n    return this._index != ite._index || this._map != ite._map;\r\n  }\r\n\r\n  _index: number; // コンテナのインデックス値\r\n  _map: csmMap<_KeyT, _ValT>; // コンテナ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmmap';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmMap = $.csmMap;\r\n  export type csmMap<K, V> = $.csmMap<K, V>;\r\n  export const csmPair = $.csmPair;\r\n  export type csmPair<K, V> = $.csmPair<K, V>;\r\n  export const iterator = $.iterator;\r\n  export type iterator<K, V> = $.iterator<K, V>;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 矩形形状（座標・長さはfloat値）を定義するクラス\r\n */\r\nexport class csmRect {\r\n  /**\r\n   * コンストラクタ\r\n   * @param x 左端X座標\r\n   * @param y 上端Y座標\r\n   * @param w 幅\r\n   * @param h 高さ\r\n   */\r\n  public constructor(x?: number, y?: number, w?: number, h?: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = w;\r\n    this.height = h;\r\n  }\r\n\r\n  /**\r\n   * 矩形中央のX座標を取得する\r\n   */\r\n  public getCenterX(): number {\r\n    return this.x + 0.5 * this.width;\r\n  }\r\n\r\n  /**\r\n   * 矩形中央のY座標を取得する\r\n   */\r\n  public getCenterY(): number {\r\n    return this.y + 0.5 * this.height;\r\n  }\r\n\r\n  /**\r\n   * 右側のX座標を取得する\r\n   */\r\n  public getRight(): number {\r\n    return this.x + this.width;\r\n  }\r\n\r\n  /**\r\n   * 下端のY座標を取得する\r\n   */\r\n  public getBottom(): number {\r\n    return this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 矩形に値をセットする\r\n   * @param r 矩形のインスタンス\r\n   */\r\n  public setRect(r: csmRect): void {\r\n    this.x = r.x;\r\n    this.y = r.y;\r\n    this.width = r.width;\r\n    this.height = r.height;\r\n  }\r\n\r\n  /**\r\n   * 矩形中央を軸にして縦横を拡縮する\r\n   * @param w 幅方向に拡縮する量\r\n   * @param h 高さ方向に拡縮する量\r\n   */\r\n  public expand(w: number, h: number) {\r\n    this.x -= w;\r\n    this.y -= h;\r\n    this.width += w * 2.0;\r\n    this.height += h * 2.0;\r\n  }\r\n\r\n  public x: number; // 左端X座標\r\n  public y: number; // 上端Y座標\r\n  public width: number; // 幅\r\n  public height: number; // 高さ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmrectf';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmRect = $.csmRect;\r\n  export type csmRect = $.csmRect;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 文字列クラス。\r\n */\r\nexport class csmString {\r\n  /**\r\n   * 文字列を後方に追加する\r\n   *\r\n   * @param c 追加する文字列\r\n   * @return 更新された文字列\r\n   */\r\n  public append(c: string, length?: number): csmString {\r\n    this.s += length !== undefined ? c.substr(0, length) : c;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 文字サイズを拡張して文字を埋める\r\n   * @param length    拡張する文字数\r\n   * @param v         埋める文字\r\n   * @return 更新された文字列\r\n   */\r\n  public expansion(length: number, v: string): csmString {\r\n    for (let i = 0; i < length; i++) {\r\n      this.append(v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 文字列の長さをバイト数で取得する\r\n   */\r\n  public getBytes(): number {\r\n    return encodeURIComponent(this.s).replace(/%../g, 'x').length;\r\n  }\r\n\r\n  /**\r\n   * 文字列の長さを返す\r\n   */\r\n  public getLength(): number {\r\n    return this.s.length;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 <\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列より小さい\r\n   * @return false:   比較する文字列より大きい\r\n   */\r\n  public isLess(s: csmString): boolean {\r\n    return this.s < s.s;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 >\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列より大きい\r\n   * @return false:   比較する文字列より小さい\r\n   */\r\n  public isGreat(s: csmString): boolean {\r\n    return this.s > s.s;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 ==\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列と等しい\r\n   * @return false:   比較する文字列と異なる\r\n   */\r\n  public isEqual(s: string): boolean {\r\n    return this.s == s;\r\n  }\r\n\r\n  /**\r\n   * 文字列が空かどうか\r\n   * @return true: 空の文字列\r\n   * @return false: 値が設定されている\r\n   */\r\n  public isEmpty(): boolean {\r\n    return this.s.length == 0;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: string) {\r\n    this.s = s;\r\n  }\r\n\r\n  s: string;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmstring';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmString = $.csmString;\r\n  export type csmString = $.csmString;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * ベクター型（可変配列型）\r\n */\r\nexport class csmVector<T> {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   * @param iniitalCapacity 初期化後のキャパシティ。データサイズは_capacity * sizeof(T)\r\n   * @param zeroClear trueなら初期化時に確保した領域を0で埋める\r\n   */\r\n  constructor(initialCapacity = 0) {\r\n    if (initialCapacity < 1) {\r\n      this._ptr = [];\r\n      this._capacity = 0;\r\n      this._size = 0;\r\n    } else {\r\n      this._ptr = new Array(initialCapacity);\r\n      this._capacity = initialCapacity;\r\n      this._size = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * インデックスで指定した要素を返す\r\n   */\r\n  public at(index: number): T {\r\n    return this._ptr[index];\r\n  }\r\n\r\n  /**\r\n   * 要素をセット\r\n   * @param index 要素をセットするインデックス\r\n   * @param value セットする要素\r\n   */\r\n  public set(index: number, value: T): void {\r\n    this._ptr[index] = value;\r\n  }\r\n\r\n  /**\r\n   * コンテナを取得する\r\n   */\r\n  public get(offset = 0): T[] {\r\n    const ret: T[] = new Array<T>();\r\n    for (let i = offset; i < this._size; i++) {\r\n      ret.push(this._ptr[i]);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * pushBack処理、コンテナに新たな要素を追加する\r\n   * @param value PushBack処理で追加する値\r\n   */\r\n  public pushBack(value: T): void {\r\n    if (this._size >= this._capacity) {\r\n      this.prepareCapacity(\r\n        this._capacity == 0 ? csmVector.s_defaultSize : this._capacity * 2\r\n      );\r\n    }\r\n\r\n    this._ptr[this._size++] = value;\r\n  }\r\n\r\n  /**\r\n   * コンテナの全要素を解放する\r\n   */\r\n  public clear(): void {\r\n    this._ptr.length = 0;\r\n    this._size = 0;\r\n  }\r\n\r\n  /**\r\n   * コンテナの要素数を返す\r\n   * @return コンテナの要素数\r\n   */\r\n  public getSize(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * コンテナの全要素に対して代入処理を行う\r\n   * @param newSize 代入処理後のサイズ\r\n   * @param value 要素に代入する値\r\n   */\r\n  public assign(newSize: number, value: T): void {\r\n    const curSize = this._size;\r\n\r\n    if (curSize < newSize) {\r\n      this.prepareCapacity(newSize); // capacity更新\r\n    }\r\n\r\n    for (let i = 0; i < newSize; i++) {\r\n      this._ptr[i] = value;\r\n    }\r\n\r\n    this._size = newSize;\r\n  }\r\n\r\n  /**\r\n   * サイズ変更\r\n   */\r\n  public resize(newSize: number, value: T = null): void {\r\n    this.updateSize(newSize, value, true);\r\n  }\r\n\r\n  /**\r\n   * サイズ変更\r\n   */\r\n  public updateSize(\r\n    newSize: number,\r\n    value: any = null,\r\n    callPlacementNew = true\r\n  ): void {\r\n    const curSize: number = this._size;\r\n\r\n    if (curSize < newSize) {\r\n      this.prepareCapacity(newSize); // capacity更新\r\n\r\n      if (callPlacementNew) {\r\n        for (let i: number = this._size; i < newSize; i++) {\r\n          if (typeof value == 'function') {\r\n            // new\r\n            this._ptr[i] = JSON.parse(JSON.stringify(new value()));\r\n          } // プリミティブ型なので値渡し\r\n          else {\r\n            this._ptr[i] = value;\r\n          }\r\n        }\r\n      } else {\r\n        for (let i: number = this._size; i < newSize; i++) {\r\n          this._ptr[i] = value;\r\n        }\r\n      }\r\n    } else {\r\n      // newSize <= this._size\r\n      //---\r\n      const sub = this._size - newSize;\r\n      this._ptr.splice(this._size - sub, sub); // 不要なので破棄する\r\n    }\r\n    this._size = newSize;\r\n  }\r\n\r\n  /**\r\n   * コンテナにコンテナ要素を挿入する\r\n   * @param position 挿入する位置\r\n   * @param begin 挿入するコンテナの開始位置\r\n   * @param end 挿入するコンテナの終端位置\r\n   */\r\n  public insert(\r\n    position: iterator<T>,\r\n    begin: iterator<T>,\r\n    end: iterator<T>\r\n  ): void {\r\n    let dstSi: number = position._index;\r\n    const srcSi: number = begin._index;\r\n    const srcEi: number = end._index;\r\n\r\n    const addCount: number = srcEi - srcSi;\r\n\r\n    this.prepareCapacity(this._size + addCount);\r\n\r\n    // 挿入用の既存データをシフトして隙間を作る\r\n    const addSize = this._size - dstSi;\r\n    if (addSize > 0) {\r\n      for (let i = 0; i < addSize; i++) {\r\n        this._ptr.splice(dstSi + i, 0, null);\r\n      }\r\n    }\r\n\r\n    for (let i: number = srcSi; i < srcEi; i++, dstSi++) {\r\n      this._ptr[dstSi] = begin._vector._ptr[i];\r\n    }\r\n\r\n    this._size = this._size + addCount;\r\n  }\r\n\r\n  /**\r\n   * コンテナからインデックスで指定した要素を削除する\r\n   * @param index インデックス値\r\n   * @return true 削除実行\r\n   * @return false 削除範囲外\r\n   */\r\n  public remove(index: number): boolean {\r\n    if (index < 0 || this._size <= index) {\r\n      return false; // 削除範囲外\r\n    }\r\n\r\n    this._ptr.splice(index, 1);\r\n    --this._size;\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * コンテナから要素を削除して他の要素をシフトする\r\n   * @param ite 削除する要素\r\n   */\r\n  public erase(ite: iterator<T>): iterator<T> {\r\n    const index: number = ite._index;\r\n    if (index < 0 || this._size <= index) {\r\n      return ite; // 削除範囲外\r\n    }\r\n\r\n    // 削除\r\n    this._ptr.splice(index, 1);\r\n    --this._size;\r\n\r\n    const ite2: iterator<T> = new iterator<T>(this, index); // 終了\r\n    return ite2;\r\n  }\r\n\r\n  /**\r\n   * コンテナのキャパシティを確保する\r\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない.\r\n   */\r\n  public prepareCapacity(newSize: number): void {\r\n    if (newSize > this._capacity) {\r\n      if (this._capacity == 0) {\r\n        this._ptr = new Array(newSize);\r\n        this._capacity = newSize;\r\n      } else {\r\n        this._ptr.length = newSize;\r\n        this._capacity = newSize;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンテナの先頭要素を返す\r\n   */\r\n  public begin(): iterator<T> {\r\n    const ite: iterator<T> =\r\n      this._size == 0 ? this.end() : new iterator<T>(this, 0);\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナの終端要素を返す\r\n   */\r\n  public end(): iterator<T> {\r\n    const ite: iterator<T> = new iterator<T>(this, this._size);\r\n    return ite;\r\n  }\r\n\r\n  public getOffset(offset: number): csmVector<T> {\r\n    const newVector = new csmVector<T>();\r\n    newVector._ptr = this.get(offset);\r\n    newVector._size = this.get(offset).length;\r\n    newVector._capacity = this.get(offset).length;\r\n\r\n    return newVector;\r\n  }\r\n\r\n  _ptr: T[]; // コンテナの先頭アドレス\r\n  _size: number; // コンテナの要素数\r\n  _capacity: number; // コンテナのキャパシティ\r\n\r\n  static readonly s_defaultSize = 10; // コンテナ初期化のデフォルトサイズ\r\n}\r\n\r\nexport class iterator<T> {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(v?: csmVector<T>, index?: number) {\r\n    this._vector = v != undefined ? v : null;\r\n    this._index = index != undefined ? index : 0;\r\n  }\r\n\r\n  /**\r\n   * 代入\r\n   */\r\n  public set(ite: iterator<T>): iterator<T> {\r\n    this._index = ite._index;\r\n    this._vector = ite._vector;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き++演算\r\n   */\r\n  public preIncrement(): iterator<T> {\r\n    ++this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き--演算\r\n   */\r\n  public preDecrement(): iterator<T> {\r\n    --this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 後置き++演算子\r\n   */\r\n  public increment(): iterator<T> {\r\n    const iteold = new iterator<T>(this._vector, this._index++); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * 後置き--演算子\r\n   */\r\n  public decrement(): iterator<T> {\r\n    const iteold = new iterator<T>(this._vector, this._index--); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * ptr\r\n   */\r\n  public ptr(): T {\r\n    return this._vector._ptr[this._index];\r\n  }\r\n\r\n  /**\r\n   * =演算子のオーバーロード\r\n   */\r\n  public substitution(ite: iterator<T>): iterator<T> {\r\n    this._index = ite._index;\r\n    this._vector = ite._vector;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * !=演算子のオーバーロード\r\n   */\r\n  public notEqual(ite: iterator<T>): boolean {\r\n    return this._index != ite._index || this._vector != ite._vector;\r\n  }\r\n\r\n  _index: number; // コンテナのインデックス値\r\n  _vector: csmVector<T>; // コンテナ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmvector';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmVector = $.csmVector;\r\n  export type csmVector<T> = $.csmVector<T>;\r\n  export const iterator = $.iterator;\r\n  export type iterator<T> = $.iterator<T>;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  CSM_LOG_LEVEL,\r\n  CSM_LOG_LEVEL_DEBUG,\r\n  CSM_LOG_LEVEL_ERROR,\r\n  CSM_LOG_LEVEL_INFO,\r\n  CSM_LOG_LEVEL_VERBOSE,\r\n  CSM_LOG_LEVEL_WARNING,\r\n} from '../cubismframeworkconfig';\r\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\r\n\r\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\r\n  CubismDebug.print(level, '[CSM]' + fmt, args);\r\n};\r\n\r\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\r\n  CubismLogPrint(level, fmt + '\\n', args);\r\n};\r\n\r\nexport const CSM_ASSERT = (expr: any) => {\r\n  console.assert(expr);\r\n};\r\n\r\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\r\n\r\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\r\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\r\n  };\r\n\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n}\r\n\r\n/**\r\n * デバッグ用のユーティリティクラス。\r\n * ログの出力、バイトのダンプなど\r\n */\r\nexport class CubismDebug {\r\n  /**\r\n   * ログを出力する。第一引数にログレベルを設定する。\r\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n   *\r\n   * @param logLevel ログレベルの設定\r\n   * @param format 書式付き文字列\r\n   * @param args 可変長引数\r\n   */\r\n  public static print(logLevel: LogLevel, format: string, args?: any[]): void {\r\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\r\n    if (logLevel < CubismFramework.getLoggingLevel()) {\r\n      return;\r\n    }\r\n\r\n    const logPrint: Live2DCubismCore.csmLogFunction =\r\n      CubismFramework.coreLogFunction;\r\n\r\n    if (!logPrint) return;\r\n\r\n    const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\r\n      return args[k];\r\n    });\r\n    logPrint(buffer);\r\n  }\r\n\r\n  /**\r\n   * データから指定した長さだけダンプ出力する。\r\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n   *\r\n   * @param logLevel ログレベルの設定\r\n   * @param data ダンプするデータ\r\n   * @param length ダンプする長さ\r\n   */\r\n  public static dumpBytes(\r\n    logLevel: LogLevel,\r\n    data: Uint8Array,\r\n    length: number\r\n  ): void {\r\n    for (let i = 0; i < length; i++) {\r\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\r\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\r\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\r\n    }\r\n\r\n    this.print(logLevel, '\\n');\r\n  }\r\n\r\n  /**\r\n   * private コンストラクタ\r\n   */\r\n  private constructor() {}\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismdebug';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismDebug = $.CubismDebug;\r\n  export type CubismDebug = $.CubismDebug;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { strtod } from '../live2dcubismframework';\r\nimport { csmMap, iterator as csmMap_iterator } from '../type/csmmap';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector, iterator as csmVector_iterator } from '../type/csmvector';\r\nimport { CubismLogInfo } from './cubismdebug';\r\n\r\n// StaticInitializeNotForClientCall()で初期化する\r\nconst CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\r\nconst CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\r\n\r\n/**\r\n * パースしたJSONエレメントの要素の基底クラス。\r\n */\r\nexport abstract class Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {}\r\n\r\n  /**\r\n   * 要素を文字列型で返す(csmString型)\r\n   */\r\n  public abstract getString(defaultValue?: string, indent?: string): string;\r\n\r\n  /**\r\n   * 要素を文字列型で返す(string)\r\n   */\r\n  public getRawString(defaultValue?: string, indent?: string): string {\r\n    return this.getString(defaultValue, indent);\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toInt(defaultValue = 0): number {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toFloat(defaultValue = 0): number {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を真偽値で返す(boolean)\r\n   */\r\n  public toBoolean(defaultValue = false): boolean {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * サイズを返す\r\n   */\r\n  public getSize(): number {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * 要素を配列で返す(Value[])\r\n   */\r\n  public getArray(defaultValue: Value[] = null): Value[] {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素をコンテナで返す(array)\r\n   */\r\n  public getVector(defaultValue = new csmVector<Value>()): csmVector<Value> {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素をマップで返す(csmMap<csmString, Value>)\r\n   */\r\n  public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    return Value.nullValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * マップのキー一覧をコンテナで返す\r\n   *\r\n   * @return マップのキーの一覧\r\n   */\r\n  public getKeys(): csmVector<string> {\r\n    return Value.s_dummyKeys;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がエラー値ならtrue\r\n   */\r\n  public isError(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がnullならtrue\r\n   */\r\n  public isNull(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が真偽値ならtrue\r\n   */\r\n  public isBool(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が数値型ならtrue\r\n   */\r\n  public isFloat(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が文字列ならtrue\r\n   */\r\n  public isString(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が配列ならtrue\r\n   */\r\n  public isArray(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がマップ型ならtrue\r\n   */\r\n  public isMap(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue、静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueにエラー値をセットする\r\n   */\r\n  public setErrorNotForClientCall(errorStr: string): Value {\r\n    return JsonError.errorValue;\r\n  }\r\n\r\n  /**\r\n   * 初期化用メソッド\r\n   */\r\n  public static staticInitializeNotForClientCall(): void {\r\n    JsonBoolean.trueValue = new JsonBoolean(true);\r\n    JsonBoolean.falseValue = new JsonBoolean(false);\r\n    Value.errorValue = new JsonError('ERROR', true);\r\n    Value.nullValue = new JsonNullvalue();\r\n    Value.s_dummyKeys = new csmVector<string>();\r\n  }\r\n\r\n  /**\r\n   * リリース用メソッド\r\n   */\r\n  public static staticReleaseNotForClientCall(): void {\r\n    JsonBoolean.trueValue = null;\r\n    JsonBoolean.falseValue = null;\r\n    Value.errorValue = null;\r\n    Value.nullValue = null;\r\n    Value.s_dummyKeys = null;\r\n  }\r\n\r\n  protected _stringBuffer: string; // 文字列バッファ\r\n\r\n  private static s_dummyKeys: csmVector<string>; // ダミーキー\r\n\r\n  public static errorValue: Value; // 一時的な返り値として返すエラー。 CubismFramework::Disposeするまではdeleteしない\r\n  public static nullValue: Value; // 一時的な返り値として返すNULL。   CubismFramework::Disposeするまではdeleteしない\r\n}\r\n\r\n/**\r\n * Ascii文字のみ対応した最小限の軽量JSONパーサ。\r\n * 仕様はJSONのサブセットとなる。\r\n * 設定ファイル(model3.json)などのロード用\r\n *\r\n * [未対応項目]\r\n * ・日本語などの非ASCII文字\r\n * ・eによる指数表現\r\n */\r\nexport class CubismJson {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(buffer?: ArrayBuffer, length?: number) {\r\n    this._error = null;\r\n    this._lineCount = 0;\r\n    this._root = null;\r\n\r\n    if (buffer != undefined) {\r\n      this.parseBytes(buffer, length, this._parseCallback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * バイトデータから直接ロードしてパースする\r\n   *\r\n   * @param buffer バッファ\r\n   * @param size バッファサイズ\r\n   * @return CubismJsonクラスのインスタンス。失敗したらNULL\r\n   */\r\n  public static create(buffer: ArrayBuffer, size: number) {\r\n    const json = new CubismJson();\r\n    const succeeded: boolean = json.parseBytes(\r\n      buffer,\r\n      size,\r\n      json._parseCallback\r\n    );\r\n\r\n    if (!succeeded) {\r\n      CubismJson.delete(json);\r\n      return null;\r\n    } else {\r\n      return json;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パースしたJSONオブジェクトの解放処理\r\n   *\r\n   * @param instance CubismJsonクラスのインスタンス\r\n   */\r\n  public static delete(instance: CubismJson) {\r\n    instance = null;\r\n  }\r\n\r\n  /**\r\n   * パースしたJSONのルート要素を返す\r\n   */\r\n  public getRoot(): Value {\r\n    return this._root;\r\n  }\r\n\r\n  /**\r\n   *  UnicodeのバイナリをStringに変換\r\n   *\r\n   * @param buffer 変換するバイナリデータ\r\n   * @return 変換後の文字列\r\n   */\r\n  public static arrayBufferToString(buffer: ArrayBuffer): string {\r\n    const uint8Array: Uint8Array = new Uint8Array(buffer);\r\n    let str = '';\r\n\r\n    for (let i = 0, len: number = uint8Array.length; i < len; ++i) {\r\n      str += '%' + this.pad(uint8Array[i].toString(16));\r\n    }\r\n\r\n    str = decodeURIComponent(str);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * エンコード、パディング\r\n   */\r\n  private static pad(n: string): string {\r\n    return n.length < 2 ? '0' + n : n;\r\n  }\r\n\r\n  /**\r\n   * JSONのパースを実行する\r\n   * @param buffer    パース対象のデータバイト\r\n   * @param size      データバイトのサイズ\r\n   * return true : 成功\r\n   * return false: 失敗\r\n   */\r\n  public parseBytes(\r\n    buffer: ArrayBuffer,\r\n    size: number,\r\n    parseCallback?: parseJsonObject\r\n  ): boolean {\r\n    const endPos: number[] = new Array<number>(1); // 参照渡しにするため配列\r\n    const decodeBuffer: string = CubismJson.arrayBufferToString(buffer);\r\n\r\n    if (parseCallback == undefined) {\r\n      this._root = this.parseValue(decodeBuffer, size, 0, endPos);\r\n    } else {\r\n      // TypeScript標準のJSONパーサを使う\r\n      this._root = parseCallback(JSON.parse(decodeBuffer), new JsonMap());\r\n    }\r\n\r\n    if (this._error) {\r\n      let strbuf = '\\0';\r\n      strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\r\n      this._root = new JsonString(strbuf);\r\n\r\n      CubismLogInfo('{0}', this._root.getRawString());\r\n      return false;\r\n    } else if (this._root == null) {\r\n      this._root = new JsonError(new csmString(this._error), false); // rootは解放されるのでエラーオブジェクトを別途作成する\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * パース時のエラー値を返す\r\n   */\r\n  public getParseError(): string {\r\n    return this._error;\r\n  }\r\n\r\n  /**\r\n   * ルート要素の次の要素がファイルの終端だったらtrueを返す\r\n   */\r\n  public checkEndOfFile(): boolean {\r\n    return this._root.getArray()[1].equals('EOF');\r\n  }\r\n\r\n  /**\r\n   * JSONエレメントからValue(float,String,Value*,Array,null,true,false)をパースする\r\n   * エレメントの書式に応じて内部でParseString(), ParseObject(), ParseArray()を呼ぶ\r\n   *\r\n   * @param   buffer      JSONエレメントのバッファ\r\n   * @param   length      パースする長さ\r\n   * @param   begin       パースを開始する位置\r\n   * @param   outEndPos   パース終了時の位置\r\n   * @return      パースから取得したValueオブジェクト\r\n   */\r\n  protected parseValue(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ) {\r\n    if (this._error) return null;\r\n\r\n    let o: Value = null;\r\n    let i: number = begin;\r\n    let f: number;\r\n\r\n    for (; i < length; i++) {\r\n      const c: string = buffer[i];\r\n      switch (c) {\r\n        case '-':\r\n        case '.':\r\n        case '0':\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7':\r\n        case '8':\r\n        case '9': {\r\n          const afterString: string[] = new Array(1); // 参照渡しにするため\r\n          f = strtod(buffer.slice(i), afterString);\r\n          outEndPos[0] = buffer.indexOf(afterString[0]);\r\n          return new JsonFloat(f);\r\n        }\r\n        case '\"':\r\n          return new JsonString(\r\n            this.parseString(buffer, length, i + 1, outEndPos)\r\n          ); // \\\"の次の文字から\r\n        case '[':\r\n          o = this.parseArray(buffer, length, i + 1, outEndPos);\r\n          return o;\r\n        case '{':\r\n          o = this.parseObject(buffer, length, i + 1, outEndPos);\r\n          return o;\r\n        case 'n': // null以外にない\r\n          if (i + 3 < length) {\r\n            o = new JsonNullvalue(); // 解放できるようにする\r\n            outEndPos[0] = i + 4;\r\n          } else {\r\n            this._error = 'parse null';\r\n          }\r\n          return o;\r\n        case 't': // true以外にない\r\n          if (i + 3 < length) {\r\n            o = JsonBoolean.trueValue;\r\n            outEndPos[0] = i + 4;\r\n          } else {\r\n            this._error = 'parse true';\r\n          }\r\n          return o;\r\n        case 'f': // false以外にない\r\n          if (i + 4 < length) {\r\n            o = JsonBoolean.falseValue;\r\n            outEndPos[0] = i + 5;\r\n          } else {\r\n            this._error = \"illegal ',' position\";\r\n          }\r\n          return o;\r\n        case ',': // Array separator\r\n          this._error = \"illegal ',' position\";\r\n          return null;\r\n        case ']': // 不正な｝だがスキップする。配列の最後に不要な , があると思われる\r\n          outEndPos[0] = i; // 同じ文字を再処理\r\n          return null;\r\n        case '\\n':\r\n          this._lineCount++;\r\n        case ' ':\r\n        case '\\t':\r\n        case '\\r':\r\n        default:\r\n          // スキップ\r\n          break;\r\n      }\r\n    }\r\n\r\n    this._error = 'illegal end of value';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 次の「\"」までの文字列をパースする。\r\n   *\r\n   * @param   string  ->  パース対象の文字列\r\n   * @param   length  ->  パースする長さ\r\n   * @param   begin   ->  パースを開始する位置\r\n   * @param  outEndPos   ->  パース終了時の位置\r\n   * @return      パースした文F字列要素\r\n   */\r\n  protected parseString(\r\n    string: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): string {\r\n    if (this._error) return null;\r\n\r\n    let i = begin;\r\n    let c: string, c2: string;\r\n    const ret: csmString = new csmString('');\r\n    let bufStart: number = begin; // sbufに登録されていない文字の開始位置\r\n\r\n    for (; i < length; i++) {\r\n      c = string[i];\r\n\r\n      switch (c) {\r\n        case '\"': {\r\n          // 終端の”、エスケープ文字は別に処理されるのでここに来ない\r\n          outEndPos[0] = i + 1; // ”の次の文字\r\n          ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\r\n          return ret.s;\r\n        }\r\n        case '//': {\r\n          // エスケープの場合\r\n          i++; // ２文字をセットで扱う\r\n\r\n          if (i - 1 > bufStart) {\r\n            ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\r\n          }\r\n          bufStart = i + 1; // エスケープ（２文字)の次の文字から\r\n\r\n          if (i < length) {\r\n            c2 = string[i];\r\n\r\n            switch (c2) {\r\n              case '\\\\':\r\n                ret.expansion(1, '\\\\');\r\n                break;\r\n              case '\"':\r\n                ret.expansion(1, '\"');\r\n                break;\r\n              case '/':\r\n                ret.expansion(1, '/');\r\n                break;\r\n              case 'b':\r\n                ret.expansion(1, '\\b');\r\n                break;\r\n              case 'f':\r\n                ret.expansion(1, '\\f');\r\n                break;\r\n              case 'n':\r\n                ret.expansion(1, '\\n');\r\n                break;\r\n              case 'r':\r\n                ret.expansion(1, '\\r');\r\n                break;\r\n              case 't':\r\n                ret.expansion(1, '\\t');\r\n                break;\r\n              case 'u':\r\n                this._error = 'parse string/unicord escape not supported';\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          } else {\r\n            this._error = 'parse string/escape error';\r\n          }\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this._error = 'parse string/illegal end';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * JSONのオブジェクトエレメントをパースしてValueオブジェクトを返す\r\n   *\r\n   * @param buffer    JSONエレメントのバッファ\r\n   * @param length    パースする長さ\r\n   * @param begin     パースを開始する位置\r\n   * @param outEndPos パース終了時の位置\r\n   * @return パースから取得したValueオブジェクト\r\n   */\r\n  protected parseObject(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): Value {\r\n    if (this._error) return null;\r\n    const ret: JsonMap = new JsonMap();\r\n\r\n    // Key: Value\r\n    let key = '';\r\n    let i: number = begin;\r\n    let c = '';\r\n    const localRetEndPos2: number[] = Array(1);\r\n    let ok = false;\r\n\r\n    // , が続く限りループ\r\n    for (; i < length; i++) {\r\n      FOR_LOOP: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case '\"':\r\n            key = this.parseString(buffer, length, i + 1, localRetEndPos2);\r\n            if (this._error) {\r\n              return null;\r\n            }\r\n\r\n            i = localRetEndPos2[0];\r\n            ok = true;\r\n            break FOR_LOOP; //-- loopから出る\r\n          case '}': // 閉じカッコ\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 空\r\n          case ':':\r\n            this._error = \"illegal ':' position\";\r\n            break;\r\n          case '\\n':\r\n            this._lineCount++;\r\n          default:\r\n            break; // スキップする文字\r\n        }\r\n      }\r\n      if (!ok) {\r\n        this._error = 'key not found';\r\n        return null;\r\n      }\r\n\r\n      ok = false;\r\n\r\n      // : をチェック\r\n      FOR_LOOP2: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ':':\r\n            ok = true;\r\n            i++;\r\n            break FOR_LOOP2;\r\n          case '}':\r\n            this._error = \"illegal '}' position\";\r\n            break;\r\n          case '\\n':\r\n            this._lineCount++;\r\n          // case ' ': case '\\t' : case '\\r':\r\n          default:\r\n            break; // スキップする文字\r\n        }\r\n      }\r\n\r\n      if (!ok) {\r\n        this._error = \"':' not found\";\r\n        return null;\r\n      }\r\n\r\n      // 値をチェック\r\n      const value: Value = this.parseValue(buffer, length, i, localRetEndPos2);\r\n      if (this._error) {\r\n        return null;\r\n      }\r\n\r\n      i = localRetEndPos2[0];\r\n\r\n      // ret.put(key, value);\r\n      ret.put(key, value);\r\n\r\n      FOR_LOOP3: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ',':\r\n            break FOR_LOOP3;\r\n          case '}':\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 正常終了\r\n          case '\\n':\r\n            this._lineCount++;\r\n          default:\r\n            break; // スキップ\r\n        }\r\n      }\r\n    }\r\n\r\n    this._error = 'illegal end of perseObject';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 次の「\"」までの文字列をパースする。\r\n   * @param buffer    JSONエレメントのバッファ\r\n   * @param length    パースする長さ\r\n   * @param begin     パースを開始する位置\r\n   * @param outEndPos パース終了時の位置\r\n   * @return パースから取得したValueオブジェクト\r\n   */\r\n  protected parseArray(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): Value {\r\n    if (this._error) return null;\r\n    let ret: JsonArray = new JsonArray();\r\n\r\n    // key : value\r\n    let i: number = begin;\r\n    let c: string;\r\n    const localRetEndpos2: number[] = new Array(1);\r\n\r\n    // , が続く限りループ\r\n    for (; i < length; i++) {\r\n      // : をチェック\r\n      const value: Value = this.parseValue(buffer, length, i, localRetEndpos2);\r\n\r\n      if (this._error) {\r\n        return null;\r\n      }\r\n      i = localRetEndpos2[0];\r\n\r\n      if (value) {\r\n        ret.add(value);\r\n      }\r\n\r\n      // FOR_LOOP3:\r\n      // boolean breakflag = false;\r\n      FOR_LOOP: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ',':\r\n            // breakflag = true;\r\n            // break; // 次のKEY, VAlUEへ\r\n            break FOR_LOOP;\r\n          case ']':\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 終了\r\n          case '\\n':\r\n            ++this._lineCount;\r\n          //case ' ': case '\\t': case '\\r':\r\n          default:\r\n            break; // スキップ\r\n        }\r\n      }\r\n    }\r\n\r\n    ret = void 0;\r\n    this._error = 'illegal end of parseObject';\r\n    return null;\r\n  }\r\n\r\n  _parseCallback: parseJsonObject = CubismJsonExtension.parseJsonObject; // パース時に使う処理のコールバック関数\r\n\r\n  _error: string; // パース時のエラー\r\n  _lineCount: number; // エラー報告に用いる行数カウント\r\n  _root: Value; // パースされたルート要素\r\n}\r\n\r\ninterface parseJsonObject {\r\n  (obj: Value, map: JsonMap): JsonMap;\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をfloat値として扱う\r\n */\r\nexport class JsonFloat extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(v: number) {\r\n    super();\r\n\r\n    this._value = v;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が数値型ならtrue\r\n   */\r\n  public isFloat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    const strbuf = '\\0';\r\n    this._value = parseFloat(strbuf);\r\n    this._stringBuffer = strbuf;\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toInt(defaultValue = 0): number {\r\n    return parseInt(this._value.toString());\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toFloat(defaultValue = 0.0): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('number' === typeof value) {\r\n      // int\r\n      if (Math.round(value)) {\r\n        return false;\r\n      }\r\n      // float\r\n      else {\r\n        return value == this._value;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _value: number; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を真偽値として扱う\r\n */\r\nexport class JsonBoolean extends Value {\r\n  /**\r\n   * Valueの種類が真偽値ならtrue\r\n   */\r\n  public isBool(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を真偽値で返す(boolean)\r\n   */\r\n  public toBoolean(defaultValue = false): boolean {\r\n    return this._boolValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    this._stringBuffer = this._boolValue ? 'true' : 'false';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('boolean' === typeof value) {\r\n      return value == this._boolValue;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue, 静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(v: boolean) {\r\n    super();\r\n\r\n    this._boolValue = v;\r\n  }\r\n\r\n  static trueValue: JsonBoolean; // true\r\n  static falseValue: JsonBoolean; // false\r\n\r\n  private _boolValue: boolean; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を文字列として扱う\r\n */\r\nexport class JsonString extends Value {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: string);\r\n  public constructor(s: csmString);\r\n  public constructor(s: any) {\r\n    super();\r\n\r\n    if ('string' === typeof s) {\r\n      this._stringBuffer = s;\r\n    }\r\n\r\n    if (s instanceof csmString) {\r\n      this._stringBuffer = s.s;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が文字列ならtrue\r\n   */\r\n  public isString(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('string' === typeof value) {\r\n      return this._stringBuffer == value;\r\n    }\r\n\r\n    if (value instanceof csmString) {\r\n      return this._stringBuffer == value.s;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * JSONパース時のエラー結果。文字列型のようにふるまう\r\n */\r\nexport class JsonError extends JsonString {\r\n  /**\r\n   * Valueの値が静的ならtrue、静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return this._isStatic;\r\n  }\r\n\r\n  /**\r\n   * エラー情報をセットする\r\n   */\r\n  public setErrorNotForClientCall(s: string): Value {\r\n    this._stringBuffer = s;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: csmString | string, isStatic: boolean) {\r\n    if ('string' === typeof s) {\r\n      super(s);\r\n    } else {\r\n      super(s);\r\n    }\r\n    this._isStatic = isStatic;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がエラー値ならtrue\r\n   */\r\n  public isError(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected _isStatic: boolean; // 静的なValueかどうか\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をNULL値として持つ\r\n */\r\nexport class JsonNullvalue extends Value {\r\n  /**\r\n   * Valueの種類がNULL値ならtrue\r\n   */\r\n  public isNull(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue, 静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Valueにエラー値をセットする\r\n   */\r\n  public setErrorNotForClientCall(s: string): Value {\r\n    this._stringBuffer = s;\r\n    return JsonError.nullValue;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n\r\n    this._stringBuffer = 'NullValue';\r\n  }\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を配列として持つ\r\n */\r\nexport class JsonArray extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._array = new csmVector<Value>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    for (\r\n      let ite: csmVector_iterator<Value> = this._array.begin();\r\n      ite.notEqual(this._array.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      let v: Value = ite.ptr();\r\n\r\n      if (v && !v.isStatic()) {\r\n        v = void 0;\r\n        v = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が配列ならtrue\r\n   */\r\n  public isArray(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    if (index < 0 || this._array.getSize() <= index) {\r\n      return Value.errorValue.setErrorNotForClientCall(\r\n        CSM_JSON_ERROR_INDEX_OF_BOUNDS\r\n      );\r\n    }\r\n\r\n    const v: Value = this._array.at(index);\r\n\r\n    if (v == null) {\r\n      return Value.nullValue;\r\n    }\r\n\r\n    return v;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    const stringBuffer: string = indent + '[\\n';\r\n\r\n    for (\r\n      let ite: csmVector_iterator<Value> = this._array.begin();\r\n      ite.notEqual(this._array.end());\r\n      ite.increment()\r\n    ) {\r\n      const v: Value = ite.ptr();\r\n      this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\r\n    }\r\n\r\n    this._stringBuffer = stringBuffer + indent + ']\\n';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 配列要素を追加する\r\n   * @param v 追加する要素\r\n   */\r\n  public add(v: Value): void {\r\n    this._array.pushBack(v);\r\n  }\r\n\r\n  /**\r\n   * 要素をコンテナで返す(csmVector<Value>)\r\n   */\r\n  public getVector(defaultValue: csmVector<Value> = null): csmVector<Value> {\r\n    return this._array;\r\n  }\r\n\r\n  /**\r\n   * 要素の数を返す\r\n   */\r\n  public getSize(): number {\r\n    return this._array.getSize();\r\n  }\r\n\r\n  private _array: csmVector<Value>; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をマップとして持つ\r\n */\r\nexport class JsonMap extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._map = new csmMap<string, Value>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n\r\n    while (ite.notEqual(this._map.end())) {\r\n      let v: Value = ite.ptr().second;\r\n\r\n      if (v && !v.isStatic()) {\r\n        v = void 0;\r\n        v = null;\r\n      }\r\n\r\n      ite.preIncrement();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの値がMap型ならtrue\r\n   */\r\n  public isMap(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    if (s instanceof csmString) {\r\n      const ret: Value = this._map.getValue(s.s);\r\n      if (ret == null) {\r\n        return Value.nullValue;\r\n      }\r\n      return ret;\r\n    }\r\n\r\n    for (\r\n      let iter: csmMap_iterator<string, Value> = this._map.begin();\r\n      iter.notEqual(this._map.end());\r\n      iter.preIncrement()\r\n    ) {\r\n      if (iter.ptr().first == s) {\r\n        if (iter.ptr().second == null) {\r\n          return Value.nullValue;\r\n        }\r\n        return iter.ptr().second;\r\n      }\r\n    }\r\n\r\n    return Value.nullValue;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string) {\r\n    this._stringBuffer = indent + '{\\n';\r\n\r\n    const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n    while (ite.notEqual(this._map.end())) {\r\n      const key = ite.ptr().first;\r\n      const v: Value = ite.ptr().second;\r\n\r\n      this._stringBuffer +=\r\n        indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\r\n      ite.preIncrement();\r\n    }\r\n\r\n    this._stringBuffer += indent + '}\\n';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 要素をMap型で返す\r\n   */\r\n  public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\r\n    return this._map;\r\n  }\r\n\r\n  /**\r\n   * Mapに要素を追加する\r\n   */\r\n  public put(key: string, v: Value): void {\r\n    this._map.setValue(key, v);\r\n  }\r\n\r\n  /**\r\n   * Mapからキーのリストを取得する\r\n   */\r\n  public getKeys(): csmVector<string> {\r\n    if (!this._keys) {\r\n      this._keys = new csmVector<string>();\r\n\r\n      const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n\r\n      while (ite.notEqual(this._map.end())) {\r\n        const key: string = ite.ptr().first;\r\n        this._keys.pushBack(key);\r\n        ite.preIncrement();\r\n      }\r\n    }\r\n    return this._keys;\r\n  }\r\n\r\n  /**\r\n   * Mapの要素数を取得する\r\n   */\r\n  public getSize(): number {\r\n    return this._keys.getSize();\r\n  }\r\n\r\n  private _map: csmMap<string, Value>; // JSON要素の値\r\n  private _keys: csmVector<string>; // JSON要素の値\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismjson';\r\nimport { CubismJsonExtension } from './cubismjsonextension';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismJson = $.CubismJson;\r\n  export type CubismJson = $.CubismJson;\r\n  export const JsonArray = $.JsonArray;\r\n  export type JsonArray = $.JsonArray;\r\n  export const JsonBoolean = $.JsonBoolean;\r\n  export type JsonBoolean = $.JsonBoolean;\r\n  export const JsonError = $.JsonError;\r\n  export type JsonError = $.JsonError;\r\n  export const JsonFloat = $.JsonFloat;\r\n  export type JsonFloat = $.JsonFloat;\r\n  export const JsonMap = $.JsonMap;\r\n  export type JsonMap = $.JsonMap;\r\n  export const JsonNullvalue = $.JsonNullvalue;\r\n  export type JsonNullvalue = $.JsonNullvalue;\r\n  export const JsonString = $.JsonString;\r\n  export type JsonString = $.JsonString;\r\n  export const Value = $.Value;\r\n  export type Value = $.Value;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  JsonArray,\r\n  JsonBoolean,\r\n  JsonFloat,\r\n  JsonMap,\r\n  JsonNullvalue,\r\n  JsonString,\r\n  Value,\r\n} from './cubismjson';\r\n\r\n/**\r\n * CubismJsonで実装されているJsonパーサを使用せず、\r\n * TypeScript標準のJsonパーサなどを使用し出力された結果を\r\n * Cubism SDKで定義されているJSONエレメントの要素に\r\n * 置き換える処理をするクラス。\r\n */\r\nexport class CubismJsonExtension {\r\n  static parseJsonObject(obj: Value, map: JsonMap) {\r\n    Object.keys(obj).forEach((key) => {\r\n      if (typeof obj[key] == 'boolean') {\r\n        map.put(key, new JsonBoolean(obj[key]));\r\n      } else if (typeof obj[key] == 'string') {\r\n        map.put(key, new JsonString(obj[key]));\r\n      } else if (typeof obj[key] == 'number') {\r\n        map.put(key, new JsonFloat(obj[key]));\r\n      } else if (obj[key] instanceof Array) {\r\n        map.put(key, CubismJsonExtension.parseJsonArray(obj[key]));\r\n      } else if (obj[key] instanceof Object) {\r\n        map.put(\r\n          key,\r\n          CubismJsonExtension.parseJsonObject(obj[key], new JsonMap())\r\n        );\r\n      } else if (obj[key] == null) {\r\n        map.put(key, new JsonNullvalue());\r\n      } else {\r\n        // どれにも当てはまらない場合でも処理する\r\n        map.put(key, obj[key]);\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n\r\n  protected static parseJsonArray(obj: Value) {\r\n    const arr = new JsonArray();\r\n    Object.keys(obj).forEach((key) => {\r\n      const convKey = Number(key);\r\n      if (typeof convKey == 'number') {\r\n        if (typeof obj[convKey] == 'boolean') {\r\n          arr.add(new JsonBoolean(obj[convKey]));\r\n        } else if (typeof obj[convKey] == 'string') {\r\n          arr.add(new JsonString(obj[convKey]));\r\n        } else if (typeof obj[convKey] == 'number') {\r\n          arr.add(new JsonFloat(obj[convKey]));\r\n        } else if (obj[key] instanceof Array) {\r\n          arr.add(this.parseJsonArray(obj[key]));\r\n        } else if (obj[key] instanceof Object) {\r\n          arr.add(this.parseJsonObject(obj[key], new JsonMap()));\r\n        } else if (obj[key] == null) {\r\n          arr.add(new JsonNullvalue());\r\n        } else {\r\n          // どれにも当てはまらない場合でも処理する\r\n          arr.add(obj[key]);\r\n        }\r\n      } else if (obj[key] instanceof Array) {\r\n        arr.add(this.parseJsonArray(obj[key]));\r\n      } else if (obj[key] instanceof Object) {\r\n        arr.add(this.parseJsonObject(obj[key], new JsonMap()));\r\n      } else if (obj[key] == null) {\r\n        arr.add(new JsonNullvalue());\r\n      } else {\r\n        // 配列ともObjectとも判定できなかった場合でも処理する\r\n        for (let i = 0; i < obj[key].length; i++) {\r\n          arr.add(obj[key][i]);\r\n        }\r\n      }\r\n    });\r\n    return arr;\r\n  }\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { LogLevel } from './framework/live2dcubismframework';\r\n\r\n/**\r\n * Sample Appで使用する定数\r\n */\r\n\r\n// Canvas width and height pixel values, or dynamic screen size ('auto').\r\nexport const CanvasSize: { width: number; height: number } | 'auto' = 'auto';\r\n\r\n// 画面\r\nexport const ViewScale = 1.0;\r\nexport const ViewMaxScale = 2.0;\r\nexport const ViewMinScale = 0.8;\r\n\r\nexport const ViewLogicalLeft = -1.0;\r\nexport const ViewLogicalRight = 1.0;\r\nexport const ViewLogicalBottom = -1.0;\r\nexport const ViewLogicalTop = 1.0;\r\n\r\nexport const ViewLogicalMaxLeft = -2.0;\r\nexport const ViewLogicalMaxRight = 2.0;\r\nexport const ViewLogicalMaxBottom = -2.0;\r\nexport const ViewLogicalMaxTop = 2.0;\r\n\r\n// 相対パス\r\nexport const ResourcesPath = '../../Resources/';\r\n\r\n// モデルの後ろにある背景の画像ファイル\r\nexport const BackImageName = 'back_class_normal.png';\r\n\r\n// 歯車\r\nexport const GearImageName = 'icon_gear.png';\r\n\r\n// 終了ボタン\r\nexport const PowerImageName = 'CloseNormal.png';\r\n\r\n// モデル定義---------------------------------------------\r\n// モデルを配置したディレクトリ名の配列\r\n// ディレクトリ名とmodel3.jsonの名前を一致させておくこと\r\nexport const ModelDir: string[] = [\r\n  'Haru',\r\n  'Hiyori',\r\n  'Mark',\r\n  'Natori',\r\n  'Rice',\r\n  'Mao'\r\n];\r\nexport const ModelDirSize: number = ModelDir.length;\r\n\r\n// 外部定義ファイル（json）と合わせる\r\nexport const MotionGroupIdle = 'Idle'; // アイドリング\r\nexport const MotionGroupTapBody = 'TapBody'; // 体をタップしたとき\r\n\r\n// 外部定義ファイル（json）と合わせる\r\nexport const HitAreaNameHead = 'Head';\r\nexport const HitAreaNameBody = 'Body';\r\n\r\n// モーションの優先度定数\r\nexport const PriorityNone = 0;\r\nexport const PriorityIdle = 1;\r\nexport const PriorityNormal = 2;\r\nexport const PriorityForce = 3;\r\n\r\n// デバッグ用ログの表示オプション\r\nexport const DebugLogEnable = true;\r\nexport const DebugTouchLogEnable = false;\r\n\r\n// Frameworkから出力するログのレベル設定\r\nexport const CubismLoggingLevel: LogLevel = LogLevel.LogLevel_Verbose;\r\n\r\n// デフォルトのレンダーターゲットサイズ\r\nexport const RenderTargetWidth = 1900;\r\nexport const RenderTargetHeight = 1000;\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismFramework, Option } from './framework/live2dcubismframework';\r\n\r\nimport * as LAppDefine from './lappdefine';\r\nimport { LAppLive2DManager } from './lapplive2dmanager';\r\nimport { LAppPal } from './lapppal';\r\nimport { LAppTextureManager } from './lapptexturemanager';\r\nimport { LAppView } from './lappview';\r\n\r\nexport let canvas: HTMLCanvasElement = null;\r\nexport let s_instance: LAppDelegate = null;\r\nexport let gl: WebGLRenderingContext = null;\r\nexport let frameBuffer: WebGLFramebuffer = null;\r\n\r\n/**\r\n * アプリケーションクラス。\r\n * Cubism SDKの管理を行う。\r\n */\r\nexport class LAppDelegate {\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を返す。\r\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\r\n   *\r\n   * @return クラスのインスタンス\r\n   */\r\n  public static getInstance(): LAppDelegate {\r\n    if (s_instance == null) {\r\n      s_instance = new LAppDelegate();\r\n    }\r\n\r\n    return s_instance;\r\n  }\r\n\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を解放する。\r\n   */\r\n  public static releaseInstance(): void {\r\n    if (s_instance != null) {\r\n      s_instance.release();\r\n    }\r\n\r\n    s_instance = null;\r\n  }\r\n\r\n  /**\r\n   * APPに必要な物を初期化する。\r\n   */\r\n  public initialize(): boolean {\r\n    // キャンバスの作成\r\n    canvas = document.createElement('canvas');\r\n    if (LAppDefine.CanvasSize === 'auto') {\r\n      this._resizeCanvas();\r\n    } else {\r\n      canvas.width = LAppDefine.CanvasSize.width;\r\n      canvas.height = LAppDefine.CanvasSize.height;\r\n    }\r\n\r\n    // glコンテキストを初期化\r\n    // @ts-ignore\r\n    gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n\r\n    if (!gl) {\r\n      alert('Cannot initialize WebGL. This browser does not support.');\r\n      gl = null;\r\n\r\n      document.body.innerHTML =\r\n        'This browser does not support the <code>&lt;canvas&gt;</code> element.';\r\n\r\n      // gl初期化失敗\r\n      return false;\r\n    }\r\n\r\n    // キャンバスを DOM に追加\r\n    document.body.appendChild(canvas);\r\n\r\n    if (!frameBuffer) {\r\n      frameBuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING);\r\n    }\r\n\r\n    // 透過設定\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    const supportTouch: boolean = 'ontouchend' in canvas;\r\n\r\n    if (supportTouch) {\r\n      // タッチ関連コールバック関数登録\r\n      canvas.ontouchstart = onTouchBegan;\r\n      canvas.ontouchmove = onTouchMoved;\r\n      canvas.ontouchend = onTouchEnded;\r\n      canvas.ontouchcancel = onTouchCancel;\r\n    } else {\r\n      // マウス関連コールバック関数登録\r\n      canvas.onmousedown = onClickBegan;\r\n      canvas.onmousemove = onMouseMoved;\r\n      canvas.onmouseup = onClickEnded;\r\n    }\r\n\r\n    // AppViewの初期化\r\n    this._view.initialize();\r\n\r\n    // Cubism SDKの初期化\r\n    this.initializeCubism();\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Resize canvas and re-initialize view.\r\n   */\r\n  public onResize(): void {\r\n    this._resizeCanvas();\r\n    this._view.initialize();\r\n    this._view.initializeSprite();\r\n\r\n    // キャンバスサイズを渡す\r\n    const viewport: number[] = [0, 0, canvas.width, canvas.height];\r\n\r\n    gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\r\n  }\r\n\r\n  /**\r\n   * 解放する。\r\n   */\r\n  public release(): void {\r\n    this._textureManager.release();\r\n    this._textureManager = null;\r\n\r\n    this._view.release();\r\n    this._view = null;\r\n\r\n    // リソースを解放\r\n    LAppLive2DManager.releaseInstance();\r\n\r\n    // Cubism SDKの解放\r\n    CubismFramework.dispose();\r\n  }\r\n\r\n  /**\r\n   * 実行処理。\r\n   */\r\n  public run(): void {\r\n    // メインループ\r\n    const loop = (): void => {\r\n      // インスタンスの有無の確認\r\n      if (s_instance == null) {\r\n        return;\r\n      }\r\n\r\n      // 時間更新\r\n      LAppPal.updateTime();\r\n\r\n      // 画面の初期化\r\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n\r\n      // 深度テストを有効化\r\n      gl.enable(gl.DEPTH_TEST);\r\n\r\n      // 近くにある物体は、遠くにある物体を覆い隠す\r\n      gl.depthFunc(gl.LEQUAL);\r\n\r\n      // カラーバッファや深度バッファをクリアする\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n      gl.clearDepth(1.0);\r\n\r\n      // 透過設定\r\n      gl.enable(gl.BLEND);\r\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n      // 描画更新\r\n      this._view.render();\r\n      // 截图截停帧\r\n      if (this._captureFrame) {\r\n        this._captureFrame = false;\r\n        var link = document.createElement('a');\r\n        document.body.appendChild(link);\r\n        link.setAttribute(\"type\", \"hidden\");\r\n        link.href = canvas.toDataURL();\r\n        link.download = this._captureName || 'live2d.png';\r\n        link.click();\r\n      }\r\n      // ループのために再帰呼び出し\r\n      requestAnimationFrame(loop);\r\n    };\r\n    loop();\r\n  }\r\n\r\n  /**\r\n   * シェーダーを登録する。\r\n   */\r\n  public createShader(): WebGLProgram {\r\n    // バーテックスシェーダーのコンパイル\r\n    const vertexShaderId = gl.createShader(gl.VERTEX_SHADER);\r\n\r\n    if (vertexShaderId == null) {\r\n      LAppPal.printMessage('failed to create vertexShader');\r\n      return null;\r\n    }\r\n\r\n    const vertexShader: string =\r\n      'precision mediump float;' +\r\n      'attribute vec3 position;' +\r\n      'attribute vec2 uv;' +\r\n      'varying vec2 vuv;' +\r\n      'void main(void)' +\r\n      '{' +\r\n      '   gl_Position = vec4(position, 1.0);' +\r\n      '   vuv = uv;' +\r\n      '}';\r\n\r\n    gl.shaderSource(vertexShaderId, vertexShader);\r\n    gl.compileShader(vertexShaderId);\r\n\r\n    // フラグメントシェーダのコンパイル\r\n    const fragmentShaderId = gl.createShader(gl.FRAGMENT_SHADER);\r\n\r\n    if (fragmentShaderId == null) {\r\n      LAppPal.printMessage('failed to create fragmentShader');\r\n      return null;\r\n    }\r\n\r\n    const fragmentShader: string =\r\n      'precision mediump float;' +\r\n      'varying vec2 vuv;' +\r\n      'uniform sampler2D texture;' +\r\n      'void main(void)' +\r\n      '{' +\r\n      '   gl_FragColor = texture2D(texture, vuv);' +\r\n      '}';\r\n\r\n    gl.shaderSource(fragmentShaderId, fragmentShader);\r\n    gl.compileShader(fragmentShaderId);\r\n\r\n    // プログラムオブジェクトの作成\r\n    const programId = gl.createProgram();\r\n    gl.attachShader(programId, vertexShaderId);\r\n    gl.attachShader(programId, fragmentShaderId);\r\n\r\n    gl.deleteShader(vertexShaderId);\r\n    gl.deleteShader(fragmentShaderId);\r\n\r\n    // リンク\r\n    gl.linkProgram(programId);\r\n\r\n    gl.useProgram(programId);\r\n\r\n    return programId;\r\n  }\r\n\r\n  /**\r\n   * View情報を取得する。\r\n   */\r\n  public getView(): LAppView {\r\n    return this._view;\r\n  }\r\n\r\n  public getTextureManager(): LAppTextureManager {\r\n    return this._textureManager;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this._captured = false;\r\n    this._mouseX = 0.0;\r\n    this._mouseY = 0.0;\r\n    this._isEnd = false;\r\n\r\n    this._cubismOption = new Option();\r\n    this._view = new LAppView();\r\n    this._textureManager = new LAppTextureManager();\r\n  }\r\n\r\n  /**\r\n   * Cubism SDKの初期化\r\n   */\r\n  public initializeCubism(): void {\r\n    // setup cubism\r\n    this._cubismOption.logFunction = LAppPal.printMessage;\r\n    this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\r\n    CubismFramework.startUp(this._cubismOption);\r\n\r\n    // initialize cubism\r\n    CubismFramework.initialize();\r\n\r\n    // load model\r\n    LAppLive2DManager.getInstance();\r\n\r\n    LAppPal.updateTime();\r\n\r\n    this._view.initializeSprite();\r\n  }\r\n\r\n  /**\r\n   * Resize the canvas to fill the screen.\r\n   */\r\n  private _resizeCanvas(): void {\r\n    canvas.width = window.innerWidth;\r\n    canvas.height = window.innerHeight;\r\n  }\r\n\r\n  _cubismOption: Option; // Cubism SDK Option\r\n  _view: LAppView; // View情報\r\n  _captured: boolean; // クリックしているか\r\n  _mouseX: number; // マウスX座標\r\n  _mouseY: number; // マウスY座標\r\n  _isEnd: boolean; // APP終了しているか\r\n  _textureManager: LAppTextureManager; // テクスチャマネージャー\r\n  _captureFrame:boolean;//截图开关\r\n  _captureName:string;//截图后的名称\r\n}\r\n\r\n/**\r\n * クリックしたときに呼ばれる。\r\n */\r\nfunction onClickBegan(e: MouseEvent): void {\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n  LAppDelegate.getInstance()._captured = true;\r\n\r\n  const posX: number = e.pageX;\r\n  const posY: number = e.pageY;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\r\n}\r\n\r\n/**\r\n * マウスポインタが動いたら呼ばれる。\r\n */\r\nfunction onMouseMoved(e: MouseEvent): void {\r\n  if (!LAppDelegate.getInstance()._captured) {\r\n    return;\r\n  }\r\n\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  const rect = (e.target as Element).getBoundingClientRect();\r\n  const posX: number = e.clientX - rect.left;\r\n  const posY: number = e.clientY - rect.top;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\r\n}\r\n\r\n/**\r\n * クリックが終了したら呼ばれる。\r\n */\r\nfunction onClickEnded(e: MouseEvent): void {\r\n  LAppDelegate.getInstance()._captured = false;\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  const rect = (e.target as Element).getBoundingClientRect();\r\n  const posX: number = e.clientX - rect.left;\r\n  const posY: number = e.clientY - rect.top;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\n\r\n/**\r\n * タッチしたときに呼ばれる。\r\n */\r\nfunction onTouchBegan(e: TouchEvent): void {\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  LAppDelegate.getInstance()._captured = true;\r\n\r\n  const posX = e.changedTouches[0].pageX;\r\n  const posY = e.changedTouches[0].pageY;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\r\n}\r\n\r\n/**\r\n * スワイプすると呼ばれる。\r\n */\r\nfunction onTouchMoved(e: TouchEvent): void {\r\n  if (!LAppDelegate.getInstance()._captured) {\r\n    return;\r\n  }\r\n\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  const rect = (e.target as Element).getBoundingClientRect();\r\n\r\n  const posX = e.changedTouches[0].clientX - rect.left;\r\n  const posY = e.changedTouches[0].clientY - rect.top;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\r\n}\r\n\r\n/**\r\n * タッチが終了したら呼ばれる。\r\n */\r\nfunction onTouchEnded(e: TouchEvent): void {\r\n  LAppDelegate.getInstance()._captured = false;\r\n\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  const rect = (e.target as Element).getBoundingClientRect();\r\n\r\n  const posX = e.changedTouches[0].clientX - rect.left;\r\n  const posY = e.changedTouches[0].clientY - rect.top;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\n\r\n/**\r\n * タッチがキャンセルされると呼ばれる。\r\n */\r\nfunction onTouchCancel(e: TouchEvent): void {\r\n  LAppDelegate.getInstance()._captured = false;\r\n\r\n  if (!LAppDelegate.getInstance()._view) {\r\n    LAppPal.printMessage('view notfound');\r\n    return;\r\n  }\r\n\r\n  const rect = (e.target as Element).getBoundingClientRect();\r\n\r\n  const posX = e.changedTouches[0].clientX - rect.left;\r\n  const posY = e.changedTouches[0].clientY - rect.top;\r\n\r\n  LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMatrix44 } from './framework/math/cubismmatrix44';\r\nimport { ACubismMotion } from './framework/motion/acubismmotion';\r\nimport { csmVector } from './framework/type/csmvector';\r\n\r\nimport * as LAppDefine from './lappdefine';\r\nimport { canvas } from './lappdelegate';\r\nimport { LAppModel } from './lappmodel';\r\nimport { LAppPal } from './lapppal';\r\n\r\nexport let s_instance: LAppLive2DManager = null;\r\n\r\n/**\r\n * サンプルアプリケーションにおいてCubismModelを管理するクラス\r\n * モデル生成と破棄、タップイベントの処理、モデル切り替えを行う。\r\n */\r\nexport class LAppLive2DManager {\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を返す。\r\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\r\n   *\r\n   * @return クラスのインスタンス\r\n   */\r\n  public static getInstance(): LAppLive2DManager {\r\n    if (s_instance == null) {\r\n      s_instance = new LAppLive2DManager();\r\n    }\r\n\r\n    return s_instance;\r\n  }\r\n\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を解放する。\r\n   */\r\n  public static releaseInstance(): void {\r\n    if (s_instance != null) {\r\n      s_instance = void 0;\r\n    }\r\n\r\n    s_instance = null;\r\n  }\r\n\r\n  /**\r\n   * 現在のシーンで保持しているモデルを返す。\r\n   *\r\n   * @param no モデルリストのインデックス値\r\n   * @return モデルのインスタンスを返す。インデックス値が範囲外の場合はNULLを返す。\r\n   */\r\n  public getModel(no: number): LAppModel {\r\n    if (no < this._models.getSize()) {\r\n      return this._models.at(no);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 現在のシーンで保持しているすべてのモデルを解放する\r\n   */\r\n  public releaseAllModel(): void {\r\n    for (let i = 0; i < this._models.getSize(); i++) {\r\n      this._models.at(i).release();\r\n      this._models.set(i, null);\r\n    }\r\n\r\n    this._models.clear();\r\n  }\r\n\r\n  /**\r\n   * 画面をドラッグした時の処理\r\n   *\r\n   * @param x 画面のX座標\r\n   * @param y 画面のY座標\r\n   */\r\n  public onDrag(x: number, y: number): void {\r\n    for (let i = 0; i < this._models.getSize(); i++) {\r\n      const model: LAppModel = this.getModel(i);\r\n\r\n      if (model) {\r\n        model.setDragging(x, y);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 画面をタップした時の処理\r\n   *\r\n   * @param x 画面のX座標\r\n   * @param y 画面のY座標\r\n   */\r\n  public onTap(x: number, y: number): void {\r\n    if (LAppDefine.DebugLogEnable) {\r\n      LAppPal.printMessage(\r\n        `[APP]tap point: {x: ${x.toFixed(2)} y: ${y.toFixed(2)}}`\r\n      );\r\n    }\r\n\r\n    for (let i = 0; i < this._models.getSize(); i++) {\r\n      if (this._models.at(i).hitTest(LAppDefine.HitAreaNameHead, x, y)) {\r\n        if (LAppDefine.DebugLogEnable) {\r\n          LAppPal.printMessage(\r\n            `[APP]hit area: [${LAppDefine.HitAreaNameHead}]`\r\n          );\r\n        }\r\n        this._models.at(i).setRandomExpression();\r\n      } else if (this._models.at(i).hitTest(LAppDefine.HitAreaNameBody, x, y)) {\r\n        if (LAppDefine.DebugLogEnable) {\r\n          LAppPal.printMessage(\r\n            `[APP]hit area: [${LAppDefine.HitAreaNameBody}]`\r\n          );\r\n        }\r\n        this._models\r\n          .at(i)\r\n          .startRandomMotion(\r\n            LAppDefine.MotionGroupTapBody,\r\n            LAppDefine.PriorityNormal,\r\n            this._finishedMotion\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 画面を更新するときの処理\r\n   * モデルの更新処理及び描画処理を行う\r\n   */\r\n  public onUpdate(): void {\r\n    const { width, height } = canvas;\r\n\r\n    const modelCount: number = this._models.getSize();\r\n\r\n    for (let i = 0; i < modelCount; ++i) {\r\n      const projection: CubismMatrix44 = new CubismMatrix44();\r\n      const model: LAppModel = this.getModel(i);\r\n\r\n      if (model.getModel()) {\r\n        if (model.getModel().getCanvasWidth() > 1.0 && width < height) {\r\n          // 横に長いモデルを縦長ウィンドウに表示する際モデルの横サイズでscaleを算出する\r\n          model.getModelMatrix().setWidth(2.0);\r\n          projection.scale(1.0, width / height);\r\n        } else {\r\n          projection.scale(height / width, 1.0);\r\n        }\r\n\r\n        // 必要があればここで乗算\r\n        if (this._viewMatrix != null) {\r\n          projection.multiplyByMatrix(this._viewMatrix);\r\n        }\r\n      }\r\n\r\n      model.update();\r\n      model.draw(projection); // 参照渡しなのでprojectionは変質する。\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 次のシーンに切りかえる\r\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\r\n   */\r\n  public nextScene(): void {\r\n    const no: number = (this._sceneIndex + 1) % LAppDefine.ModelDirSize;\r\n    this.changeScene(no);\r\n  }\r\n\r\n  /**\r\n   * シーンを切り替える\r\n   * サンプルアプリケーションではモデルセットの切り替えを行う。\r\n   */\r\n  public changeScene(index: number): void {\r\n    this._sceneIndex = index;\r\n    if (LAppDefine.DebugLogEnable) {\r\n      LAppPal.printMessage(`[APP]model index: ${this._sceneIndex}`);\r\n    }\r\n\r\n    // ModelDir[]に保持したディレクトリ名から\r\n    // model3.jsonのパスを決定する。\r\n    // ディレクトリ名とmodel3.jsonの名前を一致させておくこと。\r\n    const model: string = LAppDefine.ModelDir[index];\r\n    const modelPath: string = LAppDefine.ResourcesPath + model + '/';\r\n    let modelJsonName: string = LAppDefine.ModelDir[index];\r\n    modelJsonName += '.model3.json';\r\n\r\n    this.releaseAllModel();\r\n    this._models.pushBack(new LAppModel());\r\n    this._models.at(0).loadAssets(modelPath, modelJsonName);\r\n  }\r\n\r\n  public setViewMatrix(m: CubismMatrix44) {\r\n    for (let i = 0; i < 16; i++) {\r\n      this._viewMatrix.getArray()[i] = m.getArray()[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this._viewMatrix = new CubismMatrix44();\r\n    this._models = new csmVector<LAppModel>();\r\n    this._sceneIndex = 0;\r\n    this.changeScene(this._sceneIndex);\r\n  }\r\n\r\n  _viewMatrix: CubismMatrix44; // モデル描画に用いるview行列\r\n  _models: csmVector<LAppModel>; // モデルインスタンスのコンテナ\r\n  _sceneIndex: number; // 表示するシーンのインデックス値\r\n  // モーション再生終了のコールバック関数\r\n  _finishedMotion = (self: ACubismMotion): void => {\r\n    LAppPal.printMessage('Motion Finished:');\r\n    console.log(self);\r\n  };\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n\r\nimport { CubismDefaultParameterId } from './framework/cubismdefaultparameterid';\r\nimport { CubismModelSettingJson } from './framework/cubismmodelsettingjson';\r\nimport {\r\n  BreathParameterData,\r\n  CubismBreath\r\n} from './framework/effect/cubismbreath';\r\nimport { CubismEyeBlink } from './framework/effect/cubismeyeblink';\r\nimport { ICubismModelSetting } from './framework/icubismmodelsetting';\r\nimport { CubismIdHandle } from './framework/id/cubismid';\r\nimport { CubismFramework } from './framework/live2dcubismframework';\r\nimport { CubismMatrix44 } from './framework/math/cubismmatrix44';\r\nimport { CubismUserModel } from './framework/model/cubismusermodel';\r\nimport {\r\n  ACubismMotion,\r\n  FinishedMotionCallback\r\n} from './framework/motion/acubismmotion';\r\nimport { CubismMotion } from './framework/motion/cubismmotion';\r\nimport {\r\n  CubismMotionQueueEntryHandle,\r\n  InvalidMotionQueueEntryHandleValue\r\n} from './framework/motion/cubismmotionqueuemanager';\r\nimport { csmMap } from './framework/type/csmmap';\r\nimport { csmRect } from './framework/type/csmrectf';\r\nimport { csmString } from './framework/type/csmstring';\r\nimport { csmVector } from './framework/type/csmvector';\r\nimport { CubismLogError, CubismLogInfo } from './framework/utils/cubismdebug';\r\n\r\nimport * as LAppDefine from './lappdefine';\r\nimport { canvas, frameBuffer, gl, LAppDelegate } from './lappdelegate';\r\nimport { LAppPal } from './lapppal';\r\nimport { TextureInfo } from './lapptexturemanager';\r\nimport { LAppWavFileHandler } from './lappwavfilehandler';\r\n\r\nenum LoadStep {\r\n  LoadAssets,\r\n  LoadModel,\r\n  WaitLoadModel,\r\n  LoadExpression,\r\n  WaitLoadExpression,\r\n  LoadPhysics,\r\n  WaitLoadPhysics,\r\n  LoadPose,\r\n  WaitLoadPose,\r\n  SetupEyeBlink,\r\n  SetupBreath,\r\n  LoadUserData,\r\n  WaitLoadUserData,\r\n  SetupEyeBlinkIds,\r\n  SetupLipSyncIds,\r\n  SetupLayout,\r\n  LoadMotion,\r\n  WaitLoadMotion,\r\n  CompleteInitialize,\r\n  CompleteSetupModel,\r\n  LoadTexture,\r\n  WaitLoadTexture,\r\n  CompleteSetup\r\n}\r\n\r\n/**\r\n * ユーザーが実際に使用するモデルの実装クラス<br>\r\n * モデル生成、機能コンポーネント生成、更新処理とレンダリングの呼び出しを行う。\r\n */\r\nexport class LAppModel extends CubismUserModel {\r\n  /**\r\n   * model3.jsonが置かれたディレクトリとファイルパスからモデルを生成する\r\n   * @param dir\r\n   * @param fileName\r\n   */\r\n  public loadAssets(dir: string, fileName: string): void {\r\n    this._modelHomeDir = dir;\r\n\r\n    fetch(`${this._modelHomeDir}${fileName}`)\r\n      .then(response => response.arrayBuffer())\r\n      .then(arrayBuffer => {\r\n        const setting: ICubismModelSetting = new CubismModelSettingJson(\r\n          arrayBuffer,\r\n          arrayBuffer.byteLength\r\n        );\r\n\r\n        // ステートを更新\r\n        this._state = LoadStep.LoadModel;\r\n\r\n        // 結果を保存\r\n        this.setupModel(setting);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * model3.jsonからモデルを生成する。\r\n   * model3.jsonの記述に従ってモデル生成、モーション、物理演算などのコンポーネント生成を行う。\r\n   *\r\n   * @param setting ICubismModelSettingのインスタンス\r\n   */\r\n  private setupModel(setting: ICubismModelSetting): void {\r\n    this._updating = true;\r\n    this._initialized = false;\r\n\r\n    this._modelSetting = setting;\r\n\r\n    // CubismModel\r\n    if (this._modelSetting.getModelFileName() != '') {\r\n      const modelFileName = this._modelSetting.getModelFileName();\r\n\r\n      fetch(`${this._modelHomeDir}${modelFileName}`)\r\n        .then(response => response.arrayBuffer())\r\n        .then(arrayBuffer => {\r\n          this.loadModel(arrayBuffer);\r\n          this._state = LoadStep.LoadExpression;\r\n\r\n          // callback\r\n          loadCubismExpression();\r\n        });\r\n\r\n      this._state = LoadStep.WaitLoadModel;\r\n    } else {\r\n      LAppPal.printMessage('Model data does not exist.');\r\n    }\r\n\r\n    // Expression\r\n    const loadCubismExpression = (): void => {\r\n      if (this._modelSetting.getExpressionCount() > 0) {\r\n        const count: number = this._modelSetting.getExpressionCount();\r\n\r\n        for (let i = 0; i < count; i++) {\r\n          const expressionName = this._modelSetting.getExpressionName(i);\r\n          const expressionFileName =\r\n            this._modelSetting.getExpressionFileName(i);\r\n\r\n          fetch(`${this._modelHomeDir}${expressionFileName}`)\r\n            .then(response => response.arrayBuffer())\r\n            .then(arrayBuffer => {\r\n              const motion: ACubismMotion = this.loadExpression(\r\n                arrayBuffer,\r\n                arrayBuffer.byteLength,\r\n                expressionName\r\n              );\r\n\r\n              if (this._expressions.getValue(expressionName) != null) {\r\n                ACubismMotion.delete(\r\n                  this._expressions.getValue(expressionName)\r\n                );\r\n                this._expressions.setValue(expressionName, null);\r\n              }\r\n\r\n              this._expressions.setValue(expressionName, motion);\r\n\r\n              this._expressionCount++;\r\n\r\n              if (this._expressionCount >= count) {\r\n                this._state = LoadStep.LoadPhysics;\r\n\r\n                // callback\r\n                loadCubismPhysics();\r\n              }\r\n            });\r\n        }\r\n        this._state = LoadStep.WaitLoadExpression;\r\n      } else {\r\n        this._state = LoadStep.LoadPhysics;\r\n\r\n        // callback\r\n        loadCubismPhysics();\r\n      }\r\n    };\r\n\r\n    // Physics\r\n    const loadCubismPhysics = (): void => {\r\n      if (this._modelSetting.getPhysicsFileName() != '') {\r\n        const physicsFileName = this._modelSetting.getPhysicsFileName();\r\n\r\n        fetch(`${this._modelHomeDir}${physicsFileName}`)\r\n          .then(response => response.arrayBuffer())\r\n          .then(arrayBuffer => {\r\n            this.loadPhysics(arrayBuffer, arrayBuffer.byteLength);\r\n\r\n            this._state = LoadStep.LoadPose;\r\n\r\n            // callback\r\n            loadCubismPose();\r\n          });\r\n        this._state = LoadStep.WaitLoadPhysics;\r\n      } else {\r\n        this._state = LoadStep.LoadPose;\r\n\r\n        // callback\r\n        loadCubismPose();\r\n      }\r\n    };\r\n\r\n    // Pose\r\n    const loadCubismPose = (): void => {\r\n      if (this._modelSetting.getPoseFileName() != '') {\r\n        const poseFileName = this._modelSetting.getPoseFileName();\r\n\r\n        fetch(`${this._modelHomeDir}${poseFileName}`)\r\n          .then(response => response.arrayBuffer())\r\n          .then(arrayBuffer => {\r\n            this.loadPose(arrayBuffer, arrayBuffer.byteLength);\r\n\r\n            this._state = LoadStep.SetupEyeBlink;\r\n\r\n            // callback\r\n            setupEyeBlink();\r\n          });\r\n        this._state = LoadStep.WaitLoadPose;\r\n      } else {\r\n        this._state = LoadStep.SetupEyeBlink;\r\n\r\n        // callback\r\n        setupEyeBlink();\r\n      }\r\n    };\r\n\r\n    // EyeBlink\r\n    const setupEyeBlink = (): void => {\r\n      if (this._modelSetting.getEyeBlinkParameterCount() > 0) {\r\n        this._eyeBlink = CubismEyeBlink.create(this._modelSetting);\r\n        this._state = LoadStep.SetupBreath;\r\n      }\r\n\r\n      // callback\r\n      setupBreath();\r\n    };\r\n\r\n    // Breath\r\n    const setupBreath = (): void => {\r\n      this._breath = CubismBreath.create();\r\n\r\n      const breathParameters: csmVector<BreathParameterData> = new csmVector();\r\n      breathParameters.pushBack(\r\n        new BreathParameterData(this._idParamAngleX, 0.0, 15.0, 6.5345, 0.5)\r\n      );\r\n      breathParameters.pushBack(\r\n        new BreathParameterData(this._idParamAngleY, 0.0, 8.0, 3.5345, 0.5)\r\n      );\r\n      breathParameters.pushBack(\r\n        new BreathParameterData(this._idParamAngleZ, 0.0, 10.0, 5.5345, 0.5)\r\n      );\r\n      breathParameters.pushBack(\r\n        new BreathParameterData(this._idParamBodyAngleX, 0.0, 4.0, 15.5345, 0.5)\r\n      );\r\n      breathParameters.pushBack(\r\n        new BreathParameterData(\r\n          CubismFramework.getIdManager().getId(\r\n            CubismDefaultParameterId.ParamBreath\r\n          ),\r\n          0.5,\r\n          0.5,\r\n          3.2345,\r\n          1\r\n        )\r\n      );\r\n\r\n      this._breath.setParameters(breathParameters);\r\n      this._state = LoadStep.LoadUserData;\r\n\r\n      // callback\r\n      loadUserData();\r\n    };\r\n\r\n    // UserData\r\n    const loadUserData = (): void => {\r\n      if (this._modelSetting.getUserDataFile() != '') {\r\n        const userDataFile = this._modelSetting.getUserDataFile();\r\n\r\n        fetch(`${this._modelHomeDir}${userDataFile}`)\r\n          .then(response => response.arrayBuffer())\r\n          .then(arrayBuffer => {\r\n            this.loadUserData(arrayBuffer, arrayBuffer.byteLength);\r\n\r\n            this._state = LoadStep.SetupEyeBlinkIds;\r\n\r\n            // callback\r\n            setupEyeBlinkIds();\r\n          });\r\n\r\n        this._state = LoadStep.WaitLoadUserData;\r\n      } else {\r\n        this._state = LoadStep.SetupEyeBlinkIds;\r\n\r\n        // callback\r\n        setupEyeBlinkIds();\r\n      }\r\n    };\r\n\r\n    // EyeBlinkIds\r\n    const setupEyeBlinkIds = (): void => {\r\n      const eyeBlinkIdCount: number =\r\n        this._modelSetting.getEyeBlinkParameterCount();\r\n\r\n      for (let i = 0; i < eyeBlinkIdCount; ++i) {\r\n        this._eyeBlinkIds.pushBack(\r\n          this._modelSetting.getEyeBlinkParameterId(i)\r\n        );\r\n      }\r\n\r\n      this._state = LoadStep.SetupLipSyncIds;\r\n\r\n      // callback\r\n      setupLipSyncIds();\r\n    };\r\n\r\n    // LipSyncIds\r\n    const setupLipSyncIds = (): void => {\r\n      const lipSyncIdCount = this._modelSetting.getLipSyncParameterCount();\r\n\r\n      for (let i = 0; i < lipSyncIdCount; ++i) {\r\n        this._lipSyncIds.pushBack(this._modelSetting.getLipSyncParameterId(i));\r\n      }\r\n      this._state = LoadStep.SetupLayout;\r\n\r\n      // callback\r\n      setupLayout();\r\n    };\r\n\r\n    // Layout\r\n    const setupLayout = (): void => {\r\n      const layout: csmMap<string, number> = new csmMap<string, number>();\r\n\r\n      if (this._modelSetting == null || this._modelMatrix == null) {\r\n        CubismLogError('Failed to setupLayout().');\r\n        return;\r\n      }\r\n\r\n      this._modelSetting.getLayoutMap(layout);\r\n      this._modelMatrix.setupFromLayout(layout);\r\n      this._state = LoadStep.LoadMotion;\r\n\r\n      // callback\r\n      loadCubismMotion();\r\n    };\r\n\r\n    // Motion\r\n    const loadCubismMotion = (): void => {\r\n      this._state = LoadStep.WaitLoadMotion;\r\n      this._model.saveParameters();\r\n      this._allMotionCount = 0;\r\n      this._motionCount = 0;\r\n      const group: string[] = [];\r\n\r\n      const motionGroupCount: number = this._modelSetting.getMotionGroupCount();\r\n\r\n      // モーションの総数を求める\r\n      for (let i = 0; i < motionGroupCount; i++) {\r\n        group[i] = this._modelSetting.getMotionGroupName(i);\r\n        this._allMotionCount += this._modelSetting.getMotionCount(group[i]);\r\n      }\r\n\r\n      // モーションの読み込み\r\n      for (let i = 0; i < motionGroupCount; i++) {\r\n        this.preLoadMotionGroup(group[i]);\r\n      }\r\n\r\n      // モーションがない場合\r\n      if (motionGroupCount == 0) {\r\n        this._state = LoadStep.LoadTexture;\r\n\r\n        // 全てのモーションを停止する\r\n        this._motionManager.stopAllMotions();\r\n\r\n        this._updating = false;\r\n        this._initialized = true;\r\n\r\n        this.createRenderer();\r\n        this.setupTextures();\r\n        this.getRenderer().startUp(gl);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * テクスチャユニットにテクスチャをロードする\r\n   */\r\n  private setupTextures(): void {\r\n    // iPhoneでのアルファ品質向上のためTypescriptではpremultipliedAlphaを採用\r\n    const usePremultiply = true;\r\n\r\n    if (this._state == LoadStep.LoadTexture) {\r\n      // テクスチャ読み込み用\r\n      const textureCount: number = this._modelSetting.getTextureCount();\r\n\r\n      for (\r\n        let modelTextureNumber = 0;\r\n        modelTextureNumber < textureCount;\r\n        modelTextureNumber++\r\n      ) {\r\n        // テクスチャ名が空文字だった場合はロード・バインド処理をスキップ\r\n        if (this._modelSetting.getTextureFileName(modelTextureNumber) == '') {\r\n          console.log('getTextureFileName null');\r\n          continue;\r\n        }\r\n\r\n        // WebGLのテクスチャユニットにテクスチャをロードする\r\n        let texturePath =\r\n          this._modelSetting.getTextureFileName(modelTextureNumber);\r\n        texturePath = this._modelHomeDir + texturePath;\r\n\r\n        // ロード完了時に呼び出すコールバック関数\r\n        const onLoad = (textureInfo: TextureInfo): void => {\r\n          this.getRenderer().bindTexture(modelTextureNumber, textureInfo.id);\r\n\r\n          this._textureCount++;\r\n\r\n          if (this._textureCount >= textureCount) {\r\n            // ロード完了\r\n            this._state = LoadStep.CompleteSetup;\r\n          }\r\n        };\r\n\r\n        // 読み込み\r\n        LAppDelegate.getInstance()\r\n          .getTextureManager()\r\n          .createTextureFromPngFile(texturePath, usePremultiply, onLoad);\r\n        this.getRenderer().setIsPremultipliedAlpha(usePremultiply);\r\n      }\r\n\r\n      this._state = LoadStep.WaitLoadTexture;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * レンダラを再構築する\r\n   */\r\n  public reloadRenderer(): void {\r\n    this.deleteRenderer();\r\n    this.createRenderer();\r\n    this.setupTextures();\r\n  }\r\n\r\n  /**\r\n   * 更新\r\n   */\r\n  public update(): void {\r\n    if (this._state != LoadStep.CompleteSetup) return;\r\n\r\n    const deltaTimeSeconds: number = LAppPal.getDeltaTime();\r\n    this._userTimeSeconds += deltaTimeSeconds;\r\n\r\n    this._dragManager.update(deltaTimeSeconds);\r\n    this._dragX = this._dragManager.getX();\r\n    this._dragY = this._dragManager.getY();\r\n\r\n    // モーションによるパラメータ更新の有無\r\n    let motionUpdated = false;\r\n\r\n    //--------------------------------------------------------------------------\r\n    this._model.loadParameters(); // 前回セーブされた状態をロード\r\n    if (this._motionManager.isFinished()) {\r\n      // モーションの再生がない場合、待機モーションの中からランダムで再生する\r\n      this.startRandomMotion(\r\n        LAppDefine.MotionGroupIdle,\r\n        LAppDefine.PriorityIdle\r\n      );\r\n    } else {\r\n      motionUpdated = this._motionManager.updateMotion(\r\n        this._model,\r\n        deltaTimeSeconds\r\n      ); // モーションを更新\r\n    }\r\n    this._model.saveParameters(); // 状態を保存\r\n    //--------------------------------------------------------------------------\r\n\r\n    // まばたき\r\n    if (!motionUpdated) {\r\n      if (this._eyeBlink != null) {\r\n        // メインモーションの更新がないとき\r\n        this._eyeBlink.updateParameters(this._model, deltaTimeSeconds); // 目パチ\r\n      }\r\n    }\r\n\r\n    if (this._expressionManager != null) {\r\n      this._expressionManager.updateMotion(this._model, deltaTimeSeconds); // 表情でパラメータ更新（相対変化）\r\n    }\r\n\r\n    // ドラッグによる変化\r\n    // ドラッグによる顔の向きの調整\r\n    this._model.addParameterValueById(this._idParamAngleX, this._dragX * 30); // -30から30の値を加える\r\n    this._model.addParameterValueById(this._idParamAngleY, this._dragY * 30);\r\n    this._model.addParameterValueById(\r\n      this._idParamAngleZ,\r\n      this._dragX * this._dragY * -30\r\n    );\r\n\r\n    // ドラッグによる体の向きの調整\r\n    this._model.addParameterValueById(\r\n      this._idParamBodyAngleX,\r\n      this._dragX * 10\r\n    ); // -10から10の値を加える\r\n\r\n    // ドラッグによる目の向きの調整\r\n    this._model.addParameterValueById(this._idParamEyeBallX, this._dragX); // -1から1の値を加える\r\n    this._model.addParameterValueById(this._idParamEyeBallY, this._dragY);\r\n\r\n    // 呼吸など\r\n    if (this._breath != null) {\r\n      this._breath.updateParameters(this._model, deltaTimeSeconds);\r\n    }\r\n\r\n    // 物理演算の設定\r\n    if (this._physics != null) {\r\n      this._physics.evaluate(this._model, deltaTimeSeconds);\r\n    }\r\n\r\n    // リップシンクの設定\r\n    if (this._lipsync) {\r\n      let value = 0.0; // リアルタイムでリップシンクを行う場合、システムから音量を取得して、0~1の範囲で値を入力します。\r\n\r\n      this._wavFileHandler.update(deltaTimeSeconds);\r\n      value = this._wavFileHandler.getRms();\r\n\r\n      for (let i = 0; i < this._lipSyncIds.getSize(); ++i) {\r\n        this._model.addParameterValueById(this._lipSyncIds.at(i), value, 0.8);\r\n      }\r\n    }\r\n\r\n    // ポーズの設定\r\n    if (this._pose != null) {\r\n      this._pose.updateParameters(this._model, deltaTimeSeconds);\r\n    }\r\n\r\n    this._model.update();\r\n  }\r\n\r\n  /**\r\n   * 引数で指定したモーションの再生を開始する\r\n   * @param group モーショングループ名\r\n   * @param no グループ内の番号\r\n   * @param priority 優先度\r\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\r\n   * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\r\n   */\r\n  public startMotion(\r\n    group: string,\r\n    no: number,\r\n    priority: number,\r\n    onFinishedMotionHandler?: FinishedMotionCallback\r\n  ): CubismMotionQueueEntryHandle {\r\n    if (priority == LAppDefine.PriorityForce) {\r\n      this._motionManager.setReservePriority(priority);\r\n    } else if (!this._motionManager.reserveMotion(priority)) {\r\n      if (this._debugMode) {\r\n        LAppPal.printMessage(\"[APP]can't start motion.\");\r\n      }\r\n      return InvalidMotionQueueEntryHandleValue;\r\n    }\r\n\r\n    const motionFileName = this._modelSetting.getMotionFileName(group, no);\r\n\r\n    // ex) idle_0\r\n    const name = `${group}_${no}`;\r\n    let motion: CubismMotion = this._motions.getValue(name) as CubismMotion;\r\n    let autoDelete = false;\r\n\r\n    if (motion == null) {\r\n      fetch(`${this._modelHomeDir}${motionFileName}`)\r\n        .then(response => response.arrayBuffer())\r\n        .then(arrayBuffer => {\r\n          motion = this.loadMotion(\r\n            arrayBuffer,\r\n            arrayBuffer.byteLength,\r\n            null,\r\n            onFinishedMotionHandler\r\n          );\r\n          let fadeTime: number = this._modelSetting.getMotionFadeInTimeValue(\r\n            group,\r\n            no\r\n          );\r\n\r\n          if (fadeTime >= 0.0) {\r\n            motion.setFadeInTime(fadeTime);\r\n          }\r\n\r\n          fadeTime = this._modelSetting.getMotionFadeOutTimeValue(group, no);\r\n          if (fadeTime >= 0.0) {\r\n            motion.setFadeOutTime(fadeTime);\r\n          }\r\n\r\n          motion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\r\n          autoDelete = true; // 終了時にメモリから削除\r\n        });\r\n    } else {\r\n      motion.setFinishedMotionHandler(onFinishedMotionHandler);\r\n    }\r\n\r\n    //voice\r\n    const voice = this._modelSetting.getMotionSoundFileName(group, no);\r\n    if (voice.localeCompare('') != 0) {\r\n      let path = voice;\r\n      path = this._modelHomeDir + path;\r\n      this._wavFileHandler.start(path);\r\n    }\r\n\r\n    if (this._debugMode) {\r\n      LAppPal.printMessage(`[APP]start motion: [${group}_${no}`);\r\n    }\r\n    return this._motionManager.startMotionPriority(\r\n      motion,\r\n      autoDelete,\r\n      priority\r\n    );\r\n  }\r\n\r\n  /**\r\n   * ランダムに選ばれたモーションの再生を開始する。\r\n   * @param group モーショングループ名\r\n   * @param priority 優先度\r\n   * @param onFinishedMotionHandler モーション再生終了時に呼び出されるコールバック関数\r\n   * @return 開始したモーションの識別番号を返す。個別のモーションが終了したか否かを判定するisFinished()の引数で使用する。開始できない時は[-1]\r\n   */\r\n  public startRandomMotion(\r\n    group: string,\r\n    priority: number,\r\n    onFinishedMotionHandler?: FinishedMotionCallback\r\n  ): CubismMotionQueueEntryHandle {\r\n    if (this._modelSetting.getMotionCount(group) == 0) {\r\n      return InvalidMotionQueueEntryHandleValue;\r\n    }\r\n\r\n    const no: number = Math.floor(\r\n      Math.random() * this._modelSetting.getMotionCount(group)\r\n    );\r\n\r\n    return this.startMotion(group, no, priority, onFinishedMotionHandler);\r\n  }\r\n\r\n  /**\r\n   * 引数で指定した表情モーションをセットする\r\n   *\r\n   * @param expressionId 表情モーションのID\r\n   */\r\n  public setExpression(expressionId: string): void {\r\n    const motion: ACubismMotion = this._expressions.getValue(expressionId);\r\n\r\n    if (this._debugMode) {\r\n      LAppPal.printMessage(`[APP]expression: [${expressionId}]`);\r\n    }\r\n\r\n    if (motion != null) {\r\n      this._expressionManager.startMotionPriority(\r\n        motion,\r\n        false,\r\n        LAppDefine.PriorityForce\r\n      );\r\n    } else {\r\n      if (this._debugMode) {\r\n        LAppPal.printMessage(`[APP]expression[${expressionId}] is null`);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ランダムに選ばれた表情モーションをセットする\r\n   */\r\n  public setRandomExpression(): void {\r\n    if (this._expressions.getSize() == 0) {\r\n      return;\r\n    }\r\n\r\n    const no: number = Math.floor(Math.random() * this._expressions.getSize());\r\n\r\n    for (let i = 0; i < this._expressions.getSize(); i++) {\r\n      if (i == no) {\r\n        const name: string = this._expressions._keyValues[i].first;\r\n        this.setExpression(name);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * イベントの発火を受け取る\r\n   */\r\n  public motionEventFired(eventValue: csmString): void {\r\n    CubismLogInfo('{0} is fired on LAppModel!!', eventValue.s);\r\n  }\r\n\r\n  /**\r\n   * 当たり判定テスト\r\n   * 指定ＩＤの頂点リストから矩形を計算し、座標をが矩形範囲内か判定する。\r\n   *\r\n   * @param hitArenaName  当たり判定をテストする対象のID\r\n   * @param x             判定を行うX座標\r\n   * @param y             判定を行うY座標\r\n   */\r\n  public hitTest(hitArenaName: string, x: number, y: number): boolean {\r\n    // 透明時は当たり判定無し。\r\n    if (this._opacity < 1) {\r\n      return false;\r\n    }\r\n\r\n    const count: number = this._modelSetting.getHitAreasCount();\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      if (this._modelSetting.getHitAreaName(i) == hitArenaName) {\r\n        const drawId: CubismIdHandle = this._modelSetting.getHitAreaId(i);\r\n        return this.isHit(drawId, x, y);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * モーションデータをグループ名から一括でロードする。\r\n   * モーションデータの名前は内部でModelSettingから取得する。\r\n   *\r\n   * @param group モーションデータのグループ名\r\n   */\r\n  public preLoadMotionGroup(group: string): void {\r\n    for (let i = 0; i < this._modelSetting.getMotionCount(group); i++) {\r\n      const motionFileName = this._modelSetting.getMotionFileName(group, i);\r\n\r\n      // ex) idle_0\r\n      const name = `${group}_${i}`;\r\n      if (this._debugMode) {\r\n        LAppPal.printMessage(\r\n          `[APP]load motion: ${motionFileName} => [${name}]`\r\n        );\r\n      }\r\n\r\n      fetch(`${this._modelHomeDir}${motionFileName}`)\r\n        .then(response => response.arrayBuffer())\r\n        .then(arrayBuffer => {\r\n          const tmpMotion: CubismMotion = this.loadMotion(\r\n            arrayBuffer,\r\n            arrayBuffer.byteLength,\r\n            name\r\n          );\r\n\r\n          let fadeTime = this._modelSetting.getMotionFadeInTimeValue(group, i);\r\n          if (fadeTime >= 0.0) {\r\n            tmpMotion.setFadeInTime(fadeTime);\r\n          }\r\n\r\n          fadeTime = this._modelSetting.getMotionFadeOutTimeValue(group, i);\r\n          if (fadeTime >= 0.0) {\r\n            tmpMotion.setFadeOutTime(fadeTime);\r\n          }\r\n          tmpMotion.setEffectIds(this._eyeBlinkIds, this._lipSyncIds);\r\n\r\n          if (this._motions.getValue(name) != null) {\r\n            ACubismMotion.delete(this._motions.getValue(name));\r\n          }\r\n\r\n          this._motions.setValue(name, tmpMotion);\r\n\r\n          this._motionCount++;\r\n          if (this._motionCount >= this._allMotionCount) {\r\n            this._state = LoadStep.LoadTexture;\r\n\r\n            // 全てのモーションを停止する\r\n            this._motionManager.stopAllMotions();\r\n\r\n            this._updating = false;\r\n            this._initialized = true;\r\n\r\n            this.createRenderer();\r\n            this.setupTextures();\r\n            this.getRenderer().startUp(gl);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * すべてのモーションデータを解放する。\r\n   */\r\n  public releaseMotions(): void {\r\n    this._motions.clear();\r\n  }\r\n\r\n  /**\r\n   * 全ての表情データを解放する。\r\n   */\r\n  public releaseExpressions(): void {\r\n    this._expressions.clear();\r\n  }\r\n\r\n  /**\r\n   * モデルを描画する処理。モデルを描画する空間のView-Projection行列を渡す。\r\n   */\r\n  public doDraw(): void {\r\n    if (this._model == null) return;\r\n\r\n    // キャンバスサイズを渡す\r\n    const viewport: number[] = [0, 0, canvas.width, canvas.height];\r\n\r\n    this.getRenderer().setRenderState(frameBuffer, viewport);\r\n    this.getRenderer().drawModel();\r\n  }\r\n\r\n  /**\r\n   * モデルを描画する処理。モデルを描画する空間のView-Projection行列を渡す。\r\n   */\r\n  public draw(matrix: CubismMatrix44): void {\r\n    if (this._model == null) {\r\n      return;\r\n    }\r\n\r\n    // 各読み込み終了後\r\n    if (this._state == LoadStep.CompleteSetup) {\r\n      matrix.multiplyByMatrix(this._modelMatrix);\r\n\r\n      this.getRenderer().setMvpMatrix(matrix);\r\n\r\n      this.doDraw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n\r\n    this._modelSetting = null;\r\n    this._modelHomeDir = null;\r\n    this._userTimeSeconds = 0.0;\r\n\r\n    this._eyeBlinkIds = new csmVector<CubismIdHandle>();\r\n    this._lipSyncIds = new csmVector<CubismIdHandle>();\r\n\r\n    this._motions = new csmMap<string, ACubismMotion>();\r\n    this._expressions = new csmMap<string, ACubismMotion>();\r\n\r\n    this._hitArea = new csmVector<csmRect>();\r\n    this._userArea = new csmVector<csmRect>();\r\n\r\n    this._idParamAngleX = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamAngleX\r\n    );\r\n    this._idParamAngleY = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamAngleY\r\n    );\r\n    this._idParamAngleZ = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamAngleZ\r\n    );\r\n    this._idParamEyeBallX = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamEyeBallX\r\n    );\r\n    this._idParamEyeBallY = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamEyeBallY\r\n    );\r\n    this._idParamBodyAngleX = CubismFramework.getIdManager().getId(\r\n      CubismDefaultParameterId.ParamBodyAngleX\r\n    );\r\n\r\n    this._state = LoadStep.LoadAssets;\r\n    this._expressionCount = 0;\r\n    this._textureCount = 0;\r\n    this._motionCount = 0;\r\n    this._allMotionCount = 0;\r\n    this._wavFileHandler = new LAppWavFileHandler();\r\n  }\r\n\r\n  _modelSetting: ICubismModelSetting; // モデルセッティング情報\r\n  _modelHomeDir: string; // モデルセッティングが置かれたディレクトリ\r\n  _userTimeSeconds: number; // デルタ時間の積算値[秒]\r\n\r\n  _eyeBlinkIds: csmVector<CubismIdHandle>; // モデルに設定された瞬き機能用パラメータID\r\n  _lipSyncIds: csmVector<CubismIdHandle>; // モデルに設定されたリップシンク機能用パラメータID\r\n\r\n  _motions: csmMap<string, ACubismMotion>; // 読み込まれているモーションのリスト\r\n  _expressions: csmMap<string, ACubismMotion>; // 読み込まれている表情のリスト\r\n\r\n  _hitArea: csmVector<csmRect>;\r\n  _userArea: csmVector<csmRect>;\r\n\r\n  _idParamAngleX: CubismIdHandle; // パラメータID: ParamAngleX\r\n  _idParamAngleY: CubismIdHandle; // パラメータID: ParamAngleY\r\n  _idParamAngleZ: CubismIdHandle; // パラメータID: ParamAngleZ\r\n  _idParamEyeBallX: CubismIdHandle; // パラメータID: ParamEyeBallX\r\n  _idParamEyeBallY: CubismIdHandle; // パラメータID: ParamEyeBAllY\r\n  _idParamBodyAngleX: CubismIdHandle; // パラメータID: ParamBodyAngleX\r\n\r\n  _state: number; // 現在のステータス管理用\r\n  _expressionCount: number; // 表情データカウント\r\n  _textureCount: number; // テクスチャカウント\r\n  _motionCount: number; // モーションデータカウント\r\n  _allMotionCount: number; // モーション総数\r\n  _wavFileHandler: LAppWavFileHandler; //wavファイルハンドラ\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * プラットフォーム依存機能を抽象化する Cubism Platform Abstraction Layer.\r\n *\r\n * ファイル読み込みや時刻取得等のプラットフォームに依存する関数をまとめる。\r\n */\r\nexport class LAppPal {\r\n  /**\r\n   * ファイルをバイトデータとして読みこむ\r\n   *\r\n   * @param filePath 読み込み対象ファイルのパス\r\n   * @return\r\n   * {\r\n   *      buffer,   読み込んだバイトデータ\r\n   *      size        ファイルサイズ\r\n   * }\r\n   */\r\n  public static loadFileAsBytes(\r\n    filePath: string,\r\n    callback: (arrayBuffer: ArrayBuffer, size: number) => void\r\n  ): void {\r\n    fetch(filePath)\r\n      .then(response => response.arrayBuffer())\r\n      .then(arrayBuffer => callback(arrayBuffer, arrayBuffer.byteLength));\r\n  }\r\n\r\n  /**\r\n   * デルタ時間（前回フレームとの差分）を取得する\r\n   * @return デルタ時間[ms]\r\n   */\r\n  public static getDeltaTime(): number {\r\n    return this.s_deltaTime;\r\n  }\r\n\r\n  public static updateTime(): void {\r\n    this.s_currentFrame = Date.now();\r\n    this.s_deltaTime = (this.s_currentFrame - this.s_lastFrame) / 1000;\r\n    this.s_lastFrame = this.s_currentFrame;\r\n  }\r\n\r\n  /**\r\n   * メッセージを出力する\r\n   * @param message 文字列\r\n   */\r\n  public static printMessage(message: string): void {\r\n    console.log(message);\r\n  }\r\n\r\n  static lastUpdate = Date.now();\r\n\r\n  static s_currentFrame = 0.0;\r\n  static s_lastFrame = 0.0;\r\n  static s_deltaTime = 0.0;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { canvas, gl } from './lappdelegate';\r\n\r\n/**\r\n * スプライトを実装するクラス\r\n *\r\n * テクスチャＩＤ、Rectの管理\r\n */\r\nexport class LAppSprite {\r\n  /**\r\n   * コンストラクタ\r\n   * @param x            x座標\r\n   * @param y            y座標\r\n   * @param width        横幅\r\n   * @param height       高さ\r\n   * @param textureId    テクスチャ\r\n   */\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    textureId: WebGLTexture\r\n  ) {\r\n    this._rect = new Rect();\r\n    this._rect.left = x - width * 0.5;\r\n    this._rect.right = x + width * 0.5;\r\n    this._rect.up = y + height * 0.5;\r\n    this._rect.down = y - height * 0.5;\r\n    this._texture = textureId;\r\n    this._vertexBuffer = null;\r\n    this._uvBuffer = null;\r\n    this._indexBuffer = null;\r\n\r\n    this._positionLocation = null;\r\n    this._uvLocation = null;\r\n    this._textureLocation = null;\r\n\r\n    this._positionArray = null;\r\n    this._uvArray = null;\r\n    this._indexArray = null;\r\n\r\n    this._firstDraw = true;\r\n  }\r\n\r\n  /**\r\n   * 解放する。\r\n   */\r\n  public release(): void {\r\n    this._rect = null;\r\n\r\n    gl.deleteTexture(this._texture);\r\n    this._texture = null;\r\n\r\n    gl.deleteBuffer(this._uvBuffer);\r\n    this._uvBuffer = null;\r\n\r\n    gl.deleteBuffer(this._vertexBuffer);\r\n    this._vertexBuffer = null;\r\n\r\n    gl.deleteBuffer(this._indexBuffer);\r\n    this._indexBuffer = null;\r\n  }\r\n\r\n  /**\r\n   * テクスチャを返す\r\n   */\r\n  public getTexture(): WebGLTexture {\r\n    return this._texture;\r\n  }\r\n\r\n  /**\r\n   * 描画する。\r\n   * @param programId シェーダープログラム\r\n   * @param canvas 描画するキャンパス情報\r\n   */\r\n  public render(programId: WebGLProgram): void {\r\n    if (this._texture == null) {\r\n      // ロードが完了していない\r\n      return;\r\n    }\r\n\r\n    // 初回描画時\r\n    if (this._firstDraw) {\r\n      // 何番目のattribute変数か取得\r\n      this._positionLocation = gl.getAttribLocation(programId, 'position');\r\n      gl.enableVertexAttribArray(this._positionLocation);\r\n\r\n      this._uvLocation = gl.getAttribLocation(programId, 'uv');\r\n      gl.enableVertexAttribArray(this._uvLocation);\r\n\r\n      // 何番目のuniform変数か取得\r\n      this._textureLocation = gl.getUniformLocation(programId, 'texture');\r\n\r\n      // uniform属性の登録\r\n      gl.uniform1i(this._textureLocation, 0);\r\n\r\n      // uvバッファ、座標初期化\r\n      {\r\n        this._uvArray = new Float32Array([\r\n          1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0\r\n        ]);\r\n\r\n        // uvバッファを作成\r\n        this._uvBuffer = gl.createBuffer();\r\n      }\r\n\r\n      // 頂点バッファ、座標初期化\r\n      {\r\n        const maxWidth = canvas.width;\r\n        const maxHeight = canvas.height;\r\n\r\n        // 頂点データ\r\n        this._positionArray = new Float32Array([\r\n          (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\r\n          (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\r\n          (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\r\n          (this._rect.up - maxHeight * 0.5) / (maxHeight * 0.5),\r\n          (this._rect.left - maxWidth * 0.5) / (maxWidth * 0.5),\r\n          (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5),\r\n          (this._rect.right - maxWidth * 0.5) / (maxWidth * 0.5),\r\n          (this._rect.down - maxHeight * 0.5) / (maxHeight * 0.5)\r\n        ]);\r\n\r\n        // 頂点バッファを作成\r\n        this._vertexBuffer = gl.createBuffer();\r\n      }\r\n\r\n      // 頂点インデックスバッファ、初期化\r\n      {\r\n        // インデックスデータ\r\n        this._indexArray = new Uint16Array([0, 1, 2, 3, 2, 0]);\r\n\r\n        // インデックスバッファを作成\r\n        this._indexBuffer = gl.createBuffer();\r\n      }\r\n\r\n      this._firstDraw = false;\r\n    }\r\n\r\n    // UV座標登録\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._uvBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, this._uvArray, gl.STATIC_DRAW);\r\n\r\n    // attribute属性を登録\r\n    gl.vertexAttribPointer(this._uvLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    // 頂点座標を登録\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, this._positionArray, gl.STATIC_DRAW);\r\n\r\n    // attribute属性を登録\r\n    gl.vertexAttribPointer(this._positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n    // 頂点インデックスを作成\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this._indexArray, gl.DYNAMIC_DRAW);\r\n\r\n    // モデルの描画\r\n    gl.bindTexture(gl.TEXTURE_2D, this._texture);\r\n    gl.drawElements(\r\n      gl.TRIANGLES,\r\n      this._indexArray.length,\r\n      gl.UNSIGNED_SHORT,\r\n      0\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 当たり判定\r\n   * @param pointX x座標\r\n   * @param pointY y座標\r\n   */\r\n  public isHit(pointX: number, pointY: number): boolean {\r\n    // 画面サイズを取得する。\r\n    const { height } = canvas;\r\n\r\n    // Y座標は変換する必要あり\r\n    const y = height - pointY;\r\n\r\n    return (\r\n      pointX >= this._rect.left &&\r\n      pointX <= this._rect.right &&\r\n      y <= this._rect.up &&\r\n      y >= this._rect.down\r\n    );\r\n  }\r\n\r\n  _texture: WebGLTexture; // テクスチャ\r\n  _vertexBuffer: WebGLBuffer; // 頂点バッファ\r\n  _uvBuffer: WebGLBuffer; // uv頂点バッファ\r\n  _indexBuffer: WebGLBuffer; // 頂点インデックスバッファ\r\n  _rect: Rect; // 矩形\r\n\r\n  _positionLocation: number;\r\n  _uvLocation: number;\r\n  _textureLocation: WebGLUniformLocation;\r\n\r\n  _positionArray: Float32Array;\r\n  _uvArray: Float32Array;\r\n  _indexArray: Uint16Array;\r\n\r\n  _firstDraw: boolean;\r\n}\r\n\r\nexport class Rect {\r\n  public left: number; // 左辺\r\n  public right: number; // 右辺\r\n  public up: number; // 上辺\r\n  public down: number; // 下辺\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmVector, iterator } from './framework/type/csmvector';\r\n\r\nimport { gl } from './lappdelegate';\r\n\r\n/**\r\n * テクスチャ管理クラス\r\n * 画像読み込み、管理を行うクラス。\r\n */\r\nexport class LAppTextureManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this._textures = new csmVector<TextureInfo>();\r\n  }\r\n\r\n  /**\r\n   * 解放する。\r\n   */\r\n  public release(): void {\r\n    for (\r\n      let ite: iterator<TextureInfo> = this._textures.begin();\r\n      ite.notEqual(this._textures.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      gl.deleteTexture(ite.ptr().id);\r\n    }\r\n    this._textures = null;\r\n  }\r\n\r\n  /**\r\n   * 画像読み込み\r\n   *\r\n   * @param fileName 読み込む画像ファイルパス名\r\n   * @param usePremultiply Premult処理を有効にするか\r\n   * @return 画像情報、読み込み失敗時はnullを返す\r\n   */\r\n  public createTextureFromPngFile(\r\n    fileName: string,\r\n    usePremultiply: boolean,\r\n    callback: (textureInfo: TextureInfo) => void\r\n  ): void {\r\n    // search loaded texture already\r\n    for (\r\n      let ite: iterator<TextureInfo> = this._textures.begin();\r\n      ite.notEqual(this._textures.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      if (\r\n        ite.ptr().fileName == fileName &&\r\n        ite.ptr().usePremultply == usePremultiply\r\n      ) {\r\n        // 2回目以降はキャッシュが使用される(待ち時間なし)\r\n        // WebKitでは同じImageのonloadを再度呼ぶには再インスタンスが必要\r\n        // 詳細：https://stackoverflow.com/a/5024181\r\n        ite.ptr().img = new Image();\r\n        ite.ptr().img.onload = (): void => callback(ite.ptr());\r\n        ite.ptr().img.src = fileName;\r\n        return;\r\n      }\r\n    }\r\n\r\n    // データのオンロードをトリガーにする\r\n    const img = new Image();\r\n    img.onload = (): void => {\r\n      // テクスチャオブジェクトの作成\r\n      const tex: WebGLTexture = gl.createTexture();\r\n\r\n      // テクスチャを選択\r\n      gl.bindTexture(gl.TEXTURE_2D, tex);\r\n\r\n      // テクスチャにピクセルを書き込む\r\n      gl.texParameteri(\r\n        gl.TEXTURE_2D,\r\n        gl.TEXTURE_MIN_FILTER,\r\n        gl.LINEAR_MIPMAP_LINEAR\r\n      );\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n\r\n      // Premult処理を行わせる\r\n      if (usePremultiply) {\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n      }\r\n\r\n      // テクスチャにピクセルを書き込む\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\r\n\r\n      // ミップマップを生成\r\n      gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n      // テクスチャをバインド\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n      const textureInfo: TextureInfo = new TextureInfo();\r\n      if (textureInfo != null) {\r\n        textureInfo.fileName = fileName;\r\n        textureInfo.width = img.width;\r\n        textureInfo.height = img.height;\r\n        textureInfo.id = tex;\r\n        textureInfo.img = img;\r\n        textureInfo.usePremultply = usePremultiply;\r\n        this._textures.pushBack(textureInfo);\r\n      }\r\n\r\n      callback(textureInfo);\r\n    };\r\n    img.src = fileName;\r\n  }\r\n\r\n  /**\r\n   * 画像の解放\r\n   *\r\n   * 配列に存在する画像全てを解放する。\r\n   */\r\n  public releaseTextures(): void {\r\n    for (let i = 0; i < this._textures.getSize(); i++) {\r\n      this._textures.set(i, null);\r\n    }\r\n\r\n    this._textures.clear();\r\n  }\r\n\r\n  /**\r\n   * 画像の解放\r\n   *\r\n   * 指定したテクスチャの画像を解放する。\r\n   * @param texture 解放するテクスチャ\r\n   */\r\n  public releaseTextureByTexture(texture: WebGLTexture): void {\r\n    for (let i = 0; i < this._textures.getSize(); i++) {\r\n      if (this._textures.at(i).id != texture) {\r\n        continue;\r\n      }\r\n\r\n      this._textures.set(i, null);\r\n      this._textures.remove(i);\r\n      break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 画像の解放\r\n   *\r\n   * 指定した名前の画像を解放する。\r\n   * @param fileName 解放する画像ファイルパス名\r\n   */\r\n  public releaseTextureByFilePath(fileName: string): void {\r\n    for (let i = 0; i < this._textures.getSize(); i++) {\r\n      if (this._textures.at(i).fileName == fileName) {\r\n        this._textures.set(i, null);\r\n        this._textures.remove(i);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  _textures: csmVector<TextureInfo>;\r\n}\r\n\r\n/**\r\n * 画像情報構造体\r\n */\r\nexport class TextureInfo {\r\n  img: HTMLImageElement; // 画像\r\n  id: WebGLTexture = null; // テクスチャ\r\n  width = 0; // 横幅\r\n  height = 0; // 高さ\r\n  usePremultply: boolean; // Premult処理を有効にするか\r\n  fileName: string; // ファイル名\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMatrix44 } from './framework/math/cubismmatrix44';\r\nimport { CubismViewMatrix } from './framework/math/cubismviewmatrix';\r\n\r\nimport * as LAppDefine from './lappdefine';\r\nimport { canvas, gl, LAppDelegate } from './lappdelegate';\r\nimport { LAppLive2DManager } from './lapplive2dmanager';\r\nimport { LAppPal } from './lapppal';\r\nimport { LAppSprite } from './lappsprite';\r\nimport { TextureInfo } from './lapptexturemanager';\r\nimport { TouchManager } from './touchmanager';\r\n\r\n/**\r\n * 描画クラス。\r\n */\r\nexport class LAppView {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this._programId = null;\r\n    this._back = null;\r\n    this._gear = null;\r\n\r\n    // タッチ関係のイベント管理\r\n    this._touchManager = new TouchManager();\r\n\r\n    // デバイス座標からスクリーン座標に変換するための\r\n    this._deviceToScreen = new CubismMatrix44();\r\n\r\n    // 画面の表示の拡大縮小や移動の変換を行う行列\r\n    this._viewMatrix = new CubismViewMatrix();\r\n  }\r\n\r\n  /**\r\n   * 初期化する。\r\n   */\r\n  public initialize(): void {\r\n    const { width, height } = canvas;\r\n\r\n    const ratio: number = width / height;\r\n    const left: number = -ratio;\r\n    const right: number = ratio;\r\n    const bottom: number = LAppDefine.ViewLogicalLeft;\r\n    const top: number = LAppDefine.ViewLogicalRight;\r\n\r\n    this._viewMatrix.setScreenRect(left, right, bottom, top); // デバイスに対応する画面の範囲。 Xの左端、Xの右端、Yの下端、Yの上端\r\n    this._viewMatrix.scale(LAppDefine.ViewScale, LAppDefine.ViewScale);\r\n\r\n    this._deviceToScreen.loadIdentity();\r\n    if (width > height) {\r\n      const screenW: number = Math.abs(right - left);\r\n      this._deviceToScreen.scaleRelative(screenW / width, -screenW / width);\r\n    } else {\r\n      const screenH: number = Math.abs(top - bottom);\r\n      this._deviceToScreen.scaleRelative(screenH / height, -screenH / height);\r\n    }\r\n    this._deviceToScreen.translateRelative(-width * 0.5, -height * 0.5);\r\n\r\n    // 表示範囲の設定\r\n    this._viewMatrix.setMaxScale(LAppDefine.ViewMaxScale); // 限界拡張率\r\n    this._viewMatrix.setMinScale(LAppDefine.ViewMinScale); // 限界縮小率\r\n\r\n    // 表示できる最大範囲\r\n    this._viewMatrix.setMaxScreenRect(\r\n      LAppDefine.ViewLogicalMaxLeft,\r\n      LAppDefine.ViewLogicalMaxRight,\r\n      LAppDefine.ViewLogicalMaxBottom,\r\n      LAppDefine.ViewLogicalMaxTop\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 解放する\r\n   */\r\n  public release(): void {\r\n    this._viewMatrix = null;\r\n    this._touchManager = null;\r\n    this._deviceToScreen = null;\r\n\r\n    this._gear.release();\r\n    this._gear = null;\r\n\r\n    this._back.release();\r\n    this._back = null;\r\n\r\n    gl.deleteProgram(this._programId);\r\n    this._programId = null;\r\n  }\r\n\r\n  /**\r\n   * 描画する。\r\n   */\r\n  public render(): void {\r\n    gl.useProgram(this._programId);\r\n\r\n    if (this._back) {\r\n      this._back.render(this._programId);\r\n    }\r\n    if (this._gear) {\r\n      this._gear.render(this._programId);\r\n    }\r\n\r\n    gl.flush();\r\n\r\n    const live2DManager: LAppLive2DManager = LAppLive2DManager.getInstance();\r\n\r\n    live2DManager.setViewMatrix(this._viewMatrix);\r\n\r\n    live2DManager.onUpdate();\r\n  }\r\n\r\n  /**\r\n   * 画像の初期化を行う。\r\n   */\r\n  public initializeSprite(): void {\r\n    const width: number = canvas.width;\r\n    const height: number = canvas.height;\r\n\r\n    const textureManager = LAppDelegate.getInstance().getTextureManager();\r\n    const resourcesPath = LAppDefine.ResourcesPath;\r\n\r\n    let imageName = '';\r\n\r\n    // 背景画像初期化\r\n    imageName = LAppDefine.BackImageName;\r\n\r\n    // 非同期なのでコールバック関数を作成\r\n    const initBackGroundTexture = (textureInfo: TextureInfo): void => {\r\n      const x: number = width * 0.5;\r\n      const y: number = height * 0.5;\r\n\r\n      const fwidth = textureInfo.width * 2.0;\r\n      const fheight = height * 0.95;\r\n      this._back = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\r\n    };\r\n\r\n    textureManager.createTextureFromPngFile(\r\n      resourcesPath + imageName,\r\n      false,\r\n      initBackGroundTexture\r\n    );\r\n\r\n    // 歯車画像初期化\r\n    imageName = LAppDefine.GearImageName;\r\n    const initGearTexture = (textureInfo: TextureInfo): void => {\r\n      const x = width - textureInfo.width * 0.5;\r\n      const y = height - textureInfo.height * 0.5;\r\n      const fwidth = textureInfo.width;\r\n      const fheight = textureInfo.height;\r\n      this._gear = new LAppSprite(x, y, fwidth, fheight, textureInfo.id);\r\n    };\r\n\r\n    textureManager.createTextureFromPngFile(\r\n      resourcesPath + imageName,\r\n      false,\r\n      initGearTexture\r\n    );\r\n\r\n    // シェーダーを作成\r\n    if (this._programId == null) {\r\n      this._programId = LAppDelegate.getInstance().createShader();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * タッチされた時に呼ばれる。\r\n   *\r\n   * @param pointX スクリーンX座標\r\n   * @param pointY スクリーンY座標\r\n   */\r\n  public onTouchesBegan(pointX: number, pointY: number): void {\r\n    this._touchManager.touchesBegan(pointX, pointY);\r\n  }\r\n\r\n  /**\r\n   * タッチしているときにポインタが動いたら呼ばれる。\r\n   *\r\n   * @param pointX スクリーンX座標\r\n   * @param pointY スクリーンY座標\r\n   */\r\n  public onTouchesMoved(pointX: number, pointY: number): void {\r\n    const viewX: number = this.transformViewX(this._touchManager.getX());\r\n    const viewY: number = this.transformViewY(this._touchManager.getY());\r\n\r\n    this._touchManager.touchesMoved(pointX, pointY);\r\n\r\n    const live2DManager: LAppLive2DManager = LAppLive2DManager.getInstance();\r\n    live2DManager.onDrag(viewX, viewY);\r\n  }\r\n\r\n  /**\r\n   * タッチが終了したら呼ばれる。\r\n   *\r\n   * @param pointX スクリーンX座標\r\n   * @param pointY スクリーンY座標\r\n   */\r\n  public onTouchesEnded(pointX: number, pointY: number): void {\r\n    // タッチ終了\r\n    const live2DManager: LAppLive2DManager = LAppLive2DManager.getInstance();\r\n    live2DManager.onDrag(0.0, 0.0);\r\n\r\n    {\r\n      // シングルタップ\r\n      const x: number = this._deviceToScreen.transformX(\r\n        this._touchManager.getX()\r\n      ); // 論理座標変換した座標を取得。\r\n      const y: number = this._deviceToScreen.transformY(\r\n        this._touchManager.getY()\r\n      ); // 論理座標変化した座標を取得。\r\n\r\n      if (LAppDefine.DebugTouchLogEnable) {\r\n        LAppPal.printMessage(`[APP]touchesEnded x: ${x} y: ${y}`);\r\n      }\r\n      live2DManager.onTap(x, y);\r\n\r\n      // 歯車にタップしたか\r\n      if (this._gear.isHit(pointX, pointY)) {\r\n        live2DManager.nextScene();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * X座標をView座標に変換する。\r\n   *\r\n   * @param deviceX デバイスX座標\r\n   */\r\n  public transformViewX(deviceX: number): number {\r\n    const screenX: number = this._deviceToScreen.transformX(deviceX); // 論理座標変換した座標を取得。\r\n    return this._viewMatrix.invertTransformX(screenX); // 拡大、縮小、移動後の値。\r\n  }\r\n\r\n  /**\r\n   * Y座標をView座標に変換する。\r\n   *\r\n   * @param deviceY デバイスY座標\r\n   */\r\n  public transformViewY(deviceY: number): number {\r\n    const screenY: number = this._deviceToScreen.transformY(deviceY); // 論理座標変換した座標を取得。\r\n    return this._viewMatrix.invertTransformY(screenY);\r\n  }\r\n\r\n  /**\r\n   * X座標をScreen座標に変換する。\r\n   * @param deviceX デバイスX座標\r\n   */\r\n  public transformScreenX(deviceX: number): number {\r\n    return this._deviceToScreen.transformX(deviceX);\r\n  }\r\n\r\n  /**\r\n   * Y座標をScreen座標に変換する。\r\n   *\r\n   * @param deviceY デバイスY座標\r\n   */\r\n  public transformScreenY(deviceY: number): number {\r\n    return this._deviceToScreen.transformY(deviceY);\r\n  }\r\n\r\n  _touchManager: TouchManager; // タッチマネージャー\r\n  _deviceToScreen: CubismMatrix44; // デバイスからスクリーンへの行列\r\n  _viewMatrix: CubismViewMatrix; // viewMatrix\r\n  _programId: WebGLProgram; // シェーダID\r\n  _back: LAppSprite; // 背景画像\r\n  _gear: LAppSprite; // ギア画像\r\n  _changeModel: boolean; // モデル切り替えフラグ\r\n  _isClick: boolean; // クリック中\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { LAppPal } from './lapppal';\r\n\r\nexport let s_instance: LAppWavFileHandler = null;\r\n\r\nexport class LAppWavFileHandler {\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を返す。\r\n   * インスタンスが生成されていない場合は内部でインスタンスを生成する。\r\n   *\r\n   * @return クラスのインスタンス\r\n   */\r\n  public static getInstance(): LAppWavFileHandler {\r\n    if (s_instance == null) {\r\n      s_instance = new LAppWavFileHandler();\r\n    }\r\n\r\n    return s_instance;\r\n  }\r\n\r\n  /**\r\n   * クラスのインスタンス（シングルトン）を解放する。\r\n   */\r\n  public static releaseInstance(): void {\r\n    if (s_instance != null) {\r\n      s_instance = void 0;\r\n    }\r\n\r\n    s_instance = null;\r\n  }\r\n\r\n  public update(deltaTimeSeconds: number) {\r\n    let goalOffset: number;\r\n    let rms: number;\r\n\r\n    // データロード前/ファイル末尾に達した場合は更新しない\r\n    if (\r\n      this._pcmData == null ||\r\n      this._sampleOffset >= this._wavFileInfo._samplesPerChannel\r\n    ) {\r\n      this._lastRms = 0.0;\r\n      return false;\r\n    }\r\n\r\n    // 経過時間後の状態を保持\r\n    this._userTimeSeconds += deltaTimeSeconds;\r\n    goalOffset = Math.floor(\r\n      this._userTimeSeconds * this._wavFileInfo._samplingRate\r\n    );\r\n    if (goalOffset > this._wavFileInfo._samplesPerChannel) {\r\n      goalOffset = this._wavFileInfo._samplesPerChannel;\r\n    }\r\n\r\n    // RMS計測\r\n    rms = 0.0;\r\n    for (\r\n      let channelCount = 0;\r\n      channelCount < this._wavFileInfo._numberOfChannels;\r\n      channelCount++\r\n    ) {\r\n      for (\r\n        let sampleCount = this._sampleOffset;\r\n        sampleCount < goalOffset;\r\n        sampleCount++\r\n      ) {\r\n        const pcm = this._pcmData[channelCount][sampleCount];\r\n        rms += pcm * pcm;\r\n      }\r\n    }\r\n    rms = Math.sqrt(\r\n      rms /\r\n        (this._wavFileInfo._numberOfChannels *\r\n          (goalOffset - this._sampleOffset))\r\n    );\r\n\r\n    this._lastRms = rms;\r\n    this._sampleOffset = goalOffset;\r\n    return true;\r\n  }\r\n\r\n  public start(filePath: string): void {\r\n    // サンプル位参照位置を初期化\r\n    this._sampleOffset = 0;\r\n    this._userTimeSeconds = 0.0;\r\n\r\n    // RMS値をリセット\r\n    this._lastRms = 0.0;\r\n\r\n    if (!this.loadWavFile(filePath)) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  public getRms(): number {\r\n    return this._lastRms;\r\n  }\r\n\r\n  public loadWavFile(filePath: string): boolean {\r\n    let ret = false;\r\n\r\n    if (this._pcmData != null) {\r\n      this.releasePcmData();\r\n    }\r\n\r\n    // ファイルロード\r\n    const asyncFileLoad = async () => {\r\n      return fetch(filePath).then(responce => {\r\n        return responce.arrayBuffer();\r\n      });\r\n    };\r\n\r\n    const asyncWavFileManager = (async () => {\r\n      this._byteReader._fileByte = await asyncFileLoad();\r\n      this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\r\n      this._byteReader._fileSize = this._byteReader._fileByte.byteLength;\r\n      this._byteReader._readOffset = 0;\r\n\r\n      // ファイルロードに失敗しているか、先頭のシグネチャ\"RIFF\"を入れるサイズもない場合は失敗\r\n      if (\r\n        this._byteReader._fileByte == null ||\r\n        this._byteReader._fileSize < 4\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // ファイル名\r\n      this._wavFileInfo._fileName = filePath;\r\n\r\n      try {\r\n        // シグネチャ \"RIFF\"\r\n        if (!this._byteReader.getCheckSignature('RIFF')) {\r\n          ret = false;\r\n          throw new Error('Cannot find Signeture \"RIFF\".');\r\n        }\r\n        // ファイルサイズ-8（読み飛ばし）\r\n        this._byteReader.get32LittleEndian();\r\n        // シグネチャ \"WAVE\"\r\n        if (!this._byteReader.getCheckSignature('WAVE')) {\r\n          ret = false;\r\n          throw new Error('Cannot find Signeture \"WAVE\".');\r\n        }\r\n        // シグネチャ \"fmt \"\r\n        if (!this._byteReader.getCheckSignature('fmt ')) {\r\n          ret = false;\r\n          throw new Error('Cannot find Signeture \"fmt\".');\r\n        }\r\n        // fmtチャンクサイズ\r\n        const fmtChunkSize = this._byteReader.get32LittleEndian();\r\n        // フォーマットIDは1（リニアPCM）以外受け付けない\r\n        if (this._byteReader.get16LittleEndian() != 1) {\r\n          ret = false;\r\n          throw new Error('File is not linear PCM.');\r\n        }\r\n        // チャンネル数\r\n        this._wavFileInfo._numberOfChannels =\r\n          this._byteReader.get16LittleEndian();\r\n        // サンプリングレート\r\n        this._wavFileInfo._samplingRate = this._byteReader.get32LittleEndian();\r\n        // データ速度[byte/sec]（読み飛ばし）\r\n        this._byteReader.get32LittleEndian();\r\n        // ブロックサイズ（読み飛ばし）\r\n        this._byteReader.get16LittleEndian();\r\n        // 量子化ビット数\r\n        this._wavFileInfo._bitsPerSample = this._byteReader.get16LittleEndian();\r\n        // fmtチャンクの拡張部分の読み飛ばし\r\n        if (fmtChunkSize > 16) {\r\n          this._byteReader._readOffset += fmtChunkSize - 16;\r\n        }\r\n        // \"data\"チャンクが出現するまで読み飛ばし\r\n        while (\r\n          !this._byteReader.getCheckSignature('data') &&\r\n          this._byteReader._readOffset < this._byteReader._fileSize\r\n        ) {\r\n          this._byteReader._readOffset +=\r\n            this._byteReader.get32LittleEndian() + 4;\r\n        }\r\n        // ファイル内に\"data\"チャンクが出現しなかった\r\n        if (this._byteReader._readOffset >= this._byteReader._fileSize) {\r\n          ret = false;\r\n          throw new Error('Cannot find \"data\" Chunk.');\r\n        }\r\n        // サンプル数\r\n        {\r\n          const dataChunkSize = this._byteReader.get32LittleEndian();\r\n          this._wavFileInfo._samplesPerChannel =\r\n            (dataChunkSize * 8) /\r\n            (this._wavFileInfo._bitsPerSample *\r\n              this._wavFileInfo._numberOfChannels);\r\n        }\r\n        // 領域確保\r\n        this._pcmData = new Array(this._wavFileInfo._numberOfChannels);\r\n        for (\r\n          let channelCount = 0;\r\n          channelCount < this._wavFileInfo._numberOfChannels;\r\n          channelCount++\r\n        ) {\r\n          this._pcmData[channelCount] = new Float32Array(\r\n            this._wavFileInfo._samplesPerChannel\r\n          );\r\n        }\r\n        // 波形データ取得\r\n        for (\r\n          let sampleCount = 0;\r\n          sampleCount < this._wavFileInfo._samplesPerChannel;\r\n          sampleCount++\r\n        ) {\r\n          for (\r\n            let channelCount = 0;\r\n            channelCount < this._wavFileInfo._numberOfChannels;\r\n            channelCount++\r\n          ) {\r\n            this._pcmData[channelCount][sampleCount] = this.getPcmSample();\r\n          }\r\n        }\r\n\r\n        ret = true;\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    })();\r\n\r\n    return ret;\r\n  }\r\n\r\n  public getPcmSample(): number {\r\n    let pcm32;\r\n\r\n    // 32ビット幅に拡張してから-1～1の範囲に丸める\r\n    switch (this._wavFileInfo._bitsPerSample) {\r\n      case 8:\r\n        pcm32 = this._byteReader.get8() - 128;\r\n        pcm32 <<= 24;\r\n        break;\r\n      case 16:\r\n        pcm32 = this._byteReader.get16LittleEndian() << 16;\r\n        break;\r\n      case 24:\r\n        pcm32 = this._byteReader.get24LittleEndian() << 8;\r\n        break;\r\n      default:\r\n        // 対応していないビット幅\r\n        pcm32 = 0;\r\n        break;\r\n    }\r\n\r\n    return pcm32 / 2147483647; //Number.MAX_VALUE;\r\n  }\r\n\r\n  public releasePcmData(): void {\r\n    for (\r\n      let channelCount = 0;\r\n      channelCount < this._wavFileInfo._numberOfChannels;\r\n      channelCount++\r\n    ) {\r\n      delete this._pcmData[channelCount];\r\n    }\r\n    delete this._pcmData;\r\n    this._pcmData = null;\r\n  }\r\n\r\n  constructor() {\r\n    this._pcmData = null;\r\n    this._userTimeSeconds = 0.0;\r\n    this._lastRms = 0.0;\r\n    this._sampleOffset = 0.0;\r\n    this._wavFileInfo = new WavFileInfo();\r\n    this._byteReader = new ByteReader();\r\n  }\r\n\r\n  _pcmData: Array<Float32Array>;\r\n  _userTimeSeconds: number;\r\n  _lastRms: number;\r\n  _sampleOffset: number;\r\n  _wavFileInfo: WavFileInfo;\r\n  _byteReader: ByteReader;\r\n  _loadFiletoBytes = (arrayBuffer: ArrayBuffer, length: number): void => {\r\n    this._byteReader._fileByte = arrayBuffer;\r\n    this._byteReader._fileDataView = new DataView(this._byteReader._fileByte);\r\n    this._byteReader._fileSize = length;\r\n  };\r\n}\r\n\r\nexport class WavFileInfo {\r\n  constructor() {\r\n    this._fileName = '';\r\n    this._numberOfChannels = 0;\r\n    this._bitsPerSample = 0;\r\n    this._samplingRate = 0;\r\n    this._samplesPerChannel = 0;\r\n  }\r\n\r\n  _fileName: string; ///< ファイル名\r\n  _numberOfChannels: number; ///< チャンネル数\r\n  _bitsPerSample: number; ///< サンプルあたりビット数\r\n  _samplingRate: number; ///< サンプリングレート\r\n  _samplesPerChannel: number; ///< 1チャンネルあたり総サンプル数\r\n}\r\n\r\nexport class ByteReader {\r\n  constructor() {\r\n    this._fileByte = null;\r\n    this._fileDataView = null;\r\n    this._fileSize = 0;\r\n    this._readOffset = 0;\r\n  }\r\n\r\n  /**\r\n   * @brief 8ビット読み込み\r\n   * @return Csm::csmUint8 読み取った8ビット値\r\n   */\r\n  public get8(): number {\r\n    const ret = this._fileDataView.getUint8(this._readOffset);\r\n    this._readOffset++;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * @brief 16ビット読み込み（リトルエンディアン）\r\n   * @return Csm::csmUint16 読み取った16ビット値\r\n   */\r\n  public get16LittleEndian(): number {\r\n    const ret =\r\n      (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\r\n      this._fileDataView.getUint8(this._readOffset);\r\n    this._readOffset += 2;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * @brief 24ビット読み込み（リトルエンディアン）\r\n   * @return Csm::csmUint32 読み取った24ビット値（下位24ビットに設定）\r\n   */\r\n  public get24LittleEndian(): number {\r\n    const ret =\r\n      (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\r\n      (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\r\n      this._fileDataView.getUint8(this._readOffset);\r\n    this._readOffset += 3;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * @brief 32ビット読み込み（リトルエンディアン）\r\n   * @return Csm::csmUint32 読み取った32ビット値\r\n   */\r\n  public get32LittleEndian(): number {\r\n    const ret =\r\n      (this._fileDataView.getUint8(this._readOffset + 3) << 24) |\r\n      (this._fileDataView.getUint8(this._readOffset + 2) << 16) |\r\n      (this._fileDataView.getUint8(this._readOffset + 1) << 8) |\r\n      this._fileDataView.getUint8(this._readOffset);\r\n    this._readOffset += 4;\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * @brief シグネチャの取得と参照文字列との一致チェック\r\n   * @param[in] reference 検査対象のシグネチャ文字列\r\n   * @retval  true    一致している\r\n   * @retval  false   一致していない\r\n   */\r\n  public getCheckSignature(reference: string): boolean {\r\n    const getSignature: Uint8Array = new Uint8Array(4);\r\n    const referenceString: Uint8Array = new TextEncoder().encode(reference);\r\n    if (reference.length != 4) {\r\n      return false;\r\n    }\r\n    for (let signatureOffset = 0; signatureOffset < 4; signatureOffset++) {\r\n      getSignature[signatureOffset] = this.get8();\r\n    }\r\n    return (\r\n      getSignature[0] == referenceString[0] &&\r\n      getSignature[1] == referenceString[1] &&\r\n      getSignature[2] == referenceString[2] &&\r\n      getSignature[3] == referenceString[3]\r\n    );\r\n  }\r\n\r\n  _fileByte: ArrayBuffer; ///< ロードしたファイルのバイト列\r\n  _fileDataView: DataView;\r\n  _fileSize: number; ///< ファイルサイズ\r\n  _readOffset: number; ///< ファイル参照位置\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nexport class TouchManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this._startX = 0.0;\r\n    this._startY = 0.0;\r\n    this._lastX = 0.0;\r\n    this._lastY = 0.0;\r\n    this._lastX1 = 0.0;\r\n    this._lastY1 = 0.0;\r\n    this._lastX2 = 0.0;\r\n    this._lastY2 = 0.0;\r\n    this._lastTouchDistance = 0.0;\r\n    this._deltaX = 0.0;\r\n    this._deltaY = 0.0;\r\n    this._scale = 1.0;\r\n    this._touchSingle = false;\r\n    this._flipAvailable = false;\r\n  }\r\n\r\n  public getCenterX(): number {\r\n    return this._lastX;\r\n  }\r\n\r\n  public getCenterY(): number {\r\n    return this._lastY;\r\n  }\r\n\r\n  public getDeltaX(): number {\r\n    return this._deltaX;\r\n  }\r\n\r\n  public getDeltaY(): number {\r\n    return this._deltaY;\r\n  }\r\n\r\n  public getStartX(): number {\r\n    return this._startX;\r\n  }\r\n\r\n  public getStartY(): number {\r\n    return this._startY;\r\n  }\r\n\r\n  public getScale(): number {\r\n    return this._scale;\r\n  }\r\n\r\n  public getX(): number {\r\n    return this._lastX;\r\n  }\r\n\r\n  public getY(): number {\r\n    return this._lastY;\r\n  }\r\n\r\n  public getX1(): number {\r\n    return this._lastX1;\r\n  }\r\n\r\n  public getY1(): number {\r\n    return this._lastY1;\r\n  }\r\n\r\n  public getX2(): number {\r\n    return this._lastX2;\r\n  }\r\n\r\n  public getY2(): number {\r\n    return this._lastY2;\r\n  }\r\n\r\n  public isSingleTouch(): boolean {\r\n    return this._touchSingle;\r\n  }\r\n\r\n  public isFlickAvailable(): boolean {\r\n    return this._flipAvailable;\r\n  }\r\n\r\n  public disableFlick(): void {\r\n    this._flipAvailable = false;\r\n  }\r\n\r\n  /**\r\n   * タッチ開始時イベント\r\n   * @param deviceX タッチした画面のxの値\r\n   * @param deviceY タッチした画面のyの値\r\n   */\r\n  public touchesBegan(deviceX: number, deviceY: number): void {\r\n    this._lastX = deviceX;\r\n    this._lastY = deviceY;\r\n    this._startX = deviceX;\r\n    this._startY = deviceY;\r\n    this._lastTouchDistance = -1.0;\r\n    this._flipAvailable = true;\r\n    this._touchSingle = true;\r\n  }\r\n\r\n  /**\r\n   * ドラッグ時のイベント\r\n   * @param deviceX タッチした画面のxの値\r\n   * @param deviceY タッチした画面のyの値\r\n   */\r\n  public touchesMoved(deviceX: number, deviceY: number): void {\r\n    this._lastX = deviceX;\r\n    this._lastY = deviceY;\r\n    this._lastTouchDistance = -1.0;\r\n    this._touchSingle = true;\r\n  }\r\n\r\n  /**\r\n   * フリックの距離測定\r\n   * @return フリック距離\r\n   */\r\n  public getFlickDistance(): number {\r\n    return this.calculateDistance(\r\n      this._startX,\r\n      this._startY,\r\n      this._lastX,\r\n      this._lastY\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 点１から点２への距離を求める\r\n   *\r\n   * @param x1 １つ目のタッチした画面のxの値\r\n   * @param y1 １つ目のタッチした画面のyの値\r\n   * @param x2 ２つ目のタッチした画面のxの値\r\n   * @param y2 ２つ目のタッチした画面のyの値\r\n   */\r\n  public calculateDistance(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number\r\n  ): number {\r\n    return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\r\n  }\r\n\r\n  /**\r\n   * ２つ目の値から、移動量を求める。\r\n   * 違う方向の場合は移動量０。同じ方向の場合は、絶対値が小さい方の値を参照する。\r\n   *\r\n   * @param v1 １つ目の移動量\r\n   * @param v2 ２つ目の移動量\r\n   *\r\n   * @return 小さい方の移動量\r\n   */\r\n  public calculateMovingAmount(v1: number, v2: number): number {\r\n    if (v1 > 0.0 != v2 > 0.0) {\r\n      return 0.0;\r\n    }\r\n\r\n    const sign: number = v1 > 0.0 ? 1.0 : -1.0;\r\n    const absoluteValue1 = Math.abs(v1);\r\n    const absoluteValue2 = Math.abs(v2);\r\n    return (\r\n      sign * (absoluteValue1 < absoluteValue2 ? absoluteValue1 : absoluteValue2)\r\n    );\r\n  }\r\n\r\n  _startY: number; // タッチを開始した時のxの値\r\n  _startX: number; // タッチを開始した時のyの値\r\n  _lastX: number; // シングルタッチ時のxの値\r\n  _lastY: number; // シングルタッチ時のyの値\r\n  _lastX1: number; // ダブルタッチ時の一つ目のxの値\r\n  _lastY1: number; // ダブルタッチ時の一つ目のyの値\r\n  _lastX2: number; // ダブルタッチ時の二つ目のxの値\r\n  _lastY2: number; // ダブルタッチ時の二つ目のyの値\r\n  _lastTouchDistance: number; // 2本以上でタッチしたときの指の距離\r\n  _deltaX: number; // 前回の値から今回の値へのxの移動距離。\r\n  _deltaY: number; // 前回の値から今回の値へのyの移動距離。\r\n  _scale: number; // このフレームで掛け合わせる拡大率。拡大操作中以外は1。\r\n  _touchSingle: boolean; // シングルタッチ時はtrue\r\n  _flipAvailable: boolean; // フリップが有効かどうか\r\n}\r\n","module.exports = moment;","/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 3.2.2, Wed Apr 27 2022\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(any) {\n    if (!any || typeof any !== 'object')\n        return any;\n    let rv = circularRefs && circularRefs.get(any);\n    if (rv)\n        return rv;\n    if (isArray(any)) {\n        rv = [];\n        circularRefs && circularRefs.set(any, rv);\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(innerDeepClone(any[i]));\n        }\n    }\n    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    }\n    else {\n        const proto = getProto(any);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs && circularRefs.set(any, rv);\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = innerDeepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => { resolvedGlobalPromise.then(physicalTick); }\n    :\n        _global.setImmediate ?\n            setImmediate.bind(null, physicalTick) :\n            _global.MutationObserver ?\n                () => {\n                    var hiddenDiv = document.createElement(\"div\");\n                    (new MutationObserver(() => {\n                        physicalTick();\n                        hiddenDiv = null;\n                    })).observe(hiddenDiv, { attributes: true });\n                    hiddenDiv.setAttribute('i', '1');\n                } :\n                () => { setTimeout(physicalTick, 0); };\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            }\n            catch (e) { }\n        });\n    }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this.onuncatched = nop;\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction enqueueNativeMicroTask(job) {\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    }\n    catch (e) { }\n    if (rv !== false)\n        try {\n            var event, eventData = { promise: promise, reason: err };\n            if (_global.document && document.createEvent) {\n                event = document.createEvent('Event');\n                event.initEvent(UNHANDLEDREJECTION, true, true);\n                extend(event, eventData);\n            }\n            else if (_global.CustomEvent) {\n                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });\n                extend(event, eventData);\n            }\n            if (event && _global.dispatchEvent) {\n                dispatchEvent(event);\n                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                    try {\n                        _global.onunhandledrejection(event);\n                    }\n                    catch (_) { }\n            }\n            if (debug && event && !event.defaultPrevented) {\n                console.warn(`Unhandled rejection: ${err.stack || err}`);\n            }\n        }\n        catch (e) { }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            return trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '3.2.2';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db === this.db ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound &&\n            keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n            ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n        if (compoundIndex && this.db._maxKey !== maxString)\n            return this\n                .where(compoundIndex.name)\n                .equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            try {\n                return idb.cmp(a, b) === 0;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        this.schema.mappedClass = constructor;\n        const readHook = obj => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (var m in obj)\n                if (hasOwn(obj, m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            try {\n                if (typeof modifications !== \"function\") {\n                    keys(modifications).forEach(keyPath => {\n                        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n                    });\n                }\n                else {\n                    modifications(keyOrObject, { value: keyOrObject, primKey: key });\n                }\n            }\n            catch (_a) {\n            }\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        const indexedDB = db._deps.indexedDB;\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n        this._descending = (a, b) => indexedDB.cmp(b, a);\n        this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks({ _novip: db }, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace({ _novip: db }, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi({ _novip: db }, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes({ _novip: db }, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema({ _novip: db }, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({ _novip: db }, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db._novip.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db._novip.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n    }).then(() => {\n        return db;\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [[], req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        return table.mutate(req).then((res) => {\n                            if (isArray(keys)) {\n                                if (type !== \"delete\")\n                                    keys = res.results;\n                                pkRangeSet.addKeys(keys);\n                                const oldObjs = getFromTransactionCache(keys, oldCache);\n                                if (!oldObjs && type !== \"add\") {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                const range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                            }\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        if (subscr) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (subscr[part] ||\n                                    (subscr[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close();\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(cacheExistingValuesMiddleware);\n        this.vip = Object.create(this, { _vip: { value: true } });\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return dexieOpen(this);\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this._novip.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close() {\n        this._close();\n        const state = this._state;\n        this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close();\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        const rangeSet = target[part] || (target[part] = new RangeSet());\n        mergeRanges(rangeSet, newSet[part]);\n    });\n    return target;\n}\n\nfunction liveQuery(querier) {\n    return new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(subscr) {\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            const exec = () => newScope(querier, { subscr, trans: null });\n            const rv = PSD.trans\n                ?\n                    usePSD(PSD.transless, exec)\n                : exec();\n            if (scopeFuncIsAsync) {\n                rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n            }\n            return rv;\n        }\n        let closed = false;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                closed = true;\n                globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let querying = false, startedListening = false;\n        function shouldNotify() {\n            return keys(currentObs).some((key) => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (querying || closed)\n                return;\n            accumMuts = {};\n            const subscr = {};\n            const ret = execute(subscr);\n            if (!startedListening) {\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                startedListening = true;\n            }\n            querying = true;\n            Promise.resolve(ret).then((result) => {\n                querying = false;\n                if (closed)\n                    return;\n                if (shouldNotify()) {\n                    doQuery();\n                }\n                else {\n                    accumMuts = {};\n                    currentObs = subscr;\n                    observer.next && observer.next(result);\n                }\n            }, (err) => {\n                querying = false;\n                observer.error && observer.error(err);\n                subscription.unsubscribe();\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\nexport { Dexie$1 as Dexie, RangeSet, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };\n//# sourceMappingURL=dexie.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Live2dTips } from './live2d-tips';\r\nwindow.initLive2dWeb = function () {\r\n    console.log('Live2DWebCanvas:', '1.8.5');\r\n    let tips = new Live2dTips(userToken, live2d_settings, waifu_tips);\r\n    tips.initTips();\r\n    tips.initModel(live2d_settings.modelId, live2d_settings.modelTexturesId);\r\n}\r\n"],"names":["L2DBaseModel","live2DModel","modelMatrix","eyeBlink","physics","pose","debugMode","initialized","updating","alpha","accAlpha","lipSync","lipSyncValue","accelX","accelY","accelZ","dragX","dragY","startTimeMSec","mainMotionManager","L2DMotionManager","expressionManager","motions","expressions","isTexLoaded","texCounter","prototype","getModelMatrix","setAlpha","a","getAlpha","isInitialized","setInitialized","v","isUpdating","setUpdating","getLive2DModel","setLipSync","setLipSyncValue","setAccel","x","y","z","setDrag","getMainMotionManager","getExpressionManager","loadModelData","path","callback","pm","Live2DFramework","getPlatformManager","log","thisRef","loadLive2DModel","l2dModel","saveParam","_err","Live2D","getError","console","error","L2DModelMatrix","getCanvasWidth","getCanvasHeight","setWidth","setCenterPosition","loadTexture","no","loadMotion","name","motion","loadBytes","then","buf","Live2DMotion","loadExpression","L2DExpressionMotion","loadJson","loadPose","L2DPose","load","e","warn","loadPhysics","L2DPhysics","hitTestSimple","drawID","testX","testY","drawIndex","getDrawDataIndex","points","getTransformedPoints","left","right","top","bottom","j","length","tx","invertTransformX","ty","invertTransformY","hitTestSimpleCustom","err","AMotion","constructor","call","paramList","Array","EXPRESSION_DEFAULT","TYPE_SET","TYPE_ADD","TYPE_MULT","ret","json","jsonParseFromBytes","setFadeIn","parseInt","fade_in","setFadeOut","fade_out","params","paramNum","i","param","paramID","id","toString","value","parseFloat","val","calcTypeInt","calc","defaultValue","def","item","L2DExpressionParam","type","push","updateParamExe","model","timeMSec","weight","motionQueueEnt","addToParamFloat","multParamFloat","setParamFloat","L2DEyeBlink","nextBlinkTime","stateStartTime","blinkIntervalMsec","eyeState","EYE_STATE","STATE_FIRST","closingMotionMsec","closedMotionMsec","openingMotionMsec","closeIfZero","eyeID_L","eyeID_R","calcNextBlink","time","UtSystem","getUserTimeMSec","r","Math","random","setInterval","setEyeMotion","updateParam","eyeParamValue","t","STATE_CLOSING","STATE_CLOSED","STATE_OPENING","STATE_INTERVAL","L2DMatrix44","tr","Float32Array","identity","mul","b","dst","c","n","k","getArray","getCopyMatrix","setMatrix","getScaleX","getScaleY","transformX","src","transformY","multTranslate","shiftX","shiftY","tr1","translate","translateX","translateY","multScale","scaleX","scaleY","scale","w","h","width","height","setPosition","setY","setX","centerX","centerY","setHeight","MotionQueueManager","currentPriority","reservePriority","super","getCurrentPriority","getReservePriority","reserveMotion","priority","setReservePriority","updated","isFinished","startMotionPrio","startMotion","physicsList","physics_hair","PhysicsHair","setup","resist","regist","mass","srcList","srcNum","Src","SRC_TO_X","typeStr","ptype","SRC_TO_Y","SRC_TO_G_ANGLE","UtDebug","addSrcParam","targetList","targets","targetNum","target","Target","TARGET_FROM_ANGLE","TARGET_FROM_ANGLE_V","addTargetParam","update","lastTime","lastModel","partsGroups","poseListInfo","parts_visible","poseNum","i_pose","poseInfo","idListInfo","group","idNum","partsGroup","i_group","partsInfo","parts","L2DPartsParam","link","linkListInfo","linkNum","i_link","linkParts","initParam","curTime","deltaTimeSec","normalizePartsOpacityGroup","copyOpacityOtherParts","initIndex","partsIndex","paramIndex","getParamFloat","setPartsOpacity","visibleParts","visibleOpacity","CLEAR_TIME_SEC","phi","maxBackOpacity","getPartsOpacity","opacity","a1","backOp","partsParam","getParamIndex","getPartsDataIndex","PartsDataID","getID","L2DTargetPoint","EPSILON","faceTargetX","faceTargetY","faceX","faceY","faceVX","faceVY","lastTimeSec","FRAME_RATE","setPoint","getX","getY","TIME_TO_MAX_SPEED","FACE_PARAM_MAX_V","MAX_V","curTimeSec","deltaTimeWeight","FRAME_TO_MAX_SPEED","MAX_A","dx","dy","abs","d","sqrt","vx","vy","ax","ay","max_v","cur_v","L2DViewMatrix","screenLeft","screenRight","screenTop","screenBottom","maxLeft","maxRight","maxTop","maxBottom","max","Number","MAX_VALUE","min","getMaxScale","getMinScale","setMaxScale","setMinScale","isMaxScale","isMinScale","adjustTranslate","adjustScale","cx","cy","targetScale","tr2","tr3","setScreenRect","setMaxScreenRect","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","platformManager","setPlatformManager","module","exports","LAppLive2DManager","LAppDefine","setContext","MatrixStack","live2DMgr","isDrawStart","gl","canvas","dragMgr","viewMatrix","projMatrix","deviceToScreen","drag","oldLen","lastMouseX","lastMouseY","isModelShown","modelurl","head_pos","initL2dCanvas","canvasId","document","getElementById","addEventListener","window","mouseEvent","touchEvent","init","ratio","VIEW_LOGICAL_LEFT","VIEW_LOGICAL_RIGHT","captureFrame","VIEW_LOGICAL_MAX_LEFT","VIEW_LOGICAL_MAX_RIGHT","VIEW_LOGICAL_MAX_BOTTOM","VIEW_LOGICAL_MAX_TOP","VIEW_MAX_SCALE","VIEW_MIN_SCALE","getWebGLContext","WebGLRenderingContext","setGL","clearColor","changeModel","startDraw","tick","draw","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","createElement","body","appendChild","setAttribute","href","toDataURL","download","captureName","click","reset","loadIdentity","clear","COLOR_BUFFER_BIT","multMatrix","numModels","getModel","pop","reloadFlg","count","modelScaling","maxScaleEvent","minScaleEvent","transformRange","center","transform","range","pow","dot","A","B","normalize","transformRect","rect","Len_X","Len_Y","angle","acos","PI","angleTarget","angleLeftTop","angleLeftBottom","angleRightTop","angleRightBottom","res","y3","x3","modelTurnHead","event","getBoundingClientRect","sx","transformScreenX","clientX","sy","transformScreenY","clientY","transformViewX","transformViewY","DEBUG_MOUSE_LOG","modelTapEvent","tapEvent","followPointer","lookFront","sleepy","DEBUG_LOG","sessionStorage","setItem","Sleepy","getItem","button","SleepyTimer","clearTimeout","setTimeout","touch","touches","deviceX","screenX","deviceY","screenY","NAMES","ctx","getContext","premultipliedAlpha","screenshotV1","loadv1","headPos","LAppDelegate","loadv2","options","token","sign","fetch","sdkUrl","method","headers","cache","response","text","scriptText","getInstance","initialize","modelApi","run","screenshotV2","_captureFrame","_captureName","onbeforeunload","releaseInstance","onresize","CanvasSize","onResize","Live2dTips","initLive2dWeb","tips","userToken","live2d_settings","waifu_tips","initTips","initModel","modelId","modelTexturesId"],"sourceRoot":""}