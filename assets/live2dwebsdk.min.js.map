{"version":3,"file":"live2dwebsdk.min.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACA;AAC4C;AACF;AAC1C;AACO,oCAAoC,mDAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mEAAyB,cAAc,kBAAkB;AACrF;AACA;AACA;AACA,gCAAgC,mEAAyB;AACzD,uCAAuC,mEAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACsC;AACc;AACV;AACP;AACa;AAChD,+BAA+B,oCAAoC;AAC5D,gCAAgC,mDAAU;AACjD,uCAAuC,2CAA2C,sBAAsB,kCAAkC;AAC1I;AACA;AACA,4CAA4C,mDAAe;AAC3D,mCAAmC,6DAAe;AAClD;AACA;AACA,mCAAmC,yDAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACO;AACP,sCAAsC,mCAAmC;AACzE;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA,iBAAiB,aAAa,iBAAiB,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,sCAAsC;AAC5E;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,iBAAiB;AACvD;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,mDAAmD;AACzF;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,gDAAgD;AACtF;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,qDAAqD;AAC3F;AACA,eAAe,QAAQ;AACvB,eAAe,mBAAmB,eAAe,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,0DAA0D;AAChG;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,sCAAsC,yCAAyC;AAC/E;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AAC+D;AACP;AACnB;AAC4B;AAC1D,8BAA8B,mDAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAa;AACtD;AACA;AACA;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+CAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAgB;AACjD,4BAA4B,iDAAY;AACxC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAa;AAC7B;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAgB,8BAA8B,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAAS;AAC/B;AACA;AACA;AACA,mBAAmB,qDAAY;AAC/B;AACA;AACA;AACA,YAAY,mDAAe;AAC3B;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnJA;AACA;AACwD;AAChB;AACxC;AACO;AACP;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA,YAAY,qDAAa;AACzB;AACA;AACA,sDAAsD,qFAAqC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,iFAAiC;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uEAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClDA;AACA;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;AACA;AACgE;AACR;AAC4H;AAC/I;AAC4B;AACH;AACU;AACE;AAChB;AAC1D;AACA;AACO;AACP,iCAAiC;AACjC;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,uBAAuB,oDAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mDAAe,IAAI,UAAc;AAC7C;AACA;AACA,gCAAgC,KAAyC,GAAG,OAAuB,GAAG,CAAO;AAC7G;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,aAAa,mDAAe;AAC5B;AACA;AACA,iBAAiB,mDAAe;AAChC;AACA;AACA;AACA;AACA,+BAA+B,yEAAqB,2BAA2B,iEAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAqB;AAChE,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc,+CAA+C,uDAAc,iBAAiB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,kDAAkD,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,qEAA4B;AAC5E;AACA,8DAA8D,qEAA4B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+CAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,0CAA0C,uEAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAkB;AAChD;AACA;AACA,yBAAyB,oDAAc,kCAAkC,aAAa;AACtF;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA,aAAa;AACb;AACA,mGAAmG,oBAAoB;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,8CAAS;AACtC;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C,sCAAsC,qEAAgC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gBAAgB;AACnF;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oBAAoB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,oCAAoC,mBAAmB,KAAK,GAAG;AAClH;AACA,iDAAiD,gEAA2B,IAAI,oBAAoB,UAAU,GAAG,GAAG,0DAAiB;AACrI;AACA;AACA,yCAAyC,oDAAc;AACvD,kDAAkD,+CAAU;AAC5D;AACA;AACA;AACA;AACA;AACA,sCAAsC,oDAAe,0EAA0E,8BAA8B;AAC7J;AACA;AACA;AACA;AACA;AACA,iBAAiB,qEAA4B;AAC7C;AACA;AACA;AACA,2BAA2B,mEAAkB,gJAAgJ;AAC7L,iBAAiB,2EAAkC;AACnD;AACA;AACA;AACA,2BAA2B,iFAAyB;AACpD,iBAAiB,sEAA6B;AAC9C,2BAA2B,uEAAoB;AAC/C;AACA,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAiB;AAC3C;AACA,6BAA6B,oDAAc,yBAAyB,mBAAmB;AACvF,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA,4EAA4E,uDAAc;AAC1F;AACA,uCAAuC,qEAA4B;AACnE,uCAAuC,2EAAkC;AACzE,yCAAyC,oDAAc,yBAAyB,0DAAiB,YAAY;AAC7G,mCAAmC,8DAAyB,KAAK,0DAAiB,YAAY;AAC9F;AACA;AACA,yCAAyC,oDAAc,0BAA0B,0DAAiB,YAAY;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,yBAAyB,0DAAiB,YAAY,+DAA+D,uDAAc,0BAA0B;AAChN,yCAAyC,0DAAiB,YAAY,qBAAqB,uDAAc,0BAA0B;AACnI;AACA;AACA;AACA,iCAAiC,oDAAc,yBAAyB,0DAAiB,YAAY;AACrG,2BAA2B,2DAAsB,KAAK,0DAAiB,YAAY;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc,mCAAmC,MAAM,0BAA0B,sBAAsB;AAChI;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,2CAA2C,MAAM;AAC5F;AACA;AACA;AACA,6BAA6B,sDAAgB,2CAA2C,MAAM;AAC9F,6DAA6D,MAAM;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,yCAAyC,MAAM;AAC1F;AACA;AACA,6BAA6B,0DAAoB;AACjD;AACA;AACA;AACA,iCAAiC,oDAAc,4CAA4C,EAAE;AAC7F,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,4BAA4B,MAAM,iBAAiB,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAkB;AAC/B,+CAA+C,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAoB,kBAAkB,IAAI,QAAQ,UAAU;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uBAAuB,kBAAkB,cAAc;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACphBA;AACA;AACwD;AAClB;AACO;AACR;AACD;AACoB;AACxD;AACA;AACA,wCAAwC,qBAAqB;AACtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACO;AACP;AACA;AACA;AACA,6BAA6B,sDAAgB;AAC7C;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iEAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,MAAM,2DAAgB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA,gBAAgB,sDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA,6BAA6B,oDAAc,kEAAkE,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA,6BAA6B,0DAAoB,wBAAwB,oBAAoB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,sCAAsC,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,gCAAgC,MAAM;AACjF;AACA;AACA;AACA,6BAA6B,oDAAc,iCAAiC,MAAM;AAClF;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,+CAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6CAAO;AACnC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,iEAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qBAAqB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAsB;AAC/C;AACA;AACA;AACA,yBAAyB,iEAAsB;AAC/C,yBAAyB,iEAAsB;AAC/C;AACA;AACA,iDAAiD,iEAAsB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oDAAc,kCAAkC,sDAAc,IAAI;AACnH;AACA;AACA;AACA;AACA,yBAAyB,2DAAgB;AACzC;AACA;AACA,yBAAyB,4DAAiB;AAC1C,yCAAyC,0DAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,sDAAgB,2BAA2B,aAAa;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAgB,qCAAqC,WAAW;AAC7F;AACA;AACA,iCAAiC,sDAAgB,0BAA0B,WAAW,8BAA8B,+BAA+B;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oDAAc,oCAAoC,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,gCAAgC,WAAW,iBAAiB,EAAE;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG,UAAU;AAC/G;AACA;AACA;AACA;AACA;AACA,iCAAiC,sDAAgB,0BAA0B,WAAW,8BAA8B,+BAA+B;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,uBAAuB,WAAW;AACjF;AACA;AACA;AACA;AACA,yBAAyB,oDAAc,oCAAoC,MAAM,0BAA0B,sBAAsB;AACjI;AACA,gFAAgF,+CAAU;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,4CAA4C,MAAM,iBAAiB,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAoB,+CAA+C,MAAM;AACtG;AACA;AACA,6BAA6B,0DAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,mDAAmD,MAAM,iBAAiB,EAAE;AAC3H;AACA;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA,6BAA6B,0DAAoB,8BAA8B,2BAA2B,gBAAgB,gBAAgB;AAC1I;AACA;AACA,aAAa;AACb;AACA;AACA,iCAAiC,oDAAc;AAC/C;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB;AACrD;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAc,yDAAyD,+BAA+B,eAAe,EAAE;AAChK;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB,gDAAgD,EAAE;AACvG;AACA,qCAAqC,oDAAc,8BAA8B,sBAAsB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAoB,iDAAiD,iCAAiC,SAAS,2BAA2B;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,oDAAc,+CAA+C,mBAAmB,IAAI,oBAAoB,iBAAiB,EAAE;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAc,0CAA0C,MAAM,iBAAiB,sDAAc,IAAI;AAClI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uEAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAsB;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAsB;AACxC;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC72BA;AACA;AACkE;AAChB;AACF;AACX;AACe;AACb;AACM;AAC7C;AACA,WAAW,oDAAc;AACzB,WAAW,oDAAc;AACzB,UAAU,0DAAoB;AAC9B,iBAAiB,0DAAoB;AACrC,UAAU,sDAAgB;AAC1B,aAAa,sDAAgB;AAC7B,WAAW,oDAAc;AACzB,cAAc,uDAAiB;AAC/B,UAAU,mDAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;AACA;AACA,+BAA+B,wCAAwC;AAChE;AACP;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA,8BAA8B,iDAAa;AAC3C;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA,eAAe,cAAc,cAAc,uCAAuC;AAClF;AACA;AACA,QAAQ,kDAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA,uCAAuC,2EAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA,iBAAiB,eAAe,gBAAgB,uCAAuC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2DAAc;AAC7C,eAAe,gEAAoB,4BAA4B,yDAAmB,uBAAuB,6DAAe;AACxH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACO;AACP;AACA,2EAA2E,4CAA4C;AACvH;AACA,0EAA0E,4CAA4C;AACtH;AACA,0EAA0E,4CAA4C;AACtH;AACA,iFAAiF,kDAAkD;AACnI;AACA,iFAAiF,kDAAkD;AACnI;AACA,oEAAoE,sCAAsC;AAC1G;AACA,qEAAqE,uCAAuC;AAC5G;AACA,CAAC,kCAAkC;AACnC;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAC6C;AACR;AACS;AACP;AACiB;AACxD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAmB;AACjD;AACA,6BAA6B,qCAAqC;AAClE;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yDAAmB;AACxC;AACA;AACA,yBAAyB,uEAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,iEAAsB;AAC3C;AACA;AACA,qBAAqB,2DAAgB;AACrC;AACA;AACA,qBAAqB,4DAAiB;AACtC;AACA;AACA;AACA;AACA,+BAA+B,0DAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC;AACnE;AACA,eAAe,YAAY;AAC3B,iBAAiB,QAAQ;AACzB;AACA;AACA,eAAe,uEAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACoD;AACD;AACd;AACS;AACgC;AAC9E;AACA;AACO;AACP;AACA;AACA;AACA,8BAA8B,6DAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C;AACA,yBAAyB,oDAAc;AACvC;AACA,+BAA+B,8DAAqB;AACpD;AACA;AACA;AACA,8BAA8B,0DAAkB;AAChD,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAqB;AACpD;AACA;AACA;AACA;AACA,2BAA2B,IAAI,KAAK,WAAW;AAC/C,yBAAyB,oDAAc,sCAAsC,QAAQ;AACrF;AACA;AACA,6BAA6B,oDAAc,uDAAuD,oBAAoB;AACtH;AACA,mCAAmC,8CAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,IAAI,KAAK,WAAW;AAC3D,qCAAqC,oDAAc,sCAAsC,QAAQ;AACjG;AACA;AACA,yCAAyC,0DAAoB;AAC7D;AACA;AACA;AACA,yCAAyC,oDAAc,uDAAuD,oBAAoB;AAClI;AACA,+CAA+C,8CAAS;AACxD;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc,4CAA4C,qDAAa,oDAAoD;AACxK;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAc,0DAA0D,UAAU;AAC3H;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA,6CAA6C,oDAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAW;AAC1B;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc,uDAAuD,UAAU;AAC5G;AACA,kCAAkC,0DAAkB;AACpD;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oDAAc;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACqC;AACS;AAC0C;AACxF;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA,wEAAwE,sCAAsC;AAC9G;AACA;AACA;AACA,mCAAmC,4DAAmB;AACtD;AACA;AACA;AACA;AACA,gBAAgB,sDAAkB,IAAI,wDAAoB;AAC1D,mEAAmE,gDAAgD;AACnH;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAkB;AACxD;AACA,mEAAmE,2DAA2D,wCAAwC;AACtK;AACA;AACA;AACA;AACA;AACA,6CAA6C,oDAAc,oCAAoC,qDAAa,0CAA0C;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAoB,sBAAsB,UAAU;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtGA;AACA;AAC8C;AAC9C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAmB;AACtC;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,OAAO,EAAE,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACqC;AACE;AACvC;AACA;AACO;AACP;AACO;AACP;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM,SAAS,IAAI;AAC1D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA,qCAAqC,wBAAwB;AAC7D;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,IAAI,EAAE,kBAAkB;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,oDAAc,MAAM,eAAe,2BAA2B,kDAAkD;AAC/H;AACA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA,KAAK;AACL,eAAe,oDAAc,MAAM,eAAe,gDAAgD,oBAAoB;AACtH;AACA;AACO;AACP;AACA,iCAAiC,0DAAoB;AACrD;AACA;AACA,eAAe,yDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB,IAAI,8CAAQ,WAAW,IAAI,QAAQ;AACxF;AACA,qBAAqB,uDAAiB;AACtC,qBAAqB,oDAAc;AACnC;AACA;AACA,qBAAqB,sDAAgB;AACrC;AACA;AACA,qBAAqB,0DAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,wDAAwD,oBAAoB,WAAW;AACvF;AACA;AACA,oBAAoB,iBAAiB,GAAG,iBAAiB;AACzD,sBAAsB,UAAU;AAChC;AACA,wBAAwB,KAAK;AAC7B;AACA;AACA,kCAAkC;AAClC;AACA,oBAAoB,QAAQ;AAC5B;AACA,wBAAwB,EAAE,eAAe;AACzC;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,EAAE;AAChB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAM;AACrB,eAAe,qBAAM;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvPA;AACA;AAC4C;AACP;AACS;AAC6B;AAC3E;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kDAAc;AACtB,QAAQ,kDAAc;AACtB,QAAQ,4CAAQ,iBAAiB,uDAAc;AAC/C,yBAAyB,oDAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAe,IAAI,0DAAsB;AACzD;AACA,sCAAsC,0DAAkB;AACxD;AACA;AACA,4BAA4B,mEAAyB,cAAc,MAAM;AACzE;AACA;AACA,4BAA4B,4DAAkB;AAC9C;AACA;AACA;AACA,+BAA+B,8BAA8B;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA,gFAAgF,0BAA0B;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8DAAqB;AACxD;AACA;AACA;AACA,iCAAiC,0DAAoB,4BAA4B,IAAI;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAoB,4BAA4B,MAAM;AACvF;AACA;AACA,iCAAiC,oDAAc,2CAA2C,qDAAa,wCAAwC;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,6BAA6B,oDAAc,0CAA0C,qDAAa,gCAAgC;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,oDAAc;AACvC;AACA;AACA,6EAA6E,YAAY,GAAG,kCAAkC;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1JA;AACA;AAC+D;AACP;AACnB;AACG;AACjC,4BAA4B,mDAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+CAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qDAAa;AACjC;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qDAAY;AAC5C;AACA;AACA,+BAA+B,8CAAS;AACxC;AACA;AACA;AACA,iCAAiC,sDAAgB,8BAA8B,WAAW,IAAI,eAAe;AAC7G,2BAA2B,8CAAS;AACpC;AACA;AACA,iCAAiC,sDAAgB;AACjD,2BAA2B,iDAAY;AACvC;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,GAAG;EACpB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC,CAAC;EACzB,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC,CAAC;EACzB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAC,CAAC;EACtB,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;EACrB,IAAI,CAACC,IAAI,GAAG,IAAI,CAAC,CAAC;EAClB,IAAI,CAACC,SAAS,GAAG,KAAK;EACtB,IAAI,CAACC,WAAW,GAAG,KAAK;EACxB,IAAI,CAACC,QAAQ,GAAG,KAAK;EACrB,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,QAAQ,GAAG,CAAC;EACjB,IAAI,CAACC,OAAO,GAAG,KAAK;EACpB,IAAI,CAACC,YAAY,GAAG,CAAC;EACrB,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,aAAa,GAAG,IAAI;EACzB,IAAI,CAACC,iBAAiB,GAAG,IAAIC,gBAAgB,EAAE,CAAC,CAAC;EACjD,IAAI,CAACC,iBAAiB,GAAG,IAAID,gBAAgB,EAAE,CAAC,CAAC;EACjD,IAAI,CAACE,OAAO,GAAG,CAAC,CAAC;EACjB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;EAErB,IAAI,CAACC,WAAW,GAAG,KAAK;AAC5B;AAEA,IAAIC,UAAU,GAAG,CAAC;;AAElB;AACA;AACA;AACAzB,YAAY,CAAC0B,SAAS,CAACC,cAAc,GAAG,YAAY;EAChD,OAAO,IAAI,CAACzB,WAAW;AAC3B,CAAC;;AAED;AACA;AACA;AACAF,YAAY,CAAC0B,SAAS,CAACE,QAAQ,GAAG,UAAUC,CAAC,YAAW;EACpD,IAAIA,CAAC,GAAG,KAAK,EAAEA,CAAC,GAAG,CAAC;EACpB,IAAIA,CAAC,GAAG,KAAK,EAAEA,CAAC,GAAG,CAAC;EACpB,IAAI,CAACpB,KAAK,GAAGoB,CAAC;AAClB,CAAC;;AAED;AACA;AACA;AACA7B,YAAY,CAAC0B,SAAS,CAACI,QAAQ,GAAG,YAAY;EAC1C,OAAO,IAAI,CAACrB,KAAK;AACrB,CAAC;;AAED;AACA;AACA;AACAT,YAAY,CAAC0B,SAAS,CAACK,aAAa,GAAG,YAAY;EAC/C,OAAO,IAAI,CAACxB,WAAW;AAC3B,CAAC;;AAED;AACA;AACA;AACAP,YAAY,CAAC0B,SAAS,CAACM,cAAc,GAAG,UAAUC,CAAC,cAAa;EAC5D,IAAI,CAAC1B,WAAW,GAAG0B,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACAjC,YAAY,CAAC0B,SAAS,CAACQ,UAAU,GAAG,YAAY;EAC5C,OAAO,IAAI,CAAC1B,QAAQ;AACxB,CAAC;;AAED;AACA;AACA;AACAR,YAAY,CAAC0B,SAAS,CAACS,WAAW,GAAG,UAAUF,CAAC,cAAa;EACzD,IAAI,CAACzB,QAAQ,GAAGyB,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACAjC,YAAY,CAAC0B,SAAS,CAACU,cAAc,GAAG,YAAY;EAChD,OAAO,IAAI,CAACnC,WAAW;AAC3B,CAAC;;AAED;AACA;AACA;AACAD,YAAY,CAAC0B,SAAS,CAACW,UAAU,GAAG,UAAUJ,CAAC,cAAa;EACxD,IAAI,CAACtB,OAAO,GAAGsB,CAAC;AACpB,CAAC;;AAED;AACA;AACA;AACAjC,YAAY,CAAC0B,SAAS,CAACY,eAAe,GAAG,UAAUL,CAAC,YAAW;EAC3D,IAAI,CAACrB,YAAY,GAAGqB,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACAjC,YAAY,CAAC0B,SAAS,CAACa,QAAQ,GAAG,UAAUC,CAAC,YAAWC,CAAC,YAAWC,CAAC,YAAW;EAC5E,IAAI,CAAC7B,MAAM,GAAG2B,CAAC;EACf,IAAI,CAAC1B,MAAM,GAAG2B,CAAC;EACf,IAAI,CAAC1B,MAAM,GAAG2B,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACA1C,YAAY,CAAC0B,SAAS,CAACiB,OAAO,GAAG,UAAUH,CAAC,YAAWC,CAAC,YAAW;EAC/D,IAAI,CAACzB,KAAK,GAAGwB,CAAC;EACd,IAAI,CAACvB,KAAK,GAAGwB,CAAC;AAClB,CAAC;;AAED;AACA;AACA;AACAzC,YAAY,CAAC0B,SAAS,CAACkB,oBAAoB,GAAG,YAAY;EACtD,OAAO,IAAI,CAACzB,iBAAiB;AACjC,CAAC;;AAED;AACA;AACA;AACAnB,YAAY,CAAC0B,SAAS,CAACmB,oBAAoB,GAAG,YAAY;EACtD,OAAO,IAAI,CAACxB,iBAAiB;AACjC,CAAC;;AAED;AACA;AACA;AACArB,YAAY,CAAC0B,SAAS,CAACoB,aAAa,GAAG,UAAUC,IAAI,aAAYC,QAAQ,EAAE;EACvE;AACJ;AACA;AACA;AACA;EACI,IAAIC,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,eAAe,GAAGL,IAAI,CAAC;EAElD,IAAIM,OAAO,GAAG,IAAI;EAClBJ,EAAE,CAACK,eAAe,CAACP,IAAI,EAAE,UAAUQ,QAAQ,EAAE;IACzCF,OAAO,CAACpD,WAAW,GAAGsD,QAAQ;IAC9BF,OAAO,CAACpD,WAAW,CAACuD,SAAS,EAAE;IAE/B,IAAIC,IAAI,GAAGC,MAAM,CAACC,QAAQ,EAAE;IAE5B,IAAIF,IAAI,IAAI,CAAC,EAAE;MACXG,OAAO,CAACC,KAAK,CAAC,oCAAoC,CAAC;MACnD;IACJ;IAEAR,OAAO,CAACnD,WAAW,GAAG,IAAI4D,cAAc,CACpCT,OAAO,CAACpD,WAAW,CAAC8D,cAAc,EAAE,EACpCV,OAAO,CAACpD,WAAW,CAAC+D,eAAe,EAAE,CAAC,CAAC,CAAC;IAC5CX,OAAO,CAACnD,WAAW,CAAC+D,QAAQ,CAAC,CAAC,CAAC;IAC/BZ,OAAO,CAACnD,WAAW,CAACgE,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;IAE3ClB,QAAQ,CAACK,OAAO,CAACpD,WAAW,CAAC;EACjC,CAAC,CAAC;AACN,CAAC;;AAGD;AACA;AACA;AACAD,YAAY,CAAC0B,SAAS,CAACyC,WAAW,GAAG,UAAUC,EAAE,UAASrB,IAAI,aAAYC,QAAQ,EAAE;EAChFvB,UAAU,EAAE;EAEZ,IAAIwB,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;;EAE/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,iBAAiB,GAAGL,IAAI,CAAC;EAEpD,IAAIM,OAAO,GAAG,IAAI;EAClBJ,EAAE,CAACkB,WAAW,CAAC,IAAI,CAAClE,WAAW,EAAEmE,EAAE,EAAErB,IAAI,EAAE,YAAY;IACnDtB,UAAU,EAAE;IACZ,IAAIA,UAAU,IAAI,CAAC,EAAE4B,OAAO,CAAC7B,WAAW,GAAG,IAAI;IAC/C,IAAI,OAAOwB,QAAQ,IAAI,UAAU,EAAEA,QAAQ,EAAE;EACjD,CAAC,CAAC;AAEN,CAAC;;AAED;AACA;AACA;AACAhD,YAAY,CAAC0B,SAAS,CAAC2C,UAAU,GAAG,UAAUC,IAAI,aAAYvB,IAAI,CAAC,YAAYC,QAAQ,EAAE;EACrF,IAAIC,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;;EAE/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,gBAAgB,GAAGL,IAAI,CAAC;EAEnD,IAAIwB,MAAM,GAAG,IAAI,CAAC,CAAC;;EAEnB,IAAIlB,OAAO,GAAG,IAAI;EAClBJ,EAAE,CAACuB,SAAS,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAAEC,GAAG,IAAG;IAC3BH,MAAM,GAAGI,YAAY,CAACN,UAAU,CAACK,GAAG,CAAC;IACrC,IAAIJ,IAAI,IAAI,IAAI,EAAE;MACdjB,OAAO,CAAC/B,OAAO,CAACgD,IAAI,CAAC,GAAGC,MAAM;IAClC;IACAvB,QAAQ,CAACuB,MAAM,CAAC;EACpB,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACAvE,YAAY,CAAC0B,SAAS,CAACkD,cAAc,GAAG,UAAUN,IAAI,aAAYvB,IAAI,CAAC,YAAYC,QAAQ,EAAE;EACzF,IAAIC,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;;EAE/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,oBAAoB,GAAGL,IAAI,CAAC;EAEvD,IAAIM,OAAO,GAAG,IAAI;EAClBJ,EAAE,CAACuB,SAAS,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAAEC,GAAG,IAAG;IAC3B,IAAIJ,IAAI,IAAI,IAAI,EAAE;MACdjB,OAAO,CAAC9B,WAAW,CAAC+C,IAAI,CAAC,GAAGO,mBAAmB,CAACC,QAAQ,CAACJ,GAAG,CAAC;IACjE;IACA,IAAI,OAAO1B,QAAQ,IAAI,UAAU,EAAEA,QAAQ,EAAE;EACjD,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACAhD,YAAY,CAAC0B,SAAS,CAACqD,QAAQ,GAAG,UAAUhC,IAAI,CAAC,YAAYC,QAAQ,EAAE;EACnE,IAAIC,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,cAAc,GAAGL,IAAI,CAAC;EACjD,IAAIM,OAAO,GAAG,IAAI;EAClB,IAAI;IACAJ,EAAE,CAACuB,SAAS,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAAEC,GAAG,IAAG;MAC3BrB,OAAO,CAAChD,IAAI,GAAG2E,OAAO,CAACC,IAAI,CAACP,GAAG,CAAC;MAChC,IAAI,OAAO1B,QAAQ,IAAI,UAAU,EAAEA,QAAQ,EAAE;IACjD,CAAC,CAAC;EACN,CAAC,CACD,OAAOkC,CAAC,EAAE;IACNtB,OAAO,CAACuB,IAAI,CAACD,CAAC,CAAC;EACnB;AACJ,CAAC;;AAED;AACA;AACA;AACAlF,YAAY,CAAC0B,SAAS,CAAC0D,WAAW,GAAG,UAAUrC,IAAI,aAAY;EAC3D,IAAIE,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE,CAAC,CAAC;EAC/C,IAAI,IAAI,CAAC7C,SAAS,EAAE2C,EAAE,CAACG,GAAG,CAAC,iBAAiB,GAAGL,IAAI,CAAC;EACpD,IAAIM,OAAO,GAAG,IAAI;EAClB,IAAI;IACAJ,EAAE,CAACuB,SAAS,CAACzB,IAAI,CAAC,CAAC0B,IAAI,CAAEC,GAAG,IAAG;MAC3BrB,OAAO,CAACjD,OAAO,GAAGiF,UAAU,CAACJ,IAAI,CAACP,GAAG,CAAC;IAC1C,CAAC,CAAC;EACN,CAAC,CACD,OAAOQ,CAAC,EAAE;IACNtB,OAAO,CAACuB,IAAI,CAACD,CAAC,CAAC;EACnB;AACJ,CAAC;;AAED;AACA;AACA;AACAlF,YAAY,CAAC0B,SAAS,CAAC4D,aAAa,GAAG,UAAUC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAEtE,IAAG,IAAI,CAACxF,WAAW,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;EAEpC,IAAIyF,SAAS,GAAG,IAAI,CAACzF,WAAW,CAAC0F,gBAAgB,CAACJ,MAAM,CAAC;EAEzD,IAAIG,SAAS,GAAG,CAAC,EAAE,OAAO,KAAK;EAE/B,IAAIE,MAAM,GAAG,IAAI,CAAC3F,WAAW,CAAC4F,oBAAoB,CAACH,SAAS,CAAC;EAC7D,IAAII,IAAI,GAAG,IAAI,CAAC7F,WAAW,CAAC8D,cAAc,EAAE;EAC5C,IAAIgC,KAAK,GAAG,CAAC;EACb,IAAIC,GAAG,GAAG,IAAI,CAAC/F,WAAW,CAAC+D,eAAe,EAAE;EAC5C,IAAIiC,MAAM,GAAG,CAAC;EAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,EAAED,CAAC,GAAGA,CAAC,GAAG,CAAC,EAAE;IAC1C,IAAI1D,CAAC,GAAGoD,MAAM,CAACM,CAAC,CAAC;IACjB,IAAIzD,CAAC,GAAGmD,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC;IAErB,IAAI1D,CAAC,GAAGsD,IAAI,EAAEA,IAAI,GAAGtD,CAAC;IACtB,IAAIA,CAAC,GAAGuD,KAAK,EAAEA,KAAK,GAAGvD,CAAC;IACxB,IAAIC,CAAC,GAAGuD,GAAG,EAAEA,GAAG,GAAGvD,CAAC;IACpB,IAAIA,CAAC,GAAGwD,MAAM,EAAEA,MAAM,GAAGxD,CAAC;EAC9B;EACA,IAAI2D,EAAE,GAAG,IAAI,CAAClG,WAAW,CAACmG,gBAAgB,CAACb,KAAK,CAAC;EACjD,IAAIc,EAAE,GAAG,IAAI,CAACpG,WAAW,CAACqG,gBAAgB,CAACd,KAAK,CAAC;EAEjD,OAAQK,IAAI,IAAIM,EAAE,IAAIA,EAAE,IAAIL,KAAK,IAAIC,GAAG,IAAIM,EAAE,IAAIA,EAAE,IAAIL,MAAM;AAClE,CAAC;;AAED;AACA;AACA;AACAjG,YAAY,CAAC0B,SAAS,CAAC8E,mBAAmB,GAAG,UAAUhE,CAAC,EAAEC,CAAC,EAAE+C,KAAK,EAAEC,KAAK,EAAE;EAE1E,IAAG,IAAI,CAACxF,WAAW,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;EACvC,IAAG;IACI,IAAGuF,KAAK,IAAIhD,CAAC,CAAC,CAAC,CAAC,IAAIgD,KAAK,IAAI/C,CAAC,CAAC,CAAC,CAAC,EAC7B,IAAGgD,KAAK,IAAIjD,CAAC,CAAC,CAAC,CAAC,IAAIiD,KAAK,IAAIhD,CAAC,CAAC,CAAC,CAAC,EAC7B,OAAO,IAAI;IACnB,OAAO,KAAK;EAChB,CAAC,QAAMgE,GAAG,EAAC;IACP7C,OAAO,CAACuB,IAAI,CAAC,oBAAoB,GAAG3C,CAAC,GAAG,KAAK,GAAGC,CAAC,GAAE,SAAS,GAAG+C,KAAK,GAAG,SAAS,GAAGC,KAAK,GAClF,SAAS,GAAEgB,GAAG,CAAC;IACrB,OAAO,KAAK;EAChB;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS5B,mBAAmB,GAAG;EAC3B6B,OAAO,CAAChF,SAAS,CAACiF,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EACxC,IAAI,CAACC,SAAS,GAAG,IAAIC,KAAK,EAAE,CAAC,CAAC;AAClC;;AAEAjC,mBAAmB,CAACnD,SAAS,GAAG,IAAIgF,OAAO,EAAE,CAAC,CAAC;;AAE/C;AACA7B,mBAAmB,CAACkC,kBAAkB,GAAG,SAAS;AAClDlC,mBAAmB,CAACmC,QAAQ,GAAG,CAAC;AAChCnC,mBAAmB,CAACoC,QAAQ,GAAG,CAAC;AAChCpC,mBAAmB,CAACqC,SAAS,GAAG,CAAC;;AAEjC;AACA;AACA;AACArC,mBAAmB,CAACC,QAAQ,GAAG,UAAUJ,GAAG,EAAE;EAC1C,IAAIyC,GAAG,GAAG,IAAItC,mBAAmB,EAAE;EAEnC,IAAI5B,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE;EAC7C,IAAIiE,IAAI,GAAGnE,EAAE,CAACoE,kBAAkB,CAAC3C,GAAG,CAAC;EAErCyC,GAAG,CAACG,SAAS,CAACC,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC,GAAG,CAAC,GAAGD,QAAQ,CAACH,IAAI,CAACI,OAAO,CAAC,GAAG,IAAI,CAAC;EACzEL,GAAG,CAACM,UAAU,CAACF,QAAQ,CAACH,IAAI,CAACM,QAAQ,CAAC,GAAG,CAAC,GAAGH,QAAQ,CAACH,IAAI,CAACM,QAAQ,CAAC,GAAG,IAAI,CAAC;EAE5E,IAAIN,IAAI,CAACO,MAAM,IAAI,IAAI,EAAE;IACrB,OAAOR,GAAG;EACd;EAEA,IAAIQ,MAAM,GAAGP,IAAI,CAACO,MAAM;EACxB,IAAIC,QAAQ,GAAGD,MAAM,CAACxB,MAAM;EAC5BgB,GAAG,CAACN,SAAS,GAAG,EAAE,CAAC,CAAC;EACpB,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IAC/B,IAAIC,KAAK,GAAGH,MAAM,CAACE,CAAC,CAAC;IACrB,IAAIE,OAAO,GAAGD,KAAK,CAACE,EAAE,CAACC,QAAQ,EAAE;IACjC,IAAIC,KAAK,GAAGC,UAAU,CAACL,KAAK,CAACM,GAAG,CAAC;IACjC,IAAIC,WAAW,GAAGxD,mBAAmB,CAACoC,QAAQ;IAC9C,IAAIqB,IAAI,GAAGR,KAAK,CAACQ,IAAI,IAAI,IAAI,GAAGR,KAAK,CAACQ,IAAI,CAACL,QAAQ,EAAE,GAAG,KAAK;IAC7D,IAAIK,IAAI,KAAK,KAAK,EAAE;MAChBD,WAAW,GAAGxD,mBAAmB,CAACoC,QAAQ;IAC9C,CAAC,MACI,IAAIqB,IAAI,KAAK,MAAM,EAAE;MACtBD,WAAW,GAAGxD,mBAAmB,CAACqC,SAAS;IAC/C,CAAC,MACI,IAAIoB,IAAI,KAAK,KAAK,EAAE;MACrBD,WAAW,GAAGxD,mBAAmB,CAACmC,QAAQ;IAC9C,CAAC,MACI;MACDqB,WAAW,GAAGxD,mBAAmB,CAACoC,QAAQ;IAC9C;IACA,IAAIoB,WAAW,IAAIxD,mBAAmB,CAACoC,QAAQ,EAAE;MAC7C,IAAIsB,YAAY,GAAGT,KAAK,CAACU,GAAG,IAAI,IAAI,GAAG,CAAC,GAAGL,UAAU,CAACL,KAAK,CAACU,GAAG,CAAC;MAChEN,KAAK,GAAGA,KAAK,GAAGK,YAAY;IAChC,CAAC,MACI,IAAIF,WAAW,IAAIxD,mBAAmB,CAACqC,SAAS,EAAE;MACnD,IAAIqB,YAAY,GAAGT,KAAK,CAACU,GAAG,IAAI,IAAI,GAAG,CAAC,GAAGL,UAAU,CAACL,KAAK,CAACU,GAAG,CAAC;MAChE,IAAID,YAAY,IAAI,CAAC,EAAEA,YAAY,GAAG,CAAC;MACvCL,KAAK,GAAGA,KAAK,GAAGK,YAAY;IAChC;IAEA,IAAIE,IAAI,GAAG,IAAIC,kBAAkB,EAAE;IACnCD,IAAI,CAACT,EAAE,GAAGD,OAAO;IACjBU,IAAI,CAACE,IAAI,GAAGN,WAAW;IACvBI,IAAI,CAACP,KAAK,GAAGA,KAAK;IAElBf,GAAG,CAACN,SAAS,CAAC+B,IAAI,CAACH,IAAI,CAAC;EAC5B;EAEA,OAAOtB,GAAG;AACd,CAAC;;AAGD;AACA;AACA;AACAtC,mBAAmB,CAACnD,SAAS,CAACmH,cAAc,GAAG,UAAUC,KAAK,CAAC,kBAAkBC,QAAQ,WAAUC,MAAM,CAAC,WAAWC,cAAc,CAAC,oBAAoB;EACpJ,KAAK,IAAIpB,CAAC,GAAG,IAAI,CAAChB,SAAS,CAACV,MAAM,GAAG,CAAC,EAAE0B,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;IACjD,IAAIC,KAAK,GAAG,IAAI,CAACjB,SAAS,CAACgB,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,IAAIC,KAAK,CAACa,IAAI,IAAI9D,mBAAmB,CAACoC,QAAQ,EAAE;MAC5C6B,KAAK,CAACI,eAAe,CAACpB,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACI,KAAK,EAAEc,MAAM,CAAC;IACxD,CAAC,MACI,IAAIlB,KAAK,CAACa,IAAI,IAAI9D,mBAAmB,CAACqC,SAAS,EAAE;MAClD4B,KAAK,CAACK,cAAc,CAACrB,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACI,KAAK,EAAEc,MAAM,CAAC;IACvD,CAAC,MACI,IAAIlB,KAAK,CAACa,IAAI,IAAI9D,mBAAmB,CAACmC,QAAQ,EAAE;MACjD8B,KAAK,CAACM,aAAa,CAACtB,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACI,KAAK,EAAEc,MAAM,CAAC;IACtD;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASN,kBAAkB,GAAG;EAC1B,IAAI,CAACV,EAAE,GAAG,EAAE;EACZ,IAAI,CAACW,IAAI,GAAG,CAAC,CAAC;EACd,IAAI,CAACT,KAAK,GAAG,IAAI;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASmB,WAAW,GAAG;EACnB,IAAI,CAACC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC;EAC/C,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC;EAChD,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC;EACnD,IAAI,CAACC,QAAQ,GAAGC,SAAS,CAACC,WAAW;EACrC,IAAI,CAACH,iBAAiB,GAAG,IAAI;EAC7B,IAAI,CAACI,iBAAiB,GAAG,GAAG;EAC5B,IAAI,CAACC,gBAAgB,GAAG,EAAE;EAC1B,IAAI,CAACC,iBAAiB,GAAG,GAAG;EAC5B,IAAI,CAACC,WAAW,GAAG,IAAI;EACvB,IAAI,CAACC,OAAO,GAAG,kBAAkB;EACjC,IAAI,CAACC,OAAO,GAAG,kBAAkB;AACrC;;AAEA;AACA;AACA;AACAZ,WAAW,CAAC3H,SAAS,CAACwI,aAAa,GAAG,YAAY;EAC9C,IAAIC,IAAI,CAAC,WAAWC,QAAQ,CAACC,eAAe,EAAE;EAC9C,IAAIC,CAAC,CAAC,aAAaC,IAAI,CAACC,MAAM,EAAE;EAChC,OAAQ,WAAYL,IAAI,GAAGG,CAAC,IAAI,CAAC,GAAG,IAAI,CAACd,iBAAiB,GAAG,CAAC;EAAC;AACnE,CAAC;;AAED;AACA;AACA;AACAH,WAAW,CAAC3H,SAAS,CAAC+I,WAAW,GAAG,UAAUjB,iBAAiB,CAAC,SAAS;EACrE,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;AAC9C,CAAC;;AAED;AACA;AACA;AACAH,WAAW,CAAC3H,SAAS,CAACgJ,YAAY,GAAG,UAAUd,iBAAiB,UAASC,gBAAgB,UAASC,iBAAiB,UAAS;EACxH,IAAI,CAACF,iBAAiB,GAAGA,iBAAiB;EAC1C,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EACxC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;AAC9C,CAAC;;AAED;AACA;AACA;AACAT,WAAW,CAAC3H,SAAS,CAACiJ,WAAW,GAAG,UAAU7B,KAAK,mBAAkB;EACjE,IAAIqB,IAAI,CAAC,YAAYC,QAAQ,CAACC,eAAe,EAAE;EAC/C,IAAIO,aAAa,CAAC;EAClB,IAAIC,CAAC,CAAC,cAAc,CAAC;EACrB,QAAQ,IAAI,CAACpB,QAAQ;IACjB,KAAKC,SAAS,CAACoB,aAAa;MACxBD,CAAC,GAAG,CAACV,IAAI,GAAG,IAAI,CAACZ,cAAc,IAAI,IAAI,CAACK,iBAAiB;MACzD,IAAIiB,CAAC,IAAI,CAAC,EAAE;QACRA,CAAC,GAAG,CAAC;QACL,IAAI,CAACpB,QAAQ,GAAGC,SAAS,CAACqB,YAAY;QACtC,IAAI,CAACxB,cAAc,GAAGY,IAAI;MAC9B;MACAS,aAAa,GAAG,CAAC,GAAGC,CAAC;MACrB;IACJ,KAAKnB,SAAS,CAACqB,YAAY;MACvBF,CAAC,GAAG,CAACV,IAAI,GAAG,IAAI,CAACZ,cAAc,IAAI,IAAI,CAACM,gBAAgB;MACxD,IAAIgB,CAAC,IAAI,CAAC,EAAE;QACR,IAAI,CAACpB,QAAQ,GAAGC,SAAS,CAACsB,aAAa;QACvC,IAAI,CAACzB,cAAc,GAAGY,IAAI;MAC9B;MACAS,aAAa,GAAG,CAAC;MACjB;IACJ,KAAKlB,SAAS,CAACsB,aAAa;MACxBH,CAAC,GAAG,CAACV,IAAI,GAAG,IAAI,CAACZ,cAAc,IAAI,IAAI,CAACO,iBAAiB;MACzD,IAAIe,CAAC,IAAI,CAAC,EAAE;QACRA,CAAC,GAAG,CAAC;QACL,IAAI,CAACpB,QAAQ,GAAGC,SAAS,CAACuB,cAAc;QACxC,IAAI,CAAC3B,aAAa,GAAG,IAAI,CAACY,aAAa,EAAE;MAC7C;MACAU,aAAa,GAAGC,CAAC;MACjB;IACJ,KAAKnB,SAAS,CAACuB,cAAc;MACzB,IAAI,IAAI,CAAC3B,aAAa,GAAGa,IAAI,EAAE;QAC3B,IAAI,CAACV,QAAQ,GAAGC,SAAS,CAACoB,aAAa;QACvC,IAAI,CAACvB,cAAc,GAAGY,IAAI;MAC9B;MACAS,aAAa,GAAG,CAAC;MACjB;IACJ,KAAKlB,SAAS,CAACC,WAAW;IAC1B;MACI,IAAI,CAACF,QAAQ,GAAGC,SAAS,CAACuB,cAAc;MACxC,IAAI,CAAC3B,aAAa,GAAG,IAAI,CAACY,aAAa,EAAE;MACzCU,aAAa,GAAG,CAAC;MACjB;EAAM;EAEd,IAAI,CAAC,IAAI,CAACb,WAAW,EAAEa,aAAa,GAAG,CAACA,aAAa;EACrD9B,KAAK,CAACM,aAAa,CAAC,IAAI,CAACY,OAAO,EAAEY,aAAa,CAAC;EAChD9B,KAAK,CAACM,aAAa,CAAC,IAAI,CAACa,OAAO,EAAEW,aAAa,CAAC;AACpD,CAAC;;AAED;AACA,IAAIlB,SAAS,GAAG,YAAY,CAAE,CAAC;AAE/BA,SAAS,CAACC,WAAW,GAAG,aAAa;AACrCD,SAAS,CAACuB,cAAc,GAAG,gBAAgB;AAC3CvB,SAAS,CAACoB,aAAa,GAAG,eAAe;AACzCpB,SAAS,CAACqB,YAAY,GAAG,cAAc;AACvCrB,SAAS,CAACsB,aAAa,GAAG,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASE,WAAW,GAAG;EACnB,IAAI,CAACC,EAAE,GAAG,IAAIC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;EAChC,IAAI,CAACC,QAAQ,EAAE;AACnB;;AAEA;AACA;AACA;AACAH,WAAW,CAACI,GAAG,GAAG,UAAUzJ,CAAC,cAAa0J,CAAC,cAAaC,GAAG,cAAa;EACpE,IAAIC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACxD,IAAIC,CAAC,GAAG,CAAC;EACT,IAAI7D,CAAC,EAAE3B,CAAC,EAAEyF,CAAC;EACX,KAAK9D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6D,CAAC,EAAE7D,CAAC,EAAE,EAAE;IACpB,KAAK3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwF,CAAC,EAAExF,CAAC,EAAE,EAAE;MACpB,KAAKyF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,EAAEC,CAAC,EAAE,EAAE;QACpBF,CAAC,CAAC5D,CAAC,GAAG3B,CAAC,GAAG,CAAC,CAAC,IAAIrE,CAAC,CAACgG,CAAC,GAAG8D,CAAC,GAAG,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,GAAGzF,CAAC,GAAG,CAAC,CAAC;MAC/C;IACJ;EACJ;EACA,KAAK2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IACrB2D,GAAG,CAAC3D,CAAC,CAAC,GAAG4D,CAAC,CAAC5D,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA;AACA;AACAqD,WAAW,CAACxJ,SAAS,CAAC2J,QAAQ,GAAG,YAAY;EACzC,KAAK,IAAIxD,CAAC,YAAW,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAC/B,IAAI,CAACsD,EAAE,CAACtD,CAAC,CAAC,GAAKA,CAAC,GAAG,CAAC,IAAK,CAAC,GAAI,CAAC,GAAG,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACAqD,WAAW,CAACxJ,SAAS,CAACkK,QAAQ,GAAG,YAAY;EACzC,OAAO,IAAI,CAACT,EAAE;AAClB,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACmK,aAAa,GAAG,YAAY;EAC9C,OAAO,IAAIT,YAAY,CAAC,IAAI,CAACD,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACoK,SAAS,GAAG,UAAUX,EAAE,cAAa;EACvD,IAAI,IAAI,CAACA,EAAE,IAAI,IAAI,IAAI,IAAI,CAACA,EAAE,CAAChF,MAAM,IAAI,IAAI,CAACgF,EAAE,CAAChF,MAAM,EAAE;EACzD,KAAK,IAAI0B,CAAC,YAAW,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE,IAAI,CAACsD,EAAE,CAACtD,CAAC,CAAC,GAAGsD,EAAE,CAACtD,CAAC,CAAC;AAC3D,CAAC;;AAED;AACA;AACA;AACAqD,WAAW,CAACxJ,SAAS,CAACqK,SAAS,GAAG,YAAY;EAC1C,OAAO,IAAI,CAACZ,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACsK,SAAS,GAAG,YAAY;EAC1C,OAAO,IAAI,CAACb,EAAE,CAAC,CAAC,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACuK,UAAU,GAAG,UAAUC,GAAG,YAAW;EACvD,OAAO,IAAI,CAACf,EAAE,CAAC,CAAC,CAAC,GAAGe,GAAG,GAAG,IAAI,CAACf,EAAE,CAAC,EAAE,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACyK,UAAU,GAAG,UAAUD,GAAG,YAAW;EACvD,OAAO,IAAI,CAACf,EAAE,CAAC,CAAC,CAAC,GAAGe,GAAG,GAAG,IAAI,CAACf,EAAE,CAAC,EAAE,CAAC;AACzC,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAAC2E,gBAAgB,GAAG,UAAU6F,GAAG,YAAW;EAC7D,OAAO,CAACA,GAAG,GAAG,IAAI,CAACf,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAAC6E,gBAAgB,GAAG,UAAU2F,GAAG,YAAW;EAC7D,OAAO,CAACA,GAAG,GAAG,IAAI,CAACf,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC;AAC3C,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAAC0K,aAAa,GAAG,UAAUC,MAAM,YAAWC,MAAM,YAAW;EAC9E,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEF,MAAM,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EACpEpB,WAAW,CAACI,GAAG,CAACiB,GAAG,EAAE,IAAI,CAACpB,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAAC8K,SAAS,GAAG,UAAUhK,CAAC,YAAWC,CAAC,YAAW;EAChE,IAAI,CAAC0I,EAAE,CAAC,EAAE,CAAC,GAAG3I,CAAC;EACf,IAAI,CAAC2I,EAAE,CAAC,EAAE,CAAC,GAAG1I,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACAyI,WAAW,CAACxJ,SAAS,CAAC+K,UAAU,GAAG,UAAUjK,CAAC,YAAW;EACrD,IAAI,CAAC2I,EAAE,CAAC,EAAE,CAAC,GAAG3I,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACA0I,WAAW,CAACxJ,SAAS,CAACgL,UAAU,GAAG,UAAUjK,CAAC,YAAW;EACrD,IAAI,CAAC0I,EAAE,CAAC,EAAE,CAAC,GAAG1I,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACAyI,WAAW,CAACxJ,SAAS,CAACiL,SAAS,GAAG,UAAUC,MAAM,YAAWC,MAAM,YAAW;EAC1E,IAAIN,GAAG,GAAG,CAACK,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpE3B,WAAW,CAACI,GAAG,CAACiB,GAAG,EAAE,IAAI,CAACpB,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACAD,WAAW,CAACxJ,SAAS,CAACoL,KAAK,GAAG,UAAUF,MAAM,YAAWC,MAAM,YAAW;EACtE,IAAI,CAAC1B,EAAE,CAAC,CAAC,CAAC,GAAGyB,MAAM;EACnB,IAAI,CAACzB,EAAE,CAAC,CAAC,CAAC,GAAG0B,MAAM;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS/I,cAAc,CAACiJ,CAAC,YAAWC,CAAC,YAAW;EAC5C9B,WAAW,CAACxJ,SAAS,CAACiF,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C,IAAI,CAACqG,KAAK,GAAGF,CAAC;EACd,IAAI,CAACG,MAAM,GAAGF,CAAC;AACnB;;AAEA;AACAlJ,cAAc,CAACpC,SAAS,GAAG,IAAIwJ,WAAW,EAAE;;AAE5C;AACA;AACA;AACApH,cAAc,CAACpC,SAAS,CAACyL,WAAW,GAAG,UAAU3K,CAAC,YAAWC,CAAC,YAAW;EACrE,IAAI,CAAC+J,SAAS,CAAChK,CAAC,EAAEC,CAAC,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACAqB,cAAc,CAACpC,SAAS,CAACwC,iBAAiB,GAAG,UAAU1B,CAAC,YAAWC,CAAC,YAAW;EAC3E,IAAIsK,CAAC,GAAG,IAAI,CAACE,KAAK,GAAG,IAAI,CAAClB,SAAS,EAAE;EACrC,IAAIiB,CAAC,GAAG,IAAI,CAACE,MAAM,GAAG,IAAI,CAAClB,SAAS,EAAE;EACtC,IAAI,CAACQ,SAAS,CAAChK,CAAC,GAAGuK,CAAC,GAAG,CAAC,EAAEtK,CAAC,GAAGuK,CAAC,GAAG,CAAC,CAAC;AACxC,CAAC;;AAED;AACA;AACA;AACAlJ,cAAc,CAACpC,SAAS,CAACsE,GAAG,GAAG,UAAUvD,CAAC,YAAW;EACjD,IAAI,CAAC2K,IAAI,CAAC3K,CAAC,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACAqB,cAAc,CAACpC,SAAS,CAACuE,MAAM,GAAG,UAAUxD,CAAC,YAAW;EACpD,IAAIuK,CAAC,GAAG,IAAI,CAACE,MAAM,GAAG,IAAI,CAAClB,SAAS,EAAE;EACtC,IAAI,CAACU,UAAU,CAACjK,CAAC,GAAGuK,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACAlJ,cAAc,CAACpC,SAAS,CAACoE,IAAI,GAAG,UAAUtD,CAAC,YAAW;EAClD,IAAI,CAAC6K,IAAI,CAAC7K,CAAC,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACAsB,cAAc,CAACpC,SAAS,CAACqE,KAAK,GAAG,UAAUvD,CAAC,YAAW;EACnD,IAAIuK,CAAC,GAAG,IAAI,CAACE,KAAK,GAAG,IAAI,CAAClB,SAAS,EAAE;EACrC,IAAI,CAACU,UAAU,CAACjK,CAAC,GAAGuK,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACAjJ,cAAc,CAACpC,SAAS,CAAC4L,OAAO,GAAG,UAAU9K,CAAC,YAAW;EACrD,IAAIuK,CAAC,GAAG,IAAI,CAACE,KAAK,GAAG,IAAI,CAAClB,SAAS,EAAE;EACrC,IAAI,CAACU,UAAU,CAACjK,CAAC,GAAGuK,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACAjJ,cAAc,CAACpC,SAAS,CAAC6L,OAAO,GAAG,UAAU9K,CAAC,YAAW;EACrD,IAAIuK,CAAC,GAAG,IAAI,CAACE,MAAM,GAAG,IAAI,CAAClB,SAAS,EAAE;EACtC,IAAI,CAACU,UAAU,CAACjK,CAAC,GAAGuK,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACAlJ,cAAc,CAACpC,SAAS,CAAC2L,IAAI,GAAG,UAAU7K,CAAC,YAAW;EAClD,IAAI,CAACiK,UAAU,CAACjK,CAAC,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACAsB,cAAc,CAACpC,SAAS,CAAC0L,IAAI,GAAG,UAAU3K,CAAC,YAAW;EAClD,IAAI,CAACiK,UAAU,CAACjK,CAAC,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACAqB,cAAc,CAACpC,SAAS,CAAC8L,SAAS,GAAG,UAAUR,CAAC,YAAW;EACvD,IAAIJ,MAAM,GAAGI,CAAC,GAAG,IAAI,CAACE,MAAM;EAC5B,IAAIL,MAAM,GAAG,CAACD,MAAM;EACpB,IAAI,CAACE,KAAK,CAACF,MAAM,EAAEC,MAAM,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA/I,cAAc,CAACpC,SAAS,CAACuC,QAAQ,GAAG,UAAU8I,CAAC,YAAW;EACtD,IAAIH,MAAM,GAAGG,CAAC,GAAG,IAAI,CAACE,KAAK;EAC3B,IAAIJ,MAAM,GAAG,CAACD,MAAM;EACpB,IAAI,CAACE,KAAK,CAACF,MAAM,EAAEC,MAAM,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASzL,gBAAgB,GAAG;EACxBqM,kBAAkB,CAAC/L,SAAS,CAACiF,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EACnD,IAAI,CAAC8G,eAAe,GAAG,IAAI;EAC3B,IAAI,CAACC,eAAe,GAAG,IAAI;EAE3B,IAAI,CAACC,KAAK,GAAGH,kBAAkB,CAAC/L,SAAS;AAC7C;AAGAN,gBAAgB,CAACM,SAAS,GAAG,IAAI+L,kBAAkB,EAAE;;AAErD;AACA;AACA;AACArM,gBAAgB,CAACM,SAAS,CAACmM,kBAAkB,GAAG,YAAY;EACxD,OAAO,IAAI,CAACH,eAAe;AAC/B,CAAC;;AAED;AACA;AACA;AACAtM,gBAAgB,CAACM,SAAS,CAACoM,kBAAkB,GAAG,YAAY;EACxD,OAAO,IAAI,CAACH,eAAe;AAC/B,CAAC;;AAED;AACA;AACA;AACAvM,gBAAgB,CAACM,SAAS,CAACqM,aAAa,GAAG,UAAUC,QAAQ,UAAS;EAClE,IAAI,IAAI,CAACL,eAAe,IAAIK,QAAQ,EAAE;IAClC,OAAO,KAAK;EAChB;EACA,IAAI,IAAI,CAACN,eAAe,IAAIM,QAAQ,EAAE;IAClC,OAAO,KAAK;EAChB;EAEA,IAAI,CAACL,eAAe,GAAGK,QAAQ;EAE/B,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA5M,gBAAgB,CAACM,SAAS,CAACuM,kBAAkB,GAAG,UAAU7F,GAAG,UAAS;EAClE,IAAI,CAACuF,eAAe,GAAGvF,GAAG;AAC9B,CAAC;;AAED;AACA;AACA;AACAhH,gBAAgB,CAACM,SAAS,CAACiJ,WAAW,GAAG,UAAU7B,KAAK,mBAAkB;EACtE,IAAIoF,OAAO,GAAGT,kBAAkB,CAAC/L,SAAS,CAACiJ,WAAW,CAAC/D,IAAI,CAAC,IAAI,EAAEkC,KAAK,CAAC;EAExE,IAAI,IAAI,CAACqF,UAAU,EAAE,EAAE;IACnB,IAAI,CAACT,eAAe,GAAG,CAAC;EAC5B;EAEA,OAAOQ,OAAO;AAClB,CAAC;;AAED;AACA;AACA;AACA9M,gBAAgB,CAACM,SAAS,CAAC0M,eAAe,GAAG,UAAU7J,MAAM,cAAayJ,QAAQ,UAAS;EACvF,IAAIA,QAAQ,IAAI,IAAI,CAACL,eAAe,EAAE;IAClC,IAAI,CAACA,eAAe,GAAG,CAAC;EAC5B;EACA,IAAI,CAACD,eAAe,GAAGM,QAAQ;EAC/B,OAAO,IAAI,CAACK,WAAW,CAAC9J,MAAM,EAAE,KAAK,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASc,UAAU,GAAG;EAClB,IAAI,CAACiJ,WAAW,GAAG,IAAIxH,KAAK,EAAE,CAAC,CAAC;EAChC,IAAI,CAAC5F,aAAa,GAAGkJ,QAAQ,CAACC,eAAe,EAAE;AACnD;;AAEA;AACA;AACA;AACAhF,UAAU,CAACJ,IAAI,GAAG,UAAUP,GAAG,CAAC,YAAY;EACxC,IAAIyC,GAAG,GAAG,IAAI9B,UAAU,EAAE,CAAC,CAAC;EAC5B,IAAIpC,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE;EAC7C,IAAIiE,IAAI,GAAGnE,EAAE,CAACoE,kBAAkB,CAAC3C,GAAG,CAAC;EACrC,IAAIiD,MAAM,GAAGP,IAAI,CAACmH,YAAY;EAC9B,IAAI3G,QAAQ,GAAGD,MAAM,CAACxB,MAAM;EAC5B,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;IAC/B,IAAIC,KAAK,GAAGH,MAAM,CAACE,CAAC,CAAC,CAAC,CAAC;IACvB,IAAIzH,OAAO,GAAG,IAAIoO,WAAW,EAAE,CAAC,CAAC;IACjC,IAAIC,KAAK,GAAG3G,KAAK,CAAC2G,KAAK,CAAC,CAAC;IACzB,IAAItI,MAAM,GAAGgC,UAAU,CAACsG,KAAK,CAACtI,MAAM,CAAC;IACrC,IAAIuI,MAAM,GAAGvG,UAAU,CAACsG,KAAK,CAACE,MAAM,CAAC;IACrC,IAAIC,IAAI,GAAGzG,UAAU,CAACsG,KAAK,CAACG,IAAI,CAAC;IACjCxO,OAAO,CAACqO,KAAK,CAACtI,MAAM,EAAEuI,MAAM,EAAEE,IAAI,CAAC;IACnC,IAAIC,OAAO,GAAG/G,KAAK,CAACoE,GAAG,CAAC,CAAC;IACzB,IAAI4C,MAAM,GAAGD,OAAO,CAAC1I,MAAM;IAC3B,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4I,MAAM,EAAE5I,CAAC,EAAE,EAAE;MAC7B,IAAIgG,GAAG,GAAG2C,OAAO,CAAC3I,CAAC,CAAC,CAAC,CAAC;MACtB,IAAI8B,EAAE,GAAGkE,GAAG,CAAClE,EAAE,CAAC,CAAC;MACjB,IAAIW,IAAI,GAAG6F,WAAW,CAACO,GAAG,CAACC,QAAQ;MACnC,IAAIC,OAAO,GAAG/C,GAAG,CAACgD,KAAK,CAAC,CAAC;MACzB,IAAID,OAAO,KAAK,GAAG,EAAE;QACjBtG,IAAI,GAAG6F,WAAW,CAACO,GAAG,CAACC,QAAQ;MACnC,CAAC,MACI,IAAIC,OAAO,KAAK,GAAG,EAAE;QACtBtG,IAAI,GAAG6F,WAAW,CAACO,GAAG,CAACI,QAAQ;MACnC,CAAC,MACI,IAAIF,OAAO,KAAK,OAAO,EAAE;QAC1BtG,IAAI,GAAG6F,WAAW,CAACO,GAAG,CAACK,cAAc;MACzC,CAAC,MACI;QACDC,OAAO,CAACxL,KAAK,CAAC,QAAQ,EAAE,mCAAmC,CAAC;MAChE;MACA,IAAIiJ,KAAK,GAAG3E,UAAU,CAAC+D,GAAG,CAACY,KAAK,CAAC;MACjC,IAAI9D,MAAM,GAAGb,UAAU,CAAC+D,GAAG,CAAClD,MAAM,CAAC;MACnC5I,OAAO,CAACkP,WAAW,CAAC3G,IAAI,EAAEX,EAAE,EAAE8E,KAAK,EAAE9D,MAAM,CAAC;IAChD;IACA,IAAIuG,UAAU,GAAGzH,KAAK,CAAC0H,OAAO,CAAC,CAAC;IAChC,IAAIC,SAAS,GAAGF,UAAU,CAACpJ,MAAM;IACjC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuJ,SAAS,EAAEvJ,CAAC,EAAE,EAAE;MAChC,IAAIwJ,MAAM,GAAGH,UAAU,CAACrJ,CAAC,CAAC,CAAC,CAAC;MAC5B,IAAI8B,EAAE,GAAG0H,MAAM,CAAC1H,EAAE,CAAC,CAAC;MACpB,IAAIW,IAAI,GAAG6F,WAAW,CAACmB,MAAM,CAACC,iBAAiB;MAC/C,IAAIX,OAAO,GAAGS,MAAM,CAACR,KAAK,CAAC,CAAC;MAC5B,IAAID,OAAO,KAAK,OAAO,EAAE;QACrBtG,IAAI,GAAG6F,WAAW,CAACmB,MAAM,CAACC,iBAAiB;MAC/C,CAAC,MACI,IAAIX,OAAO,KAAK,SAAS,EAAE;QAC5BtG,IAAI,GAAG6F,WAAW,CAACmB,MAAM,CAACE,mBAAmB;MACjD,CAAC,MACI;QACDR,OAAO,CAACxL,KAAK,CAAC,QAAQ,EAAE,sCAAsC,CAAC;MACnE;MACA,IAAIiJ,KAAK,GAAG3E,UAAU,CAACuH,MAAM,CAAC5C,KAAK,CAAC;MACpC,IAAI9D,MAAM,GAAGb,UAAU,CAACuH,MAAM,CAAC1G,MAAM,CAAC;MACtC5I,OAAO,CAAC0P,cAAc,CAACnH,IAAI,EAAEX,EAAE,EAAE8E,KAAK,EAAE9D,MAAM,CAAC;IACnD;IACA7B,GAAG,CAACmH,WAAW,CAAC1F,IAAI,CAACxI,OAAO,CAAC;EACjC;EACA,OAAO+G,GAAG;AACd,CAAC;;AAED;AACA;AACA;AACA9B,UAAU,CAAC3D,SAAS,CAACiJ,WAAW,GAAG,UAAU7B,KAAK,mBAAkB;EAChE,IAAIC,QAAQ,GAAGqB,QAAQ,CAACC,eAAe,EAAE,GAAG,IAAI,CAACnJ,aAAa;EAC9D,KAAK,IAAI2G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACyG,WAAW,CAACnI,MAAM,EAAE0B,CAAC,EAAE,EAAE;IAC9C,IAAI,CAACyG,WAAW,CAACzG,CAAC,CAAC,CAACkI,MAAM,CAACjH,KAAK,EAAEC,QAAQ,CAAC;EAC/C;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS/D,OAAO,GAAG;EACf,IAAI,CAACgL,QAAQ,GAAG,CAAC;EACjB,IAAI,CAACC,SAAS,GAAG,IAAI,CAAC,CAAC;EACvB,IAAI,CAACC,WAAW,GAAG,IAAIpJ,KAAK,EAAE,CAAC,CAAC;AACpC;;AAGA;AACA;AACA;AACA9B,OAAO,CAACC,IAAI,GAAG,UAAUP,GAAG,aAAY;EACpC,IAAIyC,GAAG,GAAG,IAAInC,OAAO,EAAE,CAAC,CAAC;EACzB,IAAI/B,EAAE,GAAGC,eAAe,CAACC,kBAAkB,EAAE;EAC7C,IAAIiE,IAAI,GAAGnE,EAAE,CAACoE,kBAAkB,CAAC3C,GAAG,CAAC;EACrC,IAAIyL,YAAY,GAAG/I,IAAI,CAACgJ,aAAa,CAAC,CAAC;EACvC,IAAIC,OAAO,GAAGF,YAAY,CAAChK,MAAM;EACjC,KAAK,IAAImK,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGD,OAAO,EAAEC,MAAM,EAAE,EAAE;IAC7C,IAAIC,QAAQ,GAAGJ,YAAY,CAACG,MAAM,CAAC,CAAC,CAAC;IACrC,IAAIE,UAAU,GAAGD,QAAQ,CAACE,KAAK,CAAC,CAAC;IACjC,IAAIC,KAAK,GAAGF,UAAU,CAACrK,MAAM;IAC7B,IAAIwK,UAAU,qBAAoB,IAAI7J,KAAK,EAAE;IAC7C,KAAK,IAAI8J,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGF,KAAK,EAAEE,OAAO,EAAE,EAAE;MAC9C,IAAIC,SAAS,GAAGL,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC;MACrC,IAAIE,KAAK,GAAG,IAAIC,aAAa,CAACF,SAAS,CAAC7I,EAAE,CAAC,CAAC,CAAC;MAC7C2I,UAAU,CAACC,OAAO,CAAC,GAAGE,KAAK;MAC3B,IAAID,SAAS,CAACG,IAAI,IAAI,IAAI,EAAE;MAC5B,IAAIC,YAAY,GAAGJ,SAAS,CAACG,IAAI,CAAC,CAAC;MACnC,IAAIE,OAAO,GAAGD,YAAY,CAAC9K,MAAM;MACjC2K,KAAK,CAACE,IAAI,GAAG,IAAIlK,KAAK,EAAE,CAAC,CAAC;MAC1B,KAAK,IAAIqK,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGD,OAAO,EAAEC,MAAM,EAAE,EAAE;QAC7C,IAAIC,SAAS,GAAG,IAAIL,aAAa,CAACE,YAAY,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;QACzDL,KAAK,CAACE,IAAI,CAACpI,IAAI,CAACwI,SAAS,CAAC;MAC9B;IACJ;IACAjK,GAAG,CAAC+I,WAAW,CAACtH,IAAI,CAAC+H,UAAU,CAAC;EACpC;EAEA,OAAOxJ,GAAG;AACd,CAAC;;AAED;AACA;AACA;AACAnC,OAAO,CAACtD,SAAS,CAACiJ,WAAW,GAAG,UAAU7B,KAAK,mBAAkB;EAC7D,IAAIA,KAAK,IAAI,IAAI,EAAE;EAEnB,IAAI,EAAEA,KAAK,IAAI,IAAI,CAACmH,SAAS,CAAC,EAAE;IAC5B,IAAI,CAACoB,SAAS,CAACvI,KAAK,CAAC;EACzB;EACA,IAAI,CAACmH,SAAS,GAAGnH,KAAK;EAEtB,IAAIwI,OAAO,GAAGlH,QAAQ,CAACC,eAAe,EAAE;EACxC,IAAIkH,YAAY,GAAK,IAAI,CAACvB,QAAQ,IAAI,CAAC,GAAI,CAAC,GAAG,CAACsB,OAAO,GAAG,IAAI,CAACtB,QAAQ,IAAI,MAAO;EAClF,IAAI,CAACA,QAAQ,GAAGsB,OAAO;EACvB,IAAIC,YAAY,GAAG,CAAC,EAAEA,YAAY,GAAG,CAAC;EACtC,KAAK,IAAI1J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqI,WAAW,CAAC/J,MAAM,EAAE0B,CAAC,EAAE,EAAE;IAC9C,IAAI,CAAC2J,0BAA0B,CAAC1I,KAAK,EAAE,IAAI,CAACoH,WAAW,CAACrI,CAAC,CAAC,EAAE0J,YAAY,CAAC;IACzE,IAAI,CAACE,qBAAqB,CAAC3I,KAAK,EAAE,IAAI,CAACoH,WAAW,CAACrI,CAAC,CAAC,CAAC;EAC1D;AACJ,CAAC;;AAED;AACA;AACA;AACA7C,OAAO,CAACtD,SAAS,CAAC2P,SAAS,GAAG,UAAUvI,KAAK,mBAAkB;EAC3D,IAAIA,KAAK,IAAI,IAAI,EAAE;EACnB,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACqI,WAAW,CAAC/J,MAAM,EAAE0B,CAAC,EAAE,EAAE;IAC9C,IAAI8I,UAAU,GAAG,IAAI,CAACT,WAAW,CAACrI,CAAC,CAAC,CAAC,CAAC;IACtC,KAAK,IAAI3B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyK,UAAU,CAACxK,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCyK,UAAU,CAACzK,CAAC,CAAC,CAACwL,SAAS,CAAC5I,KAAK,CAAC;MAC9B,IAAI6I,UAAU,GAAGhB,UAAU,CAACzK,CAAC,CAAC,CAACyL,UAAU;MACzC,IAAIC,UAAU,GAAGjB,UAAU,CAACzK,CAAC,CAAC,CAAC0L,UAAU;MACzC,IAAID,UAAU,GAAG,CAAC,EAAE;MACpB,IAAI1P,CAAC,gBAAgB6G,KAAK,CAAC+I,aAAa,CAACD,UAAU,CAAC,IAAI,CAAE;MAC1D9I,KAAK,CAACgJ,eAAe,CAACH,UAAU,EAAG1P,CAAC,GAAG,GAAG,GAAG,GAAG,CAAE;MAClD6G,KAAK,CAACM,aAAa,CAACwI,UAAU,EAAG3P,CAAC,GAAG,GAAG,GAAG,GAAG,CAAE;MAChD,IAAI0O,UAAU,CAACzK,CAAC,CAAC,CAAC8K,IAAI,IAAI,IAAI,EAAE;MAChC,KAAK,IAAIrF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgF,UAAU,CAACzK,CAAC,CAAC,CAAC8K,IAAI,CAAC7K,MAAM,EAAEwF,CAAC,EAAE,EAAE;QAChDgF,UAAU,CAACzK,CAAC,CAAC,CAAC8K,IAAI,CAACrF,CAAC,CAAC,CAAC+F,SAAS,CAAC5I,KAAK,CAAC;MAC1C;IACJ;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA9D,OAAO,CAACtD,SAAS,CAAC8P,0BAA0B,GAAG,UAAU1I,KAAK,mBAAkB6H,UAAU,sBAAqBY,YAAY,YAAW;EAClI,IAAIQ,YAAY,GAAG,CAAC,CAAC;EACrB,IAAIC,cAAc,GAAG,GAAG;EACxB,IAAIC,cAAc,GAAG,GAAG;EACxB,IAAIC,GAAG,GAAG,GAAG;EACb,IAAIC,cAAc,GAAG,IAAI;EACzB,KAAK,IAAItK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8I,UAAU,CAACxK,MAAM,EAAE0B,CAAC,EAAE,EAAE;IACxC,IAAI8J,UAAU,GAAGhB,UAAU,CAAC9I,CAAC,CAAC,CAAC8J,UAAU;IACzC,IAAIC,UAAU,GAAGjB,UAAU,CAAC9I,CAAC,CAAC,CAAC+J,UAAU;IACzC,IAAID,UAAU,GAAG,CAAC,EAAE;IAAU,IAAI7I,KAAK,CAAC+I,aAAa,CAACD,UAAU,CAAC,IAAI,CAAC,EAAE;MACpE,IAAIG,YAAY,IAAI,CAAC,EAAE;QACnB;MACJ;MACAA,YAAY,GAAGlK,CAAC;MAChBmK,cAAc,GAAGlJ,KAAK,CAACsJ,eAAe,CAACT,UAAU,CAAC;MAClDK,cAAc,IAAIT,YAAY,GAAGU,cAAc;MAC/C,IAAID,cAAc,GAAG,CAAC,EAAE;QACpBA,cAAc,GAAG,CAAC;MACtB;IACJ;EACJ;EACA,IAAID,YAAY,GAAG,CAAC,EAAE;IAClBA,YAAY,GAAG,CAAC;IAChBC,cAAc,GAAG,CAAC;EACtB;EACA,KAAK,IAAInK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8I,UAAU,CAACxK,MAAM,EAAE0B,CAAC,EAAE,EAAE;IACxC,IAAI8J,UAAU,GAAGhB,UAAU,CAAC9I,CAAC,CAAC,CAAC8J,UAAU;IACzC,IAAIA,UAAU,GAAG,CAAC,EAAE;IAAU,IAAII,YAAY,IAAIlK,CAAC,EAAE;MACjDiB,KAAK,CAACgJ,eAAe,CAACH,UAAU,EAAEK,cAAc,CAAC;IACrD,CAAC,MACI;MACD,IAAIK,OAAO,GAAGvJ,KAAK,CAACsJ,eAAe,CAACT,UAAU,CAAC;MAC/C,IAAIW,EAAE;MACN,IAAIN,cAAc,GAAGE,GAAG,EAAE;QACtBI,EAAE,GAAGN,cAAc,IAAIE,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,GAAG,CAAC;MAC7C,CAAC,MACI;QACDI,EAAE,GAAG,CAAC,CAAC,GAAGN,cAAc,IAAIE,GAAG,IAAI,CAAC,GAAGA,GAAG,CAAC;MAC/C;MACA,IAAIK,MAAM,GAAG,CAAC,CAAC,GAAGD,EAAE,KAAK,CAAC,GAAGN,cAAc,CAAC;MAC5C,IAAIO,MAAM,GAAGJ,cAAc,EAAE;QACzBG,EAAE,GAAG,CAAC,GAAGH,cAAc,IAAI,CAAC,GAAGH,cAAc,CAAC;MAClD;MACA,IAAIK,OAAO,GAAGC,EAAE,EAAE;QACdD,OAAO,GAAGC,EAAE;MAChB;MACAxJ,KAAK,CAACgJ,eAAe,CAACH,UAAU,EAAEU,OAAO,CAAC;IAC9C;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACArN,OAAO,CAACtD,SAAS,CAAC+P,qBAAqB,GAAG,UAAU3I,KAAK,mBAAkB6H,UAAU,sBAAqB;EACtG,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGD,UAAU,CAACxK,MAAM,EAAEyK,OAAO,EAAE,EAAE;IAC1D,IAAI4B,UAAU,GAAG7B,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC;IACtC,IAAI4B,UAAU,CAACxB,IAAI,IAAI,IAAI,EAAE;IAC7B,IAAIwB,UAAU,CAACb,UAAU,GAAG,CAAC,EAAE;IAC/B,IAAIU,OAAO,GAAGvJ,KAAK,CAACsJ,eAAe,CAACI,UAAU,CAACb,UAAU,CAAC;IAC1D,KAAK,IAAIR,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAGqB,UAAU,CAACxB,IAAI,CAAC7K,MAAM,EAAEgL,MAAM,EAAE,EAAE;MAC5D,IAAIC,SAAS,GAAGoB,UAAU,CAACxB,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC;MACzC,IAAIC,SAAS,CAACO,UAAU,GAAG,CAAC,EAAE;MAC9B7I,KAAK,CAACgJ,eAAe,CAACV,SAAS,CAACO,UAAU,EAAEU,OAAO,CAAC;IACxD;EACJ;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAStB,aAAa,CAAC/I,EAAE,aAAY;EACjC,IAAI,CAAC4J,UAAU,GAAG,CAAC,CAAC;EACpB,IAAI,CAACD,UAAU,GAAG,CAAC,CAAC;EACpB,IAAI,CAACX,IAAI,GAAG,IAAI,CAAC,CAAC;EAClB,IAAI,CAAChJ,EAAE,GAAGA,EAAE;AAChB;;AAEA;AACA;AACA;AACA+I,aAAa,CAACrP,SAAS,CAACgQ,SAAS,GAAG,UAAU5I,KAAK,mBAAkB;EACjE,IAAI,CAAC8I,UAAU,GAAG9I,KAAK,CAAC2J,aAAa,CAAC,UAAU,GAAG,IAAI,CAACzK,EAAE,CAAC;EAC3D,IAAI,CAAC2J,UAAU,GAAG7I,KAAK,CAAC4J,iBAAiB,CAACC,WAAW,CAACC,KAAK,CAAC,IAAI,CAAC5K,EAAE,CAAC,CAAC;EACrEc,KAAK,CAACM,aAAa,CAAC,IAAI,CAACwI,UAAU,EAAE,CAAC,CAAC;AAC3C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASiB,cAAc,GAAG;EACtB,IAAI,CAACC,OAAO,GAAG,IAAI,CAAC,CAAC;EACrB,IAAI,CAACC,WAAW,GAAG,CAAC;EACpB,IAAI,CAACC,WAAW,GAAG,CAAC;EACpB,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,KAAK,GAAG,CAAC;EACd,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,MAAM,GAAG,CAAC;EACf,IAAI,CAACC,WAAW,GAAG,CAAC;AACxB;;AAEA;AACAR,cAAc,CAACS,UAAU,GAAG,EAAE;;AAE9B;AACA;AACA;AACAT,cAAc,CAACnR,SAAS,CAAC6R,QAAQ,GAAG,UAAU/Q,CAAC,YAAWC,CAAC,YAAW;EAClE,IAAI,CAACsQ,WAAW,GAAGvQ,CAAC;EACpB,IAAI,CAACwQ,WAAW,GAAGvQ,CAAC;AACxB,CAAC;;AAED;AACA;AACA;AACAoQ,cAAc,CAACnR,SAAS,CAAC8R,IAAI,GAAG,YAAY;EACxC,OAAO,IAAI,CAACP,KAAK;AACrB,CAAC;;AAED;AACA;AACA;AACAJ,cAAc,CAACnR,SAAS,CAAC+R,IAAI,GAAG,YAAY;EACxC,OAAO,IAAI,CAACP,KAAK;AACrB,CAAC;;AAED;AACA;AACA;AACAL,cAAc,CAACnR,SAAS,CAACqO,MAAM,GAAG,YAAY;EAC1C,IAAI2D,iBAAiB,GAAG,IAAI;EAC5B,IAAIC,gBAAgB,GAAG,IAAI,GAAG,GAAG;EACjC,IAAIC,KAAK,GAAGD,gBAAgB,GAAGd,cAAc,CAACS,UAAU;EACxD,IAAI,IAAI,CAACD,WAAW,IAAI,CAAC,EAAE;IACvB,IAAI,CAACA,WAAW,GAAGjJ,QAAQ,CAACC,eAAe,EAAE;IAC7C;EACJ;EACA,IAAIwJ,UAAU,GAAGzJ,QAAQ,CAACC,eAAe,EAAE;EAC3C,IAAIyJ,eAAe,GAAG,CAACD,UAAU,GAAG,IAAI,CAACR,WAAW,IAAIR,cAAc,CAACS,UAAU,GAAG,MAAM;EAC1F,IAAI,CAACD,WAAW,GAAGQ,UAAU;EAC7B,IAAIE,kBAAkB,GAAGL,iBAAiB,GAAGb,cAAc,CAACS,UAAU;EACtE,IAAIU,KAAK,GAAGF,eAAe,GAAGF,KAAK,GAAGG,kBAAkB;EACxD,IAAIE,EAAE,GAAI,IAAI,CAAClB,WAAW,GAAG,IAAI,CAACE,KAAM;EACxC,IAAIiB,EAAE,GAAI,IAAI,CAAClB,WAAW,GAAG,IAAI,CAACE,KAAM;EACxC;EACA,IAAI3I,IAAI,CAAC4J,GAAG,CAACF,EAAE,CAAC,IAAI,IAAI,CAACnB,OAAO,IAAIvI,IAAI,CAAC4J,GAAG,CAACD,EAAE,CAAC,IAAI,IAAI,CAACpB,OAAO,EAAE;EAClE,IAAIsB,CAAC,GAAG7J,IAAI,CAAC8J,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;EACpC,IAAII,EAAE,GAAGV,KAAK,GAAGK,EAAE,GAAGG,CAAC;EACvB,IAAIG,EAAE,GAAGX,KAAK,GAAGM,EAAE,GAAGE,CAAC;EACvB,IAAII,EAAE,GAAGF,EAAE,GAAG,IAAI,CAACnB,MAAM;EACzB,IAAIsB,EAAE,GAAGF,EAAE,GAAG,IAAI,CAACnB,MAAM;EACzB,IAAIvR,CAAC,GAAG0I,IAAI,CAAC8J,IAAI,CAACG,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;EACpC,IAAI5S,CAAC,GAAG,CAACmS,KAAK,IAAInS,CAAC,GAAGmS,KAAK,EAAE;IACzBQ,EAAE,IAAIR,KAAK,GAAGnS,CAAC;IACf4S,EAAE,IAAIT,KAAK,GAAGnS,CAAC;IACfA,CAAC,GAAGmS,KAAK;EACb;EACA,IAAI,CAACb,MAAM,IAAIqB,EAAE;EACjB,IAAI,CAACpB,MAAM,IAAIqB,EAAE;EACjB;IACI,IAAIC,KAAK,GAAG,GAAG,IAAInK,IAAI,CAAC8J,IAAI,CAACL,KAAK,GAAGA,KAAK,GAAG,EAAE,GAAGA,KAAK,GAAGI,CAAC,GAAG,CAAC,GAAGJ,KAAK,GAAGI,CAAC,CAAC,GAAGJ,KAAK,CAAC;IACrF,IAAIW,KAAK,GAAGpK,IAAI,CAAC8J,IAAI,CAAC,IAAI,CAAClB,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC;IAC5E,IAAIuB,KAAK,GAAGD,KAAK,EAAE;MACf,IAAI,CAACvB,MAAM,IAAIuB,KAAK,GAAGC,KAAK;MAC5B,IAAI,CAACvB,MAAM,IAAIsB,KAAK,GAAGC,KAAK;IAChC;EACJ;EACA,IAAI,CAAC1B,KAAK,IAAI,IAAI,CAACE,MAAM;EACzB,IAAI,CAACD,KAAK,IAAI,IAAI,CAACE,MAAM;AAC7B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASwB,aAAa,GAAG;EACrB1J,WAAW,CAACxJ,SAAS,CAACiF,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5C,IAAI,CAACiO,UAAU,GAAG,IAAI;EACtB,IAAI,CAACC,WAAW,GAAG,IAAI;EACvB,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,YAAY,GAAG,IAAI;EACxB,IAAI,CAACC,OAAO,GAAG,IAAI;EACnB,IAAI,CAACC,QAAQ,GAAG,IAAI;EACpB,IAAI,CAACC,MAAM,GAAG,IAAI;EAClB,IAAI,CAACC,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,GAAG,GAAGC,MAAM,CAACC,SAAS;EAC3B,IAAI,CAACC,GAAG,GAAG,CAAC;AAChB;AAEAZ,aAAa,CAAClT,SAAS,GAAG,IAAIwJ,WAAW,EAAE,CAAC,CAAC;;AAE7C;AACA;AACA;AACA0J,aAAa,CAAClT,SAAS,CAAC+T,WAAW,GAAG,YAAY;EAC9C,OAAO,IAAI,CAACJ,GAAG;AACnB,CAAC;;AAED;AACA;AACA;AACAT,aAAa,CAAClT,SAAS,CAACgU,WAAW,GAAG,YAAY;EAC9C,OAAO,IAAI,CAACF,GAAG;AACnB,CAAC;;AAED;AACA;AACA;AACAZ,aAAa,CAAClT,SAAS,CAACiU,WAAW,GAAG,UAAU1T,CAAC,YAAW;EACxD,IAAI,CAACoT,GAAG,GAAGpT,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACA2S,aAAa,CAAClT,SAAS,CAACkU,WAAW,GAAG,UAAU3T,CAAC,YAAW;EACxD,IAAI,CAACuT,GAAG,GAAGvT,CAAC;AAChB,CAAC;;AAED;AACA;AACA;AACA2S,aAAa,CAAClT,SAAS,CAACmU,UAAU,GAAG,YAAY;EAC7C,OAAO,IAAI,CAAC9J,SAAS,EAAE,IAAI,IAAI,CAACsJ,GAAG;AACvC,CAAC;;AAED;AACA;AACA;AACAT,aAAa,CAAClT,SAAS,CAACoU,UAAU,GAAG,YAAY;EAC7C,OAAO,IAAI,CAAC/J,SAAS,EAAE,IAAI,IAAI,CAACyJ,GAAG;AACvC,CAAC;;AAED;AACA;AACA;AACAZ,aAAa,CAAClT,SAAS,CAACqU,eAAe,GAAG,UAAU1J,MAAM,YAAWC,MAAM,YAAW;EAClF,IAAI,IAAI,CAACnB,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC8J,OAAO,IAAI,IAAI,CAAC9J,EAAE,CAAC,EAAE,CAAC,GAAGkB,MAAM,CAAC,GAAG,IAAI,CAACwI,UAAU,EACpExI,MAAM,GAAG,IAAI,CAACwI,UAAU,GAAG,IAAI,CAAC1J,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC8J,OAAO,GAAG,IAAI,CAAC9J,EAAE,CAAC,EAAE,CAAC;EACtE,IAAI,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC+J,QAAQ,IAAI,IAAI,CAAC/J,EAAE,CAAC,EAAE,CAAC,GAAGkB,MAAM,CAAC,GAAG,IAAI,CAACyI,WAAW,EACtEzI,MAAM,GAAG,IAAI,CAACyI,WAAW,GAAG,IAAI,CAAC3J,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC+J,QAAQ,GAAG,IAAI,CAAC/J,EAAE,CAAC,EAAE,CAAC;EACxE,IAAI,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACgK,MAAM,IAAI,IAAI,CAAChK,EAAE,CAAC,EAAE,CAAC,GAAGmB,MAAM,CAAC,GAAG,IAAI,CAACyI,SAAS,EAClEzI,MAAM,GAAG,IAAI,CAACyI,SAAS,GAAG,IAAI,CAAC5J,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACgK,MAAM,GAAG,IAAI,CAAChK,EAAE,CAAC,EAAE,CAAC;EACpE,IAAI,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACiK,SAAS,IAAI,IAAI,CAACjK,EAAE,CAAC,EAAE,CAAC,GAAGmB,MAAM,CAAC,GAAG,IAAI,CAAC0I,YAAY,EACxE1I,MAAM,GAAG,IAAI,CAAC0I,YAAY,GAAG,IAAI,CAAC7J,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAACiK,SAAS,GAAG,IAAI,CAACjK,EAAE,CAAC,EAAE,CAAC;EAE1E,IAAIoB,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACVF,MAAM,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EACzBpB,WAAW,CAACI,GAAG,CAACiB,GAAG,EAAE,IAAI,CAACpB,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACAyJ,aAAa,CAAClT,SAAS,CAACsU,WAAW,GAAG,UAAUC,EAAE,YAAWC,EAAE,YAAWpJ,KAAK,YAAW;EACtF,IAAIqJ,WAAW,GAAGrJ,KAAK,GAAG,IAAI,CAAC3B,EAAE,CAAC,CAAC,CAAC;EACpC,IAAIgL,WAAW,GAAG,IAAI,CAACX,GAAG,EAAE;IACxB,IAAI,IAAI,CAACrK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE2B,KAAK,GAAG,IAAI,CAAC0I,GAAG,GAAG,IAAI,CAACrK,EAAE,CAAC,CAAC,CAAC;EACrD,CAAC,MACI,IAAIgL,WAAW,GAAG,IAAI,CAACd,GAAG,EAAE;IAC7B,IAAI,IAAI,CAAClK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE2B,KAAK,GAAG,IAAI,CAACuI,GAAG,GAAG,IAAI,CAAClK,EAAE,CAAC,CAAC,CAAC;EACrD;EACA,IAAIoB,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV0J,EAAE,EAAEC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACjB,IAAIE,GAAG,GAAG,CAACtJ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACrB,CAAC,EAAEA,KAAK,EAAE,CAAC,EAAE,CAAC,EACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACf,IAAIuJ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACV,CAACJ,EAAE,EAAE,CAACC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EACnBhL,WAAW,CAACI,GAAG,CAAC+K,GAAG,EAAE,IAAI,CAAClL,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;EACtCD,WAAW,CAACI,GAAG,CAAC8K,GAAG,EAAE,IAAI,CAACjL,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;EACtCD,WAAW,CAACI,GAAG,CAACiB,GAAG,EAAE,IAAI,CAACpB,EAAE,EAAE,IAAI,CAACA,EAAE,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACAyJ,aAAa,CAAClT,SAAS,CAAC4U,aAAa,GAAG,UAAUxQ,IAAI,YAAWC,KAAK,YAAWE,MAAM,YAAWD,GAAG,YAAW;EAC5G,IAAI,CAAC6O,UAAU,GAAG/O,IAAI;EACtB,IAAI,CAACgP,WAAW,GAAG/O,KAAK;EACxB,IAAI,CAACgP,SAAS,GAAG/O,GAAG;EACpB,IAAI,CAACgP,YAAY,GAAG/O,MAAM;AAC9B,CAAC;;AAED;AACA;AACA;AACA2O,aAAa,CAAClT,SAAS,CAAC6U,gBAAgB,GAAG,UAAUzQ,IAAI,YAAWC,KAAK,YAAWE,MAAM,YAAWD,GAAG,YAAW;EAC/G,IAAI,CAACiP,OAAO,GAAGnP,IAAI;EACnB,IAAI,CAACoP,QAAQ,GAAGnP,KAAK;EACrB,IAAI,CAACoP,MAAM,GAAGnP,GAAG;EACjB,IAAI,CAACoP,SAAS,GAAGnP,MAAM;AAC3B,CAAC;;AAED;AACA;AACA;AACA2O,aAAa,CAAClT,SAAS,CAAC8U,aAAa,GAAG,YAAY;EAChD,OAAO,IAAI,CAAC3B,UAAU;AAC1B,CAAC;;AAED;AACA;AACA;AACAD,aAAa,CAAClT,SAAS,CAAC+U,cAAc,GAAG,YAAY;EACjD,OAAO,IAAI,CAAC3B,WAAW;AAC3B,CAAC;;AAED;AACA;AACA;AACAF,aAAa,CAAClT,SAAS,CAACgV,eAAe,GAAG,YAAY;EAClD,OAAO,IAAI,CAAC1B,YAAY;AAC5B,CAAC;;AAED;AACA;AACA;AACAJ,aAAa,CAAClT,SAAS,CAACiV,YAAY,GAAG,YAAY;EAC/C,OAAO,IAAI,CAAC5B,SAAS;AACzB,CAAC;;AAED;AACA;AACA;AACAH,aAAa,CAAClT,SAAS,CAACkV,UAAU,GAAG,YAAY;EAC7C,OAAO,IAAI,CAAC3B,OAAO;AACvB,CAAC;;AAED;AACA;AACA;AACAL,aAAa,CAAClT,SAAS,CAACmV,WAAW,GAAG,YAAY;EAC9C,OAAO,IAAI,CAAC3B,QAAQ;AACxB,CAAC;;AAED;AACA;AACA;AACAN,aAAa,CAAClT,SAAS,CAACoV,YAAY,GAAG,YAAY;EAC/C,OAAO,IAAI,CAAC1B,SAAS;AACzB,CAAC;;AAED;AACA;AACA;AACAR,aAAa,CAAClT,SAAS,CAACqV,SAAS,GAAG,YAAY;EAC5C,OAAO,IAAI,CAAC5B,MAAM;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASjS,eAAe,GAAG,CAC3B;;AAEA;AACAA,eAAe,CAAC8T,eAAe,GAAG,IAAI;;AAEtC;AACA;AACA;AACA9T,eAAe,CAACC,kBAAkB,GAAG,YAAY;EAC7C,OAAOD,eAAe,CAAC8T,eAAe;AAC1C,CAAC;;AAED;AACA;AACA;AACA9T,eAAe,CAAC+T,kBAAkB,GAAG,UAAUD,eAAe,CAAC,sBAAsB;EACjF9T,eAAe,CAAC8T,eAAe,GAAGA,eAAe;AACrD,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG;EACbtE,cAAc,EAAEA,cAAc;EAC9B3P,eAAe,EAAEA,eAAe;EAChC0R,aAAa,EAAEA,aAAa;EAC5B5P,OAAO,EAAEA,OAAO;EAChB+L,aAAa,EAAEA,aAAa;EAC5B1L,UAAU,EAAEA,UAAU;EACtBjE,gBAAgB,EAAEA,gBAAgB;EAClC0C,cAAc,EAAEA,cAAc;EAC9BoH,WAAW,EAAEA,WAAW;EACxBxB,SAAS,EAAEA,SAAS;EACpBL,WAAW,EAAEA,WAAW;EACxBX,kBAAkB,EAAEA,kBAAkB;EACtC7D,mBAAmB,EAAEA,mBAAmB;EACxC7E,YAAY,EAAEA;AAClB,CAAC;;;;;;;;;;;;;;;;;;;;;AC9+CwF;AACtC;AACD;AACC;AAEnD,MAAMwX,SAAS,GAAG,IAAIJ,0DAAiB,EAAE;AACzC,IAAIK,WAAW,GAAG,KAAK;AACvB,IAAIC,EAAE,GAAG,IAAI;AACb,IAAIC,MAAM,GAAG,IAAI;AACjB,IAAIC,OAAO,GAAG,IAAI;AAClB,IAAIC,UAAU,GAAG,IAAI;AACrB,IAAIC,UAAU,GAAG,IAAI;AACrB,IAAIC,cAAc,GAAG,IAAI;AACzB,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,MAAM,GAAG,CAAC;AACd,IAAIC,UAAU,GAAG,CAAC;AAClB,IAAIC,UAAU,GAAG,CAAC;AAClB,IAAIC,YAAY,GAAG,CAAC;AACpB,IAAIC,QAAQ,GAAG,EAAE;AACjB,IAAIC,QAAQ,GAAG,GAAG;AAElB,SAASC,aAAa,CAACC,QAAQ,EAAE;EAC/Bb,MAAM,GAAGc,QAAQ,CAACC,cAAc,CAACF,QAAQ,CAAC;EAC1C,IAAIb,MAAM,CAACgB,gBAAgB,EAAE;IAC3B;IACAC,MAAM,CAACD,gBAAgB,CAAC,OAAO,EAAEE,UAAU,CAAC;IAC5CD,MAAM,CAACD,gBAAgB,CAAC,WAAW,EAAEE,UAAU,CAAC;IAChDD,MAAM,CAACD,gBAAgB,CAAC,WAAW,EAAEE,UAAU,CAAC;IAChDD,MAAM,CAACD,gBAAgB,CAAC,SAAS,EAAEE,UAAU,CAAC;IAC9CJ,QAAQ,CAACE,gBAAgB,CAAC,UAAU,EAAEE,UAAU,CAAC;IACjD;IACAD,MAAM,CAACD,gBAAgB,CAAC,YAAY,EAAEG,UAAU,CAAC;IACjDF,MAAM,CAACD,gBAAgB,CAAC,UAAU,EAAEG,UAAU,CAAC;IAC/CF,MAAM,CAACD,gBAAgB,CAAC,WAAW,EAAEG,UAAU,CAAC;EAClD;AACF;AAEA,SAASC,IAAI,CAACV,QAAQ,EAAE;EACtB,IAAIpL,KAAK,GAAG0K,MAAM,CAAC1K,KAAK;EACxB,IAAIC,MAAM,GAAGyK,MAAM,CAACzK,MAAM;EAE1B0K,OAAO,GAAG,IAAI/E,sEAAc,EAAE;EAE9B,IAAImG,KAAK,GAAG9L,MAAM,GAAGD,KAAK;EAC1B,IAAInH,IAAI,GAAGuR,qEAA4B;EACvC,IAAItR,KAAK,GAAGsR,sEAA6B;EACzC,IAAIpR,MAAM,GAAG,CAAC+S,KAAK;EACnB,IAAIhT,GAAG,GAAGgT,KAAK;EAEfJ,MAAM,CAAClV,MAAM,CAACyV,YAAY,GAAG,KAAK;EAElCtB,UAAU,GAAG,IAAIjD,qEAAa,EAAE;EAGhCiD,UAAU,CAACvB,aAAa,CAACxQ,IAAI,EAAEC,KAAK,EAAEE,MAAM,EAAED,GAAG,CAAC;EAElD6R,UAAU,CAACtB,gBAAgB,CAACc,yEAAgC,EAC1DA,0EAAiC,EACjCA,2EAAkC,EAClCA,wEAA+B,CAAC;EAElCQ,UAAU,CAAClC,WAAW,CAAC0B,kEAAyB,CAAC;EACjDQ,UAAU,CAACjC,WAAW,CAACyB,kEAAyB,CAAC;EAEjDS,UAAU,GAAG,IAAI5M,mEAAW,EAAE;EAC9B4M,UAAU,CAACnL,SAAS,CAAC,CAAC,EAAGM,KAAK,GAAGC,MAAM,CAAE;EAEzC6K,cAAc,GAAG,IAAI7M,mEAAW,EAAE;EAClC6M,cAAc,CAAC3L,aAAa,CAAC,CAACa,KAAK,GAAG,GAAG,EAAE,CAACC,MAAM,GAAG,GAAG,CAAC;EACzD6K,cAAc,CAACpL,SAAS,CAAC,CAAC,GAAGM,KAAK,EAAE,CAAC,CAAC,GAAGA,KAAK,CAAC;EAE/CyK,EAAE,GAAGgC,eAAe,EAAE;EACtBpC,uDAAU,CAACI,EAAE,CAAC;EACd,IAAI,CAACA,EAAE,EAAE;IACP9T,OAAO,CAACC,KAAK,CAAC,iCAAiC,CAAC;IAChD,IAAG,CAAC,CAAC+U,MAAM,CAACe,qBAAqB,EAAC;MAChC/V,OAAO,CAACC,KAAK,CAAC,wFAAwF,CAAC;IACzG;IACA;EACF;EACA+U,MAAM,CAAClV,MAAM,CAACkW,KAAK,CAAClC,EAAE,CAAC;EACvBA,EAAE,CAACmC,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACjCC,WAAW,CAACzB,QAAQ,CAAC;EACrB0B,SAAS,EAAE;AACb;AAEA,SAASA,SAAS,GAAG;EACnB,IAAI,CAACtC,WAAW,EAAE;IAChBA,WAAW,GAAG,IAAI;IAClB,CAAC,SAASuC,IAAI,GAAG;MACfC,IAAI,EAAE;MACN,IAAIC,qBAAqB,GACvBtB,MAAM,CAACsB,qBAAqB,IAC5BtB,MAAM,CAACuB,wBAAwB,IAC/BvB,MAAM,CAACwB,2BAA2B,IAClCxB,MAAM,CAACyB,uBAAuB;MAE9B,IAAIzB,MAAM,CAAClV,MAAM,CAACyV,YAAY,EAAE;QAC5BP,MAAM,CAAClV,MAAM,CAACyV,YAAY,GAAG,KAAK;QAClC,IAAInI,IAAI,GAAGyH,QAAQ,CAAC6B,aAAa,CAAC,GAAG,CAAC;QACtC7B,QAAQ,CAAC8B,IAAI,CAACC,WAAW,CAACxJ,IAAI,CAAC;QAC/BA,IAAI,CAACyJ,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC;QACnCzJ,IAAI,CAAC0J,IAAI,GAAG/C,MAAM,CAACgD,SAAS,EAAE;QAC9B3J,IAAI,CAAC4J,QAAQ,GAAGhC,MAAM,CAAClV,MAAM,CAACmX,WAAW,IAAI,YAAY;QACzD7J,IAAI,CAAC8J,KAAK,EAAE;MAChB;MAEFZ,qBAAqB,CAACF,IAAI,EAAErC,MAAM,CAAC;IACrC,CAAC,GAAG;EACN;AACF;AAEA,SAASsC,IAAI,GACb;EACI1C,qEAAiB,EAAE;EACnBA,4EAAwB,EAAE;EAC1BK,OAAO,CAAC7H,MAAM,EAAE;EAChByH,SAAS,CAAC7U,OAAO,CAACiV,OAAO,CAACpE,IAAI,EAAE,EAAEoE,OAAO,CAACnE,IAAI,EAAE,CAAC;EAEjDiE,EAAE,CAACuD,KAAK,CAACvD,EAAE,CAACwD,gBAAgB,CAAC;EAE7B3D,0EAAsB,CAACO,UAAU,CAAClM,QAAQ,EAAE,CAAC;EAC7C2L,0EAAsB,CAACM,UAAU,CAACjM,QAAQ,EAAE,CAAC;EAC7C2L,oEAAgB,EAAE;EAElB,KAAK,IAAI1P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2P,SAAS,CAAC4D,SAAS,EAAE,EAAEvT,CAAC,EAAE,EAC9C;IACI,IAAIiB,KAAK,GAAG0O,SAAS,CAAC6D,QAAQ,CAACxT,CAAC,CAAC;IAEjC,IAAGiB,KAAK,IAAI,IAAI,EAAE;IAElB,IAAIA,KAAK,CAACvI,WAAW,IAAI,CAACuI,KAAK,CAACtI,QAAQ,EACxC;MACIsI,KAAK,CAACiH,MAAM,EAAE;MACdjH,KAAK,CAACmR,IAAI,CAACvC,EAAE,CAAC;IAClB;EACJ;EACAH,mEAAe,EAAE;AACrB;AAEA,SAASuC,WAAW,CAACzB,QAAQ,EAC7B;EACIb,SAAS,CAAC+D,SAAS,GAAG,IAAI;EAC1B/D,SAAS,CAACgE,KAAK,EAAE;EACjBhE,SAAS,CAACsC,WAAW,CAACpC,EAAE,EAACW,QAAQ,CAAC;AACtC;AAEA,SAASoD,YAAY,CAAC3O,KAAK,EAC3B;EACI,IAAI+I,UAAU,GAAGgC,UAAU,CAAChC,UAAU,EAAE;EACxC,IAAIC,UAAU,GAAG+B,UAAU,CAAC/B,UAAU,EAAE;EAExC+B,UAAU,CAAC7B,WAAW,CAAC,CAAC,EAAE,CAAC,EAAElJ,KAAK,CAAC;EAEnC,IAAI,CAAC+I,UAAU,EACf;IACI,IAAIgC,UAAU,CAAChC,UAAU,EAAE,EAC3B;MACI2B,SAAS,CAACkE,aAAa,EAAE;IAC7B;EACJ;EAEA,IAAI,CAAC5F,UAAU,EACf;IACI,IAAI+B,UAAU,CAAC/B,UAAU,EAAE,EAC3B;MACI0B,SAAS,CAACmE,aAAa,EAAE;IAC7B;EACJ;AACJ;AAEA,SAASC,cAAc,CAACC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAChD;EACI,IAAIla,CAAC,GAAG;IACJW,CAAC,EAAEsZ,SAAS,CAACtZ,CAAC,GAAGqZ,MAAM,CAACrZ,CAAC;IACzBC,CAAC,EAAEqZ,SAAS,CAACrZ,CAAC,GAAGoZ,MAAM,CAACpZ;EAC5B,CAAC;EACD,IAAI6H,CAAC,GAAGC,IAAI,CAAC8J,IAAI,CAAC9J,IAAI,CAACyR,GAAG,CAACna,CAAC,CAACW,CAAC,EAAC,CAAC,CAAC,GAAG+H,IAAI,CAACyR,GAAG,CAACna,CAAC,CAACY,CAAC,EAAC,CAAC,CAAC,CAAC;EACpD,IAAI6H,CAAC,GAAGyR,KAAK,EAAE;IACXla,CAAC,GAAG;MACAW,CAAC,EAAEX,CAAC,CAACW,CAAC,GAAG8H,CAAC,GAAGyR,KAAK,GAAGF,MAAM,CAACrZ,CAAC;MAC7BC,CAAC,EAAEZ,CAAC,CAACY,CAAC,GAAG6H,CAAC,GAAGyR,KAAK,GAAGF,MAAM,CAACpZ;IAChC,CAAC;IACD,OAAOZ,CAAC;EACZ,CAAC,MAAM;IACH,OAAOia,SAAS;EACpB;AACJ;AAEA,SAASG,GAAG,CAACC,CAAC,EAACC,CAAC,EAChB;EACI,OAAOD,CAAC,CAAC1Z,CAAC,GAAG2Z,CAAC,CAAC3Z,CAAC,GAAG0Z,CAAC,CAACzZ,CAAC,GAAG0Z,CAAC,CAAC1Z,CAAC;AAChC;AAEA,SAAS2Z,SAAS,CAAC5Z,CAAC,EAACC,CAAC,EACtB;EACI,IAAI0D,MAAM,GAAGoE,IAAI,CAAC8J,IAAI,CAAC7R,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;EACrC,OAAO;IACHD,CAAC,EAAEA,CAAC,GAAG2D,MAAM;IACb1D,CAAC,EAAEA,CAAC,GAAG0D;EACX,CAAC;AACL;AAEA,SAASkW,aAAa,CAACR,MAAM,EAAEC,SAAS,EAAEQ,IAAI,EAC9C;EACI,IAAIR,SAAS,CAACtZ,CAAC,GAAG8Z,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,IAAI6O,SAAS,CAACrZ,CAAC,GAAG6Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,IAC5E4O,SAAS,CAACtZ,CAAC,GAAG8Z,IAAI,CAACxW,IAAI,IAAIgW,SAAS,CAACrZ,CAAC,GAAG6Z,IAAI,CAACtW,GAAG,EAAE,OAAO8V,SAAS;EACvE,IAAIS,KAAK,GAAGV,MAAM,CAACrZ,CAAC,GAAGsZ,SAAS,CAACtZ,CAAC;EAClC,IAAIga,KAAK,GAAGX,MAAM,CAACpZ,CAAC,GAAGqZ,SAAS,CAACrZ,CAAC;EAElC,SAASga,KAAK,CAACF,KAAK,EAAEC,KAAK,EAC3B;IACI,OAAOjS,IAAI,CAACmS,IAAI,CAACT,GAAG,CAAC;MACjBzZ,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACP,CAAC,EAAE2Z,SAAS,CAACG,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGjS,IAAI,CAACoS,EAAE;EAChD;EAEA,IAAIC,WAAW,GAAGH,KAAK,CAACF,KAAK,EAAEC,KAAK,CAAC;EACrC,IAAIV,SAAS,CAACtZ,CAAC,GAAGqZ,MAAM,CAACrZ,CAAC,EAAEoa,WAAW,GAAG,GAAG,GAAGA,WAAW;EAC3D,IAAIC,YAAY,GAAG,GAAG,GAAGJ,KAAK,CAACH,IAAI,CAACxW,IAAI,GAAG+V,MAAM,CAACrZ,CAAC,EAAE,CAAC8Z,IAAI,CAACtW,GAAG,GAAG6V,MAAM,CAACpZ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChF,IAAIqa,eAAe,GAAG,GAAG,GAAGL,KAAK,CAACH,IAAI,CAACxW,IAAI,GAAG+V,MAAM,CAACrZ,CAAC,EAAE,CAAC8Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAG2O,MAAM,CAACpZ,CAAC,IAAI,CAAC,CAAC,CAAC;EACjG,IAAIsa,aAAa,GAAGN,KAAK,CAACH,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG4O,MAAM,CAACrZ,CAAC,EAAE,CAAC8Z,IAAI,CAACtW,GAAG,GAAG6V,MAAM,CAACpZ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxF,IAAIua,gBAAgB,GAAGP,KAAK,CAACH,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG4O,MAAM,CAACrZ,CAAC,EAAE,CAAC8Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAG2O,MAAM,CAACpZ,CAAC,IAAI,CAAC,CAAC,CAAC;EACzG,IAAIqK,KAAK,GAAG0P,KAAK,GAAGD,KAAK;EACzB,IAAIU,GAAG,GAAG,CAAC,CAAC;EAEZ,IAAIL,WAAW,GAAGG,aAAa,EAAE;IAC7B,IAAIG,EAAE,GAAGZ,IAAI,CAACtW,GAAG,GAAG6V,MAAM,CAACpZ,CAAC;IAC5B,IAAI0a,EAAE,GAAGD,EAAE,GAAGpQ,KAAK;IACnBmQ,GAAG,GAAG;MACFxa,CAAC,EAAEoZ,MAAM,CAACpZ,CAAC,GAAGya,EAAE;MAChB1a,CAAC,EAAEqZ,MAAM,CAACrZ,CAAC,GAAG2a;IAClB,CAAC;EACL,CAAC,MAAM,IAAGP,WAAW,GAAGI,gBAAgB,EAAE;IACtC,IAAIG,EAAE,GAAGb,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG4O,MAAM,CAACrZ,CAAC;IAC1C,IAAI0a,EAAE,GAAGC,EAAE,GAAGrQ,KAAK;IACnBmQ,GAAG,GAAG;MACFxa,CAAC,EAAEoZ,MAAM,CAACpZ,CAAC,GAAGya,EAAE;MAChB1a,CAAC,EAAEqZ,MAAM,CAACrZ,CAAC,GAAG2a;IAClB,CAAC;EACL,CAAC,MAAM,IAAIP,WAAW,GAAGE,eAAe,EAAE;IACtC,IAAII,EAAE,GAAGZ,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAG2O,MAAM,CAACpZ,CAAC;IAC1C,IAAI0a,EAAE,GAAGD,EAAE,GAAGpQ,KAAK;IACnBmQ,GAAG,GAAG;MACFxa,CAAC,EAAEoZ,MAAM,CAACpZ,CAAC,GAAGya,EAAE;MAChB1a,CAAC,EAAEqZ,MAAM,CAACrZ,CAAC,GAAG2a;IAClB,CAAC;EACL,CAAC,MAAM,IAAIP,WAAW,GAAGC,YAAY,EAAE;IACnC,IAAIM,EAAE,GAAGtB,MAAM,CAACrZ,CAAC,GAAG8Z,IAAI,CAACxW,IAAI;IAC7B,IAAIoX,EAAE,GAAGC,EAAE,GAAGrQ,KAAK;IACnBmQ,GAAG,GAAG;MACFxa,CAAC,EAAEoZ,MAAM,CAACpZ,CAAC,GAAGya,EAAE;MAChB1a,CAAC,EAAEqZ,MAAM,CAACrZ,CAAC,GAAG2a;IAClB,CAAC;EACL,CAAC,MAAM;IACH,IAAID,EAAE,GAAGZ,IAAI,CAACtW,GAAG,GAAG6V,MAAM,CAACpZ,CAAC;IAC5B,IAAI0a,EAAE,GAAGD,EAAE,GAAGpQ,KAAK;IACnBmQ,GAAG,GAAG;MACFxa,CAAC,EAAEoZ,MAAM,CAACpZ,CAAC,GAAGya,EAAE;MAChB1a,CAAC,EAAEqZ,MAAM,CAACrZ,CAAC,GAAG2a;IAClB,CAAC;EACL;EAEA,OAAOF,GAAG;AACd;AAEA,SAASG,aAAa,CAACC,KAAK,EAC5B;EACIrF,IAAI,GAAG,IAAI;EAEX,IAAIsE,IAAI,GAAG3E,MAAM,CAAC2F,qBAAqB,EAAE;EAEzC,IAAIC,EAAE,GAAGC,gBAAgB,CAACH,KAAK,CAACI,OAAO,GAAGnB,IAAI,CAACxW,IAAI,CAAC;EACpD,IAAI4X,EAAE,GAAGC,gBAAgB,CAACN,KAAK,CAACO,OAAO,GAAGtB,IAAI,CAACtW,GAAG,CAAC;EACnD,IAAI0J,MAAM,GAAG2M,aAAa,CAAC;IACvB7Z,CAAC,EAAE8Z,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG,CAAC;IAC7BxK,CAAC,EAAE6Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAGoL;EAChC,CAAC,EAAE;IACC9V,CAAC,EAAE6a,KAAK,CAACI,OAAO;IAChBhb,CAAC,EAAE4a,KAAK,CAACO;EACb,CAAC,EAAEtB,IAAI,CAAC;EACR,IAAIhI,EAAE,GAAGuJ,cAAc,CAACnO,MAAM,CAAClN,CAAC,GAAG8Z,IAAI,CAACxW,IAAI,CAAC;EAC7C,IAAIyO,EAAE,GAAGuJ,cAAc,CAACpO,MAAM,CAACjN,CAAC,GAAG6Z,IAAI,CAACtW,GAAG,CAAC;EAE5C,IAAIqR,mEAA0B,EAC1BzT,OAAO,CAACR,GAAG,CAAC,wBAAwB,GAAGia,KAAK,CAACI,OAAO,GAAG,KAAK,GAAGJ,KAAK,CAACO,OAAO,GAAG,aAAa,GAAGtJ,EAAE,GAAG,KAAK,GAAGC,EAAE,GAAG,GAAG,CAAC;EAEzH2D,UAAU,GAAGqF,EAAE;EACfpF,UAAU,GAAGuF,EAAE;EAEf9F,OAAO,CAACrE,QAAQ,CAACe,EAAE,EAAEC,EAAE,CAAC;;EAExB;AACJ;;AAEA,SAASyJ,aAAa,CAACX,KAAK,EAC5B;EACIrF,IAAI,GAAG,IAAI;EAEX,IAAIsE,IAAI,GAAG3E,MAAM,CAAC2F,qBAAqB,EAAE;EAEzC,IAAIC,EAAE,GAAGC,gBAAgB,CAACH,KAAK,CAACI,OAAO,GAAGnB,IAAI,CAACxW,IAAI,CAAC;EACpD,IAAI4X,EAAE,GAAGC,gBAAgB,CAACN,KAAK,CAACO,OAAO,GAAGtB,IAAI,CAACtW,GAAG,CAAC;EACnD,IAAI0J,MAAM,GAAG2M,aAAa,CAAC;IACvB7Z,CAAC,EAAE8Z,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG,CAAC;IAC7BxK,CAAC,EAAE6Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAGoL;EAChC,CAAC,EAAE;IACC9V,CAAC,EAAE6a,KAAK,CAACI,OAAO;IAChBhb,CAAC,EAAE4a,KAAK,CAACO;EACb,CAAC,EAAEtB,IAAI,CAAC;EACR,IAAIhI,EAAE,GAAGuJ,cAAc,CAACnO,MAAM,CAAClN,CAAC,GAAG8Z,IAAI,CAACxW,IAAI,CAAC;EAC7C,IAAIyO,EAAE,GAAGuJ,cAAc,CAACpO,MAAM,CAACjN,CAAC,GAAG6Z,IAAI,CAACtW,GAAG,CAAC;EAE5C,IAAIqR,mEAA0B,EAC1BzT,OAAO,CAACR,GAAG,CAAC,wBAAwB,GAAGia,KAAK,CAACI,OAAO,GAAG,KAAK,GAAGJ,KAAK,CAACO,OAAO,GAAG,aAAa,GAAGtJ,EAAE,GAAG,KAAK,GAAGC,EAAE,GAAG,GAAG,CAAC;EAEzH2D,UAAU,GAAGqF,EAAE;EACfpF,UAAU,GAAGuF,EAAE;;EAEf;;EAEAlG,SAAS,CAACyG,QAAQ,CAAC3J,EAAE,EAAEC,EAAE,CAAC;AAC9B;AAEA,SAAS2J,aAAa,CAACb,KAAK,EAC5B;EACI,IAAIf,IAAI,GAAG3E,MAAM,CAAC2F,qBAAqB,EAAE;EAEzC,IAAIC,EAAE,GAAGC,gBAAgB,CAACH,KAAK,CAACI,OAAO,GAAGnB,IAAI,CAACxW,IAAI,CAAC;EACpD,IAAI4X,EAAE,GAAGC,gBAAgB,CAACN,KAAK,CAACO,OAAO,GAAGtB,IAAI,CAACtW,GAAG,CAAC;EACnD,IAAI0J,MAAM,GAAG2M,aAAa,CAAC;IACvB7Z,CAAC,EAAE8Z,IAAI,CAACxW,IAAI,GAAGwW,IAAI,CAACrP,KAAK,GAAG,CAAC;IAC7BxK,CAAC,EAAE6Z,IAAI,CAACtW,GAAG,GAAGsW,IAAI,CAACpP,MAAM,GAAGoL;EAChC,CAAC,EAAE;IACC9V,CAAC,EAAE6a,KAAK,CAACI,OAAO;IAChBhb,CAAC,EAAE4a,KAAK,CAACO;EACb,CAAC,EAAEtB,IAAI,CAAC;EACR,IAAIhI,EAAE,GAAGuJ,cAAc,CAACnO,MAAM,CAAClN,CAAC,GAAG8Z,IAAI,CAACxW,IAAI,CAAC;EAC7C,IAAIyO,EAAE,GAAGuJ,cAAc,CAACpO,MAAM,CAACjN,CAAC,GAAG6Z,IAAI,CAACtW,GAAG,CAAC;EAE5C,IAAIqR,mEAA0B,EAC1BzT,OAAO,CAACR,GAAG,CAAC,wBAAwB,GAAGia,KAAK,CAACI,OAAO,GAAG,KAAK,GAAGJ,KAAK,CAACO,OAAO,GAAG,aAAa,GAAGtJ,EAAE,GAAG,KAAK,GAAGC,EAAE,GAAG,GAAG,CAAC;EAEzH,IAAIyD,IAAI,EACR;IACIE,UAAU,GAAGqF,EAAE;IACfpF,UAAU,GAAGuF,EAAE;IACf9F,OAAO,CAACrE,QAAQ,CAACe,EAAE,EAAEC,EAAE,CAAC;EAC5B;AACJ;AAEA,SAAS4J,SAAS,GAClB;EACI,IAAInG,IAAI,EACR;IACIA,IAAI,GAAG,KAAK;EAChB;EACAJ,OAAO,CAACrE,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1B;AAEA,SAAS6K,MAAM,GACf;EACI,IAAI/G,6DAAoB,EACpBzT,OAAO,CAACR,GAAG,CAAC,sBAAsB,CAAC;EAEvCkb,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;AACzC;AAEA,SAAS1F,UAAU,CAAC3T,CAAC,EACrB;EACI;EACA,IAAIA,CAAC,CAACyD,IAAI,IAAI,YAAY,EAAE;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,MAAM,IAAIzD,CAAC,CAACyD,IAAI,IAAI,WAAW,EAAE;IAC9B;IACA;IACAqV,aAAa,CAAC9Y,CAAC,CAAC;EACpB,CAAC,MAAM,IAAIA,CAAC,CAACyD,IAAI,IAAI,WAAW,EAAE;IAC9B,IAAI6V,MAAM,GAAGF,cAAc,CAACG,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAGD,MAAM,KAAK,GAAG,EAAE;MACfF,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;IACzC;IACAnB,aAAa,CAAClY,CAAC,CAAC;EACpB,CAAC,MAAM,IAAIA,CAAC,CAACyD,IAAI,IAAI,SAAS,EAAE;IAC5B,IAAG,QAAQ,IAAIzD,CAAC,IAAIA,CAAC,CAACwZ,MAAM,IAAI,CAAC,EAAE;IACnC;EACJ,CAAC,MAAM,IAAIxZ,CAAC,CAACyD,IAAI,IAAI,UAAU,EAAE;IAC7B,IAAI0O,6DAAoB,EACpBzT,OAAO,CAACR,GAAG,CAAC,mBAAmB,CAAC;IACpC+a,SAAS,EAAE;IACX,IAAIQ,WAAW,GAAGL,cAAc,CAACG,OAAO,CAAC,aAAa,CAAC;IACvD7F,MAAM,CAACgG,YAAY,CAACD,WAAW,CAAC;IAEhCA,WAAW,GAAG/F,MAAM,CAACiG,UAAU,CAACT,MAAM,EAAE,KAAK,CAAC;IAC9CE,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEI,WAAW,CAAC;EACtD;AACJ;AAEA,SAAS7F,UAAU,CAAC5T,CAAC,EACrB;EACI,IAAI4Z,KAAK,GAAG5Z,CAAC,CAAC6Z,OAAO,CAAC,CAAC,CAAC;EACxB,IAAI7Z,CAAC,CAACyD,IAAI,IAAI,YAAY,EAAE;IACxB,IAAIzD,CAAC,CAAC6Z,OAAO,CAAC5Y,MAAM,IAAI,CAAC,EAAEiX,aAAa,CAAC0B,KAAK,CAAC;IAC/C;EACJ,CAAC,MAAM,IAAI5Z,CAAC,CAACyD,IAAI,IAAI,WAAW,EAAE;IAC9BuV,aAAa,CAACY,KAAK,CAAC;EACxB,CAAC,MAAM,IAAI5Z,CAAC,CAACyD,IAAI,IAAI,UAAU,EAAE;IAC7BwV,SAAS,EAAE;EACf;AACJ;AAEA,SAASN,cAAc,CAACmB,OAAO,EAC/B;EACI,IAAIC,OAAO,GAAGlH,cAAc,CAAC9L,UAAU,CAAC+S,OAAO,CAAC;EAChD,OAAOnH,UAAU,CAACxR,gBAAgB,CAAC4Y,OAAO,CAAC;AAC/C;AAGA,SAASnB,cAAc,CAACoB,OAAO,EAC/B;EACI,IAAIC,OAAO,GAAGpH,cAAc,CAAC5L,UAAU,CAAC+S,OAAO,CAAC;EAChD,OAAOrH,UAAU,CAACtR,gBAAgB,CAAC4Y,OAAO,CAAC;AAC/C;AAGA,SAAS3B,gBAAgB,CAACwB,OAAO,EACjC;EACI,OAAOjH,cAAc,CAAC9L,UAAU,CAAC+S,OAAO,CAAC;AAC7C;AAGA,SAASrB,gBAAgB,CAACuB,OAAO,EACjC;EACI,OAAOnH,cAAc,CAAC5L,UAAU,CAAC+S,OAAO,CAAC;AAC7C;AAEA,SAASxF,eAAe,GACxB;EACI,IAAI0F,KAAK,GAAG,CAAE,OAAO,EAAG,oBAAoB,EAAG,WAAW,EAAG,WAAW,CAAC;EACzE,KAAK,IAAIvX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuX,KAAK,CAACjZ,MAAM,EAAE0B,CAAC,EAAE,EAAE;IACnC,IAAG;MACC,IAAIwX,GAAG,GAAG1H,MAAM,CAAC2H,UAAU,CAACF,KAAK,CAACvX,CAAC,CAAC,EAAE;QAAC0X,kBAAkB,EAAG;MAAI,CAAC,CAAC;MAClE,IAAGF,GAAG,EAAE,OAAOA,GAAG;IACtB,CAAC,CACD,OAAMna,CAAC,EAAC,CAAC;EACb;EACA,OAAO,IAAI;AACf;AAAC;AAEM,SAASsa,YAAY,CAAC3E,WAAW,EAAE1B,YAAY,EAAE;EACpD;EACAP,MAAM,CAAClV,MAAM,CAACyV,YAAY,GAAGA,YAAY;EACzCP,MAAM,CAAClV,MAAM,CAACmX,WAAW,GAAGA,WAAW;AAC3C;AAEO,SAAS4E,MAAM,CAACzX,EAAE,EAACqQ,QAAQ,EAACqH,OAAO,EAAE;EACxCpH,QAAQ,GAAG,OAAOoH,OAAO,KAAK,WAAW,GAAG,GAAG,GAAGA,OAAO;EACzDnH,aAAa,CAACvQ,EAAE,CAAC;EACjB+Q,IAAI,CAACV,QAAQ,CAAC;AAClB;AAEAO,MAAM,CAAC6G,MAAM,GAAGA,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpd6D;AACvD;AAEqB;AAQjD,IAAK,UAIJ;AAJD,WAAK,UAAU;IACX,mDAAQ;IACR,qDAAS;IACT,6CAAK;AACT,CAAC,EAJI,UAAU,KAAV,UAAU,QAId;AAEM,MAAM,UAAU;IAgCnB,YAAY,SAAc,EAAE,cAAmB,EAAE,UAAe;QA5B/C,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,IAAI,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACnD,eAAU,GAAG,IAAI,MAAM,CAAC,wCAAwC,EAAE,GAAG,CAAC,CAAC;QAEhF,WAAM,GAAG,QAAQ,CAAC;QAElB,cAAS,GAAY,KAAK,CAAC;QAE3B,qBAAgB,GAAY,KAAK,CAAC;QAElC,YAAO,GAAW,EAAE,CAAC;QAmBzB,IAAI,CAAC,eAAe,GAAG,cAAc;QACrC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QAC/D,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;QACjE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;IACzD,CAAC;IAEM,QAAQ;QACX,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACxF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAC7F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACjF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;QAClF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACjF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;QACzE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACzF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;QAEhE,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAC/D,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAqB,EAAE,EAAE;YACvC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;YAC3D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;YAC3D,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;QAClF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;QAE5E,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,mBAAmB,GAAG,GAAG,CAAC;QAE9D,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,IAAI,MAAM,EAAE;YAC9C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;SAClF;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,IAAI,OAAO,EAAE;YACtD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;SACnF;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,IAAI,CAAC,EAAE;YACzC,IAAI,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE;gBACzD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;gBACrC,OAAO;aACV;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;aACzC;YACD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE;gBAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,KAAK,QAAQ,EAAE;YAClD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAU,KAAK;gBACvD,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAC/C,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;gBACpD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAEhD,SAAS,WAAW,CAAC,KAAiB;oBAClC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;gBACtD,CAAC;gBAED,SAAS,SAAS;oBACd,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;oBACvD,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBACvD,CAAC;YACL,CAAC,CAAC,CAAC;SACN;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,cAAc,KAAK,WAAW,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAU,KAAK;gBACvD,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAC/C,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;gBAC9C,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;gBACpD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAEhD,SAAS,WAAW,CAAC,KAAiB;oBAClC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;oBAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;gBACrD,CAAC;gBAED,SAAS,SAAS;oBACd,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;oBACvD,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBACvD,CAAC;YACL,CAAC,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,GAAG,qBAAqB,CAAC;SAC1D;QAED,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACxC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC5E,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc;YAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC/E,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc;YAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC7E,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACjF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACjF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAClF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACjF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB;YAAE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAExF,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,EAAC,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,EAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE5D,IAAI,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;YACnC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;gBACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,WAAW,CAAC,GAAG,EAAE;gBAMb,IAAI,CAAC,IAAI,CAAC,SAAS;oBACf,IAAI,CAAC,OAAO,EAAE,CAAC;;oBAEf,IAAI,CAAC,SAAS,EAAE,CAAC;YACzB,CAAC,EAAE,IAAI,CAAC,CAAC;SACZ;IACL,CAAC;IAEO,OAAO;QACX,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,GAAS,EAAE,gDAAG,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,GAAE,KAAK,CAAC,CAAC;SAC5F;IACL,CAAC;IAEO,SAAS;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC/C,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAEa,iBAAiB;;YAC3B,IAAI,QAAQ,CAAC,eAAe,IAAI,SAAS,EAAE;gBACvC,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;YACD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,WAAW,EAAE;gBACzD,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;QACL,CAAC;KAAA;IAEe,cAAc;;YAC1B,MAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,MAAW,CAAC;YAChB,QAAQ,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;gBACtC,KAAK,YAAY;oBACb,MAAM,GAAG,MAAM,KAAK,CAAC,2DAA2D,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC7H,IAAI,MAAM,CAAC,MAAM,EAAE;wBACf,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,GAAe,EAAE,EAAE;4BAC9D,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;gCACzB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;6BACjB;wBACL,CAAC,CAAC,CAAC;wBACH,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;wBACzF,MAAM,CAAC,UAAU,CAAC,cAAc,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;wBACvE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;qBAC3C;oBACD,MAAM;gBACV,KAAK,gBAAgB;oBACjB,MAAM,GAAG,MAAM,KAAK,CAAC,oCAAoC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBACtG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;wBAC1B,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,GAAe,EAAE,EAAE;4BAC9D,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,gBAAgB,EAAE;gCAC7B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;6BACjB;wBACL,CAAC,CAAC,CAAC;wBACH,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;wBACxJ,MAAM,CAAC,UAAU,CAAC,cAAc,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;wBACvE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAC/C;oBACD,MAAM;gBACV;oBACI,MAAM,GAAG,MAAM,KAAK,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC1F,IAAI,MAAM,CAAC,IAAI,EAAE;wBACb,IAAI,IAAI,GAAG,EAAE,CAAC;wBACd,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,GAAe,EAAE,EAAE;4BAC9D,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;gCAC1B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;6BACjB;wBACL,CAAC,CAAC,CAAC;wBACH,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;wBAC7F,MAAM,CAAC,UAAU,CAAC,cAAc,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;wBACvE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;qBAC3C;aACR;QACL,CAAC;KAAA;IAES,eAAe;QACrB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,UAAU,CAAC,MAAc;QAC7B,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,MAAM,IAAI,IAAI;YACd,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,aAAa,CAAC,MAAc;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YAE9B,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAE3B,OAAO,UAAU,CAAC,SAAS,CAAC;aAC/B;iBAAM;gBAEH,OAAO,UAAU,CAAC,KAAK,CAAC;aAC3B;SACJ;aAAM;YACH,OAAO,UAAU,CAAC,QAAQ,CAAC;SAC9B;IACL,CAAC;IAEa,OAAO;;YACjB,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,EAAE;gBACxC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;gBAC9C,OAAO;aACV;YACD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAoB,EAAE;iBACvC,OAAO,CAAC,mCAAmC,EAAE,EAAE,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;iBAChF,gBAAgB,CAAC,oEAAoB,CAAC;iBACtC,KAAK,EAAE,CAAC;YACb,IAAI;gBACA,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,WAAW,EAAE;oBACtC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACvB,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;wBACjC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;wBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACzC,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;iBACjC;aACJ;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAChC,UAAU,CACN,GAAS,EAAE;oBACP,MAAM,IAAI,CAAC,OAAO,EAAE;gBACxB,CAAC,GACC,IAAI,CAAC,CAAC;aACf;QACL,CAAC;KAAA;IAEO,eAAe;QACnB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;gBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACa,OAAO;;YACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI;gBACA,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACpE;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACtB;QACL,CAAC;KAAA;IAEM,SAAS,CAAC,OAAwB,EAAE,eAAgC;;QACvE,OAAO,GAAG,oBAAc,CAAC,OAAO,CAAC,SAAS,CAAC,mCAAI,OAAO,CAAC;QACvD,eAAe,GAAG,oBAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,mCAAI,eAAe,CAAC;QAC/E,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAChD,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC3C,KAAK,UAAU,CAAC,QAAQ;gBACpB,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAC3B,MAAM;YACV,KAAK,UAAU,CAAC,SAAS;gBACrB,MAAM,GAAG,GAAG,MAAM,OAAO,OAAO,QAAQ,eAAe,EAAE,CAAC;gBAC1D,MAAM;YACV,KAAK,UAAU,CAAC,KAAK;gBACjB,MAAM,GAAG,GAAG,MAAM,YAAY,OAAO,IAAI,eAAe,EAAE,CAAC;gBAC3D,MAAM;SACb;QAED,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE/E,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,IAAI,EAAE,EAAE;YAClF,QAAQ,CAAC,MAAM,GAAG,sEAAsE,CAAC;SAC5F;QACD,gDAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IAEvC,CAAC;IAEM,WAAW,CAAC,IAAuB,EAAE,UAAkB,IAAI;QAC9D,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7B;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC7B;IACL,CAAC;IAEM,WAAW,CAAC,UAAkB,IAAI;QACrC,IAAI,WAA2B,CAAC;QAChC,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,YAAY,CAAC,WAAW,CAAC,CAAC;QAC1B,WAAW,GAAG,UAAU,CAAC,GAAG,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC7B,CAAC,EAAE,OAAO,CAAC,CAAC;IAChB,CAAC;IAEO,eAAe,CAAC,MAAW;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAQ,EAAE,KAAa,EAAE,EAAE;YACrD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAgB,CAAC;YACzE,IAAI,YAAY,EAAE;gBACd,YAAY,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE;oBAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACtC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC/E,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACjC,CAAC,CAAC;aACL;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAgB,CAAC;QACpF,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,cAAc,CAAC,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;YACjF,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAQ,EAAE,KAAa,EAAE,EAAE;YACnD,MAAM,GAAG,GAAG,6CAAM,EAAE,CAAC;YACrB,MAAM,KAAK,GAAG,6CAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACnE,MAAM,MAAM,GAAG,6CAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3E,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;gBAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACtC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;gBACzE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAChC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE;YACtC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;gBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;SACN;QACD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,CAAC;YACpE,sDAAY,CAAC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,CAAC;YAChE,MAAM,CAAC,UAAU,CAAC;gBACd,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACzC,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,WAAW,CAAC,IAAuB;QACvC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAChE;aAAM;YACH,OAAO,IAAI,CAAC;SACf;IACL,CAAC;IAEO,WAAW;QACf,MAAM,QAAQ,GAAW,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;QAC5D,IAAI,MAAM,CAAC,UAAU,IAAI,QAAQ,EAAE;YAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SACxC;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;SACzC;IACL,CAAC;IACO,kBAAkB,CAAC,MAAW;QAClC,IAAI,IAAY,CAAC;QACjB,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;YAC1D,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YAClC,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;iBACxE,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC3E,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC7E,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC/E,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC/E,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC/E,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAC/E,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE;gBAAE,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;gBAC/E,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;SAC7D;aAAM;YACH,MAAM,gBAAgB,GAAe,MAAM,CAAC,gBAAgB,CAAC;YAE7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,QAAQ,KAAK,EAAE,EAAE;gBAC1B,IAAI;oBACA,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBAC3C,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;oBAClC,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,EAAE;wBAE/C,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;wBAC3E,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;qBACnB;yBAAM;wBAEH,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/C,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;wBACtE,IAAI,KAAK,EAAE;4BACP,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;yBACnB;6BAAM;4BACH,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;yBACxE;qBACJ;oBACD,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;iBACnE;gBAAC,OAAO,GAAG,EAAE;oBACV,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,GAAG,CAAC;iBACtD;aACJ;iBAAM;gBACH,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC;gBACtE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChB,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;aACnE;SACJ;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAEO,cAAc;;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,oBAAc,CAAC,OAAO,CAAC,SAAS,CAAC,mCAAI,QAAQ,CAAC,OAAO,CAAC;QACtE,MAAM,UAAU,GAAG,oBAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,mCAAI,QAAQ,CAAC,eAAe,CAAC;QACzF,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAChD,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC3C,KAAK,UAAU,CAAC,QAAQ;gBACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,MAAM;YACV,KAAK,UAAU,CAAC,SAAS;gBACrB,MAAM,GAAG,GAAG,MAAM,kBAAkB,OAAO,SAAS,QAAQ,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC/F,KAAK,CAAC,MAAM,EAAE;oBACV,MAAM,EAAE,KAAK;oBACb,OAAO,EAAE;wBACL,eAAe,EAAE,UAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;qBACpD;iBACJ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;qBACrB,IAAI,CAAC,MAAM,CAAC,EAAE;oBACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;oBACjD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;oBACvC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;oBACvD,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACP,MAAM;YACV,KAAK,UAAU,CAAC,KAAK;gBACjB,MAAM,GAAG,GAAG,MAAM,IAAI,QAAQ,CAAC,aAAa,QAAQ,OAAO,EAAE,CAAC;gBAC9D,KAAK,CAAC,MAAM,EAAE;oBACV,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;qBACrB,IAAI,CAAC,MAAM,CAAC,EAAE;oBACX,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;oBAChD,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC3D,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;gBACnD,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACP,MAAM;SACb;IACL,CAAC;IAEO,gBAAgB;;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,oBAAc,CAAC,OAAO,CAAC,SAAS,CAAC,mCAAI,QAAQ,CAAC,OAAO,CAAC;QACtE,MAAM,UAAU,GAAG,oBAAc,CAAC,OAAO,CAAC,iBAAiB,CAAC,mCAAI,QAAQ,CAAC,eAAe,CAAC;QACzF,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAChD,QAAQ,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC3C,KAAK,UAAU,CAAC,QAAQ;gBACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,MAAM;YACV,KAAK,UAAU,CAAC,SAAS;gBACrB,MAAM,GAAG,GAAG,MAAM,kBAAkB,OAAO,QAAQ,UAAU,SAAS,QAAQ,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACjH,KAAK,CAAC,MAAM,EAAE;oBACV,MAAM,EAAE,KAAK;oBACb,OAAO,EAAE;wBACL,eAAe,EAAE,UAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;qBACpD;iBACJ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;qBACrB,IAAI,CAAC,MAAM,CAAC,EAAE;oBACX,IAAI,MAAM,CAAC,SAAS,KAAK,UAAU,EAAE;wBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5D;yBAAM;wBACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5D;oBACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;oBACjD,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;oBAChD,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACP,MAAM;YACV,KAAK,UAAU,CAAC,KAAK;gBACjB,MAAM,GAAG,GAAG,MAAM,IAAI,QAAQ,CAAC,aAAa,iBAAiB,OAAO,IAAI,UAAU,EAAE,CAAC;gBACrF,KAAK,CAAC,MAAM,EAAE;oBACV,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;qBACrB,IAAI,CAAC,MAAM,CAAC,EAAE;oBACX,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;wBACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5D;yBACI;wBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC5D;oBACD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC/C,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;oBAChD,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC/B,CAAC,CAAC,CAAC;gBACP,MAAM;SACb;IACL,CAAC;CACJ;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,OAAY;IAC5C,MAAM,QAAQ,GAAG,6BAA6B,CAAC;IAE/C,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM;QAC/D,IAAI,MAAM,IAAI,MAAM,EAAE;YAAE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;SAAE;QAExD,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,aAAa,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,CAAC;QAExB,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;YACpD,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YACxB,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa;gBAAE,OAAO,EAAE,CAAC;SACjC;QACD,OAAO,aAAa,CAAC;IACzB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;;;;;;;;;;;;;;;;;;;ACxnBkC;AAS7B,MAAM,OAAQ,SAAQ,6CAAK;IAE9B;QACI,KAAK,CAAC,YAAY,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACnB,OAAO,EAAE,kBAAkB;SAC9B,CAAC,CAAC;IACP,CAAC;CACJ;AAEM,SAAS,OAAO;IACnB,EAAE,CAAC,MAAM,EAAE,CAAC;AAChB,CAAC;AAEM,MAAM,EAAE,GAAG,IAAI,OAAO,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;ACvBzB,MAAM,UAAU,GAAG;IAGtB,SAAS,EAAE,KAAK;IAChB,eAAe,EAAE,KAAK;IACtB,mBAAmB,EAAE,KAAK;IAC1B,sBAAsB,EAAE,KAAK;IAK7B,cAAc,EAAE,CAAC;IACjB,cAAc,EAAE,GAAG;IAEnB,iBAAiB,EAAE,CAAC,CAAC;IACrB,kBAAkB,EAAE,CAAC;IAErB,qBAAqB,EAAE,CAAC,CAAC;IACzB,sBAAsB,EAAE,CAAC;IACzB,uBAAuB,EAAE,CAAC,CAAC;IAC3B,oBAAoB,EAAE,CAAC;IAGvB,aAAa,EAAE,CAAC;IAChB,aAAa,EAAE,CAAC;IAChB,eAAe,EAAE,CAAC;IAClB,eAAe,EAAE,CAAC;IAClB,cAAc,EAAE,CAAC;IAEjB,iBAAiB,EAAE,MAAM;IACzB,mBAAmB,EAAE,QAAQ;IAC7B,qBAAqB,EAAE,UAAU;IACjC,uBAAuB,EAAE,YAAY;IACrC,qBAAqB,EAAE,UAAU;IACjC,sBAAsB,EAAE,WAAW;IACnC,kBAAkB,EAAE,OAAO;IAG3B,aAAa,EAAE,MAAM;IACrB,aAAa,EAAE,MAAM;IAErB,oBAAoB,EAAE,EAAE;IACxB,oBAAoB,EAAE,EAAE;IACxB,oBAAoB,EAAE,EAAE;IACxB,oBAAoB,EAAE,EAAE;CAC3B,CAAC;AACF,IAAI,OAAO,GAAG,SAAS,CAAC;AAEjB,SAAS,UAAU,CAAC,YAAY;IACnC,OAAO,GAAG,YAAY,CAAC;AAC3B,CAAC;AAEM,SAAS,UAAU;IACtB,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;AAC7D,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;AAIjD,SAAS,SAAS,CAAC,IAAY;IAClC,IAAI,GAAG,GAAG,QAAQ,CAAC;IACnB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7B,IAAI,IAAI,EAAE;QACN,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;KAClB;SAAM;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KACtD;AACL,CAAC;AAIM,SAAS,SAAS,CAAC,IAAY;IAClC,IAAI,GAAG,GAAG,QAAQ,CAAC;IACnB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9B,IAAI,IAAI,EAAE;QACN,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;KAClB;SAAM;QACH,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KACtD;AACL,CAAC;;;;;;;;;;;;;;;;;;;;;ACjF4D;AACV;AACZ;AACE;AAE1B,MAAM,iBAAiB;IAIpC;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAGjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEjB,MAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAC5B,0FAAkC,CAAC,IAAI,6DAAe,CAAC,CAAC;IAC1D,CAAC;IAEM,WAAW;QAChB,IAAI,KAAK,GAAG,IAAI,iDAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,KAAK,CAAC;IACf,CAAC;IAGM,WAAW,CAAC,EAAO,EAAE,QAAgB,EAAE,KAAc;QAE1D,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;gBACjC,IAAI,6DAAoB;oBAAE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACzD,CAAC,EAAE,KAAK,CAAC,CAAC;SACX;IACH,CAAC;IAGM,QAAQ,CAAC,EAAE;QAGhB,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAE1C,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IAIM,YAAY,CAAC,EAAE,EAAE,EAAE;QAGxB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE;YAAE,OAAO;QAErC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAIM,SAAS;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5B,CAAC;IAIM,OAAO,CAAC,CAAC,EAAE,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B;IACH,CAAC;IAIM,aAAa;QAClB,IAAI,6DAAoB;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,yEAAgC,EAC/D,mEAA0B,CAAC,CAAC;SAC/B;IACH,CAAC;IAIM,aAAa;QAClB,IAAI,6DAAoB;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,0EAAiC,EAChE,mEAA0B,CAAC,CAAC;SAC/B;IACH,CAAC;IAIM,QAAQ,CAAC,CAAC,EAAE,CAAC;QAClB,IAAI,6DAAoB;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QAElD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAE3C,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,6EAAoC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAExE,IAAI,6DAAoB;oBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAE3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC;aACtC;iBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,6EAAoC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAE/E,IAAI,6DAAoB;oBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;gBAElD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,yEAAgC,EAC/D,mEAA0B,CAAC,CAAC;aAC/B;iBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAErD,IAAI,6DAAoB;oBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAE3B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,2EAAkC,EACjE,mEAA0B,CAAC,CAAC;aAC/B;iBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;gBAErD,IAAI,6DAAoB;oBACtB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;gBAElD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,yEAAgC,EAC/D,mEAA0B,CAAC,CAAC;aAC/B;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;AC1I4F;AAC9B;AACtB;AAElC,MAAM,SAAU,SAAQ,oEAAY;IAMvC;QACI,KAAK,EAAE,CAAC;QAER,+FAAuC,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEM,IAAI,CAAC,gBAAwB,EAAE,QAAoB,EAAE,KAAc;QACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,yEAAgB,EAAE,CAAC;QAE3C,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,gBAAgB,EAAE;YAGjD,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YAClD,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACrC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC;aAC7B;iBAAM;gBACH,OAAO,CAAC,YAAY,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAE,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/F;YACD,IAAI,IAAI,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;YACtE,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,KAAK;gBAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC3D,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAC7E,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE;wBAE7B,IAAI,OAAO,CAAC,WAAW,EAAE;4BAErB,IAAI,OAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,GAAG,CAAC,EAAE;gCAE7C,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;gCAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,EAAE,CAAC,EAAE,EAAE;oCAC9D,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;oCACxD,IAAI,WAAW,GAAG,OAAO,CAAC,YAAY;wCAClC,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;oCAE9C,OAAO,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;iCACtD;6BACJ;iCACI;gCACD,OAAO,CAAC,iBAAiB,GAAG,IAAI,CAAC;gCACjC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;6BAC5B;4BAID,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI,EAAE;6BAE7B;4BAGD,IAAI,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,IAAI,EAAE;gCAC/C,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY;oCACpC,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC;6BAC9C;iCACI;gCACD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;6BAC1B;4BAID,IAAI,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE;gCAC5C,OAAO,CAAC,QAAQ,CACZ,OAAO,CAAC,YAAY;oCACpB,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,EAClC;oCACI,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gCAClD,CAAC,CACJ,CAAC;6BACL;iCACI;gCACD,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;6BACvB;4BAID,IAAI,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE;gCAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;gCAC9C,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI;oCACvB,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClD,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI;oCACxB,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAEpD,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI;oCACnB,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC1C,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI;oCACnB,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gCAC1C,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI;oCAC1B,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gCACpD,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI;oCAC1B,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gCACpD,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI;oCACrB,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gCAC3C,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI;oCACxB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gCACjD,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI;oCACtB,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gCAC7C,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI;oCACvB,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;6BAClD;4BAED,IAAI,OAAO,CAAC,YAAY,CAAC,iBAAiB,EAAE,IAAI,IAAI,EAAE;gCAClD,IAAI,gBAAgB,GAAG,OAAO,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;gCAChE,IAAI,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI;oCAClC,wEAA+B,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gCACjE,IAAI,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI;oCAClC,wEAA+B,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gCACjE,IAAI,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI;oCAClC,wEAA+B,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gCACjE,IAAI,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI;oCAClC,wEAA+B,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;6BACpE;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,eAAe,EAAE,EAAE,CAAC,EAAE,EAAE;gCAE7D,OAAO,CAAC,WAAW,CAAC,aAAa,CAC7B,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,EACtC,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAC5C,CAAC;6BACL;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,sBAAsB,EAAE,EAAE,CAAC,EAAE,EAAE;gCAEpE,OAAO,CAAC,WAAW,CAAC,eAAe,CAC/B,OAAO,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAC7C,OAAO,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAAC,CACnD,CAAC;6BACL;4BAID,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;4BAIhC,OAAO,CAAC,kBAAkB,CAAC,iFAAwC,EAAE,CAAC,CAAC;4BACvE,OAAO,CAAC,kBAAkB,CAAC,mEAA0B,CAAC,CAAC;4BACvD,OAAO,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;4BAE3C,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;4BAC3B,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;4BAE7B,IAAI,OAAO,QAAQ,IAAI,UAAU;gCAAE,QAAQ,EAAE,CAAC;yBAEjD;oBACL,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,KAAK,CAAC,CAAC;IACd,CAAC;IAEM,OAAO,CAAC,EAAE;QAEb,IAAI,EAAE,GAAG,0FAAkC,EAAE,CAAC;QAE9C,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAEM,kBAAkB,CAAC,IAAI;QAC1B,IAAI,OAAO,GAAG,IAAI,CAAC;QAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3D,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,UAAU,MAAM;gBAC5D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;gBAChE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;SAEN;IACL,CAAC;IAEM,MAAM;QAGT,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC1B,IAAI,6DAAoB;gBAAE,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAE7D,OAAO;SACV;QAED,IAAI,QAAQ,GAAS,MAAO,CAAC,QAAQ,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7E,IAAI,OAAO,GAAG,QAAQ,GAAG,MAAM,CAAC;QAChC,IAAI,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAG9B,IAAI,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE;YACrC,IAAI,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,MAAM,KAAK,GAAG,EAAE;gBAChB,IAAI,CAAC,iBAAiB,CAAC,uEAA8B,EAAE,mEAA0B,CAAC,CAAC;aACtF;iBAAM;gBACH,IAAI,CAAC,iBAAiB,CAAC,iFAAwC,EAAE,EAAE,iEAAwB,CAAC,CAAC;aAChG;SACJ;QAKD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAI7B,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,MAAM,EAAE;YAET,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aAC/C;SACJ;QAGD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAK7B,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI;YAC9B,IAAI,CAAC,WAAW,IAAI,IAAI;YACxB,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE;YACtC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxD;QAID,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAItF,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;QAI3E,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAIpE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAC5C,MAAM,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAC5C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,EAC5C,MAAM,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,EACjD,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,cAAc,EACzC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGnD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9C;QAGD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oBAAoB,EAC/C,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1B;QAGD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;YACnB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAIM,mBAAmB;QACtB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;YAC/B,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClB;QAED,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE3D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;IAIM,iBAAiB,CAAC,IAAI,EAAE,QAAQ;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;IACzC,CAAC;IAIM,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ;QAGjC,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE3D,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,IAAI,EAAE,EAAE;YACxC,IAAI,6DAAoB;gBACpB,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACvC,OAAO;SACV;QAED,IAAI,QAAQ,IAAI,kEAAyB,EAAE;YACvC,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SACvD;aACI,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YACtD,IAAI,6DAAoB;gBACpB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YACrC,OAAO;SACV;QAED,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,MAAM,CAAC;QAEX,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,GAAG,UAAU,EAAE,UAAU,GAAG;gBAC/D,MAAM,GAAG,GAAG,CAAC;gBAGb,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEzD,CAAC,CAAC,CAAC;SACN;aACI;YACD,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAG5B,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;SACxD;IACL,CAAC;IAGM,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM;QAC9C,IAAI,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE3D,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAGhE,IAAI,6DAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,UAAU,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE;YACpD,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAC5D;aACI;YACD,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAG3D,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC1C,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAExC,IAAI,6DAAoB;gBACpB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,SAAS,CAAC,CAAC;YAE9C,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SAC5D;IACL,CAAC;IAIM,aAAa,CAAC,IAAI;QACrB,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAEpC,IAAI,6DAAoB;YACpB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;QAExC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IAQM,IAAI,CAAC,MAAM;QACd,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,EAAE;QAEnC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAIM,OAAO,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAE/C,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACnD;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK;QACnC,IAAI,IAAI,IAAI,MAAM,EAAE;YAChB,OAAO,IAAI,CAAC,mBAAmB,CAAC,wEAA+B,EAAE,wEAA+B,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACnH;aAAM,IAAI,IAAI,IAAI,MAAM,EAAE;YACvB,OAAO,IAAI,CAAC,mBAAmB,CAAC,wEAA+B,EAAE,wEAA+B,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;SACnH;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;CAGJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3a8D;AACF;AACzB;AAGpC,IAAI,YAAY,GAAG,EAAE,CAAC;AAEf,MAAM,eAAe;IAKX,SAAS,CAAC,IAAY,EAAE,KAAc;;YAE/C,IAAI,OAAO,GAAG,sDAAS,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,QAAQ,GAAG,sDAAS,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,GAAG,GAAG,MAAM,0DAAgB,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YAC3E,IAAI,GAAG,EAAE;gBACL,OAAO,GAAG,CAAC,KAAK,CAAC;aACpB;iBAAM;gBACH,IAAI,OAAiB,CAAC;gBACtB,IAAI,KAAK,EAAE;oBACP,OAAO,GAAG,MAAM,KAAK,CAAC,IAAI,EAAE;wBACxB,OAAO,EAAE,IAAI,OAAO,CAAC;4BACjB,eAAe,EAAE,UAAU,KAAK,EAAE;yBACrC,CAAC;qBACL,CAAC,CAAC;iBACN;qBAAM;oBACH,OAAO,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC/B;gBACD,IAAI,GAAG,GAAG,MAAM,OAAO,CAAC,WAAW,EAAE,CAAC;gBACtC,QAAQ,OAAO,CAAC,MAAM,EAAE;oBACpB,KAAK,GAAG;wBACJ,wDAAc,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;wBAC7D,OAAO,GAAG,CAAC;oBACf;wBACI,OAAO,CAAC,KAAK,CAAC,kBAAkB,GAAG,OAAO,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;wBACnE,OAAO,IAAK,CAAC;iBACpB;aACJ;QACL,CAAC;KAAA;IAOY,UAAU,CAAC,IAAY,EAAE,KAAc;;YAChD,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC5C,IAAI,QAAQ,GAAG,0FAA8B,CAAC,GAAG,CAAC,CAAC;YACnD,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;IAEM,eAAe,CAAC,IAAY,EAAE,QAA8B,EAAE,KAAc;QAC/E,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACrC,IAAI,KAAK,GAAS,MAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1D,QAAQ,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAKM,WAAW,CAAC,KAAK,EAAkB,EAAU,EAAE,IAAY,EAAE,QAAQ;QAExE,IAAI,WAAW,GAAG,IAAI,KAAK,EAAE,CAAC;QAC9B,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC;QACtC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC;QAEvB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,WAAW,CAAC,MAAM,GAAG;YAEjB,IAAK,IAAyB,CAAC,QAAQ,EAAE;gBACrC,IAAI,EAAE,GAAG,uDAAU,EAAE,CAAC;gBACtB,IAAI,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;gBACjC,IAAI,CAAC,OAAO,EAAE;oBAAE,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;oBAAC,OAAO,CAAC,CAAC,CAAC;iBAAE;gBAElF,IAAI,KAAK,CAAC,oBAAoB,EAAE,IAAI,KAAK,EAAE;oBAEvC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,8BAA8B,EAAE,CAAC,CAAC,CAAC;iBACxD;gBACD,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;gBAC1C,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;gBAC9B,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAC5C,EAAE,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;gBACnC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;gBAClE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,qBAAqB,CAAC,CAAC;gBACjF,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;gBAIjC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;gBAG9B,OAAO,GAAG,IAAI,CAAC;aAClB;iBAAM;gBACH,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;aACrC;YACD,IAAI,OAAO,QAAQ,IAAI,UAAU;gBAAE,QAAQ,EAAE,CAAC;QAClD,CAAC,CAAC;QAEF,WAAW,CAAC,OAAO,GAAG;YAClB,OAAO,CAAC,KAAK,CAAC,yBAAyB,GAAG,IAAI,CAAC,CAAC;QACpD,CAAC;IACL,CAAC;IAOM,kBAAkB,CAAC,GAAG;QAEzB,IAAI,OAAO,CAAC;QAIZ,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;YAC7D,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACrE;aAAM;YACH,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAElC,OAAO,OAAO,CAAC;IACnB,CAAC;IAMM,GAAG,CAAC,GAAW;IAEtB,CAAC;CAGJ;;;;;;;;;;;;;;;;AC5IM,MAAM,WAAW;IAAxB;QAyEI,UAAK,GAAG,CAAC,CAAC;QAEV,gBAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/D,kBAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEjE,QAAG,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IA9EU,KAAK;QACR,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IAEM,YAAY;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAC3B;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAChD;IACL,CAAC;IAEM,IAAI;QACP,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAC7B,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,EAC7C;YACI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,UAAU,GAAG,EAAE,CAAC;SAC7C;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAC3B;YACI,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,GAAG;QACN,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAClB;YACI,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC;YAC5C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAClB;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAC3B;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACxD;IACL,CAAC;IAEM,SAAS;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B,CAAC;IAEM,UAAU,CAAC,MAAM;QACpB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAEZ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EACvB;YACI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;QAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACtB;YACI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACtB;gBACI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACtB;oBACI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC5E;aACJ;SACJ;QACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EACvB;YACI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACvC;IACL,CAAC;CASJ;;;;;;;;;;;;;;;;;;ACvFgD;AAG1C,MAAM,gBAAgB;IACzB;QACI,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,oBAAoB,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACnB,CAAC;IAEM,gBAAgB,CAAC,IAAY,EAAE,QAAkB,EAAE,KAAc;QACpE,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,EAAE,GAAG,gFAAkC,EAAqB,CAAC;QACjE,EAAE,CAAC,SAAS,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAC,EAAE;YACjC,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9D,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/B,QAAQ,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,cAAc,CAAC,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC3E,OAAO,IAAI,CAAC;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAEM,YAAY;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEM,aAAa;QAEhB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;YAAE,OAAO,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAC3C,CAAC;IAGM,aAAa;QAEhB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI;YACjC,OAAO,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;IAC5C,CAAC;IAGM,YAAY,CAAC,CAAC;QAEjB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI;YACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YACpC,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;IAGM,cAAc,CAAC,CAAC;QAEnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI;YACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YACpC,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAGM,cAAc;QAEjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAGM,WAAW;QAEd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAGM,gBAAgB;QAEnB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;IAC1F,CAAC;IAGM,iBAAiB,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI;YACnC,OAAO,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAGM,iBAAiB,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI;YACnC,OAAO,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAGM,SAAS;QAEZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAGM,iBAAiB;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;IAGM,eAAe;QAElB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;IACxF,CAAC;IAGM,YAAY,CAAC,IAAI;QAEpB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3C,OAAO,CAAC,CAAC;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;IACtD,CAAC;IAGM,aAAa,CAAC,IAAI,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC9C,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAGM,cAAc,CAAC,IAAI,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI;YAC1D,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9D,CAAC;IAGM,eAAe,CAAC,IAAI,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI;YAC5D,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChE,CAAC;IAGM,gBAAgB,CAAC,IAAI,EAAE,CAAC;QAE3B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI;YACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI;YAC3C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;YAC7D,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjE,CAAC;IAGM,cAAc,CAAC,CAAC;QAEnB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YACrC,OAAO,IAAI,CAAC;QAEhB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC;IAGM,iBAAiB,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC3E,OAAO,GAAG,CAAC;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,CAAC;IAGM,sBAAsB;QAEzB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC;IACxG,CAAC;IAGM,qBAAqB,CAAC,CAAC;QAE1B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC3F,OAAO,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC1D,CAAC;IAGM,wBAAwB,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;YAC3F,OAAO,GAAG,CAAC;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;CAuBJ;;;;;;;;;;;;;;;;;;;;;;ACnPM,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAEhC,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAE9B,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAE7B,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAEhC,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAE9B,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAQ5B,MAAM,aAAa,GAAW,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;ACxBb;AAOvC,MAAM,QAAQ;IAWnB,YAAmB,EAAsB;QACvC,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;YAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,sDAAS,CAAC,EAAE,CAAC,CAAC;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAdM,SAAS;QACd,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAmBM,OAAO,CAAC,CAAgC;QAC7C,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC5B;aAAM,IAAI,CAAC,YAAY,sDAAS,EAAE;YACjC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC9B;aAAM,IAAI,CAAC,YAAY,QAAQ,EAAE;YAChC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAOM,UAAU,CAAC,CAAgC;QAChD,IAAI,OAAO,CAAC,IAAI,QAAQ,EAAE;YACxB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC7B;aAAM,IAAI,CAAC,YAAY,sDAAS,EAAE;YACjC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;aAAM,IAAI,CAAC,YAAY,QAAQ,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CAGF;AAK+B;AAEzB,IAAU,qBAAqB,CAIrC;AAJD,WAAiB,qBAAqB;IACvB,8BAAQ,GAAG,+CAAU,CAAC;AAGrC,CAAC,EAJgB,qBAAqB,KAArB,qBAAqB,QAIrC;;;;;;;;;;;;;;;;;;;;ACtE6C;AACR;AAO/B,MAAM,eAAe;IAI1B;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,sDAAS,EAAY,CAAC;IACxC,CAAC;IAKM,OAAO;QACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAQM,WAAW,CAAC,GAA2B;QAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;IACH,CAAC;IAOM,UAAU,CAAC,EAAsB;QACtC,IAAI,MAAM,GAAa,IAAI,CAAC;QAE5B,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE;gBACtC,OAAO,MAAM,CAAC;aACf;YAED,MAAM,GAAG,IAAI,+CAAQ,CAAC,EAAE,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAC5B;aAAM;YACL,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SAC9B;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAOM,KAAK,CAAC,EAAsB;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAQM,OAAO,CAAC,EAAsB;QACnC,IAAI,QAAQ,IAAI,OAAO,EAAE,EAAE;YACzB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC;SAChC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAQO,MAAM,CAAC,EAAU;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACxB;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAGF;AAGsC;AAEhC,IAAU,qBAAqB,CAGrC;AAHD,WAAiB,qBAAqB;IACvB,qCAAe,GAAG,6DAAiB,CAAC;AAEnD,CAAC,EAHgB,qBAAqB,KAArB,qBAAqB,QAGrC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GsD;AACK;AAK/B;AACc;AAEpC,SAAS,MAAM,CAAC,CAAS,EAAE,MAAgB;IAChD,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,GAAI,CAAC,EAAE,EAAE;QACrB,MAAM,KAAK,GAAW,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAGxC,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;YAChD,SAAS;SACV;QAED,MAAM,IAAI,GAAW,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;YAEjB,MAAM;SACP;QAED,KAAK,GAAG,CAAC,CAAC;KACX;IACD,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAEtB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;QAEZ,CAAC,GAAG,GAAG,CAAC;KACT;IAED,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,OAAO,CAAC,CAAC;AACX,CAAC;AAID,IAAI,WAAW,GAAG,KAAK,CAAC;AACxB,IAAI,eAAe,GAAG,KAAK,CAAC;AAC5B,IAAI,QAAQ,GAAW,IAAI,CAAC;AAC5B,IAAI,iBAAiB,GAAoB,IAAI,CAAC;AAKvC,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAyB;IAC5D,YAAY,EAAE,CAAC;IACf,UAAU,EAAE,CAAC;CACd,CAAC,CAAC;AAEI,SAAS,SAAS,CAAI,OAAU;IACrC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO;KACR;IAED,OAAO,GAAG,KAAK,CAAC,CAAC;AACnB,CAAC;AAMM,MAAM,eAAe;IAUnB,MAAM,CAAC,OAAO,CAAC,SAAiB,IAAI;QACzC,IAAI,WAAW,EAAE;YACf,iEAAa,CAAC,4CAA4C,CAAC,CAAC;YAC5D,OAAO,WAAW,CAAC;SACpB;QAED,QAAQ,GAAG,MAAM,CAAC;QAElB,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,gBAAgB,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAClE;QAED,WAAW,GAAG,IAAI,CAAC;QAGnB,IAAI,WAAW,EAAE;YACf,MAAM,OAAO,GAAW,gBAAgB,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YACjE,MAAM,KAAK,GAAW,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;YACnD,MAAM,KAAK,GAAW,CAAC,OAAO,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;YACnD,MAAM,KAAK,GAAW,OAAO,GAAG,UAAU,CAAC;YAC3C,MAAM,aAAa,GAAW,OAAO,CAAC;YAEtC,iEAAa,CACX,+CAA+C,EAC/C,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxB,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxB,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC1B,aAAa,CACd,CAAC;SACH;QAED,iEAAa,CAAC,wCAAwC,CAAC,CAAC;QAExD,OAAO,WAAW,CAAC;IACrB,CAAC;IAMM,MAAM,CAAC,OAAO;QACnB,WAAW,GAAG,KAAK,CAAC;QACpB,eAAe,GAAG,KAAK,CAAC;QACxB,QAAQ,GAAG,IAAI,CAAC;QAChB,iBAAiB,GAAG,IAAI,CAAC;IAC3B,CAAC;IAWM,MAAM,CAAC,UAAU,CAAC,UAAU,GAAG,CAAC;QACrC,8DAAU,CAAC,WAAW,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE;YAChB,oEAAgB,CAAC,iCAAiC,CAAC,CAAC;YACpD,OAAO;SACR;QAKD,IAAI,eAAe,EAAE;YACnB,oEAAgB,CACd,4DAA4D,CAC7D,CAAC;YACF,OAAO;SACR;QAGD,qFAAsC,EAAE,CAAC;QAEzC,iBAAiB,GAAG,IAAI,gEAAe,EAAE,CAAC;QAM1C,gBAAgB,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;QAE7D,eAAe,GAAG,IAAI,CAAC;QAEvB,iEAAa,CAAC,2CAA2C,CAAC,CAAC;IAC7D,CAAC;IAOM,MAAM,CAAC,OAAO;QACnB,8DAAU,CAAC,WAAW,CAAC,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE;YAChB,oEAAgB,CAAC,iCAAiC,CAAC,CAAC;YACpD,OAAO;SACR;QAID,IAAI,CAAC,eAAe,EAAE;YAEpB,oEAAgB,CAAC,qDAAqD,CAAC,CAAC;YACxE,OAAO;SACR;QAED,kFAAmC,EAAE,CAAC;QAEtC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QAC5B,iBAAiB,GAAG,IAAI,CAAC;QAGzB,mFAA4B,EAAE,CAAC;QAE/B,eAAe,GAAG,KAAK,CAAC;QAExB,iEAAa,CAAC,wCAAwC,CAAC,CAAC;IAC1D,CAAC;IAMM,MAAM,CAAC,SAAS;QACrB,OAAO,WAAW,CAAC;IACrB,CAAC;IAMM,MAAM,CAAC,aAAa;QACzB,OAAO,eAAe,CAAC;IACzB,CAAC;IAOM,MAAM,CAAC,eAAe,CAAC,OAAe;QAE3C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;YACjD,OAAO;SACR;QAED,gBAAgB,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAOM,MAAM,CAAC,eAAe;QAC3B,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,OAAO,QAAQ,CAAC,YAAY,CAAC;SAC9B;QACD,OAAO,QAAQ,CAAC,YAAY,CAAC;IAC/B,CAAC;IAMM,MAAM,CAAC,YAAY;QACxB,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAMD,gBAAuB,CAAC;CACzB;AAEM,MAAM,MAAM;CAGlB;AAKD,IAAY,QAOX;AAPD,WAAY,QAAQ;IAClB,+DAAoB;IACpB,2DAAc;IACd,yDAAa;IACb,+DAAgB;IAChB,2DAAc;IACd,uDAAY;AACd,CAAC,EAPW,QAAQ,KAAR,QAAQ,QAOnB;AAG4C;AAEtC,IAAU,qBAAqB,CAKrC;AALD,WAAiB,qBAAqB;IACvB,8BAAQ,GAAG,4DAAU,CAAC;IACtB,+BAAS,GAAG,6DAAW,CAAC;IACxB,qCAAe,GAAG,mEAAiB,CAAC;AAEnD,CAAC,EALgB,qBAAqB,KAArB,qBAAqB,QAKrC;;;;;;;;;;;;;;;;;;ACnRM,MAAM,cAAc;IAIzB;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IASM,MAAM,CAAC,QAAQ,CACpB,CAAe,EACf,CAAe,EACf,GAAiB;QAEjB,MAAM,CAAC,GAAiB,IAAI,YAAY,CAAC;YACvC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzE,GAAG;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,CAAC,CAAC;QAEZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC1B,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7C;aACF;SACF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC3B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACf;IACH,CAAC;IAKM,YAAY;QACjB,MAAM,CAAC,GAAiB,IAAI,YAAY,CAAC;YACvC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YACzE,GAAG;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAOM,SAAS,CAAC,EAAgB;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACrB;IACH,CAAC;IAOM,QAAQ;QACb,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAMM,SAAS;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAMM,aAAa;QAClB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAMM,aAAa;QAClB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC;IAQM,UAAU,CAAC,GAAW;QAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAQM,UAAU,CAAC,GAAW;QAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1C,CAAC;IAKM,gBAAgB,CAAC,GAAW;QACjC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAKM,gBAAgB,CAAC,GAAW;QACjC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAUM,iBAAiB,CAAC,CAAS,EAAE,CAAS;QAC3C,MAAM,GAAG,GAAiB,IAAI,YAAY,CAAC;YACzC,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,CAAC;YACD,CAAC;YACD,GAAG;YACH,GAAG;SACJ,CAAC,CAAC;QAEH,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAUM,SAAS,CAAC,CAAS,EAAE,CAAS;QACnC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAOM,UAAU,CAAC,CAAS;QACzB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAOM,UAAU,CAAC,CAAS;QACzB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAQM,aAAa,CAAC,CAAS,EAAE,CAAS;QACvC,MAAM,GAAG,GAAiB,IAAI,YAAY,CAAC;YACzC,CAAC;YACD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,CAAC;YACD,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;YACH,GAAG;SACJ,CAAC,CAAC;QAEH,cAAc,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAQM,KAAK,CAAC,CAAS,EAAE,CAAS;QAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClB,CAAC;IAOM,gBAAgB,CAAC,CAAiB;QACvC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5D,CAAC;IAKM,KAAK;QACV,MAAM,WAAW,GAAmB,IAAI,cAAc,EAAE,CAAC;QAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;CAGF;AAGqC;AAE/B,IAAU,qBAAqB,CAGrC;AAHD,WAAiB,qBAAqB;IACvB,oCAAc,GAAG,2DAAgB,CAAC;AAEjD,CAAC,EAHgB,qBAAqB,KAArB,qBAAqB,QAGrC;;;;;;;;;;;;;;;;;;;;;ACtRuD;AAQjD,MAAe,cAAc;IAiMlC;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAC5C,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAGnC,IAAI,CAAC,aAAa,GAAG,IAAI,gEAAc,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;IACpC,CAAC;IAtMM,MAAM,CAAC,MAAM;QAClB,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,MAAM,CAAC,MAAM,CAAC,QAAwB;QAC3C,QAAQ,GAAG,IAAI,CAAC;IAClB,CAAC;IAOM,UAAU,CAAC,KAAkB;QAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAKM,SAAS;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI;YAAE,OAAO;QAEpC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAOM,YAAY,CAAC,QAAwB;QAC1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IACpD,CAAC;IAMM,YAAY;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAUM,aAAa,CAClB,GAAW,EACX,KAAa,EACb,IAAY,EACZ,KAAa;QAEb,IAAI,GAAG,GAAG,GAAG,EAAE;YACb,GAAG,GAAG,GAAG,CAAC;SACX;aAAM,IAAI,GAAG,GAAG,GAAG,EAAE;YACpB,GAAG,GAAG,GAAG,CAAC;SACX;QAED,IAAI,KAAK,GAAG,GAAG,EAAE;YACf,KAAK,GAAG,GAAG,CAAC;SACb;aAAM,IAAI,KAAK,GAAG,GAAG,EAAE;YACtB,KAAK,GAAG,GAAG,CAAC;SACb;QAED,IAAI,IAAI,GAAG,GAAG,EAAE;YACd,IAAI,GAAG,GAAG,CAAC;SACZ;aAAM,IAAI,IAAI,GAAG,GAAG,EAAE;YACrB,IAAI,GAAG,GAAG,CAAC;SACZ;QAED,IAAI,KAAK,GAAG,GAAG,EAAE;YACf,KAAK,GAAG,GAAG,CAAC;SACb;aAAM,IAAI,KAAK,GAAG,GAAG,EAAE;YACtB,KAAK,GAAG,GAAG,CAAC;SACb;QAED,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7B,CAAC;IAQM,aAAa;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,CAAC;IAMM,uBAAuB,CAAC,MAAe;QAC5C,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC;IACtC,CAAC;IAOM,oBAAoB;QACzB,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAMM,YAAY,CAAC,OAAgB;QAClC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAOM,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAOM,aAAa,CAAC,CAAS;QAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAMM,aAAa;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAMM,QAAQ;QACb,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAUM,oBAAoB,CAAC,IAAa;QACvC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACpC,CAAC;IAOM,wBAAwB;QAC7B,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;CAwEF;AAED,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,yFAA0B;IAC1B,6FAA4B;IAC5B,yGAAkC;AACpC,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAKM,MAAM,kBAAkB;IAI7B;QACE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;QACb,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC;IACf,CAAC;CAMF;AAGqC;AAE/B,IAAU,qBAAqB,CAOrC;AAPD,WAAiB,qBAAqB;IACvB,qCAAe,GAAG,4DAAiB,CAAC;IAEpC,oCAAc,GAAG,2DAAgB,CAAC;IAElC,wCAAkB,GAAG,+DAAoB,CAAC;AAEzD,CAAC,EAPgB,qBAAqB,KAArB,qBAAqB,QAOrC;;;;;;;;;;;;;;;;;;;;;AClTqD;AAM/C,MAAM,OAAO;IAMlB,YAAmB,GAAW,EAAE,KAAa;QAC3C,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;QAE3C,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAClD,CAAC;CAIF;AAKM,MAAM,MAAM;IAKjB,YAAmB,IAAa;QAC9B,IAAI,IAAI,IAAI,SAAS,EAAE;YACrB,IAAI,IAAI,GAAG,CAAC,EAAE;gBACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aAChB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;aACnB;SACF;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAKM,OAAO;QACZ,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAMM,SAAS,CAAC,GAAU;QAEzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QAG5C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,OAAO,CAAe,GAAG,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IAClB,CAAC;IAMM,QAAQ,CAAC,GAAU;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE;gBACnC,KAAK,GAAG,CAAC,CAAC;gBACV,MAAM;aACP;SACF;QAED,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;SAC/C;IACH,CAAC;IAOM,QAAQ,CAAC,GAAU,EAAE,KAAY;QACtC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE;gBACnC,KAAK,GAAG,CAAC,CAAC;gBACV,MAAM;aACP;SACF;QAED,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;SAChD;IACH,CAAC;IAQM,OAAO,CAAC,GAAU;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACnC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE;gBACnC,OAAO,IAAI,CAAC;aACb;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,KAAK;QACV,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAOM,eAAe,CAAC,OAAe,EAAE,SAAkB;QACxD,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACpC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,SAAS,IAAI,OAAO,GAAG,MAAM,CAAC,WAAW;oBAC5C,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC;gBAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;aAClC;iBAAM;gBACL,IAAI,CAAC,SAAS,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC;oBACpD,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;gBACvC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;aAClC;SACF;IACH,CAAC;IAKM,KAAK;QACV,MAAM,GAAG,GAA2B,IAAI,QAAQ,CAAe,IAAI,EAAE,CAAC,CAAC,CAAC;QACxE,OAAO,GAAG,CAAC;IACb,CAAC;IAKM,GAAG;QACR,MAAM,GAAG,GAA2B,IAAI,QAAQ,CAC9C,IAAI,EACJ,IAAI,CAAC,KAAK,CACX,CAAC;QACF,OAAO,GAAG,CAAC;IACb,CAAC;IAOM,KAAK,CAAC,GAA2B;QACtC,MAAM,KAAK,GAAW,GAAG,CAAC,MAAM,CAAC;QACjC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACpC,OAAO,GAAG,CAAC;SACZ;QAGD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,EAAE,IAAI,CAAC,KAAK,CAAC;QAEb,MAAM,IAAI,GAA2B,IAAI,QAAQ,CAC/C,IAAI,EACJ,KAAK,CACN,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACnC,kEAAc,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,kEAAc,CAAC,IAAI,CAAC,CAAC;SACtB;IACH,CAAC;;AAEsB,kBAAW,GAAG,EAAE,CAAC;AASnC,MAAM,QAAQ;IAInB,YAAY,CAAwB,EAAE,GAAY;QAChD,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,EAAgB,CAAC;QAE5D,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAKM,GAAG,CAAC,GAA2B;QACpC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,YAAY;QACjB,EAAE,IAAI,CAAC,MAAM,CAAC;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,YAAY;QACjB,EAAE,IAAI,CAAC,MAAM,CAAC;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS;QACd,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAe,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC;IAChB,CAAC;IAKM,SAAS;QACd,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAe,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAC5B,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,GAAG;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAKM,QAAQ,CAAC,GAA2B;QACzC,OAAO,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC;IAC5D,CAAC;CAIF;AAG6B;AAEvB,IAAU,qBAAqB,CAOrC;AAPD,WAAiB,qBAAqB;IACvB,4BAAM,GAAG,2CAAQ,CAAC;IAElB,6BAAO,GAAG,4CAAS,CAAC;IAEpB,8BAAQ,GAAG,6CAAU,CAAC;AAErC,CAAC,EAPgB,qBAAqB,KAArB,qBAAqB,QAOrC;;;;;;;;;;;;;;;;;;AChTM,MAAM,SAAS;IAmFpB,YAAmB,CAAS;QAC1B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IA9EM,MAAM,CAAC,CAAS,EAAE,MAAe;QACtC,IAAI,CAAC,CAAC,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC;IACd,CAAC;IAQM,SAAS,CAAC,MAAc,EAAE,CAAS;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAChB;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,QAAQ;QACb,OAAO,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;IAChE,CAAC;IAKM,SAAS;QACd,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IACvB,CAAC;IAQM,MAAM,CAAC,CAAY;QACxB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAQM,OAAO,CAAC,CAAY;QACzB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;IAQM,OAAO,CAAC,CAAS;QACtB,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAOM,OAAO;QACZ,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;IAC5B,CAAC;CAUF;AAGgC;AAE1B,IAAU,qBAAqB,CAGrC;AAHD,WAAiB,qBAAqB;IACvB,+BAAS,GAAG,iDAAW,CAAC;AAEvC,CAAC,EAHgB,qBAAqB,KAArB,qBAAqB,QAGrC;;;;;;;;;;;;;;;;;;;AChGM,MAAM,SAAS;IAMpB,YAAY,eAAe,GAAG,CAAC;QAC7B,IAAI,eAAe,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC;YACvC,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;IACH,CAAC;IAKM,EAAE,CAAC,KAAa;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAOM,GAAG,CAAC,KAAa,EAAE,KAAQ;QAChC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAC3B,CAAC;IAKM,GAAG,CAAC,MAAM,GAAG,CAAC;QACnB,MAAM,GAAG,GAAQ,IAAI,KAAK,EAAK,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACxC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAMM,QAAQ,CAAC,KAAQ;QACtB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,eAAe,CAClB,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CACnE,CAAC;SACH;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;IAClC,CAAC;IAKM,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IAMM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAOM,MAAM,CAAC,OAAe,EAAE,KAAQ;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;QAE3B,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SACtB;QAED,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,CAAC;IAKM,MAAM,CAAC,OAAe,EAAE,QAAW,IAAI;QAC5C,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAKM,UAAU,CACf,OAAe,EACf,QAAa,IAAI,EACjB,gBAAgB,GAAG,IAAI;QAEvB,MAAM,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAE9B,IAAI,gBAAgB,EAAE;gBACpB,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;oBACjD,IAAI,OAAO,KAAK,IAAI,UAAU,EAAE;wBAE9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,CAAC;qBACxD;yBACI;wBACH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;qBACtB;iBACF;aACF;iBAAM;gBACL,KAAK,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;oBACjD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;iBACtB;aACF;SACF;aAAM;YAGL,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACvB,CAAC;IAQM,MAAM,CACX,QAAqB,EACrB,KAAkB,EAClB,GAAgB;QAEhB,IAAI,KAAK,GAAW,QAAQ,CAAC,MAAM,CAAC;QACpC,MAAM,KAAK,GAAW,KAAK,CAAC,MAAM,CAAC;QACnC,MAAM,KAAK,GAAW,GAAG,CAAC,MAAM,CAAC;QAEjC,MAAM,QAAQ,GAAW,KAAK,GAAG,KAAK,CAAC;QAEvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC;QAG5C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnC,IAAI,OAAO,GAAG,CAAC,EAAE;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;gBAChC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aACtC;SACF;QAED,KAAK,IAAI,CAAC,GAAW,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;YACnD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;IACrC,CAAC;IAQM,MAAM,CAAC,KAAa;QACzB,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACpC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,EAAE,IAAI,CAAC,KAAK,CAAC;QAEb,OAAO,IAAI,CAAC;IACd,CAAC;IAMM,KAAK,CAAC,GAAgB;QAC3B,MAAM,KAAK,GAAW,GAAG,CAAC,MAAM,CAAC;QACjC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,EAAE;YACpC,OAAO,GAAG,CAAC;SACZ;QAGD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC3B,EAAE,IAAI,CAAC,KAAK,CAAC;QAEb,MAAM,IAAI,GAAgB,IAAI,QAAQ,CAAI,IAAI,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC;IACd,CAAC;IAMM,eAAe,CAAC,OAAe;QACpC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE;YAC5B,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;aAC1B;SACF;IACH,CAAC;IAKM,KAAK;QACV,MAAM,GAAG,GACP,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAI,IAAI,EAAE,CAAC,CAAC,CAAC;QAC1D,OAAO,GAAG,CAAC;IACb,CAAC;IAKM,GAAG;QACR,MAAM,GAAG,GAAgB,IAAI,QAAQ,CAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3D,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,SAAS,CAAC,MAAc;QAC7B,MAAM,SAAS,GAAG,IAAI,SAAS,EAAK,CAAC;QACrC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAClC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;QAC1C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;QAE9C,OAAO,SAAS,CAAC;IACnB,CAAC;;AAMe,uBAAa,GAAG,EAAE,CAAC;AAG9B,MAAM,QAAQ;IAInB,YAAmB,CAAgB,EAAE,KAAc;QACjD,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IAKM,GAAG,CAAC,GAAgB;QACzB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,YAAY;QACjB,EAAE,IAAI,CAAC,MAAM,CAAC;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,YAAY;QACjB,EAAE,IAAI,CAAC,MAAM,CAAC;QACd,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS;QACd,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5D,OAAO,MAAM,CAAC;IAChB,CAAC;IAKM,SAAS;QACd,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAC5D,OAAO,MAAM,CAAC;IAChB,CAAC;IAKM,GAAG;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAKM,YAAY,CAAC,GAAgB;QAClC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,QAAQ,CAAC,GAAgB;QAC9B,OAAO,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC;IAClE,CAAC;CAIF;AAGgC;AAE1B,IAAU,qBAAqB,CAKrC;AALD,WAAiB,qBAAqB;IACvB,+BAAS,GAAG,iDAAW,CAAC;IAExB,8BAAQ,GAAG,gDAAU,CAAC;AAErC,CAAC,EALgB,qBAAqB,KAArB,qBAAqB,QAKrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjViC;AACmC;AAE9D,MAAM,cAAc,GAAG,CAAC,KAAe,EAAE,GAAW,EAAE,IAAW,EAAE,EAAE;IAC1E,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AAChD,CAAC,CAAC;AAEK,MAAM,gBAAgB,GAAG,CAAC,KAAe,EAAE,GAAW,EAAE,IAAW,EAAE,EAAE;IAC5E,cAAc,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1C,CAAC,CAAC;AAEK,MAAM,UAAU,GAAG,CAAC,IAAS,EAAE,EAAE;IACtC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,CAAC,CAAC;AAEK,IAAI,gBAAuD,CAAC;AAC5D,IAAI,cAAqD,CAAC;AAC1D,IAAI,aAAoD,CAAC;AACzD,IAAI,gBAAuD,CAAC;AAC5D,IAAI,cAAqD,CAAC;AAEjE,IAAI,iEAAa,IAAI,yEAAqB,EAAE;IAC1C,gBAAgB,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QACjD,gBAAgB,CAAC,6EAAyB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEF,aAAa,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC9C,gBAAgB,CAAC,0EAAsB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF,gBAAgB,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QACjD,gBAAgB,CAAC,6EAAyB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;CACH;KAAM,IAAI,iEAAa,IAAI,uEAAmB,EAAE;IAC/C,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;IAEF,aAAa,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC9C,gBAAgB,CAAC,0EAAsB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF,gBAAgB,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QACjD,gBAAgB,CAAC,6EAAyB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;CACH;KAAM,IAAI,iEAAa,IAAI,sEAAkB,EAAE;IAC9C,aAAa,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC9C,gBAAgB,CAAC,0EAAsB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC,CAAC;IAEF,gBAAgB,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QACjD,gBAAgB,CAAC,6EAAyB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;CACH;KAAM,IAAI,iEAAa,IAAI,yEAAqB,EAAE;IACjD,gBAAgB,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QACjD,gBAAgB,CAAC,6EAAyB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;CACH;KAAM,IAAI,iEAAa,IAAI,uEAAmB,EAAE;IAC/C,cAAc,GAAG,CAAC,GAAW,EAAE,GAAG,IAAW,EAAE,EAAE;QAC/C,gBAAgB,CAAC,2EAAuB,EAAE,KAAK,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC;CACH;AAMM,MAAM,WAAW;IASf,MAAM,CAAC,KAAK,CAAC,QAAkB,EAAE,MAAc,EAAE,IAAY;QAElE,IAAI,QAAQ,GAAG,mFAA+B,EAAE,EAAE;YAChD,OAAO;SACR;QAED,MAAM,QAAQ,GACZ,mFAA+B,CAAC;QAElC,IAAI,CAAC,QAAQ;YAAE,OAAO;QAEtB,MAAM,MAAM,GAAW,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3D,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC;IAUM,MAAM,CAAC,SAAS,CACrB,QAAkB,EAClB,IAAgB,EAChB,MAAc;QAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;iBAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC7B,CAAC;IAKD,gBAAuB,CAAC;CACzB;AAGkC;AAE5B,IAAU,qBAAqB,CAGrC;AAHD,WAAiB,qBAAqB;IACvB,iCAAW,GAAG,qDAAa,CAAC;AAE3C,CAAC,EAHgB,qBAAqB,KAArB,qBAAqB,QAGrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JiD;AACmB;AACvB;AACgC;AAChC;AAG9C,MAAM,4BAA4B,GAAG,sBAAsB,CAAC;AAC5D,MAAM,8BAA8B,GAAG,4BAA4B,CAAC;AAK7D,MAAe,KAAK;IAIzB,gBAAsB,CAAC;IAUhB,YAAY,CAAC,YAAqB,EAAE,MAAe;QACxD,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAKM,KAAK,CAAC,YAAY,GAAG,CAAC;QAC3B,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,OAAO,CAAC,YAAY,GAAG,CAAC;QAC7B,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,SAAS,CAAC,YAAY,GAAG,KAAK;QACnC,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,OAAO;QACZ,OAAO,CAAC,CAAC;IACX,CAAC;IAKM,QAAQ,CAAC,eAAwB,IAAI;QAC1C,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,SAAS,CAAC,eAAe,IAAI,sDAAS,EAAS;QACpD,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,MAAM,CAAC,YAAoC;QAChD,OAAO,YAAY,CAAC;IACtB,CAAC;IAKM,eAAe,CAAC,KAAa;QAClC,OAAO,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAKM,gBAAgB,CAAC,CAAqB;QAC3C,OAAO,KAAK,CAAC,SAAS,CAAC,wBAAwB,CAC7C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAOM,OAAO;QACZ,OAAO,KAAK,CAAC,WAAW,CAAC;IAC3B,CAAC;IAKM,OAAO;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,MAAM;QACX,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,MAAM;QACX,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,OAAO;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,QAAQ;QACb,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,OAAO;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,KAAK;QACV,OAAO,KAAK,CAAC;IACf,CAAC;IASM,MAAM,CAAC,KAAU;QACtB,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,QAAQ;QACb,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,wBAAwB,CAAC,QAAgB;QAC9C,OAAO,SAAS,CAAC,UAAU,CAAC;IAC9B,CAAC;IAKM,MAAM,CAAC,gCAAgC;QAC5C,WAAW,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9C,WAAW,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;QAChD,KAAK,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAChD,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;QACtC,KAAK,CAAC,WAAW,GAAG,IAAI,sDAAS,EAAU,CAAC;IAC9C,CAAC;IAKM,MAAM,CAAC,6BAA6B;QACzC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;QAC7B,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;QAC9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;QACxB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACvB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;IAC3B,CAAC;CAQF;AAWM,MAAM,UAAU;IAIrB,YAAmB,MAAoB,EAAE,MAAe;QAyexD,mBAAc,GAAoB,qFAAmC,CAAC;QAxepE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAElB,IAAI,MAAM,IAAI,SAAS,EAAE;YACvB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACtD;IACH,CAAC;IASM,MAAM,CAAC,MAAM,CAAC,MAAmB,EAAE,IAAY;QACpD,MAAM,IAAI,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,SAAS,GAAY,IAAI,CAAC,UAAU,CACxC,MAAM,EACN,IAAI,EACJ,IAAI,CAAC,cAAc,CACpB,CAAC;QAEF,IAAI,CAAC,SAAS,EAAE;YACd,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAOM,MAAM,CAAC,MAAM,CAAC,QAAoB;QACvC,QAAQ,GAAG,IAAI,CAAC;IAClB,CAAC;IAKM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAQM,MAAM,CAAC,mBAAmB,CAAC,MAAmB;QACnD,MAAM,UAAU,GAAe,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAW,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC7D,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;SACnD;QAED,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,GAAG,CAAC;IACb,CAAC;IAKO,MAAM,CAAC,GAAG,CAAC,CAAS;QAC1B,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IASM,UAAU,CACf,MAAmB,EACnB,IAAY,EACZ,aAA+B;QAE/B,MAAM,MAAM,GAAa,IAAI,KAAK,CAAS,CAAC,CAAC,CAAC;QAC9C,MAAM,YAAY,GAAW,UAAU,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAEpE,IAAI,aAAa,IAAI,SAAS,EAAE;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;SAC7D;aAAM;YAEL,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,IAAI,OAAO,EAAE,CAAC,CAAC;SACrE;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,MAAM,GAAG,2BAA2B,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;YACpE,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;YAEpC,2DAAa,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;YAChD,OAAO,KAAK,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;YAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,sDAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;YAC9D,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,aAAa;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAKM,cAAc;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC;IAYS,UAAU,CAClB,MAAc,EACd,MAAc,EACd,KAAa,EACb,SAAmB;QAEnB,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAE7B,IAAI,CAAC,GAAU,IAAI,CAAC;QACpB,IAAI,CAAC,GAAW,KAAK,CAAC;QACtB,IAAI,CAAS,CAAC;QAEd,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YACtB,MAAM,CAAC,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,QAAQ,CAAC,EAAE;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC;gBACT,KAAK,GAAG,CAAC,CAAC;oBACR,MAAM,WAAW,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3C,CAAC,GAAG,8DAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;oBACzC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;iBACzB;gBACD,KAAK,GAAG;oBACN,OAAO,IAAI,UAAU,CACnB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CACnD,CAAC;gBACJ,KAAK,GAAG;oBACN,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;oBACtD,OAAO,CAAC,CAAC;gBACX,KAAK,GAAG;oBACN,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;oBACvD,OAAO,CAAC,CAAC;gBACX,KAAK,GAAG;oBACN,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE;wBAClB,CAAC,GAAG,IAAI,aAAa,EAAE,CAAC;wBACxB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACtB;yBAAM;wBACL,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;qBAC5B;oBACD,OAAO,CAAC,CAAC;gBACX,KAAK,GAAG;oBACN,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE;wBAClB,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC;wBAC1B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACtB;yBAAM;wBACL,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;qBAC5B;oBACD,OAAO,CAAC,CAAC;gBACX,KAAK,GAAG;oBACN,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE;wBAClB,CAAC,GAAG,WAAW,CAAC,UAAU,CAAC;wBAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBACtB;yBAAM;wBACL,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;qBACtC;oBACD,OAAO,CAAC,CAAC;gBACX,KAAK,GAAG;oBACN,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;oBACrC,OAAO,IAAI,CAAC;gBACd,KAAK,GAAG;oBACN,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACjB,OAAO,IAAI,CAAC;gBACd,KAAK,IAAI;oBACP,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,KAAK,GAAG,CAAC;gBACT,KAAK,IAAI,CAAC;gBACV,KAAK,IAAI,CAAC;gBACV;oBAEE,MAAM;aACT;SACF;QAED,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;QACrC,OAAO,IAAI,CAAC;IACd,CAAC;IAWS,WAAW,CACnB,MAAc,EACd,MAAc,EACd,KAAa,EACb,SAAmB;QAEnB,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAE7B,IAAI,CAAC,GAAG,KAAK,CAAC;QACd,IAAI,CAAS,EAAE,EAAU,CAAC;QAC1B,MAAM,GAAG,GAAc,IAAI,sDAAS,CAAC,EAAE,CAAC,CAAC;QACzC,IAAI,QAAQ,GAAW,KAAK,CAAC;QAE7B,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YACtB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAEd,QAAQ,CAAC,EAAE;gBACT,KAAK,GAAG,CAAC,CAAC;oBAER,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACrB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;oBACjD,OAAO,GAAG,CAAC,CAAC,CAAC;iBACd;gBACD,KAAK,IAAI,CAAC,CAAC;oBAET,CAAC,EAAE,CAAC;oBAEJ,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,EAAE;wBACpB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;qBAClD;oBACD,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;oBAEjB,IAAI,CAAC,GAAG,MAAM,EAAE;wBACd,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;wBAEf,QAAQ,EAAE,EAAE;4BACV,KAAK,IAAI;gCACP,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gCACtB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gCACtB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gCACvB,MAAM;4BACR,KAAK,GAAG;gCACN,IAAI,CAAC,MAAM,GAAG,2CAA2C,CAAC;gCAC1D,MAAM;4BACR;gCACE,MAAM;yBACT;qBACF;yBAAM;wBACL,IAAI,CAAC,MAAM,GAAG,2BAA2B,CAAC;qBAC3C;iBACF;gBACD,OAAO,CAAC,CAAC;oBACP,MAAM;iBACP;aACF;SACF;QAED,IAAI,CAAC,MAAM,GAAG,0BAA0B,CAAC;QACzC,OAAO,IAAI,CAAC;IACd,CAAC;IAWS,WAAW,CACnB,MAAc,EACd,MAAc,EACd,KAAa,EACb,SAAmB;QAEnB,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC7B,MAAM,GAAG,GAAY,IAAI,OAAO,EAAE,CAAC;QAGnC,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,GAAW,KAAK,CAAC;QACtB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,MAAM,eAAe,GAAa,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,EAAE,GAAG,KAAK,CAAC;QAGf,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YACtB,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEd,QAAQ,CAAC,EAAE;oBACT,KAAK,GAAG;wBACN,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC;wBAC/D,IAAI,IAAI,CAAC,MAAM,EAAE;4BACf,OAAO,IAAI,CAAC;yBACb;wBAED,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;wBACvB,EAAE,GAAG,IAAI,CAAC;wBACV,MAAM,QAAQ,CAAC;oBACjB,KAAK,GAAG;wBACN,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,OAAO,GAAG,CAAC;oBACb,KAAK,GAAG;wBACN,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;wBACrC,MAAM;oBACR,KAAK,IAAI;wBACP,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB;wBACE,MAAM;iBACT;aACF;YACD,IAAI,CAAC,EAAE,EAAE;gBACP,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;gBAC9B,OAAO,IAAI,CAAC;aACb;YAED,EAAE,GAAG,KAAK,CAAC;YAGX,SAAS,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEd,QAAQ,CAAC,EAAE;oBACT,KAAK,GAAG;wBACN,EAAE,GAAG,IAAI,CAAC;wBACV,CAAC,EAAE,CAAC;wBACJ,MAAM,SAAS,CAAC;oBAClB,KAAK,GAAG;wBACN,IAAI,CAAC,MAAM,GAAG,sBAAsB,CAAC;wBACrC,MAAM;oBACR,KAAK,IAAI;wBACP,IAAI,CAAC,UAAU,EAAE,CAAC;oBAEpB;wBACE,MAAM;iBACT;aACF;YAED,IAAI,CAAC,EAAE,EAAE;gBACP,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC;gBAC9B,OAAO,IAAI,CAAC;aACb;YAGD,MAAM,KAAK,GAAU,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YACzE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YAED,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAGvB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAEpB,SAAS,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEd,QAAQ,CAAC,EAAE;oBACT,KAAK,GAAG;wBACN,MAAM,SAAS,CAAC;oBAClB,KAAK,GAAG;wBACN,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,OAAO,GAAG,CAAC;oBACb,KAAK,IAAI;wBACP,IAAI,CAAC,UAAU,EAAE,CAAC;oBACpB;wBACE,MAAM;iBACT;aACF;SACF;QAED,IAAI,CAAC,MAAM,GAAG,4BAA4B,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;IAUS,UAAU,CAClB,MAAc,EACd,MAAc,EACd,KAAa,EACb,SAAmB;QAEnB,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC7B,IAAI,GAAG,GAAc,IAAI,SAAS,EAAE,CAAC;QAGrC,IAAI,CAAC,GAAW,KAAK,CAAC;QACtB,IAAI,CAAS,CAAC;QACd,MAAM,eAAe,GAAa,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAG/C,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAEtB,MAAM,KAAK,GAAU,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;YAEzE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,OAAO,IAAI,CAAC;aACb;YACD,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAEvB,IAAI,KAAK,EAAE;gBACT,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAChB;YAID,QAAQ,EAAE,OAAO,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEd,QAAQ,CAAC,EAAE;oBACT,KAAK,GAAG;wBAGN,MAAM,QAAQ,CAAC;oBACjB,KAAK,GAAG;wBACN,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACrB,OAAO,GAAG,CAAC;oBACb,KAAK,IAAI;wBACP,EAAE,IAAI,CAAC,UAAU,CAAC;oBAEpB;wBACE,MAAM;iBACT;aACF;SACF;QAED,GAAG,GAAG,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,4BAA4B,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC;CAOF;AASM,MAAM,SAAU,SAAQ,KAAK;IAIlC,YAAY,CAAS;QACnB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAKM,OAAO;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,MAAM,MAAM,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;QAE5B,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAKM,KAAK,CAAC,YAAY,GAAG,CAAC;QAC3B,OAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1C,CAAC;IAKM,OAAO,CAAC,YAAY,GAAG,GAAG;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IASM,MAAM,CAAC,KAAU;QACtB,IAAI,QAAQ,KAAK,OAAO,KAAK,EAAE;YAE7B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACrB,OAAO,KAAK,CAAC;aACd;iBAEI;gBACH,OAAO,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC;aAC7B;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CAGF;AAKM,MAAM,WAAY,SAAQ,KAAK;IAgDpC,YAAmB,CAAU;QAC3B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACtB,CAAC;IAhDM,MAAM;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS,CAAC,YAAY,GAAG,KAAK;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAExD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IASM,MAAM,CAAC,KAAU;QACtB,IAAI,SAAS,KAAK,OAAO,KAAK,EAAE;YAC9B,OAAO,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC;SACjC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAKM,QAAQ;QACb,OAAO,IAAI,CAAC;IACd,CAAC;CAeF;AAKM,MAAM,UAAW,SAAQ,KAAK;IAMnC,YAAmB,CAAM;QACvB,KAAK,EAAE,CAAC;QAER,IAAI,QAAQ,KAAK,OAAO,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,YAAY,sDAAS,EAAE;YAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;SAC1B;IACH,CAAC;IAKM,QAAQ;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IASM,MAAM,CAAC,KAAU;QACtB,IAAI,QAAQ,KAAK,OAAO,KAAK,EAAE;YAC7B,OAAO,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC;SACpC;QAED,IAAI,KAAK,YAAY,sDAAS,EAAE;YAC9B,OAAO,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;SACtC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAKM,MAAM,SAAU,SAAQ,UAAU;IAmBvC,YAAmB,CAAqB,EAAE,QAAiB;QACzD,IAAI,QAAQ,KAAK,OAAO,CAAC,EAAE;YACzB,KAAK,CAAC,CAAC,CAAC,CAAC;SACV;aAAM;YACL,KAAK,CAAC,CAAC,CAAC,CAAC;SACV;QACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAtBM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAKM,wBAAwB,CAAC,CAAS;QACvC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC;IACd,CAAC;IAiBM,OAAO;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;CAGF;AAKM,MAAM,aAAc,SAAQ,KAAK;IAI/B,MAAM;QACX,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAKM,QAAQ;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,wBAAwB,CAAC,CAAS;QACvC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,OAAO,SAAS,CAAC,SAAS,CAAC;IAC7B,CAAC;IAKD;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;IACnC,CAAC;CACF;AAKM,MAAM,SAAU,SAAQ,KAAK;IAIlC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,IAAI,sDAAS,EAAS,CAAC;IACvC,CAAC;IAKM,OAAO;QACZ,KACE,IAAI,GAAG,GAA8B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EACxD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAC/B,GAAG,CAAC,YAAY,EAAE,EAClB;YACA,IAAI,CAAC,GAAU,GAAG,CAAC,GAAG,EAAE,CAAC;YAEzB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACtB,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,GAAG,IAAI,CAAC;aACV;SACF;IACH,CAAC;IAKM,OAAO;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,eAAe,CAAC,KAAa;QAClC,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,KAAK,EAAE;YAC/C,OAAO,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAC9C,8BAA8B,CAC/B,CAAC;SACH;QAED,MAAM,CAAC,GAAU,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,CAAC,IAAI,IAAI,EAAE;YACb,OAAO,KAAK,CAAC,SAAS,CAAC;SACxB;QAED,OAAO,CAAC,CAAC;IACX,CAAC;IAKM,gBAAgB,CAAC,CAAqB;QAC3C,OAAO,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,MAAM,YAAY,GAAW,MAAM,GAAG,KAAK,CAAC;QAE5C,KACE,IAAI,GAAG,GAA8B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EACxD,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAC/B,GAAG,CAAC,SAAS,EAAE,EACf;YACA,MAAM,CAAC,GAAU,GAAG,CAAC,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,aAAa,IAAI,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;SACtE;QAED,IAAI,CAAC,aAAa,GAAG,YAAY,GAAG,MAAM,GAAG,KAAK,CAAC;QAEnD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAMM,GAAG,CAAC,CAAQ;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAKM,SAAS,CAAC,eAAiC,IAAI;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAKM,OAAO;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;CAGF;AAKM,MAAM,OAAQ,SAAQ,KAAK;IAIhC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,gDAAM,EAAiB,CAAC;IAC1C,CAAC;IAKM,OAAO;QACZ,MAAM,GAAG,GAAmC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAE9D,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE;YACpC,IAAI,CAAC,GAAU,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;YAEhC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACtB,CAAC,GAAG,KAAK,CAAC,CAAC;gBACX,CAAC,GAAG,IAAI,CAAC;aACV;YAED,GAAG,CAAC,YAAY,EAAE,CAAC;SACpB;IACH,CAAC;IAKM,KAAK;QACV,OAAO,IAAI,CAAC;IACd,CAAC;IAKM,gBAAgB,CAAC,CAAqB;QAC3C,IAAI,CAAC,YAAY,sDAAS,EAAE;YAC1B,MAAM,GAAG,GAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,OAAO,KAAK,CAAC,SAAS,CAAC;aACxB;YACD,OAAO,GAAG,CAAC;SACZ;QAED,KACE,IAAI,IAAI,GAAmC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAC5D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAC9B,IAAI,CAAC,YAAY,EAAE,EACnB;YACA,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE;gBACzB,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC7B,OAAO,KAAK,CAAC,SAAS,CAAC;iBACxB;gBACD,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;aAC1B;SACF;QAED,OAAO,KAAK,CAAC,SAAS,CAAC;IACzB,CAAC;IAKM,eAAe,CAAC,KAAa;QAClC,OAAO,KAAK,CAAC,UAAU,CAAC,wBAAwB,CAC9C,4BAA4B,CAC7B,CAAC;IACJ,CAAC;IAKM,SAAS,CAAC,YAAoB,EAAE,MAAc;QACnD,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,KAAK,CAAC;QAEpC,MAAM,GAAG,GAAmC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC9D,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE;YACpC,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;YAC5B,MAAM,CAAC,GAAU,GAAG,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;YAElC,IAAI,CAAC,aAAa;gBAChB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;YACnE,GAAG,CAAC,YAAY,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,aAAa,IAAI,MAAM,GAAG,KAAK,CAAC;QAErC,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAKM,MAAM,CAAC,YAAoC;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAKM,GAAG,CAAC,GAAW,EAAE,CAAQ;QAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAKM,OAAO;QACZ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,IAAI,sDAAS,EAAU,CAAC;YAErC,MAAM,GAAG,GAAmC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAE9D,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE;gBACpC,MAAM,GAAG,GAAW,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;gBACpC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACzB,GAAG,CAAC,YAAY,EAAE,CAAC;aACpB;SACF;QACD,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAKM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;CAIF;AAGiC;AAC0B;AAErD,IAAU,qBAAqB,CAmBrC;AAnBD,WAAiB,qBAAqB;IACvB,gCAAU,GAAG,mDAAY,CAAC;IAE1B,+BAAS,GAAG,kDAAW,CAAC;IAExB,iCAAW,GAAG,oDAAa,CAAC;IAE5B,+BAAS,GAAG,kDAAW,CAAC;IAExB,+BAAS,GAAG,kDAAW,CAAC;IAExB,6BAAO,GAAG,gDAAS,CAAC;IAEpB,mCAAa,GAAG,sDAAe,CAAC;IAEhC,gCAAU,GAAG,mDAAY,CAAC;IAE1B,2BAAK,GAAG,8CAAO,CAAC;AAE/B,CAAC,EAnBgB,qBAAqB,KAArB,qBAAqB,QAmBrC;;;;;;;;;;;;;;;;;AC1uCqB;AAQf,MAAM,mBAAmB;IAC9B,MAAM,CAAC,eAAe,CAAC,GAAU,EAAE,GAAY;QAC7C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,SAAS,EAAE;gBAChC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,oDAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACzC;iBAAM,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,QAAQ,EAAE;gBACtC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,mDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACxC;iBAAM,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,QAAQ,EAAE;gBACtC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,kDAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACvC;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;gBACpC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC5D;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,MAAM,EAAE;gBACrC,GAAG,CAAC,GAAG,CACL,GAAG,EACH,mBAAmB,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,gDAAO,EAAE,CAAC,CAC7D,CAAC;aACH;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;gBAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,sDAAa,EAAE,CAAC,CAAC;aACnC;iBAAM;gBAEL,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;IAES,MAAM,CAAC,cAAc,CAAC,GAAU;QACxC,MAAM,GAAG,GAAG,IAAI,kDAAS,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,OAAO,OAAO,IAAI,QAAQ,EAAE;gBAC9B,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,SAAS,EAAE;oBACpC,GAAG,CAAC,GAAG,CAAC,IAAI,oDAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACxC;qBAAM,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,EAAE;oBAC1C,GAAG,CAAC,GAAG,CAAC,IAAI,mDAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACvC;qBAAM,IAAI,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,QAAQ,EAAE;oBAC1C,GAAG,CAAC,GAAG,CAAC,IAAI,kDAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACtC;qBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;oBACpC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iBACxC;qBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,MAAM,EAAE;oBACrC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,gDAAO,EAAE,CAAC,CAAC,CAAC;iBACxD;qBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;oBAC3B,GAAG,CAAC,GAAG,CAAC,IAAI,sDAAa,EAAE,CAAC,CAAC;iBAC9B;qBAAM;oBAEL,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;iBACnB;aACF;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;gBACpC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACxC;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,MAAM,EAAE;gBACrC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,gDAAO,EAAE,CAAC,CAAC,CAAC;aACxD;iBAAM,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;gBAC3B,GAAG,CAAC,GAAG,CAAC,IAAI,sDAAa,EAAE,CAAC,CAAC;aAC9B;iBAAM;gBAEL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtB;aACF;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC;CACF;;;;;;;;;;;;ACrFD;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU,2EAA2E;AACrF,UAAU,6DAA6D;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,WAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gBAAgB;AACloFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW,EAAE,4BAA4B;AACvE;AACA;AACA;AACA,8BAA8B,iBAAiB,EAAE,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB,kBAAkB;AAC/D;AACA,kBAAkB;AAClB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,4BAA4B,2BAA2B,4BAA4B;AAC3L;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrwBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDAAyD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,mBAAmB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,2EAA2E;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,+CAA+C;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD,sBAAsB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B,KAAK,WAAW;AACnF,mCAAmC,mBAAmB;AACtD,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA,sCAAsC,0EAA0E;AAChH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iDAAiD,kCAAkC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA,oEAAoE,0EAA0E;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oEAAoE,oCAAoC;AACxG;AACA;AACA;AACA,oEAAoE,6CAA6C;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAmE;AACzG,yBAAyB,4CAA4C;AACrE;AACA;AACA;AACA,uCAAuC,UAAU,cAAc,aAAa,KAAK,YAAY;AAC7F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mEAAmE;AACzG,yBAAyB,4CAA4C;AACrE;AACA;AACA;AACA,uCAAuC,UAAU,cAAc,aAAa,KAAK,YAAY;AAC7F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,sCAAsC,mCAAmC;AACzE,SAAS,UAAU,mCAAmC;AACtD;AACA;AACA,mCAAmC,UAAU,iBAAiB,aAAa,KAAK,SAAS;AACzF,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iFAAiF,mBAAmB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,kBAAkB,UAAU,SAAS,gBAAgB,UAAU;AAChJ;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yCAAyC,SAAS,eAAe;AACjE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,UAAU,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA,8CAA8C,gBAAgB,uCAAuC;AACrG,mDAAmD,8CAA8C;AACjG,iCAAiC,4CAA4C;AAC7E;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,SAAS;AACT,wDAAwD,kBAAkB;AAC1E,wDAAwD,kBAAkB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wDAAwgCAAgC,0BAA0B;AAC1D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8EAA8E,4CAA4C;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,8CAA8C;AACvH,kEAAkE,8CAA8C;AAChH;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,oCAAoC,oCAAoC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qCAAqC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,sBAAsB;AACvD;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B,sCAAsC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,2DAA2D;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,8BAA8B,uCAAuC;AACrE;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA,iDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,oBAAoB,cAAc;AAClC,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,KAAK;AAC/C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,QAAQ,QAAQ,0BAA0B;AACjF;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA,8DAA8D,6DAA6D;AAC3H;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,YAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,wDAAwD;AAClE,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+CAA+C,2CAA2C;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,sBAAsB;AACtB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA,sDAAsD,MAAM;AAC5D;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,KAAK,wBAAwB,mCAAmC;AAChE;;AAEA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,QAAQ;AACjF,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,4BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,eAAe;AAC7C,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,6BAA6B;AAC7B,iEAAiE,4CAA4C;AAC7G,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iDAAiD,+BAA+B,0BAA0B,SAAS;AACnH,qCAAqC,QAAQ;AAC7C,oDAAoD,qCAAqC;AACzF;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oEAAoE,6DAA6D;AACjI;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B,2DAA2D;AACrF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qEAAqE,IAAI,MAAM;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA,4BAA4B,kCAAkC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,wBAAwB,aAAa;AACrC,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,kDAAkD,OAAO,GAAG,UAAU,GAAG,UAAU;AACnF;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA,oCAAoC,SAAS,cAAc,GAAG;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA,sDAAsD,OAAO,GAAG,UAAU,GAAG,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,2EAA2E,uBAAuB;AAClG;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD;AACA;AACA;AACA;AACA,yDAAyD;AACzD,qDAAqD;AACrD,iDAAiD;AACjD;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,kFAAkF,+BAA+B;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,UAAU;AACxF;AACA,6EAA6E,UAAU;AACvF;AACA,SAAS;AACT;AACA;AACA,8CAA8C,UAAU;AACxD;AACA,yCAAyC,UAAU,gDAAgD,mBAAmB;AACtH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,UAAU,4BAA4B;AACtC;AACA,yBAAyB,aAAa;AACtC;AACA,2BAA2B,wDAAwD;AACnF;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,YAAY;AACzD;AACA,KAAK;AACL;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,mDAAmD,2BAA2B;AAC9E;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEiG;AACjG;;;;;;;UCr+JA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN2C;AAC3C7G,MAAM,CAACgH,aAAa,GAAG,YAAY;EAC/Bhc,OAAO,CAACR,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC;EACxC,IAAIyc,IAAI,GAAG,IAAIF,oDAAU,CAACG,SAAS,EAAEC,eAAe,EAAEC,UAAU,CAAC;EACjEH,IAAI,CAACI,QAAQ,EAAE;EACfJ,IAAI,CAACK,SAAS,CAACH,eAAe,CAACI,OAAO,EAAEJ,eAAe,CAACK,eAAe,CAAC;AAC5E,CAAC,C","sources":["webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/AbortController.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Errors.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HttpClient.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HubConnection.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ILogger.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ITransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Loggers.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Subject.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/Utils.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","webpack://live2dwebcanvas/./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","webpack://live2dwebcanvas/./src/v1/framework/Live2DFramework.js","webpack://live2dwebcanvas/./src/v1/main.js","webpack://live2dwebcanvas/./src/Waifu/live2d-tips.ts","webpack://live2dwebcanvas/./src/lib/DbCache.ts","webpack://live2dwebcanvas/./src/v1/LAppDefine.ts","webpack://live2dwebcanvas/./src/v1/LAppLive2DManager.ts","webpack://live2dwebcanvas/./src/v1/LAppModel.ts","webpack://live2dwebcanvas/./src/v1/PlatformManager.ts","webpack://live2dwebcanvas/./src/v1/framework/MatrixStack.ts","webpack://live2dwebcanvas/./src/v1/framework/ModelSettingJson.ts","webpack://live2dwebcanvas/./src/v2/framework/cubismframeworkconfig.ts","webpack://live2dwebcanvas/./src/v2/framework/id/cubismid.ts","webpack://live2dwebcanvas/./src/v2/framework/id/cubismidmanager.ts","webpack://live2dwebcanvas/./src/v2/framework/live2dcubismframework.ts","webpack://live2dwebcanvas/./src/v2/framework/math/cubismmatrix44.ts","webpack://live2dwebcanvas/./src/v2/framework/rendering/cubismrenderer.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmmap.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmstring.ts","webpack://live2dwebcanvas/./src/v2/framework/type/csmvector.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismdebug.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismjson.ts","webpack://live2dwebcanvas/./src/v2/framework/utils/cubismjsonextension.ts","webpack://live2dwebcanvas/external var [\"moment\"]","webpack://live2dwebcanvas/./node_modules/dexie/dist/modern/dexie.mjs","webpack://live2dwebcanvas/webpack/bootstrap","webpack://live2dwebcanvas/webpack/runtime/compat get default export","webpack://live2dwebcanvas/webpack/runtime/define property getters","webpack://live2dwebcanvas/webpack/runtime/global","webpack://live2dwebcanvas/webpack/runtime/hasOwnProperty shorthand","webpack://live2dwebcanvas/webpack/runtime/make namespace object","webpack://live2dwebcanvas/./src/Waifu/waifu-tips.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* Disconnecting */ || this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        this.transport.onclose = (e) => this._stopConnection(e);\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this._negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    constructor(connection, logger, protocol, reconnectPolicy) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version: this._protocol.version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        return this._sendMessage(this._protocol.writeMessage(message));\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                        this._invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 1;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            await this._httpClient.delete(this._url, deleteOptions);\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"7.0.2\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","/**\r\n * EYHN 基于 live2d 官方 Live2DFramework.js 修改\r\n * \r\n * Copyright © 2016 - 2017 EYHN\r\n */\r\n//============================================================\r\n//============================================================\r\n//  class L2DBaseModel         \r\n//============================================================\r\n//============================================================\r\nfunction L2DBaseModel() {\r\n    this.live2DModel = null; // ALive2DModel\r\n    this.modelMatrix = null; // L2DModelMatrix\r\n    this.eyeBlink = null; // L2DEyeBlink\r\n    this.physics = null; // L2DPhysics\r\n    this.pose = null; // L2DPose\r\n    this.debugMode = false;\r\n    this.initialized = false;\r\n    this.updating = false;\r\n    this.alpha = 1;\r\n    this.accAlpha = 0;\r\n    this.lipSync = false;\r\n    this.lipSyncValue = 0;\r\n    this.accelX = 0;\r\n    this.accelY = 0;\r\n    this.accelZ = 0;\r\n    this.dragX = 0;\r\n    this.dragY = 0;\r\n    this.startTimeMSec = null;\r\n    this.mainMotionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.expressionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.motions = {};\r\n    this.expressions = {};\r\n\r\n    this.isTexLoaded = false;\r\n}\r\n\r\nvar texCounter = 0;\r\n\r\n//============================================================\r\n//    L2DBaseModel # getModelMatrix()\r\n//============================================================\r\nL2DBaseModel.prototype.getModelMatrix = function () {\r\n    return this.modelMatrix;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.setAlpha = function (a/*float*/) {\r\n    if (a > 0.999) a = 1;\r\n    if (a < 0.001) a = 0;\r\n    this.alpha = a;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.getAlpha = function () {\r\n    return this.alpha;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.isInitialized = function () {\r\n    return this.initialized;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.setInitialized = function (v/*boolean*/) {\r\n    this.initialized = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.isUpdating = function () {\r\n    return this.updating;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.setUpdating = function (v/*boolean*/) {\r\n    this.updating = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getLive2DModel()\r\n//============================================================\r\nL2DBaseModel.prototype.getLive2DModel = function () {\r\n    return this.live2DModel;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSync()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSync = function (v/*boolean*/) {\r\n    this.lipSync = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSyncValue()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSyncValue = function (v/*float*/) {\r\n    this.lipSyncValue = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAccel()\r\n//============================================================\r\nL2DBaseModel.prototype.setAccel = function (x/*float*/, y/*float*/, z/*float*/) {\r\n    this.accelX = x;\r\n    this.accelY = y;\r\n    this.accelZ = z;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setDrag()\r\n//============================================================\r\nL2DBaseModel.prototype.setDrag = function (x/*float*/, y/*float*/) {\r\n    this.dragX = x;\r\n    this.dragY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getMainMotionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getMainMotionManager = function () {\r\n    return this.mainMotionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getExpressionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getExpressionManager = function () {\r\n    return this.expressionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadModelData()\r\n//============================================================\r\nL2DBaseModel.prototype.loadModelData = function (path/*String*/, callback) {\r\n    /*\r\n    if( this.live2DModel != null ) {\r\n        this.live2DModel.deleteTextures();\r\n    }\r\n    */\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load model : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadLive2DModel(path, function (l2dModel) {\r\n        thisRef.live2DModel = l2dModel;\r\n        thisRef.live2DModel.saveParam();\r\n\r\n        var _err = Live2D.getError();\r\n\r\n        if (_err != 0) {\r\n            console.error(\"Error : Failed to loadModelData().\");\r\n            return;\r\n        }\r\n\r\n        thisRef.modelMatrix = new L2DModelMatrix(\r\n            thisRef.live2DModel.getCanvasWidth(),\r\n            thisRef.live2DModel.getCanvasHeight()); //L2DModelMatrix\r\n        thisRef.modelMatrix.setWidth(2);\r\n        thisRef.modelMatrix.setCenterPosition(0, 0);\r\n\r\n        callback(thisRef.live2DModel);\r\n    });\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadTexture()\r\n//============================================================\r\nL2DBaseModel.prototype.loadTexture = function (no/*int*/, path/*String*/, callback) {\r\n    texCounter++;\r\n\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Texture : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadTexture(this.live2DModel, no, path, function () {\r\n        texCounter--;\r\n        if (texCounter == 0) thisRef.isTexLoaded = true;\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadMotion()\r\n//============================================================\r\nL2DBaseModel.prototype.loadMotion = function (name/*String*/, path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Motion : \" + path);\r\n\r\n    var motion = null; //Live2DMotion\r\n\r\n    var thisRef = this;\r\n    pm.loadBytes(path).then((buf)=>{\r\n        motion = Live2DMotion.loadMotion(buf);\r\n        if (name != null) {\r\n            thisRef.motions[name] = motion;\r\n        }\r\n        callback(motion);\r\n    });\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadExpression()\r\n//============================================================\r\nL2DBaseModel.prototype.loadExpression = function (name/*String*/, path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n\r\n    if (this.debugMode) pm.log(\"Load Expression : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadBytes(path).then((buf)=>{\r\n        if (name != null) {\r\n            thisRef.expressions[name] = L2DExpressionMotion.loadJson(buf);\r\n        }\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPose()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPose = function (path /*String*/, callback) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load Pose : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path).then((buf)=>{\r\n            thisRef.pose = L2DPose.load(buf);\r\n            if (typeof callback == \"function\") callback();\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPhysics()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPhysics = function (path/*String*/) {\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if (this.debugMode) pm.log(\"Load Physics : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path).then((buf)=>{\r\n            thisRef.physics = L2DPhysics.load(buf);\r\n        });\r\n    }\r\n    catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # hitTestSimple()\r\n//============================================================\r\nL2DBaseModel.prototype.hitTestSimple = function (drawID, testX, testY) {\r\n\t\r\n\tif(this.live2DModel === null) return !1;\r\n\t\r\n    var drawIndex = this.live2DModel.getDrawDataIndex(drawID);\r\n\r\n    if (drawIndex < 0) return false;\r\n\r\n    var points = this.live2DModel.getTransformedPoints(drawIndex);\r\n    var left = this.live2DModel.getCanvasWidth();\r\n    var right = 0;\r\n    var top = this.live2DModel.getCanvasHeight();\r\n    var bottom = 0;\r\n\r\n    for (var j = 0; j < points.length; j = j + 2) {\r\n        var x = points[j];\r\n        var y = points[j + 1];\r\n\r\n        if (x < left) left = x;\r\n        if (x > right) right = x;\r\n        if (y < top) top = y;\r\n        if (y > bottom) bottom = y;\r\n    }\r\n    var tx = this.modelMatrix.invertTransformX(testX);\r\n    var ty = this.modelMatrix.invertTransformY(testY);\r\n\r\n    return (left <= tx && tx <= right && top <= ty && ty <= bottom);\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # hitTestSimpleCustom()\r\n//============================================================\r\nL2DBaseModel.prototype.hitTestSimpleCustom = function (x, y, testX, testY) {\r\n\t\r\n\tif(this.live2DModel === null) return !1;\r\n\ttry{\r\n        if(testX >= x[0] && testX <= y[0])\r\n            if(testY <= x[1] && testY >= y[1])\r\n                return true;\r\n        return false;\r\n    }catch(err){\r\n        console.warn(\"数据可能还没有准备好 view x:\" + x + \" y:\" + y +\" testX:\" + testX + \" testY:\" + testY \r\n            + \" Error:\" +err);\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionMotion  extends     AMotion\r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionMotion() {\r\n    AMotion.prototype.constructor.call(this);\r\n    this.paramList = new Array(); //ArrayList<L2DExpressionParam>\r\n}\r\n\r\nL2DExpressionMotion.prototype = new AMotion(); // L2DExpressionMotion extends AMotion\r\n\r\n//============================================================\r\nL2DExpressionMotion.EXPRESSION_DEFAULT = \"DEFAULT\";\r\nL2DExpressionMotion.TYPE_SET = 0;\r\nL2DExpressionMotion.TYPE_ADD = 1;\r\nL2DExpressionMotion.TYPE_MULT = 2;\r\n\r\n//============================================================\r\n//    static L2DExpressionMotion.loadJson()\r\n//============================================================\r\nL2DExpressionMotion.loadJson = function (buf) {\r\n    var ret = new L2DExpressionMotion();\r\n\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n\r\n    ret.setFadeIn(parseInt(json.fade_in) > 0 ? parseInt(json.fade_in) : 1000);\r\n    ret.setFadeOut(parseInt(json.fade_out) > 0 ? parseInt(json.fade_out) : 1000);\r\n\r\n    if (json.params == null) {\r\n        return ret;\r\n    }\r\n\r\n    var params = json.params;\r\n    var paramNum = params.length;\r\n    ret.paramList = []; //ArrayList<L2DExpressionParam>\r\n    for (var i = 0; i < paramNum; i++) {\r\n        var param = params[i];\r\n        var paramID = param.id.toString();\r\n        var value = parseFloat(param.val);\r\n        var calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        var calc = param.calc != null ? param.calc.toString() : \"add\";\r\n        if (calc === \"add\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        else if (calc === \"mult\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_MULT;\r\n        }\r\n        else if (calc === \"set\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_SET;\r\n        }\r\n        else {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        if (calcTypeInt == L2DExpressionMotion.TYPE_ADD) {\r\n            var defaultValue = param.def == null ? 0 : parseFloat(param.def);\r\n            value = value - defaultValue;\r\n        }\r\n        else if (calcTypeInt == L2DExpressionMotion.TYPE_MULT) {\r\n            var defaultValue = param.def == null ? 1 : parseFloat(param.def);\r\n            if (defaultValue == 0) defaultValue = 1;\r\n            value = value / defaultValue;\r\n        }\r\n\r\n        var item = new L2DExpressionParam();\r\n        item.id = paramID;\r\n        item.type = calcTypeInt;\r\n        item.value = value;\r\n\r\n        ret.paramList.push(item);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DExpressionMotion # updateParamExe()\r\n//============================================================\r\nL2DExpressionMotion.prototype.updateParamExe = function (model /*ALive2DModel*/, timeMSec/*long*/, weight /*float*/, motionQueueEnt /*MotionQueueEnt*/) {\r\n    for (var i = this.paramList.length - 1; i >= 0; --i) {\r\n        var param = this.paramList[i]; //L2DExpressionParam\r\n        // if (!param || !param.type) continue;\r\n        if (param.type == L2DExpressionMotion.TYPE_ADD) {\r\n            model.addToParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if (param.type == L2DExpressionMotion.TYPE_MULT) {\r\n            model.multParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if (param.type == L2DExpressionMotion.TYPE_SET) {\r\n            model.setParamFloat(param.id, param.value, weight);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionParam   \r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionParam() {\r\n    this.id = \"\";\r\n    this.type = -1;\r\n    this.value = null;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DEyeBlink          \r\n//============================================================\r\n//============================================================\r\nfunction L2DEyeBlink() {\r\n    this.nextBlinkTime = null /* TODO NOT INIT */; // \r\n    this.stateStartTime = null /* TODO NOT INIT */; // \r\n    this.blinkIntervalMsec = null /* TODO NOT INIT */; // \r\n    this.eyeState = EYE_STATE.STATE_FIRST;\r\n    this.blinkIntervalMsec = 4000;\r\n    this.closingMotionMsec = 100;\r\n    this.closedMotionMsec = 50;\r\n    this.openingMotionMsec = 150;\r\n    this.closeIfZero = true;\r\n    this.eyeID_L = \"PARAM_EYE_L_OPEN\";\r\n    this.eyeID_R = \"PARAM_EYE_R_OPEN\";\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # calcNextBlink()\r\n//============================================================\r\nL2DEyeBlink.prototype.calcNextBlink = function () {\r\n    var time /*long*/ = UtSystem.getUserTimeMSec();\r\n    var r /*Number*/ = Math.random();\r\n    return  /*(long)*/ (time + r * (2 * this.blinkIntervalMsec - 1));\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setInterval()\r\n//============================================================\r\nL2DEyeBlink.prototype.setInterval = function (blinkIntervalMsec /*int*/) {\r\n    this.blinkIntervalMsec = blinkIntervalMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setEyeMotion()\r\n//============================================================\r\nL2DEyeBlink.prototype.setEyeMotion = function (closingMotionMsec/*int*/, closedMotionMsec/*int*/, openingMotionMsec/*int*/) {\r\n    this.closingMotionMsec = closingMotionMsec;\r\n    this.closedMotionMsec = closedMotionMsec;\r\n    this.openingMotionMsec = openingMotionMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # updateParam()\r\n//============================================================\r\nL2DEyeBlink.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var time /*:long*/ = UtSystem.getUserTimeMSec();\r\n    var eyeParamValue /*:Number*/;\r\n    var t /*:Number*/ = 0;\r\n    switch (this.eyeState) {\r\n        case EYE_STATE.STATE_CLOSING:\r\n            t = (time - this.stateStartTime) / this.closingMotionMsec;\r\n            if (t >= 1) {\r\n                t = 1;\r\n                this.eyeState = EYE_STATE.STATE_CLOSED;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 1 - t;\r\n            break;\r\n        case EYE_STATE.STATE_CLOSED:\r\n            t = (time - this.stateStartTime) / this.closedMotionMsec;\r\n            if (t >= 1) {\r\n                this.eyeState = EYE_STATE.STATE_OPENING;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 0;\r\n            break;\r\n        case EYE_STATE.STATE_OPENING:\r\n            t = (time - this.stateStartTime) / this.openingMotionMsec;\r\n            if (t >= 1) {\r\n                t = 1;\r\n                this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n                this.nextBlinkTime = this.calcNextBlink();\r\n            }\r\n            eyeParamValue = t;\r\n            break;\r\n        case EYE_STATE.STATE_INTERVAL:\r\n            if (this.nextBlinkTime < time) {\r\n                this.eyeState = EYE_STATE.STATE_CLOSING;\r\n                this.stateStartTime = time;\r\n            }\r\n            eyeParamValue = 1;\r\n            break;\r\n        case EYE_STATE.STATE_FIRST:\r\n        default:\r\n            this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n            this.nextBlinkTime = this.calcNextBlink();\r\n            eyeParamValue = 1;\r\n            break;\r\n    }\r\n    if (!this.closeIfZero) eyeParamValue = -eyeParamValue;\r\n    model.setParamFloat(this.eyeID_L, eyeParamValue);\r\n    model.setParamFloat(this.eyeID_R, eyeParamValue);\r\n}\r\n\r\n//== enum EYE_STATE ==\r\nvar EYE_STATE = function () { };\r\n\r\nEYE_STATE.STATE_FIRST = \"STATE_FIRST\"\r\nEYE_STATE.STATE_INTERVAL = \"STATE_INTERVAL\"\r\nEYE_STATE.STATE_CLOSING = \"STATE_CLOSING\"\r\nEYE_STATE.STATE_CLOSED = \"STATE_CLOSED\"\r\nEYE_STATE.STATE_OPENING = \"STATE_OPENING\"\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMatrix44          \r\n//============================================================\r\n//============================================================\r\nfunction L2DMatrix44() {\r\n    this.tr = new Float32Array(16); // \r\n    this.identity();\r\n}\r\n\r\n//============================================================\r\n//    static L2DMatrix44.mul()\r\n//============================================================\r\nL2DMatrix44.mul = function (a/*float[]*/, b/*float[]*/, dst/*float[]*/) {\r\n    var c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    var n = 4;\r\n    var i, j, k;\r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < n; j++) {\r\n            for (k = 0; k < n; k++) {\r\n                c[i + j * 4] += a[i + k * 4] * b[k + j * 4];\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < 16; i++) {\r\n        dst[i] = c[i];\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # identity()\r\n//============================================================\r\nL2DMatrix44.prototype.identity = function () {\r\n    for (var i/*:int*/ = 0; i < 16; i++)\r\n        this.tr[i] = ((i % 5) == 0) ? 1 : 0;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getArray()\r\n//============================================================\r\nL2DMatrix44.prototype.getArray = function () {\r\n    return this.tr;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getCopyMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.getCopyMatrix = function () {\r\n    return new Float32Array(this.tr); // this.tr.clone();\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # setMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.setMatrix = function (tr/*float[]*/) {\r\n    if (this.tr == null || this.tr.length != this.tr.length) return;\r\n    for (var i/*:int*/ = 0; i < 16; i++) this.tr[i] = tr[i];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleX()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleX = function () {\r\n    return this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleY()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleY = function () {\r\n    return this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformX()\r\n//============================================================\r\nL2DMatrix44.prototype.transformX = function (src/*float*/) {\r\n    return this.tr[0] * src + this.tr[12];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformY()\r\n//============================================================\r\nL2DMatrix44.prototype.transformY = function (src/*float*/) {\r\n    return this.tr[5] * src + this.tr[13];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformX()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformX = function (src/*float*/) {\r\n    return (src - this.tr[12]) / this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformY()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformY = function (src/*float*/) {\r\n    return (src - this.tr[13]) / this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multTranslate()\r\n//============================================================\r\nL2DMatrix44.prototype.multTranslate = function (shiftX/*float*/, shiftY/*float*/) {\r\n    var tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translate()\r\n//============================================================\r\nL2DMatrix44.prototype.translate = function (x/*float*/, y/*float*/) {\r\n    this.tr[12] = x;\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateX()\r\n//============================================================\r\nL2DMatrix44.prototype.translateX = function (x/*float*/) {\r\n    this.tr[12] = x;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateY()\r\n//============================================================\r\nL2DMatrix44.prototype.translateY = function (y/*float*/) {\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multScale()\r\n//============================================================\r\nL2DMatrix44.prototype.multScale = function (scaleX/*float*/, scaleY/*float*/) {\r\n    var tr1 = [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # scale()\r\n//============================================================\r\nL2DMatrix44.prototype.scale = function (scaleX/*float*/, scaleY/*float*/) {\r\n    this.tr[0] = scaleX;\r\n    this.tr[5] = scaleY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DModelMatrix       extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DModelMatrix(w/*float*/, h/*float*/) {\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.width = w;\r\n    this.height = h;\r\n}\r\n\r\n//L2DModelMatrix extends L2DMatrix44\r\nL2DModelMatrix.prototype = new L2DMatrix44();\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setPosition = function (x/*float*/, y/*float*/) {\r\n    this.translate(x, y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setCenterPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setCenterPosition = function (x/*float*/, y/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    var h = this.height * this.getScaleY();\r\n    this.translate(x - w / 2, y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # top()\r\n//============================================================\r\nL2DModelMatrix.prototype.top = function (y/*float*/) {\r\n    this.setY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # bottom()\r\n//============================================================\r\nL2DModelMatrix.prototype.bottom = function (y/*float*/) {\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # left()\r\n//============================================================\r\nL2DModelMatrix.prototype.left = function (x/*float*/) {\r\n    this.setX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # right()\r\n//============================================================\r\nL2DModelMatrix.prototype.right = function (x/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerX()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerX = function (x/*float*/) {\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerY()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerY = function (y/*float*/) {\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setX()\r\n//============================================================\r\nL2DModelMatrix.prototype.setX = function (x/*float*/) {\r\n    this.translateX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setY()\r\n//============================================================\r\nL2DModelMatrix.prototype.setY = function (y/*float*/) {\r\n    this.translateY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setHeight()\r\n//============================================================\r\nL2DModelMatrix.prototype.setHeight = function (h/*float*/) {\r\n    var scaleX = h / this.height;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setWidth()\r\n//============================================================\r\nL2DModelMatrix.prototype.setWidth = function (w/*float*/) {\r\n    var scaleX = w / this.width;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMotionManager     extends     MotionQueueManager\r\n//============================================================\r\n//============================================================\r\nfunction L2DMotionManager() {\r\n    MotionQueueManager.prototype.constructor.call(this);\r\n    this.currentPriority = null;\r\n    this.reservePriority = null;\r\n\r\n    this.super = MotionQueueManager.prototype;\r\n}\r\n\r\n\r\nL2DMotionManager.prototype = new MotionQueueManager();\r\n\r\n//============================================================\r\n//    L2DMotionManager # getCurrentPriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getCurrentPriority = function () {\r\n    return this.currentPriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # getReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getReservePriority = function () {\r\n    return this.reservePriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # reserveMotion()\r\n//============================================================\r\nL2DMotionManager.prototype.reserveMotion = function (priority/*int*/) {\r\n    if (this.reservePriority >= priority) {\r\n        return false;\r\n    }\r\n    if (this.currentPriority >= priority) {\r\n        return false;\r\n    }\r\n\r\n    this.reservePriority = priority;\r\n\r\n    return true;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # setReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.setReservePriority = function (val/*int*/) {\r\n    this.reservePriority = val;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # updateParam()\r\n//============================================================\r\nL2DMotionManager.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var updated = MotionQueueManager.prototype.updateParam.call(this, model);\r\n\r\n    if (this.isFinished()) {\r\n        this.currentPriority = 0;\r\n    }\r\n\r\n    return updated;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # startMotionPrio()\r\n//============================================================\r\nL2DMotionManager.prototype.startMotionPrio = function (motion/*AMotion*/, priority/*int*/) {\r\n    if (priority == this.reservePriority) {\r\n        this.reservePriority = 0;\r\n    }\r\n    this.currentPriority = priority;\r\n    return this.startMotion(motion, false);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPhysics           \r\n//============================================================\r\n//============================================================\r\nfunction L2DPhysics() {\r\n    this.physicsList = new Array(); //ArrayList<PhysicsHair>\r\n    this.startTimeMSec = UtSystem.getUserTimeMSec();\r\n}\r\n\r\n//============================================================\r\n//    static L2DPhysics.load()\r\n//============================================================\r\nL2DPhysics.load = function (buf /*byte[]*/) {\r\n    var ret = new L2DPhysics(); //L2DPhysicsL2DPhysics\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var params = json.physics_hair;\r\n    var paramNum = params.length;\r\n    for (var i = 0; i < paramNum; i++) {\r\n        var param = params[i]; //Value\r\n        var physics = new PhysicsHair(); //PhysicsHairPhysicsHair\r\n        var setup = param.setup; //Value\r\n        var length = parseFloat(setup.length);\r\n        var resist = parseFloat(setup.regist);\r\n        var mass = parseFloat(setup.mass);\r\n        physics.setup(length, resist, mass);\r\n        var srcList = param.src; //Value\r\n        var srcNum = srcList.length;\r\n        for (var j = 0; j < srcNum; j++) {\r\n            var src = srcList[j]; //Value\r\n            var id = src.id; //String\r\n            var type = PhysicsHair.Src.SRC_TO_X;\r\n            var typeStr = src.ptype; //String\r\n            if (typeStr === \"x\") {\r\n                type = PhysicsHair.Src.SRC_TO_X;\r\n            }\r\n            else if (typeStr === \"y\") {\r\n                type = PhysicsHair.Src.SRC_TO_Y;\r\n            }\r\n            else if (typeStr === \"angle\") {\r\n                type = PhysicsHair.Src.SRC_TO_G_ANGLE;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Src\");\r\n            }\r\n            var scale = parseFloat(src.scale);\r\n            var weight = parseFloat(src.weight);\r\n            physics.addSrcParam(type, id, scale, weight);\r\n        }\r\n        var targetList = param.targets; //Value\r\n        var targetNum = targetList.length;\r\n        for (var j = 0; j < targetNum; j++) {\r\n            var target = targetList[j]; //Value\r\n            var id = target.id; //String\r\n            var type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            var typeStr = target.ptype; //String\r\n            if (typeStr === \"angle\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            }\r\n            else if (typeStr === \"angle_v\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE_V;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Target\");\r\n            }\r\n            var scale = parseFloat(target.scale);\r\n            var weight = parseFloat(target.weight);\r\n            physics.addTargetParam(type, id, scale, weight);\r\n        }\r\n        ret.physicsList.push(physics);\r\n    }\r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPhysics # updateParam()\r\n//============================================================\r\nL2DPhysics.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    var timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\r\n    for (var i = 0; i < this.physicsList.length; i++) {\r\n        this.physicsList[i].update(model, timeMSec);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPose              \r\n//============================================================\r\n//============================================================\r\nfunction L2DPose() {\r\n    this.lastTime = 0;\r\n    this.lastModel = null; //ALive2DModel\r\n    this.partsGroups = new Array(); //ArrayList<L2DPartsParam[]>\r\n}\r\n\r\n\r\n//============================================================\r\n//    static L2DPose.load()\r\n//============================================================\r\nL2DPose.load = function (buf/*byte[]*/) {\r\n    var ret = new L2DPose(); //L2DPose\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var poseListInfo = json.parts_visible; //Value\r\n    var poseNum = poseListInfo.length;\r\n    for (var i_pose = 0; i_pose < poseNum; i_pose++) {\r\n        var poseInfo = poseListInfo[i_pose]; //Value\r\n        var idListInfo = poseInfo.group; //Value\r\n        var idNum = idListInfo.length;\r\n        var partsGroup/*L2DPartsParam*/ = new Array();\r\n        for (var i_group = 0; i_group < idNum; i_group++) {\r\n            var partsInfo = idListInfo[i_group]; //Value\r\n            var parts = new L2DPartsParam(partsInfo.id); //L2DPartsParamL2DPartsParam\r\n            partsGroup[i_group] = parts;\r\n            if (partsInfo.link == null) continue;\r\n            var linkListInfo = partsInfo.link; //Value\r\n            var linkNum = linkListInfo.length;\r\n            parts.link = new Array(); //ArrayList<L2DPartsParam>\r\n            for (var i_link = 0; i_link < linkNum; i_link++) {\r\n                var linkParts = new L2DPartsParam(linkListInfo[i_link]); //L2DPartsParamL2DPartsParam\r\n                parts.link.push(linkParts);\r\n            }\r\n        }\r\n        ret.partsGroups.push(partsGroup);\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # updateParam()\r\n//============================================================\r\nL2DPose.prototype.updateParam = function (model/*ALive2DModel*/) {\r\n    if (model == null) return;\r\n\r\n    if (!(model == this.lastModel)) {\r\n        this.initParam(model);\r\n    }\r\n    this.lastModel = model;\r\n\r\n    var curTime = UtSystem.getUserTimeMSec();\r\n    var deltaTimeSec = ((this.lastTime == 0) ? 0 : (curTime - this.lastTime) / 1000.0);\r\n    this.lastTime = curTime;\r\n    if (deltaTimeSec < 0) deltaTimeSec = 0;\r\n    for (var i = 0; i < this.partsGroups.length; i++) {\r\n        this.normalizePartsOpacityGroup(model, this.partsGroups[i], deltaTimeSec);\r\n        this.copyOpacityOtherParts(model, this.partsGroups[i]);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # initParam()\r\n//============================================================\r\nL2DPose.prototype.initParam = function (model/*ALive2DModel*/) {\r\n    if (model == null) return;\r\n    for (var i = 0; i < this.partsGroups.length; i++) {\r\n        var partsGroup = this.partsGroups[i]; //L2DPartsParam\r\n        for (var j = 0; j < partsGroup.length; j++) {\r\n            partsGroup[j].initIndex(model);\r\n            var partsIndex = partsGroup[j].partsIndex;\r\n            var paramIndex = partsGroup[j].paramIndex;\r\n            if (partsIndex < 0) continue;\r\n            var v/*:Boolean*/ = (model.getParamFloat(paramIndex) != 0);\r\n            model.setPartsOpacity(partsIndex, (v ? 1.0 : 0.0));\r\n            model.setParamFloat(paramIndex, (v ? 1.0 : 0.0));\r\n            if (partsGroup[j].link == null) continue;\r\n            for (var k = 0; k < partsGroup[j].link.length; k++) {\r\n                partsGroup[j].link[k].initIndex(model);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # normalizePartsOpacityGroup()\r\n//============================================================\r\nL2DPose.prototype.normalizePartsOpacityGroup = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/, deltaTimeSec/*float*/) {\r\n    var visibleParts = -1;\r\n    var visibleOpacity = 1.0;\r\n    var CLEAR_TIME_SEC = 0.5;\r\n    var phi = 0.5;\r\n    var maxBackOpacity = 0.15;\r\n    for (var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        var paramIndex = partsGroup[i].paramIndex;\r\n        if (partsIndex < 0) continue; if (model.getParamFloat(paramIndex) != 0) {\r\n            if (visibleParts >= 0) {\r\n                break;\r\n            }\r\n            visibleParts = i;\r\n            visibleOpacity = model.getPartsOpacity(partsIndex);\r\n            visibleOpacity += deltaTimeSec / CLEAR_TIME_SEC;\r\n            if (visibleOpacity > 1) {\r\n                visibleOpacity = 1;\r\n            }\r\n        }\r\n    }\r\n    if (visibleParts < 0) {\r\n        visibleParts = 0;\r\n        visibleOpacity = 1;\r\n    }\r\n    for (var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        if (partsIndex < 0) continue; if (visibleParts == i) {\r\n            model.setPartsOpacity(partsIndex, visibleOpacity);\r\n        }\r\n        else {\r\n            var opacity = model.getPartsOpacity(partsIndex);\r\n            var a1;\r\n            if (visibleOpacity < phi) {\r\n                a1 = visibleOpacity * (phi - 1) / phi + 1;\r\n            }\r\n            else {\r\n                a1 = (1 - visibleOpacity) * phi / (1 - phi);\r\n            }\r\n            var backOp = (1 - a1) * (1 - visibleOpacity);\r\n            if (backOp > maxBackOpacity) {\r\n                a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\r\n            }\r\n            if (opacity > a1) {\r\n                opacity = a1;\r\n            }\r\n            model.setPartsOpacity(partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # copyOpacityOtherParts()\r\n//============================================================\r\nL2DPose.prototype.copyOpacityOtherParts = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/) {\r\n    for (var i_group = 0; i_group < partsGroup.length; i_group++) {\r\n        var partsParam = partsGroup[i_group]; //L2DPartsParam\r\n        if (partsParam.link == null) continue;\r\n        if (partsParam.partsIndex < 0) continue;\r\n        var opacity = model.getPartsOpacity(partsParam.partsIndex);\r\n        for (var i_link = 0; i_link < partsParam.link.length; i_link++) {\r\n            var linkParts = partsParam.link[i_link]; //L2DPartsParam\r\n            if (linkParts.partsIndex < 0) continue;\r\n            model.setPartsOpacity(linkParts.partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPartsParam        \r\n//============================================================\r\n//============================================================\r\nfunction L2DPartsParam(id/*String*/) {\r\n    this.paramIndex = -1;\r\n    this.partsIndex = -1;\r\n    this.link = null; // ArrayList<L2DPartsParam>\r\n    this.id = id;\r\n}\r\n\r\n//============================================================\r\n//    L2DPartsParam # initIndex()\r\n//============================================================\r\nL2DPartsParam.prototype.initIndex = function (model/*ALive2DModel*/) {\r\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\r\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\r\n    model.setParamFloat(this.paramIndex, 1);\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DTargetPoint       \r\n//============================================================\r\n//============================================================\r\nfunction L2DTargetPoint() {\r\n    this.EPSILON = 0.01; // 変化の最小値（この値以下は無視される）\r\n    this.faceTargetX = 0;\r\n    this.faceTargetY = 0;\r\n    this.faceX = 0;\r\n    this.faceY = 0;\r\n    this.faceVX = 0;\r\n    this.faceVY = 0;\r\n    this.lastTimeSec = 0;\r\n}\r\n\r\n//============================================================\r\nL2DTargetPoint.FRAME_RATE = 30;\r\n\r\n//============================================================\r\n//    L2DTargetPoint # set()\r\n//============================================================\r\nL2DTargetPoint.prototype.setPoint = function (x/*float*/, y/*float*/) {\r\n    this.faceTargetX = x;\r\n    this.faceTargetY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getX()\r\n//============================================================\r\nL2DTargetPoint.prototype.getX = function () {\r\n    return this.faceX;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getY()\r\n//============================================================\r\nL2DTargetPoint.prototype.getY = function () {\r\n    return this.faceY;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # update()\r\n//============================================================\r\nL2DTargetPoint.prototype.update = function () {\r\n    var TIME_TO_MAX_SPEED = 0.15;\r\n    var FACE_PARAM_MAX_V = 40.0 / 7.5;\r\n    var MAX_V = FACE_PARAM_MAX_V / L2DTargetPoint.FRAME_RATE;\r\n    if (this.lastTimeSec == 0) {\r\n        this.lastTimeSec = UtSystem.getUserTimeMSec();\r\n        return;\r\n    }\r\n    var curTimeSec = UtSystem.getUserTimeMSec();\r\n    var deltaTimeWeight = (curTimeSec - this.lastTimeSec) * L2DTargetPoint.FRAME_RATE / 1000.0;\r\n    this.lastTimeSec = curTimeSec;\r\n    var FRAME_TO_MAX_SPEED = TIME_TO_MAX_SPEED * L2DTargetPoint.FRAME_RATE;\r\n    var MAX_A = deltaTimeWeight * MAX_V / FRAME_TO_MAX_SPEED;\r\n    var dx = (this.faceTargetX - this.faceX);\r\n    var dy = (this.faceTargetY - this.faceY);\r\n    // if(dx == 0 && dy == 0) return;\r\n    if (Math.abs(dx) <= this.EPSILON && Math.abs(dy) <= this.EPSILON) return;\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    var vx = MAX_V * dx / d;\r\n    var vy = MAX_V * dy / d;\r\n    var ax = vx - this.faceVX;\r\n    var ay = vy - this.faceVY;\r\n    var a = Math.sqrt(ax * ax + ay * ay);\r\n    if (a < -MAX_A || a > MAX_A) {\r\n        ax *= MAX_A / a;\r\n        ay *= MAX_A / a;\r\n        a = MAX_A;\r\n    }\r\n    this.faceVX += ax;\r\n    this.faceVY += ay;\r\n    {\r\n        var max_v = 0.5 * (Math.sqrt(MAX_A * MAX_A + 16 * MAX_A * d - 8 * MAX_A * d) - MAX_A);\r\n        var cur_v = Math.sqrt(this.faceVX * this.faceVX + this.faceVY * this.faceVY);\r\n        if (cur_v > max_v) {\r\n            this.faceVX *= max_v / cur_v;\r\n            this.faceVY *= max_v / cur_v;\r\n        }\r\n    }\r\n    this.faceX += this.faceVX;\r\n    this.faceY += this.faceVY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DViewMatrix        extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DViewMatrix() {\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.screenLeft = null;\r\n    this.screenRight = null;\r\n    this.screenTop = null;\r\n    this.screenBottom = null;\r\n    this.maxLeft = null;\r\n    this.maxRight = null;\r\n    this.maxTop = null;\r\n    this.maxBottom = null;\r\n    this.max = Number.MAX_VALUE;\r\n    this.min = 0;\r\n}\r\n\r\nL2DViewMatrix.prototype = new L2DMatrix44(); //L2DViewMatrix extends L2DMatrix44\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxScale = function () {\r\n    return this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMinScale = function () {\r\n    return this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScale = function (v/*float*/) {\r\n    this.max = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMinScale = function (v/*float*/) {\r\n    this.min = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMaxScale = function () {\r\n    return this.getScaleX() == this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMinScale = function () {\r\n    return this.getScaleX() == this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustTranslate()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustTranslate = function (shiftX/*float*/, shiftY/*float*/) {\r\n    if (this.tr[0] * this.maxLeft + (this.tr[12] + shiftX) > this.screenLeft)\r\n        shiftX = this.screenLeft - this.tr[0] * this.maxLeft - this.tr[12];\r\n    if (this.tr[0] * this.maxRight + (this.tr[12] + shiftX) < this.screenRight)\r\n        shiftX = this.screenRight - this.tr[0] * this.maxRight - this.tr[12];\r\n    if (this.tr[5] * this.maxTop + (this.tr[13] + shiftY) < this.screenTop)\r\n        shiftY = this.screenTop - this.tr[5] * this.maxTop - this.tr[13];\r\n    if (this.tr[5] * this.maxBottom + (this.tr[13] + shiftY) > this.screenBottom)\r\n        shiftY = this.screenBottom - this.tr[5] * this.maxBottom - this.tr[13];\r\n\r\n    var tr1 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        shiftX, shiftY, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustScale = function (cx/*float*/, cy/*float*/, scale/*float*/) {\r\n    var targetScale = scale * this.tr[0];\r\n    if (targetScale < this.min) {\r\n        if (this.tr[0] > 0) scale = this.min / this.tr[0];\r\n    }\r\n    else if (targetScale > this.max) {\r\n        if (this.tr[0] > 0) scale = this.max / this.tr[0];\r\n    }\r\n    var tr1 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        cx, cy, 0, 1];\r\n    var tr2 = [scale, 0, 0, 0,\r\n        0, scale, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1];\r\n    var tr3 = [1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        -cx, -cy, 0, 1];\r\n    L2DMatrix44.mul(tr3, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr2, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\r\n    this.screenLeft = left;\r\n    this.screenRight = right;\r\n    this.screenTop = top;\r\n    this.screenBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\r\n    this.maxLeft = left;\r\n    this.maxRight = right;\r\n    this.maxTop = top;\r\n    this.maxBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenLeft = function () {\r\n    return this.screenLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenRight = function () {\r\n    return this.screenRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenBottom = function () {\r\n    return this.screenBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenTop = function () {\r\n    return this.screenTop;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxLeft = function () {\r\n    return this.maxLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxRight = function () {\r\n    return this.maxRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxBottom = function () {\r\n    return this.maxBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxTop = function () {\r\n    return this.maxTop;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class Live2DFramework      \r\n//============================================================\r\n//============================================================\r\nfunction Live2DFramework() {\r\n}\r\n\r\n//============================================================\r\nLive2DFramework.platformManager = null;\r\n\r\n//============================================================\r\n//    static Live2DFramework.getPlatformManager()\r\n//============================================================\r\nLive2DFramework.getPlatformManager = function () {\r\n    return Live2DFramework.platformManager;\r\n}\r\n\r\n//============================================================\r\n//    static Live2DFramework.setPlatformManager()\r\n//============================================================\r\nLive2DFramework.setPlatformManager = function (platformManager /*IPlatformManager*/) {\r\n    Live2DFramework.platformManager = platformManager;\r\n}\r\n\r\nmodule.exports = {\r\n    L2DTargetPoint: L2DTargetPoint,\r\n    Live2DFramework: Live2DFramework,\r\n    L2DViewMatrix: L2DViewMatrix,\r\n    L2DPose: L2DPose,\r\n    L2DPartsParam: L2DPartsParam,\r\n    L2DPhysics: L2DPhysics,\r\n    L2DMotionManager: L2DMotionManager,\r\n    L2DModelMatrix: L2DModelMatrix,\r\n    L2DMatrix44: L2DMatrix44,\r\n    EYE_STATE: EYE_STATE,\r\n    L2DEyeBlink: L2DEyeBlink,\r\n    L2DExpressionParam: L2DExpressionParam,\r\n    L2DExpressionMotion: L2DExpressionMotion,\r\n    L2DBaseModel: L2DBaseModel\r\n}","import { L2DTargetPoint, L2DViewMatrix, L2DMatrix44 } from \"./framework/Live2DFramework\";\r\nimport LAppLive2DManager from \"./LAppLive2DManager\"\r\nimport {LAppDefine,setContext} from \"./LAppDefine\"\r\nimport {MatrixStack} from \"./framework/MatrixStack\"\r\n\r\nconst live2DMgr = new LAppLive2DManager();\r\nlet isDrawStart = false;\r\nlet gl = null;\r\nlet canvas = null;\r\nlet dragMgr = null;\r\nlet viewMatrix = null;\r\nlet projMatrix = null;\r\nlet deviceToScreen = null;\r\nlet drag = false;\r\nlet oldLen = 0;\r\nlet lastMouseX = 0;\r\nlet lastMouseY = 0;\r\nlet isModelShown = 0;\r\nlet modelurl = \"\";\r\nlet head_pos = 0.5;\r\n\r\nfunction initL2dCanvas(canvasId) {\r\n  canvas = document.getElementById(canvasId);\r\n  if (canvas.addEventListener) {\r\n    //canvas.addEventListener(\"mousewheel\", mouseEvent);\r\n    window.addEventListener(\"click\", mouseEvent);\r\n    window.addEventListener(\"mousedown\", mouseEvent);\r\n    window.addEventListener(\"mousemove\", mouseEvent);\r\n    window.addEventListener(\"mouseup\", mouseEvent);\r\n    document.addEventListener(\"mouseout\", mouseEvent);\r\n    //canvas.addEventListener(\"contextmenu\", mouseEvent);\r\n    window.addEventListener(\"touchstart\", touchEvent);\r\n    window.addEventListener(\"touchend\", touchEvent);\r\n    window.addEventListener(\"touchmove\", touchEvent);\r\n  }\r\n}\r\n\r\nfunction init(modelurl) {\r\n  let width = canvas.width;\r\n  let height = canvas.height;\r\n\r\n  dragMgr = new L2DTargetPoint();\r\n\r\n  let ratio = height / width;\r\n  let left = LAppDefine.VIEW_LOGICAL_LEFT;\r\n  let right = LAppDefine.VIEW_LOGICAL_RIGHT;\r\n  let bottom = -ratio;\r\n  let top = ratio;\r\n\r\n  window.Live2D.captureFrame = false;\r\n\r\n  viewMatrix = new L2DViewMatrix();\r\n\r\n\r\n  viewMatrix.setScreenRect(left, right, bottom, top);\r\n\r\n  viewMatrix.setMaxScreenRect(LAppDefine.VIEW_LOGICAL_MAX_LEFT,\r\n    LAppDefine.VIEW_LOGICAL_MAX_RIGHT,\r\n    LAppDefine.VIEW_LOGICAL_MAX_BOTTOM,\r\n    LAppDefine.VIEW_LOGICAL_MAX_TOP);\r\n\r\n  viewMatrix.setMaxScale(LAppDefine.VIEW_MAX_SCALE);\r\n  viewMatrix.setMinScale(LAppDefine.VIEW_MIN_SCALE);\r\n\r\n  projMatrix = new L2DMatrix44();\r\n  projMatrix.multScale(1, (width / height));\r\n\r\n  deviceToScreen = new L2DMatrix44();\r\n  deviceToScreen.multTranslate(-width / 2.0, -height / 2.0);\r\n  deviceToScreen.multScale(2 / width, -2 / width);\r\n\r\n  gl = getWebGLContext();\r\n  setContext(gl);\r\n  if (!gl) {\r\n    console.error(\"Failed to create WebGL context.\");\r\n    if(!!window.WebGLRenderingContext){\r\n      console.error(\"Your browser don't support WebGL, check https://get.webgl.org/ for futher information.\");\r\n    }\r\n    return;\r\n  }\r\n  window.Live2D.setGL(gl);\r\n  gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n  changeModel(modelurl);\r\n  startDraw();\r\n}\r\n\r\nfunction startDraw() {\r\n  if (!isDrawStart) {\r\n    isDrawStart = true;\r\n    (function tick() {\r\n      draw();\r\n      let requestAnimationFrame =\r\n        window.requestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame;\r\n\r\n        if (window.Live2D.captureFrame) {\r\n            window.Live2D.captureFrame = false;\r\n            var link = document.createElement('a');\r\n            document.body.appendChild(link);\r\n            link.setAttribute(\"type\", \"hidden\");\r\n            link.href = canvas.toDataURL();\r\n            link.download = window.Live2D.captureName || 'live2d.png';\r\n            link.click();\r\n        }\r\n\r\n      requestAnimationFrame(tick, canvas);\r\n    })();\r\n  }\r\n}\r\n\r\nfunction draw()\r\n{\r\n    MatrixStack.reset();\r\n    MatrixStack.loadIdentity();\r\n    dragMgr.update(); \r\n    live2DMgr.setDrag(dragMgr.getX(), dragMgr.getY());\r\n    \r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    \r\n    MatrixStack.multMatrix(projMatrix.getArray());\r\n    MatrixStack.multMatrix(viewMatrix.getArray());\r\n    MatrixStack.push();\r\n    \r\n    for (let i = 0; i < live2DMgr.numModels(); i++)\r\n    {\r\n        let model = live2DMgr.getModel(i);\r\n\r\n        if(model == null) return;\r\n        \r\n        if (model.initialized && !model.updating)\r\n        {\r\n            model.update();\r\n            model.draw(gl);\r\n        }\r\n    }\r\n    MatrixStack.pop();\r\n}\r\n\r\nfunction changeModel(modelurl)\r\n{\r\n    live2DMgr.reloadFlg = true;\r\n    live2DMgr.count++;\r\n    live2DMgr.changeModel(gl,modelurl);\r\n}\r\n\r\nfunction modelScaling(scale)\r\n{\r\n    let isMaxScale = viewMatrix.isMaxScale();\r\n    let isMinScale = viewMatrix.isMinScale();\r\n    \r\n    viewMatrix.adjustScale(0, 0, scale);\r\n\r\n    if (!isMaxScale)\r\n    {\r\n        if (viewMatrix.isMaxScale())\r\n        {\r\n            live2DMgr.maxScaleEvent();\r\n        }\r\n    }\r\n    \r\n    if (!isMinScale)\r\n    {\r\n        if (viewMatrix.isMinScale())\r\n        {\r\n            live2DMgr.minScaleEvent();\r\n        }\r\n    }\r\n}\r\n\r\nfunction transformRange(center, transform, range)\r\n{\r\n    let a = {\r\n        x: transform.x - center.x,\r\n        y: transform.y - center.y\r\n    }\r\n    let r = Math.sqrt(Math.pow(a.x,2) + Math.pow(a.y,2));\r\n    if (r > range) {\r\n        a = {\r\n            x: a.x / r * range + center.x,\r\n            y: a.y / r * range + center.y\r\n        };\r\n        return a;\r\n    } else {\r\n        return transform;\r\n    }\r\n}\r\n\r\nfunction dot(A,B)\r\n{\r\n    return A.x * B.x + A.y * B.y;\r\n}\r\n\r\nfunction normalize(x,y)\r\n{\r\n    let length = Math.sqrt(x * x + y * y)\r\n    return {\r\n        x: x / length,\r\n        y: y / length\r\n    }\r\n}\r\n\r\nfunction transformRect(center, transform, rect)\r\n{\r\n    if (transform.x < rect.left + rect.width && transform.y < rect.top + rect.height &&\r\n        transform.x > rect.left && transform.y > rect.top) return transform;\r\n    let Len_X = center.x - transform.x;\r\n    let Len_Y = center.y - transform.y;\r\n\r\n    function angle(Len_X, Len_Y)\r\n    {\r\n        return Math.acos(dot({\r\n            x: 0,\r\n            y: 1\r\n        }, normalize(Len_X, Len_Y))) * 180 / Math.PI\r\n    }\r\n\r\n    let angleTarget = angle(Len_X, Len_Y);\r\n    if (transform.x < center.x) angleTarget = 360 - angleTarget;\r\n    let angleLeftTop = 360 - angle(rect.left - center.x, (rect.top - center.y) * -1);\r\n    let angleLeftBottom = 360 - angle(rect.left - center.x, (rect.top + rect.height - center.y) * -1);\r\n    let angleRightTop = angle(rect.left + rect.width - center.x, (rect.top - center.y) * -1);\r\n    let angleRightBottom = angle(rect.left + rect.width - center.x, (rect.top + rect.height - center.y) * -1);\r\n    let scale = Len_Y / Len_X;\r\n    let res = {};\r\n\r\n    if (angleTarget < angleRightTop) {\r\n        let y3 = rect.top - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if(angleTarget < angleRightBottom) {\r\n        let x3 = rect.left + rect.width - center.x;\r\n        let y3 = x3 * scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if (angleTarget < angleLeftBottom) {\r\n        let y3 = rect.top + rect.height - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    } else if (angleTarget < angleLeftTop) {\r\n        let x3 = center.x - rect.left;\r\n        let y3 = x3 * scale;\r\n        res = {\r\n            y: center.y - y3,\r\n            x: center.x - x3\r\n        }\r\n    } else {\r\n        let y3 = rect.top - center.y;\r\n        let x3 = y3 / scale;\r\n        res = {\r\n            y: center.y + y3,\r\n            x: center.x + x3\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction modelTurnHead(event)\r\n{\r\n    drag = true;\r\n    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    lastMouseX = sx;\r\n    lastMouseY = sy;\r\n\r\n    dragMgr.setPoint(vx, vy); \r\n    \r\n    //live2DMgr.tapEvent(vx, vy);\r\n}\r\n\r\nfunction modelTapEvent(event)\r\n{\r\n    drag = true;\r\n    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseDown device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    lastMouseX = sx;\r\n    lastMouseY = sy;\r\n\r\n    //dragMgr.setPoint(vx, vy); \r\n    \r\n    live2DMgr.tapEvent(vx, vy);\r\n}\r\n\r\nfunction followPointer(event)\r\n{    \r\n    let rect = canvas.getBoundingClientRect();\r\n    \r\n    let sx = transformScreenX(event.clientX - rect.left);\r\n    let sy = transformScreenY(event.clientY - rect.top);\r\n    let target = transformRect({\r\n        x: rect.left + rect.width / 2,\r\n        y: rect.top + rect.height * head_pos\r\n    }, {\r\n        x: event.clientX,\r\n        y: event.clientY\r\n    }, rect)\r\n    let vx = transformViewX(target.x - rect.left);\r\n    let vy = transformViewY(target.y - rect.top);\r\n\r\n    if (LAppDefine.DEBUG_MOUSE_LOG)\r\n        console.log(\"onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\r\n\r\n    if (drag)\r\n    {\r\n        lastMouseX = sx;\r\n        lastMouseY = sy;\r\n        dragMgr.setPoint(vx, vy); \r\n    }\r\n}\r\n\r\nfunction lookFront()\r\n{   \r\n    if (drag)\r\n    {\r\n        drag = false;\r\n    }\r\n    dragMgr.setPoint(0, 0);\r\n}\r\n\r\nfunction sleepy()\r\n{\r\n    if (LAppDefine.DEBUG_LOG)\r\n        console.log(\"Set Session Storage.\");\r\n    \r\n    sessionStorage.setItem('Sleepy', '1');\r\n}\r\n\r\nfunction mouseEvent(e)\r\n{\r\n    //e.preventDefault();\r\n    if (e.type == \"mousewheel\") {\r\n        // if (e.clientX < 0 || canvas.clientWidth < e.clientX || \r\n        // e.clientY < 0 || canvas.clientHeight < e.clientY)\r\n        // {\r\n        //     return;\r\n        // }\r\n        // if (e.wheelDelta > 0) modelScaling(1.1); \r\n        // else modelScaling(0.9); \r\n    } else if (e.type == \"mousedown\") {\r\n        //if(\"button\" in e && e.button != 0) return;\r\n        // modelTurnHead(e);\r\n        modelTapEvent(e);\r\n    } else if (e.type == \"mousemove\") {\r\n        var Sleepy = sessionStorage.getItem('Sleepy');\r\n        if(Sleepy === '1') {\r\n            sessionStorage.setItem('Sleepy', '0');\r\n        }\r\n        modelTurnHead(e);\r\n    } else if (e.type == \"mouseup\") {\r\n        if(\"button\" in e && e.button != 0) return;\r\n        // lookFront();\r\n    } else if (e.type == \"mouseout\") {\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Mouse out Window.\");\r\n        lookFront();\r\n        var SleepyTimer = sessionStorage.getItem('SleepyTimer');\r\n        window.clearTimeout(SleepyTimer);\r\n\r\n        SleepyTimer = window.setTimeout(sleepy, 50000);\r\n        sessionStorage.setItem('SleepyTimer', SleepyTimer);\r\n    }\r\n}\r\n\r\nfunction touchEvent(e)\r\n{\r\n    var touch = e.touches[0];\r\n    if (e.type == \"touchstart\") {\r\n        if (e.touches.length == 1) modelTurnHead(touch);\r\n        // onClick(touch);\r\n    } else if (e.type == \"touchmove\") {\r\n        followPointer(touch);\r\n    } else if (e.type == \"touchend\") {\r\n        lookFront();\r\n    }\r\n}\r\n\r\nfunction transformViewX(deviceX)\r\n{\r\n    var screenX = deviceToScreen.transformX(deviceX); \r\n    return viewMatrix.invertTransformX(screenX); \r\n}\r\n\r\n\r\nfunction transformViewY(deviceY)\r\n{\r\n    var screenY = deviceToScreen.transformY(deviceY); \r\n    return viewMatrix.invertTransformY(screenY); \r\n}\r\n\r\n\r\nfunction transformScreenX(deviceX)\r\n{\r\n    return deviceToScreen.transformX(deviceX);\r\n}\r\n\r\n\r\nfunction transformScreenY(deviceY)\r\n{\r\n    return deviceToScreen.transformY(deviceY);\r\n}\r\n\r\nfunction getWebGLContext()\r\n{\r\n    var NAMES = [ \"webgl\" , \"experimental-webgl\" , \"webkit-3d\" , \"moz-webgl\"];\r\n    for( var i = 0; i < NAMES.length; i++ ){\r\n        try{\r\n            var ctx = canvas.getContext(NAMES[i], {premultipliedAlpha : true});\r\n            if(ctx) return ctx;\r\n        }\r\n        catch(e){}\r\n    }\r\n    return null;\r\n};\r\n\r\nexport function screenshotV1(captureName, captureFrame) {\r\n    // v2方法\r\n    window.Live2D.captureFrame = captureFrame;\r\n    window.Live2D.captureName = captureName;\r\n}\r\n\r\nexport function loadv1(id,modelurl,headPos) {\r\n    head_pos = typeof headPos === 'undefined' ? 0.5 : headPos;\r\n    initL2dCanvas(id);\r\n    init(modelurl);\r\n}\r\n\r\nwindow.loadv1 = loadv1;\r\n","import { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport moment from 'moment';\r\n\r\nimport { loadv1, screenshotV1 } from '../v1/main'\r\nimport { loadv2, screenshotV2 } from '../v2/main'\r\n\r\ndeclare global {\r\n    interface String {\r\n        render(context: any): string;\r\n    }\r\n}\r\nenum ApiUrlType {\r\n    JsonFile,\r\n    Live2dWeb,\r\n    Other\r\n}\r\n\r\nexport class Live2dTips {\r\n    private readonly _live2dSettings: any;\r\n    private readonly _userToken: any;\r\n    private readonly _live2dTips: any;\r\n    private readonly _unitType = 'px';\r\n    private readonly _regMod3Json = new RegExp(\"model3(\\.json)$\", \"gi\");\r\n    private readonly _regApiUrl = new RegExp(\"https://api.live2dweb.com/[^\\s]*(\\/v2)\", \"i\");\r\n    /** 定义highlight标记 */\r\n    private hltips = 'color:';\r\n    private _tipsIsShow: boolean;\r\n    private _getActed: boolean = false;\r\n    private hitokotoTimer: NodeJS.Timer | undefined;\r\n    private hitokotoInterval: boolean = false;\r\n    private connection: HubConnection | undefined;\r\n    private _gptMsg: string = '';\r\n    //以下是live2d元素的声明\r\n    private waifuDiv: HTMLDivElement;\r\n    private tipsDiv: HTMLDivElement;\r\n    private live2dCanvas: HTMLCanvasElement;\r\n    private toolDiv: HTMLDivElement;\r\n    private btnHome: HTMLSpanElement;\r\n    private btnChat: HTMLSpanElement;\r\n    private btnBot: HTMLSpanElement;\r\n    private btnEye: HTMLSpanElement;\r\n    private btnUser: HTMLSpanElement;\r\n    private btnPhoto: HTMLSpanElement;\r\n    private btnInfoCircle: HTMLSpanElement;\r\n    private btnCross: HTMLSpanElement;\r\n    private inputGroup: HTMLDivElement;\r\n    private txtChat: HTMLInputElement;\r\n    private btnSend: HTMLButtonElement;\r\n\r\n    constructor(userToken: any, live2dSettings: any, waifu_tips: any) {\r\n        this._live2dSettings = live2dSettings\r\n        this._userToken = userToken;\r\n        this._live2dTips = waifu_tips;\r\n        this._tipsIsShow = false;\r\n        this.waifuDiv = document.querySelector(\".waifu\");\r\n        this.tipsDiv = document.querySelector(\".waifu-tips\");\r\n        this.live2dCanvas = document.querySelector(\"#live2d\");\r\n        this.toolDiv = document.querySelector(\".waifu-tool\");\r\n        this.btnHome = document.querySelector(\".waifu-tool .fui-home\");\r\n        this.btnChat = document.querySelector(\".waifu-tool .fui-chat\");\r\n        this.btnBot = document.querySelector(\".waifu-tool .fui-bot\");\r\n        this.btnEye = document.querySelector(\".waifu-tool .fui-eye\");\r\n        this.btnUser = document.querySelector(\".waifu-tool .fui-user\");\r\n        this.btnPhoto = document.querySelector(\".waifu-tool .fui-photo\");\r\n        this.btnInfoCircle = document.querySelector(\".waifu-tool .fui-info-circle\");\r\n        this.btnCross = document.querySelector(\".waifu-tool .fui-cross\");\r\n        this.inputGroup = document.querySelector(\".waifu .gptInput\");\r\n        this.txtChat = document.querySelector(\"#live2dChatText\");\r\n        this.btnSend = document.querySelector(\"#live2dSend\");\r\n    }\r\n\r\n    public initTips() {\r\n        const that = this;\r\n        this.tipsDiv.style.width = this._live2dSettings.waifuTipsSize['width'] + this._unitType;  //宽度\r\n        this.tipsDiv.style.minHeight = this._live2dSettings.waifuTipsSize['height'] + this._unitType;//高度\r\n        this.tipsDiv.style.top = (0 - this._live2dSettings.waifuTipTop) + this._unitType;//上方位置可以是负数\r\n        this.tipsDiv.style.fontSize = this._live2dSettings.waifuFontSize + this._unitType; //字号\r\n        this.tipsDiv.style.border = \"1px solid \" + this._live2dSettings.waifuBorderColor;//边框颜色 固定值是1px实心线条\r\n        this.tipsDiv.style.backgroundColor = this._live2dSettings.waifuTipsColor;//背景色\r\n        this.tipsDiv.style.boxShadow = \"0 3px 15px 2px \" + this._live2dSettings.waifuShadowColor;//影子的颜色 有4个位置默认值\r\n        this.tipsDiv.style.color = this._live2dSettings.waifuFontsColor; //字体颜色\r\n\r\n        const toolSpan = document.querySelectorAll('.waifu-tool span');\r\n        toolSpan.forEach((span: HTMLSpanElement) => {\r\n            span.addEventListener(\"mouseover\", function () {\r\n                span.style.color = that._live2dSettings.waifuToolHover;\r\n            });\r\n\r\n            span.addEventListener(\"mouseout\", function () {\r\n                span.style.color = that._live2dSettings.waifuToolColor;\r\n            });\r\n\r\n            span.style.color = that._live2dSettings.waifuToolColor;\r\n            span.style.lineHeight = that._live2dSettings.waifuToolLine + this._unitType;\r\n        });\r\n        //--------------只是分割线而已-------------\r\n        this.toolDiv.style.fontSize = this._live2dSettings.waifuToolFont + this._unitType;\r\n        this.toolDiv.style.top = this._live2dSettings.waifuToolTop + this._unitType;\r\n\r\n        this.hltips += this._live2dSettings.waifuHighlightColor + ';';//定义highlight标记并赋值，因为是一个css所以必须;结尾\r\n\r\n        if (this._live2dSettings.waifuEdgeSide == 'left') {\r\n            this.waifuDiv.style.left = this._live2dSettings.waifuEdgeSize + this._unitType;\r\n        } else if (this._live2dSettings.waifuEdgeSide == 'right') {\r\n            this.waifuDiv.style.right = this._live2dSettings.waifuEdgeSize + this._unitType;\r\n        }\r\n\r\n        if (this._live2dSettings.waifuMinWidth != 0) {\r\n            if (window.innerWidth <= this._live2dSettings.waifuMinWidth) {\r\n                this.waifuDiv.style.display = \"none\";\r\n                return;\r\n            } else {\r\n                this.waifuDiv.style.display = \"block\";\r\n            }\r\n            window.addEventListener(\"resize\", function () {\r\n                that.waifuResize();\r\n            });\r\n        }\r\n\r\n        if (this._live2dSettings.waifuDraggable === 'axis-x') {\r\n            this.waifuDiv.addEventListener('mousedown', function (event) {\r\n                let x = event.pageX - that.waifuDiv.offsetLeft;\r\n                document.addEventListener('mousemove', moveHandler);\r\n                document.addEventListener('mouseup', upHandler);\r\n\r\n                function moveHandler(event: MouseEvent) {\r\n                    that.waifuDiv.style.left = event.pageX - x + 'px';\r\n                }\r\n\r\n                function upHandler() {\r\n                    document.removeEventListener('mousemove', moveHandler);\r\n                    document.removeEventListener('mouseup', upHandler);\r\n                }\r\n            });\r\n        } else if (this._live2dSettings.waifuDraggable === 'unlimited') {\r\n            this.waifuDiv.addEventListener('mousedown', function (event) {\r\n                let x = event.pageX - that.waifuDiv.offsetLeft;\r\n                let y = event.pageY - that.waifuDiv.offsetTop;\r\n                document.addEventListener('mousemove', moveHandler);\r\n                document.addEventListener('mouseup', upHandler);\r\n\r\n                function moveHandler(event: MouseEvent) {\r\n                    that.waifuDiv.style.left = event.pageX - x + 'px';\r\n                    that.waifuDiv.style.top = event.pageY - y + 'px';\r\n                }\r\n\r\n                function upHandler() {\r\n                    document.removeEventListener('mousemove', moveHandler);\r\n                    document.removeEventListener('mouseup', upHandler);\r\n                }\r\n            });\r\n        } else {\r\n            this.waifuDiv.style.transition = 'all .3s ease-in-out';\r\n        }\r\n\r\n        this.btnHome.addEventListener(\"click\", () => {\r\n            window.location = that._live2dSettings.homePageUrl;\r\n        });\r\n\r\n        this.btnInfoCircle.addEventListener(\"click\", () => {\r\n            window.open(that._live2dSettings.aboutPageUrl);\r\n        });\r\n\r\n        this.loadTipsMessage(this._live2dTips);\r\n        this.showWelcomeMessage(this._live2dTips);\r\n\r\n        if (!this._live2dSettings.showToolMenu) this.toolDiv.style.display = 'none';\r\n        if (!this._live2dSettings.canCloseLive2d) this.btnCross.style.display = 'none';\r\n        if (!this._live2dSettings.canSwitchModel) this.btnEye.style.display = 'none';\r\n        if (!this._live2dSettings.canSwitchTextures) this.btnUser.style.display = 'none';\r\n        if (!this._live2dSettings.canSwitchHitokoto) this.btnChat.style.display = 'none';\r\n        if (!this._live2dSettings.canTakeScreenshot) this.btnPhoto.style.display = 'none';\r\n        if (!this._live2dSettings.canTurnToHomePage) this.btnHome.style.display = 'none';\r\n        if (!this._live2dSettings.canTurnToAboutPage) this.btnInfoCircle.style.display = 'none';\r\n\r\n        this.btnEye.addEventListener(\"click\", () => { that.loadOtherModel() });\r\n        this.btnUser.addEventListener(\"click\", () => { that.loadRandTextures() });\r\n        this.btnChat.addEventListener(\"click\", () => { that.doShowHitokoto() });\r\n        this.btnBot.addEventListener(\"click\", () => that.chatGpt());\r\n\r\n        if (this._live2dSettings.showHitokoto) {\r\n            document.addEventListener(\"mousemove\", (e) => {\r\n                this._getActed = true;\r\n            });\r\n            document.addEventListener(\"keydown\", (e) => {\r\n                this._getActed = true;\r\n            });\r\n            //每秒检测活跃状态\r\n            setInterval(() => {\r\n                /** \r\n                 * 如果不活跃则进入待机状态\r\n                 * 默认为活跃, 会进入elseActed \r\n                 * 进入后直接变为不活跃\r\n                 * */\r\n                if (!this._getActed)\r\n                    this.ifActed();\r\n                else\r\n                    this.elseActed();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    private ifActed() {\r\n        if (!this.hitokotoInterval) {\r\n            this.hitokotoInterval = true;\r\n            this.hitokotoTimer = setInterval(async () => { await this.showHitokotoActed(); }, 30000);\r\n        }\r\n    }\r\n\r\n    private elseActed() {\r\n        this._getActed = this.hitokotoInterval = false;\r\n        clearInterval(this.hitokotoTimer);\r\n    }\r\n\r\n    private async showHitokotoActed() {\r\n        if (document.visibilityState == 'visible') {\r\n            this.doShowHitokoto();\r\n        }\r\n        if (this.connection && this.connection.state == 'Connected') {\r\n            await this.connection.stop();\r\n            this.hideChatControl();\r\n        }\r\n    }\r\n\r\n    protected async doShowHitokoto() {\r\n        const that = this;\r\n        let result: any;\r\n        switch (this._live2dSettings.hitokotoAPI) {\r\n            case 'fghrsh.net':\r\n                result = await fetch('https://api.fghrsh.net/hitokoto/rand/?encode=jsc&uid=3335', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.source) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'fghrsh.net') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ source: result.source, date: result.date, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.hitokoto, 5000);\r\n                }\r\n                break;\r\n            case 'jinrishici.com':\r\n                result = await fetch('https://v2.jinrishici.com/one.json', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.data.origin.title) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'jinrishici.com') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ title: result.data.origin.title, dynasty: result.data.origin.dynasty, author: result.data.origin.author, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.data.content, 5000);\r\n                }\r\n                break;\r\n            default:\r\n                result = await fetch('https://v1.hitokoto.cn', { method: 'GET' }).then(rsp => rsp.json());\r\n                if (result.from) {\r\n                    var text = \"\";\r\n                    that._live2dTips.hitokoto_api_message.forEach((val: Array<any>) => {\r\n                        if (val[0] === 'hitokoto.cn') {\r\n                            text = val[1];\r\n                        }\r\n                    });\r\n                    text = text.render({ source: result.from, creator: result.creator, highlight: that.hltips });\r\n                    window.setTimeout(function () { that.showMessage(text, 3000); }, 5000);\r\n                    that.showMessage(result.hitokoto, 5000);\r\n                }\r\n        }\r\n    }\r\n\r\n    protected hideChatControl() {\r\n        this.inputGroup.classList.remove(\"show\");\r\n        this.btnSend.removeEventListener(\"click\", this.sendMsg.bind(this));\r\n    }\r\n\r\n    private convertUrl(apiUrl: string) {\r\n        let apiLen = apiUrl.length - 1;\r\n        let lidx = apiUrl.lastIndexOf('/');\r\n        if (apiLen == lidx)\r\n            apiUrl = apiUrl.substring(0, lidx);\r\n        return apiUrl;\r\n    }\r\n\r\n    private convertApiUrl(apiUrl: string): ApiUrlType {\r\n        let url = this.convertUrl(apiUrl);\r\n        if (!this._regMod3Json.test(url)) {\r\n            //这不是MOC3模型\r\n            if (this._regApiUrl.test(url)) {\r\n                //如果API是我的地址\r\n                return ApiUrlType.Live2dWeb;\r\n            } else {\r\n                //这是PHP的那种URL\r\n                return ApiUrlType.Other;\r\n            }\r\n        } else {\r\n            return ApiUrlType.JsonFile;\r\n        }\r\n    }\r\n\r\n    private async chatGpt() {\r\n        if (typeof this._userToken === 'undefined') {\r\n            this.showMessage(\"想和我说点什么？记得插件需要先登录哦~\", 5000);\r\n            return;\r\n        }\r\n        const sign = this._userToken.sign;\r\n        this.showMessage(\"想和我说点什么？\", 5000);\r\n        this.connection = new HubConnectionBuilder()\r\n            .withUrl(\"https://api.live2dweb.com/chatmsg\", { accessTokenFactory: () => sign })\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n        try {\r\n            if (this.connection.state != \"Connected\") {\r\n                await this.connection.start();\r\n                console.log(\"服务器已连接.\");\r\n                this.showChatControl();\r\n                this.connection.on(\"reply\", (text) => {\r\n                    this._gptMsg += text;\r\n                    this.showMessage(this._gptMsg, 5000);\r\n                });\r\n            } else {\r\n                console.log(\"服务器已连接, 请勿重新连接\");\r\n            }\r\n        } catch (err) {\r\n            console.log(\"服务异常,正在重新连接\", err);\r\n            setTimeout(\r\n                async () => {\r\n                    await this.chatGpt()\r\n                }\r\n                , 5000);\r\n        }\r\n    }\r\n\r\n    private showChatControl() {\r\n        this.inputGroup.classList.add(\"show\");\r\n        this.btnSend.addEventListener(\"click\", this.sendMsg.bind(this));\r\n        this.txtChat.addEventListener('keydown', (e) => {\r\n            if (e.code === 'Enter') {\r\n                this.sendMsg();\r\n            }\r\n        });\r\n    }\r\n    private async sendMsg() {\r\n        this._gptMsg = \"\";\r\n        try {\r\n            await this.connection.invoke(\"Conversation\", this.txtChat.value);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    public initModel(modelId: number | string, modelTexturesId: number | string) {\r\n        modelId = sessionStorage.getItem(\"modelId\") ?? modelId;\r\n        modelTexturesId = sessionStorage.getItem(\"modelTexturesId\") ?? modelTexturesId;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                apiUrl = settings.modelAPI;\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}?id=${modelId}&tid=${modelTexturesId}`;\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/get/?id=${modelId}-${modelTexturesId}`;\r\n                break;\r\n        }\r\n        /* 加载Live2D容器样式 */\r\n        this.live2dCanvas.setAttribute(\"width\", settings.waifuSize.width.toString());\r\n        this.live2dCanvas.setAttribute(\"height\", settings.waifuSize.height.toString());\r\n\r\n        if (settings.sdkUrl == undefined || settings.sdkUrl == null || settings.sdkUrl == '') {\r\n            settings.sdkUrl = 'https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js';\r\n        }\r\n        loadv1('live2d', apiUrl, settings);\r\n        //loadv2('live2d',settings,this._userToken);\r\n    }\r\n\r\n    public showMessage(text: string | string[], timeout: number = 5000) {\r\n        let theText = this.getRandText(text);\r\n        const that = this;\r\n        this.tipsDiv.textContent = theText;\r\n\r\n        if (!that._tipsIsShow) {\r\n            this.tipsDiv.classList.add(\"show\");\r\n            that._tipsIsShow = true;\r\n            that.hideMessage(timeout);\r\n        } else {\r\n            that.hideMessage(timeout);\r\n        }\r\n    }\r\n\r\n    public hideMessage(timeout: number = 5000) {\r\n        let tipsTimeout: NodeJS.Timeout;\r\n        const that = this;\r\n        clearTimeout(tipsTimeout);\r\n        tipsTimeout = setTimeout(() => {\r\n            that.tipsDiv.classList.remove(\"show\");\r\n            that._tipsIsShow = false;\r\n        }, timeout);\r\n    }\r\n\r\n    private loadTipsMessage(result: any) {\r\n        const that = this;\r\n        result.mouseover_msg.forEach((val: any, index: number) => {\r\n            const msgAnySelect = document.querySelector(val.selector) as HTMLElement;\r\n            if (msgAnySelect) {\r\n                msgAnySelect.addEventListener('mouseover', () => {\r\n                    var text = that.getRandText(val.text);\r\n                    text = text.render({ text: msgAnySelect.textContent, highlight: that.hltips });\r\n                    that.showMessage(text, 3000);\r\n                })\r\n            }\r\n        });\r\n\r\n        const click_selector = document.querySelector(result.click_selector) as HTMLElement;\r\n        click_selector.addEventListener('click', () => {\r\n            var text = that.getRandText(result.click_msg);\r\n            text = text.render({ text: click_selector.textContent, highlight: that.hltips });\r\n            that.showMessage(text, 3000);\r\n        });\r\n\r\n        result.seasons_msg.forEach((val: any, index: number) => {\r\n            const now = moment();\r\n            const after = moment(val[0].split('-')[0], 'MM/DD').startOf('day');\r\n            const before = moment(val[0].split('-')[1] || after, 'MM/DD').endOf('day');\r\n            if (now.isBetween(after, before)) {\r\n                var text = that.getRandText(val.text);\r\n                text = text.render({ year: now.format('YYYY'), highlight: that.hltips });\r\n                that.showMessage(text, 6000);\r\n            }\r\n        });\r\n\r\n        if (this._live2dSettings.showCopyMessage) {\r\n            document.addEventListener('copy', () => {\r\n                that.showMessage(that.getRandText(result.copy_message), 5000);\r\n            });\r\n        }\r\n        this.btnPhoto.addEventListener(\"click\", () => {\r\n            that.showMessage(that.getRandText(result.screenshot_message), 5000);\r\n            screenshotV1(that._live2dSettings.screenshotCaptureName, true);\r\n        })\r\n\r\n        this.btnCross.addEventListener(\"click\", () => {\r\n            that.showMessage(that.getRandText(result.hidden_message), 1300);\r\n            window.setTimeout(function () {\r\n                that.waifuDiv.style.display = 'none';\r\n            }, 1300);\r\n        });\r\n    }\r\n\r\n    private getRandText(text: string | string[]): string {\r\n        if (Array.isArray(text)) {\r\n            return text[Math.floor(Math.random() * text.length + 1) - 1];\r\n        } else {\r\n            return text;\r\n        }\r\n    }\r\n\r\n    private waifuResize() {\r\n        const minWidth: number = this._live2dSettings.waifuMinWidth;\r\n        if (window.innerWidth <= minWidth) {\r\n            this.waifuDiv.style.display = \"none\";\r\n        } else {\r\n            this.waifuDiv.style.display = \"block\";\r\n        }\r\n    }\r\n    private showWelcomeMessage(result: any) {\r\n        var text: string;\r\n        if (window.location.href == this._live2dSettings.homePageUrl) {\r\n            var now = (new Date()).getHours();\r\n            if (now > 23 || now <= 5) text = this.getRandText(result.hour_tips['t23-5']);\r\n            else if (now > 5 && now <= 7) text = this.getRandText(result.hour_tips['t5-7']);\r\n            else if (now > 7 && now <= 11) text = this.getRandText(result.hour_tips['t7-11']);\r\n            else if (now > 11 && now <= 14) text = this.getRandText(result.hour_tips['t11-14']);\r\n            else if (now > 14 && now <= 17) text = this.getRandText(result.hour_tips['t14-17']);\r\n            else if (now > 17 && now <= 19) text = this.getRandText(result.hour_tips['t17-19']);\r\n            else if (now > 19 && now <= 21) text = this.getRandText(result.hour_tips['t19-21']);\r\n            else if (now > 21 && now <= 23) text = this.getRandText(result.hour_tips['t21-23']);\r\n            else text = this.getRandText(result.hour_tips['default']);\r\n        } else {\r\n            const referrer_message: Array<any> = result.referrer_message;\r\n            // 用来隔开网站标题中的 “-” \r\n            const titleStr = document.title.split(' – ')[0];\r\n            // 在document.referrer不为空的时候执行\r\n            if (document.referrer !== '') {\r\n                try {\r\n                    var referrer = document.createElement('a');\r\n                    referrer.href = document.referrer;\r\n                    if (window.location.hostname == referrer.hostname) {\r\n                        //如果是本站点跳转\r\n                        const match = referrer_message.find(([key, value]) => key === \"localhost\");\r\n                        text = match[1];\r\n                    } else {\r\n                        //外部站点跳转至此\r\n                        const domain = referrer.hostname.split('.')[1];\r\n                        const match = referrer_message.find(([key, value]) => key === domain);\r\n                        if (match) {\r\n                            text = match[1];\r\n                        } else {\r\n                            text = referrer_message.find(([key, value]) => key === \"default\")[1];\r\n                        }\r\n                    }\r\n                    text = text.render({ title: titleStr, highlight: this.hltips });\r\n                } catch (err) {\r\n                    console.log('It is not important Exception ' + err)\r\n                }\r\n            } else {\r\n                const match = referrer_message.find(([key, value]) => key === \"none\");\r\n                text = match[1];\r\n                text = text.render({ title: titleStr, highlight: this.hltips });\r\n            }\r\n        }\r\n        this.showMessage(text, 6000);\r\n    }\r\n\r\n    private loadOtherModel() {\r\n        const that = this;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        const modelId = sessionStorage.getItem(\"modelId\") ?? settings.modelId;\r\n        const texturesId = sessionStorage.getItem(\"modelTexturesId\") ?? settings.modelTexturesId;\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                console.log(\"直接指向JSON文件不支持换装\");\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}/NextModel/?id=${modelId}&type=${settings.modelRandMode == 'rand' ? 0 : 1}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${that._userToken.sign}`\r\n                    }\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        that.initModel(result.ModelId, result.TextureId);\r\n                        that.showMessage(result.Message, 3000);\r\n                        sessionStorage.setItem(\"modelId\", `${result.ModelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.TextureId}`);\r\n                    }).catch(error => {\r\n                        console.log(\"认证失败\", error);\r\n                    });\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/${settings.modelRandMode}/?id=${modelId}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        that.initModel(result.model['id'], 0);\r\n                        that.showMessage(result.model['message'], 3000);\r\n                        sessionStorage.setItem(\"modelId\", `${result.model['id']}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `0`);\r\n                    }).catch(error => {\r\n                        console.log(\"获取失败\", error);\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private loadRandTextures() {\r\n        const that = this;\r\n        let settings = Object.assign({}, this._live2dSettings);\r\n        const modelId = sessionStorage.getItem(\"modelId\") ?? settings.modelId;\r\n        const texturesId = sessionStorage.getItem(\"modelTexturesId\") ?? settings.modelTexturesId;\r\n        let apiUrl = this.convertUrl(settings.modelAPI);\r\n        switch (this.convertApiUrl(settings.modelAPI)) {\r\n            case ApiUrlType.JsonFile:\r\n                console.log(\"直接指向JSON文件不支持换装\");\r\n                break;\r\n            case ApiUrlType.Live2dWeb:\r\n                apiUrl = `${apiUrl}/NextModel/?id=${modelId}&tid=${texturesId}&type=${settings.modelRandMode == 'rand' ? 2 : 3}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${that._userToken.sign}`\r\n                    }\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        if (result.TextureId !== texturesId) {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[1]);\r\n                        } else {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[0]);\r\n                        }\r\n                        that.initModel(result.ModelId, result.TextureId);\r\n                        sessionStorage.setItem(\"modelId\", `${modelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.TextureId}`);\r\n                    }).catch(error => {\r\n                        console.log(\"认证失败\", error);\r\n                    });\r\n                break;\r\n            case ApiUrlType.Other:\r\n                apiUrl = `${apiUrl}/${settings.modelRandMode}_textures/?id=${modelId}-${texturesId}`;\r\n                fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                }).then(rsp => rsp.json())\r\n                    .then(result => {\r\n                        if (result.textures['id'] !== texturesId) {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[1]);\r\n                        }\r\n                        else {\r\n                            that.showMessage(that._live2dTips.load_rand_textures[0]);\r\n                        }\r\n                        that.initModel(modelId, result.textures['id']);\r\n                        sessionStorage.setItem(\"modelId\", `${modelId}`);\r\n                        sessionStorage.setItem(\"modelTexturesId\", `${result.textures['id']}`);\r\n                    }).catch(error => {\r\n                        console.log(\"获取失败\", error);\r\n                    });\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nString.prototype.render = function (context: any): string {\r\n    const tokenReg = /(\\\\)?\\{([^\\{\\}\\\\]+)(\\\\)?\\}/g;\r\n\r\n    return this.replace(tokenReg, function (word, slash1, token, slash2) {\r\n        if (slash1 || slash2) { return word.replace('\\\\', ''); }\r\n\r\n        const variables = token.replace(/\\s/g, '').split('.');\r\n        let currentObject = context;\r\n        let i, length, variable;\r\n\r\n        for (i = 0, length = variables.length; i < length; ++i) {\r\n            variable = variables[i];\r\n            currentObject = currentObject[variable];\r\n            if (!currentObject) return '';\r\n        }\r\n        return currentObject;\r\n    });\r\n};","import Dexie,{ Table } from 'dexie';\r\n\r\nexport interface MocJson {\r\n    id?: number;\r\n    name :string;\r\n    key: string;\r\n    value: ArrayBuffer;\r\n}\r\n\r\nexport class DbCache extends Dexie {\r\n    mocJson! :Table<MocJson>\r\n    constructor(){\r\n        super('Live2D-JWF');\r\n        this.version(1).stores({\r\n            mocJson: '++id, [name+key]' // Primary key and indexed props\r\n        });\r\n    }\r\n}\r\n\r\nexport function ClearDb(){\r\n    db.delete();\r\n}\r\n\r\nexport const db = new DbCache();","export const LAppDefine = {\r\n\r\n\r\n    DEBUG_LOG: false,\r\n    DEBUG_MOUSE_LOG: false,\r\n    DEBUG_DRAW_HIT_AREA: false,\r\n    DEBUG_DRAW_ALPHA_MODEL: false,\r\n\r\n\r\n\r\n\r\n    VIEW_MAX_SCALE: 2,\r\n    VIEW_MIN_SCALE: 0.8,\r\n\r\n    VIEW_LOGICAL_LEFT: -1,\r\n    VIEW_LOGICAL_RIGHT: 1,\r\n\r\n    VIEW_LOGICAL_MAX_LEFT: -2,\r\n    VIEW_LOGICAL_MAX_RIGHT: 2,\r\n    VIEW_LOGICAL_MAX_BOTTOM: -2,\r\n    VIEW_LOGICAL_MAX_TOP: 2,\r\n\r\n\r\n    PRIORITY_NONE: 0,\r\n    PRIORITY_IDLE: 1,\r\n    PRIORITY_SLEEPY: 2,\r\n    PRIORITY_NORMAL: 3,\r\n    PRIORITY_FORCE: 4,\r\n\r\n    MOTION_GROUP_IDLE: \"idle\",\r\n    MOTION_GROUP_SLEEPY: \"sleepy\",\r\n    MOTION_GROUP_TAP_BODY: \"tap_body\",\r\n    MOTION_GROUP_FLICK_HEAD: \"flick_head\",\r\n    MOTION_GROUP_PINCH_IN: \"pinch_in\",\r\n    MOTION_GROUP_PINCH_OUT: \"pinch_out\",\r\n    MOTION_GROUP_SHAKE: \"shake\",\r\n\r\n\r\n    HIT_AREA_HEAD: \"head\",\r\n    HIT_AREA_BODY: \"body\",\r\n\r\n    HitAreasCustomHead_x: '',\r\n    HitAreasCustomHead_y: '',\r\n    HitAreasCustomBody_x: '',\r\n    HitAreasCustomBody_y: ''\r\n};\r\nvar context = undefined;\r\n\r\nexport function setContext(webglContext) {\r\n    context = webglContext;\r\n}\r\n\r\nexport function getContext() {\r\n    return context;\r\n}\r\n\r\nconst v2dir = new RegExp('\\model\\/([^\\/]*)\\/([^\\/]*)', 'gi');\r\nconst v2File = new RegExp('([^\\/]+)\\.(mtn|moc)$', 'gi');\r\n/**\r\n * 返回V2模型路径中的名字\r\n */\r\nexport function getV2Path(path: string): string {\r\n    var url = /[^/]*$/;\r\n    var test = path.match(v2dir);\r\n    if (test) {\r\n        return test[0];\r\n    } else {\r\n        return path.match(url) ? path.match(url)[0] : null;\r\n    }\r\n}\r\n/**\r\n * 返回V2模型文件的名字\r\n */\r\nexport function getV2File(path: string): string {\r\n    var url = /[^/]*$/;\r\n    var test = path.match(v2File);\r\n    if (test) {\r\n        return test[0];\r\n    } else {\r\n        return path.match(url) ? path.match(url)[0] : null;\r\n    }\r\n}","import { Live2DFramework } from \"./framework/Live2DFramework\"\r\nimport { PlatformManager } from \"./PlatformManager\"\r\nimport { LAppModel } from \"./LAppModel\"\r\nimport { LAppDefine } from \"./LAppDefine\"\r\n\r\nexport default class LAppLive2DManager {\r\n  private models: LAppModel[];\r\n  private count;\r\n  private reloadFlg;\r\n  public constructor() {\r\n    this.models = [];\r\n\r\n\r\n    this.count = -1;\r\n    this.reloadFlg = false;\r\n\r\n    (<any>window).Live2D.init();\r\n    Live2DFramework.setPlatformManager(new PlatformManager);\r\n  }\r\n\r\n  public createModel() {\r\n    var model = new LAppModel();\r\n    this.models.push(model);\r\n    return model;\r\n  }\r\n\r\n\r\n  public changeModel(gl: any, modelurl: string, token?: string) {\r\n    // console.log(\"--> LAppLive2DManager.update(gl)\");\r\n    if (this.reloadFlg) {\r\n      this.reloadFlg = false;\r\n      this.releaseModel(0, gl);\r\n      this.createModel();\r\n      this.models[0].load(modelurl, () => {\r\n        if (LAppDefine.DEBUG_LOG) console.log(\"changeModel完成\");\r\n      }, token);\r\n    }\r\n  }\r\n\r\n\r\n  public getModel(no) {\r\n    // console.log(\"--> LAppLive2DManager.getModel(\" + no + \")\");\r\n\r\n    if (no >= this.models.length) return null;\r\n\r\n    return this.models[no];\r\n  }\r\n\r\n\r\n\r\n  public releaseModel(no, gl) {\r\n    // console.log(\"--> LAppLive2DManager.releaseModel(\" + no + \")\");\r\n\r\n    if (this.models.length <= no) return;\r\n\r\n    this.models[no].release(gl);\r\n\r\n    delete this.models[no];\r\n    this.models.splice(no, 1);\r\n  }\r\n\r\n\r\n\r\n  public numModels() {\r\n    return this.models.length;\r\n  }\r\n\r\n\r\n\r\n  public setDrag(x, y) {\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].setDrag(x, y);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public maxScaleEvent() {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"Max scale event.\");\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_IN,\r\n        LAppDefine.PRIORITY_NORMAL);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public minScaleEvent() {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"Min scale event.\");\r\n    for (var i = 0; i < this.models.length; i++) {\r\n      this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_PINCH_OUT,\r\n        LAppDefine.PRIORITY_NORMAL);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public tapEvent(x, y) {\r\n    if (LAppDefine.DEBUG_LOG)\r\n      console.log(\"tapEvent view x:\" + x + \" y:\" + y);\r\n\r\n    for (var i = 0; i < this.models.length; i++) {\r\n\r\n      if (this.models[i].hitTest(LAppDefine.HIT_AREA_HEAD.toLowerCase(), x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap face.\");\r\n\r\n        this.models[i].setRandomExpression();\r\n      } else if (this.models[i].hitTest(LAppDefine.HIT_AREA_BODY.toLowerCase(), x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap body.\" + \" models[\" + i + \"]\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      } else if (this.models[i].hitTestCustom('head', x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap face.\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_FLICK_HEAD,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      } else if (this.models[i].hitTestCustom('body', x, y)) {\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n          console.log(\"Tap body.\" + \" models[\" + i + \"]\");\r\n\r\n        this.models[i].startRandomMotion(LAppDefine.MOTION_GROUP_TAP_BODY,\r\n          LAppDefine.PRIORITY_NORMAL);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}","import { Live2DFramework, L2DBaseModel, L2DMotionManager } from \"./framework/Live2DFramework\"\r\nimport { ModelSettingJson } from \"./framework/ModelSettingJson\"\r\nimport { LAppDefine } from \"./LAppDefine\"\r\n\r\nexport class LAppModel extends L2DBaseModel {\r\n    private modelHomeDir;\r\n    private modelSetting: ModelSettingJson;\r\n    private tmpMatrix: any[];\r\n    mainMotionManager: any;\r\n    expressionManager: any;\r\n    constructor() {\r\n        super();\r\n        //L2DBaseModel.apply(this, arguments);\r\n        L2DBaseModel.prototype.constructor.call(this);\r\n\r\n        this.modelHomeDir = \"\";\r\n        this.modelSetting = null;\r\n        this.tmpMatrix = [];\r\n    }\r\n\r\n    public load(modelSettingPath: string, callback: () => void, token?: string) {\r\n        this.setUpdating(true);\r\n        this.setInitialized(false);\r\n\r\n        this.modelHomeDir = \"\";\r\n\r\n        this.modelSetting = new ModelSettingJson();\r\n\r\n        var thisRef = this;\r\n\r\n        this.modelSetting.loadModelSetting(modelSettingPath, function () {\r\n            //处理相对路径和绝对路径\r\n            //已知thisRef.modelSetting.getModelFile() 是获取当前JSON中的模型文件:moc文件\r\n            var mocfile = thisRef.modelSetting.getModelFile();\r\n            if (/^https?:\\/\\/|^\\/\\//i.test(mocfile)) {\r\n                thisRef.modelHomeDir = \"\";\r\n            } else {\r\n                thisRef.modelHomeDir = modelSettingPath.substring(0, modelSettingPath.lastIndexOf(\"/\") + 1);\r\n            }\r\n            var path = thisRef.modelHomeDir + thisRef.modelSetting.getModelFile();\r\n            thisRef.loadModelData(path, function (model) {\r\n\r\n                for (var i = 0; i < thisRef.modelSetting.getTextureNum(); i++) {\r\n                    let texPaths = thisRef.modelHomeDir + thisRef.modelSetting.getTextureFile(i);\r\n                    thisRef.loadTexture(i, texPaths, function () {\r\n\r\n                        if (thisRef.isTexLoaded) {\r\n\r\n                            if (thisRef.modelSetting.getExpressionNum() > 0) {\r\n\r\n                                thisRef.expressions = {};\r\n\r\n                                for (var j = 0; j < thisRef.modelSetting.getExpressionNum(); j++) {\r\n                                    var expName = thisRef.modelSetting.getExpressionName(j);\r\n                                    var expFilePath = thisRef.modelHomeDir +\r\n                                        thisRef.modelSetting.getExpressionFile(j);\r\n\r\n                                    thisRef.loadExpression(expName, expFilePath, null);\r\n                                }\r\n                            }\r\n                            else {\r\n                                thisRef.expressionManager = null;\r\n                                thisRef.expressions = {};\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.eyeBlink == null) {\r\n                                //thisRef.eyeBlink = new L2DEyeBlink();\r\n                            }\r\n\r\n\r\n                            if (thisRef.modelSetting.getPhysicsFile() != null) {\r\n                                thisRef.loadPhysics(thisRef.modelHomeDir +\r\n                                    thisRef.modelSetting.getPhysicsFile());\r\n                            }\r\n                            else {\r\n                                thisRef.physics = null;\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.modelSetting.getPoseFile() != null) {\r\n                                thisRef.loadPose(\r\n                                    thisRef.modelHomeDir +\r\n                                    thisRef.modelSetting.getPoseFile(),\r\n                                    function () {\r\n                                        thisRef.pose.updateParam(thisRef.live2DModel);\r\n                                    }\r\n                                );\r\n                            }\r\n                            else {\r\n                                thisRef.pose = null;\r\n                            }\r\n\r\n\r\n\r\n                            if (thisRef.modelSetting.getLayout() != null) {\r\n                                var layout = thisRef.modelSetting.getLayout();\r\n                                if (layout[\"width\"] != null)\r\n                                    thisRef.modelMatrix.setWidth(layout[\"width\"]);\r\n                                if (layout[\"height\"] != null)\r\n                                    thisRef.modelMatrix.setHeight(layout[\"height\"]);\r\n\r\n                                if (layout[\"x\"] != null)\r\n                                    thisRef.modelMatrix.setX(layout[\"x\"]);\r\n                                if (layout[\"y\"] != null)\r\n                                    thisRef.modelMatrix.setY(layout[\"y\"]);\r\n                                if (layout[\"center_x\"] != null)\r\n                                    thisRef.modelMatrix.centerX(layout[\"center_x\"]);\r\n                                if (layout[\"center_y\"] != null)\r\n                                    thisRef.modelMatrix.centerY(layout[\"center_y\"]);\r\n                                if (layout[\"top\"] != null)\r\n                                    thisRef.modelMatrix.top(layout[\"top\"]);\r\n                                if (layout[\"bottom\"] != null)\r\n                                    thisRef.modelMatrix.bottom(layout[\"bottom\"]);\r\n                                if (layout[\"left\"] != null)\r\n                                    thisRef.modelMatrix.left(layout[\"left\"]);\r\n                                if (layout[\"right\"] != null)\r\n                                    thisRef.modelMatrix.right(layout[\"right\"]);\r\n                            }\r\n\r\n                            if (thisRef.modelSetting.getHitAreasCustom() != null) {\r\n                                var hit_areas_custom = thisRef.modelSetting.getHitAreasCustom();\r\n                                if (hit_areas_custom[\"head_x\"] != null)\r\n                                    LAppDefine.HitAreasCustomHead_x = hit_areas_custom[\"head_x\"];\r\n                                if (hit_areas_custom[\"head_y\"] != null)\r\n                                    LAppDefine.HitAreasCustomHead_y = hit_areas_custom[\"head_y\"];\r\n                                if (hit_areas_custom[\"body_x\"] != null)\r\n                                    LAppDefine.HitAreasCustomBody_x = hit_areas_custom[\"body_x\"];\r\n                                if (hit_areas_custom[\"body_y\"] != null)\r\n                                    LAppDefine.HitAreasCustomBody_y = hit_areas_custom[\"body_y\"];\r\n                            }\r\n\r\n                            for (var j = 0; j < thisRef.modelSetting.getInitParamNum(); j++) {\r\n\r\n                                thisRef.live2DModel.setParamFloat(\r\n                                    thisRef.modelSetting.getInitParamID(j),\r\n                                    thisRef.modelSetting.getInitParamValue(j)\r\n                                );\r\n                            }\r\n\r\n                            for (var j = 0; j < thisRef.modelSetting.getInitPartsVisibleNum(); j++) {\r\n\r\n                                thisRef.live2DModel.setPartsOpacity(\r\n                                    thisRef.modelSetting.getInitPartsVisibleID(j),\r\n                                    thisRef.modelSetting.getInitPartsVisibleValue(j)\r\n                                );\r\n                            }\r\n\r\n\r\n\r\n                            thisRef.live2DModel.saveParam();\r\n                            // thisRef.live2DModel.setGL(gl);\r\n\r\n\r\n                            thisRef.preloadMotionGroup(LAppDefine.MOTION_GROUP_IDLE.toLowerCase());\r\n                            thisRef.preloadMotionGroup(LAppDefine.PRIORITY_SLEEPY);\r\n                            thisRef.mainMotionManager.stopAllMotions();\r\n\r\n                            thisRef.setUpdating(false);\r\n                            thisRef.setInitialized(true);\r\n\r\n                            if (typeof callback == \"function\") callback();\r\n\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }, token);\r\n    }\r\n\r\n    public release(gl) {\r\n        // this.live2DModel.deleteTextures();\r\n        let pm = Live2DFramework.getPlatformManager();\r\n\r\n        gl.deleteTexture(pm.texture);\r\n    }\r\n\r\n    public preloadMotionGroup(name) {\r\n        var thisRef = this;\r\n\r\n        for (var i = 0; i < this.modelSetting.getMotionNum(name); i++) {\r\n            var file = this.modelSetting.getMotionFile(name, i);\r\n            this.loadMotion(file, this.modelHomeDir + file, function (motion) {\r\n                motion.setFadeIn(thisRef.modelSetting.getMotionFadeIn(name, i));\r\n                motion.setFadeOut(thisRef.modelSetting.getMotionFadeOut(name, i));\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    public update() {\r\n        // console.log(\"--> LAppModel.update()\");\r\n\r\n        if (this.live2DModel == null) {\r\n            if (LAppDefine.DEBUG_LOG) console.error(\"Failed to update.\");\r\n\r\n            return;\r\n        }\r\n\r\n        var timeMSec = (<any>window).UtSystem.getUserTimeMSec() - this.startTimeMSec;\r\n        var timeSec = timeMSec / 1000.0;\r\n        var t = timeSec * 2 * Math.PI;\r\n\r\n\r\n        if (this.mainMotionManager.isFinished()) {\r\n            var Sleepy = sessionStorage.getItem('Sleepy');\r\n            if (Sleepy === '1') {\r\n                this.startRandomMotion(LAppDefine.MOTION_GROUP_SLEEPY, LAppDefine.PRIORITY_SLEEPY);\r\n            } else {\r\n                this.startRandomMotion(LAppDefine.MOTION_GROUP_IDLE.toLowerCase(), LAppDefine.PRIORITY_IDLE);\r\n            }\r\n        }\r\n\r\n        //-----------------------------------------------------------------\t\t\r\n\r\n\r\n        this.live2DModel.loadParam();\r\n\r\n\r\n\r\n        var update = this.mainMotionManager.updateParam(this.live2DModel);\r\n        if (!update) {\r\n\r\n            if (this.eyeBlink != null) {\r\n                this.eyeBlink.updateParam(this.live2DModel);\r\n            }\r\n        }\r\n\r\n\r\n        this.live2DModel.saveParam();\r\n\r\n        //-----------------------------------------------------------------\t\t\r\n\r\n\r\n        if (this.expressionManager != null &&\r\n            this.expressions != null &&\r\n            !this.expressionManager.isFinished()) {\r\n            this.expressionManager.updateParam(this.live2DModel);\r\n        }\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\", this.dragX * 30, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\", this.dragY * 30, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\", (this.dragX * this.dragY) * -30, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\", this.dragX * 10, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\", this.dragX, 1);\r\n        this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\", this.dragY, 1);\r\n\r\n\r\n\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",\r\n            Number((15 * Math.sin(t / 6.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",\r\n            Number((8 * Math.sin(t / 3.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",\r\n            Number((10 * Math.sin(t / 5.5345))), 0.5);\r\n        this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",\r\n            Number((4 * Math.sin(t / 15.5345))), 0.5);\r\n        this.live2DModel.setParamFloat(\"PARAM_BREATH\",\r\n            Number((0.5 + 0.5 * Math.sin(t / 3.2345))), 1);\r\n\r\n\r\n        if (this.physics != null) {\r\n            this.physics.updateParam(this.live2DModel);\r\n        }\r\n\r\n\r\n        if (this.lipSync == null) {\r\n            this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",\r\n                this.lipSyncValue);\r\n        }\r\n\r\n\r\n        if (this.pose != null) {\r\n            this.pose.updateParam(this.live2DModel);\r\n        }\r\n\r\n        this.live2DModel.update();\r\n    }\r\n\r\n\r\n\r\n    public setRandomExpression() {\r\n        var tmp = [];\r\n        for (var name in this.expressions) {\r\n            tmp.push(name);\r\n        }\r\n\r\n        var no = parseInt((Math.random() * tmp.length).toString());\r\n\r\n        this.setExpression(tmp[no]);\r\n    }\r\n\r\n\r\n\r\n    public startRandomMotion(name, priority) {\r\n        var max = this.modelSetting.getMotionNum(name);\r\n        var no = parseInt((Math.random() * max).toString());\r\n        this.startMotion(name, no, priority);\r\n    }\r\n\r\n\r\n\r\n    public startMotion(name, no, priority) {\r\n        // console.log(\"startMotion : \" + name + \" \" + no + \" \" + priority);\r\n\r\n        var motionName = this.modelSetting.getMotionFile(name, no);\r\n\r\n        if (motionName == null || motionName == \"\") {\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.error(\"Failed to motion.\");\r\n            return;\r\n        }\r\n\r\n        if (priority == LAppDefine.PRIORITY_FORCE) {\r\n            this.mainMotionManager.setReservePriority(priority);\r\n        }\r\n        else if (!this.mainMotionManager.reserveMotion(priority)) {\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.log(\"Motion is running.\")\r\n            return;\r\n        }\r\n\r\n        var thisRef = this;\r\n        var motion;\r\n\r\n        if (this.motions[name] == null) {\r\n            this.loadMotion(null, this.modelHomeDir + motionName, function (mtn) {\r\n                motion = mtn;\r\n\r\n\r\n                thisRef.setFadeInFadeOut(name, no, priority, motion);\r\n\r\n            });\r\n        }\r\n        else {\r\n            motion = this.motions[name];\r\n\r\n\r\n            thisRef.setFadeInFadeOut(name, no, priority, motion);\r\n        }\r\n    }\r\n\r\n\r\n    public setFadeInFadeOut(name, no, priority, motion) {\r\n        var motionName = this.modelSetting.getMotionFile(name, no);\r\n\r\n        motion.setFadeIn(this.modelSetting.getMotionFadeIn(name, no));\r\n        motion.setFadeOut(this.modelSetting.getMotionFadeOut(name, no));\r\n\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Start motion : \" + motionName);\r\n\r\n        if (this.modelSetting.getMotionSound(name, no) == null) {\r\n            this.mainMotionManager.startMotionPrio(motion, priority);\r\n        }\r\n        else {\r\n            var soundName = this.modelSetting.getMotionSound(name, no);\r\n            // var player = new Sound(this.modelHomeDir + soundName);\r\n\r\n            var snd = document.createElement(\"audio\");\r\n            snd.src = this.modelHomeDir + soundName;\r\n\r\n            if (LAppDefine.DEBUG_LOG)\r\n                console.log(\"Start sound : \" + soundName);\r\n\r\n            snd.play();\r\n            this.mainMotionManager.startMotionPrio(motion, priority);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public setExpression(name) {\r\n        var motion = this.expressions[name];\r\n\r\n        if (LAppDefine.DEBUG_LOG)\r\n            console.log(\"Expression : \" + name);\r\n\r\n        this.expressionManager.startMotion(motion, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * 模仿v3版本的framework写的\r\n     * 同等于lappmodel.ts中797行代码\r\n     * @param {实例化后的MatrixStack} matrix \r\n     */\r\n    public draw(matrix) {\r\n        matrix.multMatrix(this.modelMatrix.getArray());\r\n\r\n        this.tmpMatrix = matrix.getMatrix()\r\n\r\n        this.live2DModel.setMatrix(this.tmpMatrix);\r\n        this.live2DModel.draw();\r\n    }\r\n\r\n\r\n\r\n    public hitTest(id, testX, testY) {\r\n        var len = this.modelSetting.getHitAreaNum();\r\n        for (var i = 0; i < len; i++) {\r\n            if (id == this.modelSetting.getHitAreaName(i)) {\r\n                var drawID = this.modelSetting.getHitAreaID(i);\r\n\r\n                return this.hitTestSimple(drawID, testX, testY);\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    public hitTestCustom(type, testX, testY) {\r\n        if (type == 'head') {\r\n            return this.hitTestSimpleCustom(LAppDefine.HitAreasCustomHead_x, LAppDefine.HitAreasCustomHead_y, testX, testY);\r\n        } else if (type == 'body') {\r\n            return this.hitTestSimpleCustom(LAppDefine.HitAreasCustomBody_x, LAppDefine.HitAreasCustomBody_y, testX, testY);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n}","/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\nimport { getContext, getV2File, getV2Path } from \"./LAppDefine\"\r\nimport { CubismJson } from '../v2/framework/utils/cubismjson'\r\nimport { db } from \"../lib/DbCache\";\r\nimport { Live2dWebSDK } from '../lib/live2dWebSDK'\r\n\r\nlet requestCache = {};\r\n\r\nexport class PlatformManager {\r\n    /**\r\n     * PlatformManager # loadBytes()\r\n     * @param path \r\n     */\r\n    public async loadBytes(path: string, token?: string): Promise<ArrayBuffer> {\r\n        // 获取当前model的名字\r\n        let fileKey = getV2Path(path);\r\n        let fileName = getV2File(path);\r\n        // Cache 相同的请求，减少请求数量\r\n        let rsp = await db.mocJson.where({ key: fileKey, name: fileName }).first();\r\n        if (rsp) {\r\n            return rsp.value;\r\n        } else {\r\n            let request: Response;\r\n            if (token) {\r\n                request = await fetch(path, {\r\n                    headers: new Headers({\r\n                        'Authorization': `Bearer ${token}`,\r\n                    })\r\n                });\r\n            } else {\r\n                request = await fetch(path);\r\n            }\r\n            let rsp = await request.arrayBuffer();\r\n            switch (request.status) {\r\n                case 200:\r\n                    db.mocJson.put({ key: fileKey, name: fileName, value: rsp });\r\n                    return rsp;\r\n                default:\r\n                    console.error(\"Failed to load (\" + request.status + \") : \" + path);\r\n                    return null!;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回路径对应的内容（字符串类型）\r\n     * @param path \r\n     * @param callback \r\n     */\r\n    public async loadString(path: string, token?: string): Promise<string> {\r\n        let buf = await this.loadBytes(path, token);\r\n        let arrayStr = CubismJson.arrayBufferToString(buf);\r\n        return arrayStr;\r\n    }\r\n\r\n    public loadLive2DModel(path: string, callback: (model: any) => void, token?: string) {\r\n        this.loadBytes(path, token).then((buf) => {\r\n            var model = (<any>window).Live2DModelWebGL.loadModel(buf);\r\n            callback(model);\r\n        });\r\n    }\r\n\r\n    //============================================================\r\n    //    PlatformManager # loadTexture()\r\n    //============================================================\r\n    public loadTexture(model/*ALive2DModel*/, no: number, path: string, callback) {\r\n        // load textures\r\n        var loadedImage = new Image();\r\n        loadedImage.crossOrigin = 'Anonymous';\r\n        loadedImage.src = path;\r\n\r\n        var thisRef = this;\r\n        loadedImage.onload = function () {\r\n            // create texture\r\n            if ((this as HTMLImageElement).complete) {\r\n                var gl = getContext();\r\n                var texture = gl.createTexture();\r\n                if (!texture) { console.error(\"Failed to generate gl texture name.\"); return -1; }\r\n\r\n                if (model.isPremultipliedAlpha() == false) {\r\n                    // 乗算済アルファテクスチャ以外の場合\r\n                    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\r\n                }\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n                gl.activeTexture(gl.TEXTURE0);\r\n                gl.bindTexture(gl.TEXTURE_2D, texture);\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA,\r\n                    gl.UNSIGNED_BYTE, loadedImage);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\r\n                gl.generateMipmap(gl.TEXTURE_2D);\r\n\r\n\r\n\r\n                model.setTexture(no, texture);\r\n\r\n                // テクスチャオブジェクトを解放\r\n                texture = null;\r\n            } else {\r\n                console.log(\"材质图片加载失败, 请刷新页面后重试\");\r\n            }\r\n            if (typeof callback == \"function\") callback();\r\n        };\r\n\r\n        loadedImage.onerror = function () {\r\n            console.error(\"Failed to load image : \" + path);\r\n        }\r\n    }\r\n\r\n\r\n    //============================================================\r\n    //    PlatformManager # parseFromBytes(buf)\r\n\r\n    //============================================================\r\n    public jsonParseFromBytes(buf) {\r\n\r\n        var jsonStr;\r\n\r\n\r\n\r\n        var bomCode = new Uint8Array(buf, 0, 3);\r\n        if (bomCode[0] == 239 && bomCode[1] == 187 && bomCode[2] == 191) {\r\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf, 3));\r\n        } else {\r\n            jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf));\r\n        }\r\n\r\n        var jsonObj = JSON.parse(jsonStr);\r\n\r\n        return jsonObj;\r\n    }\r\n\r\n\r\n    //============================================================\r\n    //    PlatformManager # log()\r\n    //============================================================\r\n    public log(txt: string) {\r\n        //console.log(txt);\r\n    }\r\n\r\n\r\n}","/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\nexport class MatrixStack{\r\n    \r\n    public reset(){\r\n        this.depth = 0;\r\n    }\r\n\r\n    public loadIdentity(){\r\n        for (var i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = (i % 5 == 0) ? 1 : 0;\r\n        }\r\n    }\r\n\r\n    public push(){\r\n        let offset = this.depth * 16;\r\n        let nextOffset = (this.depth + 1) * 16;\r\n        \r\n        if (this.matrixStack.length < nextOffset + 16)\r\n        {\r\n            this.matrixStack.length = nextOffset + 16;\r\n        }\r\n    \r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            this.matrixStack[nextOffset + i] = this.currentMatrix[i];\r\n        }\r\n    \r\n        this.depth++;\r\n    }\r\n\r\n    public pop(){\r\n        this.depth--;\r\n        if (this.depth < 0)\r\n        {\r\n            console.log(\"Invalid matrix stack. 无效的矩阵堆栈\")\r\n            this.depth = 0;\r\n        }\r\n    \r\n        let offset = this.depth * 16;\r\n        for (let i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = this.matrixStack[offset + i];\r\n        }\r\n    }\r\n\r\n    public getMatrix(){\r\n        return this.currentMatrix;\r\n    }\r\n\r\n    public multMatrix(matNew){\r\n        let i, j, k;\r\n\r\n        for (i = 0; i < 16; i++)\r\n        {\r\n            this.tmp[i] = 0;\r\n        }\r\n    \r\n        for (i = 0; i < 4; i++)\r\n        {\r\n            for (j = 0; j < 4; j++)\r\n            {\r\n                for (k = 0; k < 4; k++)\r\n                {\r\n                    this.tmp[i + j * 4] += this.currentMatrix[i + k * 4] * matNew[k + j * 4];\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < 16; i++)\r\n        {\r\n            this.currentMatrix[i] = this.tmp[i];\r\n        }\r\n    }\r\n\r\n    depth = 0;\r\n\r\n    matrixStack = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    currentMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    tmp = new Array(16);\r\n}\r\n\r\n","import {Live2DFramework} from \"./Live2DFramework\"\r\nimport {PlatformManager} from '../PlatformManager'\r\n\r\nexport class ModelSettingJson{\r\n    public constructor(){\r\n        this.NAME = \"name\";\r\n        this.ID = \"id\";\r\n        this.MODEL = \"model\";\r\n        this.TEXTURES = \"textures\";\r\n        this.HIT_AREAS = \"hit_areas\";\r\n        this.PHYSICS = \"physics\";\r\n        this.POSE = \"pose\";\r\n        this.EXPRESSIONS = \"expressions\";\r\n        this.MOTION_GROUPS = \"motions\";\r\n        this.SOUND = \"sound\";\r\n        this.FADE_IN = \"fade_in\";\r\n        this.FADE_OUT = \"fade_out\";\r\n        this.LAYOUT = \"layout\";\r\n        this.HIT_AREAS_CUSTOM = \"hit_areas_custom\";\r\n        this.INIT_PARAM = \"init_param\";\r\n        this.INIT_PARTS_VISIBLE = \"init_parts_visible\";\r\n        this.VALUE = \"val\";\r\n        this.FILE = \"file\";\r\n\r\n        this.json = {};\r\n    }\r\n\r\n    public loadModelSetting(path: string, callback: ()=>void, token?: string){\r\n        var thisRef = this;\r\n        var pm = Live2DFramework.getPlatformManager() as PlatformManager;\r\n        pm.loadBytes(path,token).then((buf)=>{\r\n            var str = String.fromCharCode.apply(null,new Uint8Array(buf));\r\n            thisRef.json = JSON.parse(str);\r\n            callback();\r\n        });\r\n    }\r\n\r\n    public getTextureFile(n){\r\n        if (this.json[this.TEXTURES] == null || this.json[this.TEXTURES][n] == null)\r\n        return null;\r\n    \r\n        return this.json[this.TEXTURES][n];\r\n    }\r\n\r\n    public getModelFile(){\r\n        return this.json[this.MODEL];\r\n    }\r\n\r\n    public getTextureNum ()\r\n    {    \r\n        if (this.json[this.TEXTURES] == null) return 0;\r\n        \r\n        return this.json[this.TEXTURES].length;\r\n    }\r\n\r\n\r\n    public getHitAreaNum ()\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null)\r\n            return 0;\r\n\r\n        return this.json[this.HIT_AREAS].length;\r\n    }\r\n\r\n\r\n    public getHitAreaID(n)\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null || \r\n            this.json[this.HIT_AREAS][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.HIT_AREAS][n][this.ID];\r\n    }\r\n\r\n\r\n    public getHitAreaName(n)\r\n    {\r\n        if (this.json[this.HIT_AREAS] == null || \r\n            this.json[this.HIT_AREAS][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.HIT_AREAS][n][this.NAME];\r\n    }\r\n\r\n\r\n    public getPhysicsFile()\r\n    {\r\n        return this.json[this.PHYSICS];\r\n    }\r\n\r\n\r\n    public getPoseFile()\r\n    {\r\n        return this.json[this.POSE];\r\n    }\r\n\r\n\r\n    public getExpressionNum ()\r\n    {\r\n        return (this.json[this.EXPRESSIONS] == null) ? 0 : this.json[this.EXPRESSIONS].length;\r\n    }\r\n\r\n\r\n    public getExpressionFile(n)\r\n    {\r\n        if (this.json[this.EXPRESSIONS] == null)\r\n            return null;\r\n        return this.json[this.EXPRESSIONS][n][this.FILE];\r\n    }\r\n\r\n\r\n    public getExpressionName(n)\r\n    {\r\n        if (this.json[this.EXPRESSIONS] == null)\r\n            return null;\r\n        return this.json[this.EXPRESSIONS][n][this.NAME];\r\n    }\r\n\r\n\r\n    public getLayout()\r\n    {\r\n        return this.json[this.LAYOUT];\r\n    }\r\n\r\n\r\n    public getHitAreasCustom ()\r\n    {\r\n        return this.json[this.HIT_AREAS_CUSTOM];\r\n    }\r\n\r\n\r\n    public getInitParamNum ()\r\n    {\r\n        return (this.json[this.INIT_PARAM] == null) ? 0 : this.json[this.INIT_PARAM].length;\r\n    }\r\n\r\n\r\n    public getMotionNum(name)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null)\r\n            return 0;\r\n        \r\n        return this.json[this.MOTION_GROUPS][name].length;\r\n    }\r\n\r\n\r\n    public getMotionFile(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null)\r\n            return null;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.FILE];\r\n    }\r\n\r\n\r\n    public getMotionSound(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.SOUND] == null)\r\n            return null;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.SOUND];\r\n    }\r\n\r\n\r\n    public getMotionFadeIn(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_IN] == null)\r\n            return 1000;\r\n\r\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_IN];\r\n    }\r\n\r\n\r\n    public getMotionFadeOut(name, n)\r\n    {\r\n        if (this.json[this.MOTION_GROUPS] == null || \r\n            this.json[this.MOTION_GROUPS][name] == null || \r\n            this.json[this.MOTION_GROUPS][name][n] == null || \r\n            this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT] == null)\r\n            return 1000;\r\n        \r\n        return this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT];\r\n    }\r\n\r\n\r\n    public getInitParamID(n)\r\n    {\r\n        if (this.json[this.INIT_PARAM] == null || \r\n            this.json[this.INIT_PARAM][n] == null)\r\n            return null;\r\n        \r\n        return this.json[this.INIT_PARAM][n][this.ID];\r\n    }\r\n\r\n\r\n    public getInitParamValue(n)\r\n    {\r\n        if (this.json[this.INIT_PARAM] == null || this.json[this.INIT_PARAM][n] == null)\r\n            return NaN;\r\n        \r\n        return this.json[this.INIT_PARAM][n][this.VALUE];\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleNum ()\r\n    {\r\n        return (this.json[this.INIT_PARTS_VISIBLE] == null) ? 0 : this.json[this.INIT_PARTS_VISIBLE].length;\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleID(n)\r\n    {\r\n        if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\r\n            return null;\r\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.ID];\r\n    }\r\n\r\n\r\n    public getInitPartsVisibleValue(n)\r\n    {\r\n        if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\r\n            return NaN;\r\n        \r\n        return this.json[this.INIT_PARTS_VISIBLE][n][this.VALUE];\r\n    }\r\n\r\n\r\n    NAME:string;\r\n    ID:string;\r\n    MODEL:string;\r\n    TEXTURES:string;\r\n    HIT_AREAS:string;\r\n    PHYSICS:string;\r\n    POSE :string;\r\n    EXPRESSIONS :string;\r\n    MOTION_GROUPS:string;\r\n    SOUND:string;\r\n    FADE_IN :string;\r\n    FADE_OUT :string;\r\n    LAYOUT :string;\r\n    HIT_AREAS_CUSTOM :string;\r\n    INIT_PARAM :string;\r\n    INIT_PARTS_VISIBLE :string;\r\n    VALUE :string;\r\n    FILE :string;\r\n\r\n    json :any;\r\n}","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n//========================================================\r\n//  ログ出力関数の設定\r\n//========================================================\r\n\r\n//---------- ログ出力レベル 選択項目 定義 ----------\r\n// 詳細ログ出力設定\r\nexport const CSM_LOG_LEVEL_VERBOSE = 0;\r\n// デバッグログ出力設定\r\nexport const CSM_LOG_LEVEL_DEBUG = 1;\r\n// Infoログ出力設定\r\nexport const CSM_LOG_LEVEL_INFO = 2;\r\n// 警告ログ出力設定\r\nexport const CSM_LOG_LEVEL_WARNING = 3;\r\n// エラーログ出力設定\r\nexport const CSM_LOG_LEVEL_ERROR = 4;\r\n// ログ出力オフ設定\r\nexport const CSM_LOG_LEVEL_OFF = 5;\r\n\r\n/**\r\n * ログ出力レベル設定。\r\n *\r\n * 強制的にログ出力レベルを変える時に定義を有効にする。\r\n * CSM_LOG_LEVEL_VERBOSE ～ CSM_LOG_LEVEL_OFF を選択する。\r\n */\r\nexport const CSM_LOG_LEVEL: number = CSM_LOG_LEVEL_VERBOSE;\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmString } from '../type/csmstring';\r\n\r\n/**\r\n * パラメータ名・パーツ名・Drawable名を保持\r\n *\r\n * パラメータ名・パーツ名・Drawable名を保持するクラス。\r\n */\r\nexport class CubismId {\r\n  /**\r\n   * ID名を取得する\r\n   */\r\n  public getString(): csmString {\r\n    return this._id;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(id: string | csmString) {\r\n    if (typeof id === 'string') {\r\n      this._id = new csmString(id);\r\n      return;\r\n    }\r\n\r\n    this._id = id;\r\n  }\r\n\r\n  /**\r\n   * idを比較\r\n   * @param c 比較するid\r\n   * @return 同じならばtrue,異なっていればfalseを返す\r\n   */\r\n  public isEqual(c: string | csmString | CubismId): boolean {\r\n    if (typeof c === 'string') {\r\n      return this._id.isEqual(c);\r\n    } else if (c instanceof csmString) {\r\n      return this._id.isEqual(c.s);\r\n    } else if (c instanceof CubismId) {\r\n      return this._id.isEqual(c._id.s);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * idを比較\r\n   * @param c 比較するid\r\n   * @return 同じならばtrue,異なっていればfalseを返す\r\n   */\r\n  public isNotEqual(c: string | csmString | CubismId): boolean {\r\n    if (typeof c == 'string') {\r\n      return !this._id.isEqual(c);\r\n    } else if (c instanceof csmString) {\r\n      return !this._id.isEqual(c.s);\r\n    } else if (c instanceof CubismId) {\r\n      return !this._id.isEqual(c._id.s);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _id: csmString; // ID名\r\n}\r\n\r\nexport declare type CubismIdHandle = CubismId;\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismid';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismId = $.CubismId;\r\n  export type CubismId = $.CubismId;\r\n  export type CubismIdHandle = $.CubismIdHandle;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector } from '../type/csmvector';\r\nimport { CubismId } from './cubismid';\r\n\r\n/**\r\n * ID名の管理\r\n *\r\n * ID名を管理する。\r\n */\r\nexport class CubismIdManager {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._ids = new csmVector<CubismId>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    for (let i = 0; i < this._ids.getSize(); ++i) {\r\n      this._ids.set(i, void 0);\r\n    }\r\n    this._ids = null;\r\n  }\r\n\r\n  /**\r\n   * ID名をリストから登録\r\n   *\r\n   * @param ids ID名リスト\r\n   * @param count IDの個数\r\n   */\r\n  public registerIds(ids: string[] | csmString[]): void {\r\n    for (let i = 0; i < ids.length; i++) {\r\n      this.registerId(ids[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ID名を登録\r\n   *\r\n   * @param id ID名\r\n   */\r\n  public registerId(id: string | csmString): CubismId {\r\n    let result: CubismId = null;\r\n\r\n    if ('string' == typeof id) {\r\n      if ((result = this.findId(id)) != null) {\r\n        return result;\r\n      }\r\n\r\n      result = new CubismId(id);\r\n      this._ids.pushBack(result);\r\n    } else {\r\n      return this.registerId(id.s);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * ID名からIDを取得する\r\n   *\r\n   * @param id ID名\r\n   */\r\n  public getId(id: csmString | string): CubismId {\r\n    return this.registerId(id);\r\n  }\r\n\r\n  /**\r\n   * ID名からIDの確認\r\n   *\r\n   * @return true 存在する\r\n   * @return false 存在しない\r\n   */\r\n  public isExist(id: csmString | string): boolean {\r\n    if ('string' == typeof id) {\r\n      return this.findId(id) != null;\r\n    }\r\n    return this.isExist(id.s);\r\n  }\r\n\r\n  /**\r\n   * ID名からIDを検索する。\r\n   *\r\n   * @param id ID名\r\n   * @return 登録されているID。なければNULL。\r\n   */\r\n  private findId(id: string): CubismId {\r\n    for (let i = 0; i < this._ids.getSize(); ++i) {\r\n      if (this._ids.at(i).getString().isEqual(id)) {\r\n        return this._ids.at(i);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private _ids: csmVector<CubismId>; // 登録されているIDのリスト\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismidmanager';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismIdManager = $.CubismIdManager;\r\n  export type CubismIdManager = $.CubismIdManager;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismIdManager } from './id/cubismidmanager';\r\nimport { CubismRenderer } from './rendering/cubismrenderer';\r\nimport {\r\n  CSM_ASSERT,\r\n  CubismLogInfo,\r\n  CubismLogWarning,\r\n} from './utils/cubismdebug';\r\nimport { Value } from './utils/cubismjson';\r\n\r\nexport function strtod(s: string, endPtr: string[]): number {\r\n  let index = 0;\r\n  for (let i = 1; ; i++) {\r\n    const testC: string = s.slice(i - 1, i);\r\n\r\n    // 指数・マイナスの可能性があるのでスキップする\r\n    if (testC == 'e' || testC == '-' || testC == 'E') {\r\n      continue;\r\n    } // 文字列の範囲を広げていく\r\n\r\n    const test: string = s.substring(0, i);\r\n    const number = Number(test);\r\n    if (isNaN(number)) {\r\n      // 数値として認識できなくなったので終了\r\n      break;\r\n    } // 最後に数値としてできたindexを格納しておく\r\n\r\n    index = i;\r\n  }\r\n  let d = parseFloat(s); // パースした数値\r\n\r\n  if (isNaN(d)) {\r\n    // 数値として認識できなくなったので終了\r\n    d = NaN;\r\n  }\r\n\r\n  endPtr[0] = s.slice(index); // 後続の文字列\r\n  return d;\r\n}\r\n\r\n// ファイルスコープの変数を初期化\r\n\r\nlet s_isStarted = false;\r\nlet s_isInitialized = false;\r\nlet s_option: Option = null;\r\nlet s_cubismIdManager: CubismIdManager = null;\r\n\r\n/**\r\n * Framework内で使う定数の宣言\r\n */\r\nexport const Constant = Object.freeze<Record<string, number>>({\r\n  vertexOffset: 0, // メッシュ頂点のオフセット値\r\n  vertexStep: 2, // メッシュ頂点のステップ値\r\n});\r\n\r\nexport function csmDelete<T>(address: T): void {\r\n  if (!address) {\r\n    return;\r\n  }\r\n\r\n  address = void 0;\r\n}\r\n\r\n/**\r\n * Live2D Cubism SDK Original Workflow SDKのエントリポイント\r\n * 利用開始時はCubismFramework.initialize()を呼び、CubismFramework.dispose()で終了する。\r\n */\r\nexport class CubismFramework {\r\n  /**\r\n   * Cubism FrameworkのAPIを使用可能にする。\r\n   *  APIを実行する前に必ずこの関数を実行すること。\r\n   *  一度準備が完了して以降は、再び実行しても内部処理がスキップされます。\r\n   *\r\n   * @param    option      Optionクラスのインスタンス\r\n   *\r\n   * @return   準備処理が完了したらtrueが返ります。\r\n   */\r\n  public static startUp(option: Option = null): boolean {\r\n    if (s_isStarted) {\r\n      CubismLogInfo('CubismFramework.startUp() is already done.');\r\n      return s_isStarted;\r\n    }\r\n\r\n    s_option = option;\r\n\r\n    if (s_option != null) {\r\n      Live2DCubismCore.Logging.csmSetLogFunction(s_option.logFunction);\r\n    }\r\n\r\n    s_isStarted = true;\r\n\r\n    // Live2D Cubism Coreバージョン情報を表示\r\n    if (s_isStarted) {\r\n      const version: number = Live2DCubismCore.Version.csmGetVersion();\r\n      const major: number = (version & 0xff000000) >> 24;\r\n      const minor: number = (version & 0x00ff0000) >> 16;\r\n      const patch: number = version & 0x0000ffff;\r\n      const versionNumber: number = version;\r\n\r\n      CubismLogInfo(\r\n        `Live2D Cubism Core version: {0}.{1}.{2} ({3})`,\r\n        ('00' + major).slice(-2),\r\n        ('00' + minor).slice(-2),\r\n        ('0000' + patch).slice(-4),\r\n        versionNumber\r\n      );\r\n    }\r\n\r\n    CubismLogInfo('CubismFramework.startUp() is complete.');\r\n\r\n    return s_isStarted;\r\n  }\r\n\r\n  /**\r\n   * StartUp()で初期化したCubismFrameworkの各パラメータをクリアします。\r\n   * Dispose()したCubismFrameworkを再利用する際に利用してください。\r\n   */\r\n  public static cleanUp(): void {\r\n    s_isStarted = false;\r\n    s_isInitialized = false;\r\n    s_option = null;\r\n    s_cubismIdManager = null;\r\n  }\r\n\r\n  /**\r\n   * Cubism Framework内のリソースを初期化してモデルを表示可能な状態にします。<br>\r\n   *     再度Initialize()するには先にDispose()を実行する必要があります。\r\n   *\r\n   * @param memorySize 初期化時メモリ量 [byte(s)]\r\n   *    複数モデル表示時などにモデルが更新されない際に使用してください。\r\n   *    指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\r\n   *    それ以外はすべて1024*1024*16 byteに丸めます。\r\n   */\r\n  public static initialize(memorySize = 0): void {\r\n    CSM_ASSERT(s_isStarted);\r\n    if (!s_isStarted) {\r\n      CubismLogWarning('CubismFramework is not started.');\r\n      return;\r\n    }\r\n\r\n    // --- s_isInitializedによる連続初期化ガード ---\r\n    // 連続してリソース確保が行われないようにする。\r\n    // 再度Initialize()するには先にDispose()を実行する必要がある。\r\n    if (s_isInitialized) {\r\n      CubismLogWarning(\r\n        'CubismFramework.initialize() skipped, already initialized.'\r\n      );\r\n      return;\r\n    }\r\n\r\n    //---- static 初期化 ----\r\n    Value.staticInitializeNotForClientCall();\r\n\r\n    s_cubismIdManager = new CubismIdManager();\r\n\r\n    // --- HACK: 初期化時メモリ量の拡張(単位byte) ---\r\n    // 複数モデル表示時などにモデルが更新されない際に使用してください。\r\n    // 指定する際は必ず1024*1024*16 byte(16MB)以上の値を指定してください。\r\n    // それ以外はすべて1024*1024*16 byteに丸めます。\r\n    Live2DCubismCore.Memory.initializeAmountOfMemory(memorySize);\r\n\r\n    s_isInitialized = true;\r\n\r\n    CubismLogInfo('CubismFramework.initialize() is complete.');\r\n  }\r\n\r\n  /**\r\n   * Cubism Framework内の全てのリソースを解放します。\r\n   *      ただし、外部で確保されたリソースについては解放しません。\r\n   *      外部で適切に破棄する必要があります。\r\n   */\r\n  public static dispose(): void {\r\n    CSM_ASSERT(s_isStarted);\r\n    if (!s_isStarted) {\r\n      CubismLogWarning('CubismFramework is not started.');\r\n      return;\r\n    }\r\n\r\n    // --- s_isInitializedによる未初期化解放ガード ---\r\n    // dispose()するには先にinitialize()を実行する必要がある。\r\n    if (!s_isInitialized) {\r\n      // false...リソース未確保の場合\r\n      CubismLogWarning('CubismFramework.dispose() skipped, not initialized.');\r\n      return;\r\n    }\r\n\r\n    Value.staticReleaseNotForClientCall();\r\n\r\n    s_cubismIdManager.release();\r\n    s_cubismIdManager = null;\r\n\r\n    // レンダラの静的リソース（シェーダプログラム他）を解放する\r\n    CubismRenderer.staticRelease();\r\n\r\n    s_isInitialized = false;\r\n\r\n    CubismLogInfo('CubismFramework.dispose() is complete.');\r\n  }\r\n\r\n  /**\r\n   * Cubism FrameworkのAPIを使用する準備が完了したかどうか\r\n   * @return APIを使用する準備が完了していればtrueが返ります。\r\n   */\r\n  public static isStarted(): boolean {\r\n    return s_isStarted;\r\n  }\r\n\r\n  /**\r\n   * Cubism Frameworkのリソース初期化がすでに行われているかどうか\r\n   * @return リソース確保が完了していればtrueが返ります\r\n   */\r\n  public static isInitialized(): boolean {\r\n    return s_isInitialized;\r\n  }\r\n\r\n  /**\r\n   * Core APIにバインドしたログ関数を実行する\r\n   *\r\n   * @praram message ログメッセージ\r\n   */\r\n  public static coreLogFunction(message: string): void {\r\n    // Return if logging not possible.\r\n    if (!Live2DCubismCore.Logging.csmGetLogFunction()) {\r\n      return;\r\n    }\r\n\r\n    Live2DCubismCore.Logging.csmGetLogFunction()(message);\r\n  }\r\n\r\n  /**\r\n   * 現在のログ出力レベル設定の値を返す。\r\n   *\r\n   * @return  現在のログ出力レベル設定の値\r\n   */\r\n  public static getLoggingLevel(): LogLevel {\r\n    if (s_option != null) {\r\n      return s_option.loggingLevel;\r\n    }\r\n    return LogLevel.LogLevel_Off;\r\n  }\r\n\r\n  /**\r\n   * IDマネージャのインスタンスを取得する\r\n   * @return CubismManagerクラスのインスタンス\r\n   */\r\n  public static getIdManager(): CubismIdManager {\r\n    return s_cubismIdManager;\r\n  }\r\n\r\n  /**\r\n   * 静的クラスとして使用する\r\n   * インスタンス化させない\r\n   */\r\n  private constructor() {}\r\n}\r\n\r\nexport class Option {\r\n  logFunction: Live2DCubismCore.csmLogFunction; // ログ出力の関数オブジェクト\r\n  loggingLevel: LogLevel; // ログ出力レベルの設定\r\n}\r\n\r\n/**\r\n * ログ出力のレベル\r\n */\r\nexport enum LogLevel {\r\n  LogLevel_Verbose = 0, // 詳細ログ\r\n  LogLevel_Debug, // デバッグログ\r\n  LogLevel_Info, // Infoログ\r\n  LogLevel_Warning, // 警告ログ\r\n  LogLevel_Error, // エラーログ\r\n  LogLevel_Off, // ログ出力無効\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './live2dcubismframework';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const Constant = $.Constant;\r\n  export const csmDelete = $.csmDelete;\r\n  export const CubismFramework = $.CubismFramework;\r\n  export type CubismFramework = $.CubismFramework;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 4x4の行列\r\n *\r\n * 4x4行列の便利クラス。\r\n */\r\nexport class CubismMatrix44 {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    this._tr = new Float32Array(16); // 4 * 4のサイズ\r\n    this.loadIdentity();\r\n  }\r\n\r\n  /**\r\n   * 受け取った２つの行列の乗算を行う。\r\n   *\r\n   * @param a 行列a\r\n   * @param b 行列b\r\n   * @return 乗算結果の行列\r\n   */\r\n  public static multiply(\r\n    a: Float32Array,\r\n    b: Float32Array,\r\n    dst: Float32Array\r\n  ): void {\r\n    const c: Float32Array = new Float32Array([\r\n      0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\r\n      0.0,\r\n    ]);\r\n\r\n    const n = 4;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      for (let j = 0; j < n; ++j) {\r\n        for (let k = 0; k < n; ++k) {\r\n          c[j + i * 4] += a[k + i * 4] * b[j + k * 4];\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 16; ++i) {\r\n      dst[i] = c[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 単位行列に初期化する\r\n   */\r\n  public loadIdentity(): void {\r\n    const c: Float32Array = new Float32Array([\r\n      1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    this.setMatrix(c);\r\n  }\r\n\r\n  /**\r\n   * 行列を設定\r\n   *\r\n   * @param tr 16個の浮動小数点数で表される4x4の行列\r\n   */\r\n  public setMatrix(tr: Float32Array): void {\r\n    for (let i = 0; i < 16; ++i) {\r\n      this._tr[i] = tr[i];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 行列を浮動小数点数の配列で取得\r\n   *\r\n   * @return 16個の浮動小数点数で表される4x4の行列\r\n   */\r\n  public getArray(): Float32Array {\r\n    return this._tr;\r\n  }\r\n\r\n  /**\r\n   * X軸の拡大率を取得\r\n   * @return X軸の拡大率\r\n   */\r\n  public getScaleX(): number {\r\n    return this._tr[0];\r\n  }\r\n\r\n  /**\r\n   * Y軸の拡大率を取得する\r\n   *\r\n   * @return Y軸の拡大率\r\n   */\r\n  public getScaleY(): number {\r\n    return this._tr[5];\r\n  }\r\n\r\n  /**\r\n   * X軸の移動量を取得\r\n   * @return X軸の移動量\r\n   */\r\n  public getTranslateX(): number {\r\n    return this._tr[12];\r\n  }\r\n\r\n  /**\r\n   * Y軸の移動量を取得\r\n   * @return Y軸の移動量\r\n   */\r\n  public getTranslateY(): number {\r\n    return this._tr[13];\r\n  }\r\n\r\n  /**\r\n   * X軸の値を現在の行列で計算\r\n   *\r\n   * @param src X軸の値\r\n   * @return 現在の行列で計算されたX軸の値\r\n   */\r\n  public transformX(src: number): number {\r\n    return this._tr[0] * src + this._tr[12];\r\n  }\r\n\r\n  /**\r\n   * Y軸の値を現在の行列で計算\r\n   *\r\n   * @param src Y軸の値\r\n   * @return 現在の行列で計算されたY軸の値\r\n   */\r\n  public transformY(src: number): number {\r\n    return this._tr[5] * src + this._tr[13];\r\n  }\r\n\r\n  /**\r\n   * X軸の値を現在の行列で逆計算\r\n   */\r\n  public invertTransformX(src: number): number {\r\n    return (src - this._tr[12]) / this._tr[0];\r\n  }\r\n\r\n  /**\r\n   * Y軸の値を現在の行列で逆計算\r\n   */\r\n  public invertTransformY(src: number): number {\r\n    return (src - this._tr[13]) / this._tr[5];\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の位置を起点にして移動\r\n   *\r\n   * 現在の行列の位置を起点にして相対的に移動する。\r\n   *\r\n   * @param x X軸の移動量\r\n   * @param y Y軸の移動量\r\n   */\r\n  public translateRelative(x: number, y: number): void {\r\n    const tr1: Float32Array = new Float32Array([\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      x,\r\n      y,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の位置を移動\r\n   *\r\n   * 現在の行列の位置を指定した位置へ移動する\r\n   *\r\n   * @param x X軸の移動量\r\n   * @param y y軸の移動量\r\n   */\r\n  public translate(x: number, y: number): void {\r\n    this._tr[12] = x;\r\n    this._tr[13] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列のX軸の位置を指定した位置へ移動する\r\n   *\r\n   * @param x X軸の移動量\r\n   */\r\n  public translateX(x: number): void {\r\n    this._tr[12] = x;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列のY軸の位置を指定した位置へ移動する\r\n   *\r\n   * @param y Y軸の移動量\r\n   */\r\n  public translateY(y: number): void {\r\n    this._tr[13] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の拡大率を相対的に設定する\r\n   *\r\n   * @param x X軸の拡大率\r\n   * @param y Y軸の拡大率\r\n   */\r\n  public scaleRelative(x: number, y: number): void {\r\n    const tr1: Float32Array = new Float32Array([\r\n      x,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      y,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      0.0,\r\n      1.0,\r\n    ]);\r\n\r\n    CubismMatrix44.multiply(tr1, this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * 現在の行列の拡大率を指定した倍率に設定する\r\n   *\r\n   * @param x X軸の拡大率\r\n   * @param y Y軸の拡大率\r\n   */\r\n  public scale(x: number, y: number): void {\r\n    this._tr[0] = x;\r\n    this._tr[5] = y;\r\n  }\r\n\r\n  /**\r\n   * 現在の行列に行列を乗算\r\n   *\r\n   * @param m 行列\r\n   */\r\n  public multiplyByMatrix(m: CubismMatrix44): void {\r\n    CubismMatrix44.multiply(m.getArray(), this._tr, this._tr);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのコピーを生成する\r\n   */\r\n  public clone(): CubismMatrix44 {\r\n    const cloneMatrix: CubismMatrix44 = new CubismMatrix44();\r\n\r\n    for (let i = 0; i < this._tr.length; i++) {\r\n      cloneMatrix._tr[i] = this._tr[i];\r\n    }\r\n\r\n    return cloneMatrix;\r\n  }\r\n\r\n  protected _tr: Float32Array; // 4x4行列データ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismmatrix44';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismMatrix44 = $.CubismMatrix44;\r\n  export type CubismMatrix44 = $.CubismMatrix44;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismMatrix44 } from '../math/cubismmatrix44';\r\nimport { CubismModel } from '../model/cubismmodel';\r\n\r\n/**\r\n * モデル描画を処理するレンダラ\r\n *\r\n * サブクラスに環境依存の描画命令を記述する。\r\n */\r\nexport abstract class CubismRenderer {\r\n  /**\r\n   * レンダラのインスタンスを生成して取得する\r\n   *\r\n   * @return レンダラのインスタンス\r\n   */\r\n  public static create(): CubismRenderer {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * レンダラのインスタンスを解放する\r\n   */\r\n  public static delete(renderer: CubismRenderer): void {\r\n    renderer = null;\r\n  }\r\n\r\n  /**\r\n   * レンダラの初期化処理を実行する\r\n   * 引数に渡したモデルからレンダラの初期化処理に必要な情報を取り出すことができる\r\n   * @param model モデルのインスタンス\r\n   */\r\n  public initialize(model: CubismModel): void {\r\n    this._model = model;\r\n  }\r\n\r\n  /**\r\n   * モデルを描画する\r\n   */\r\n  public drawModel(): void {\r\n    if (this.getModel() == null) return;\r\n\r\n    this.saveProfile();\r\n\r\n    this.doDrawModel();\r\n\r\n    this.restoreProfile();\r\n  }\r\n\r\n  /**\r\n   * Model-View-Projection 行列をセットする\r\n   * 配列は複製されるので、元の配列は外で破棄して良い\r\n   * @param matrix44 Model-View-Projection 行列\r\n   */\r\n  public setMvpMatrix(matrix44: CubismMatrix44): void {\r\n    this._mvpMatrix4x4.setMatrix(matrix44.getArray());\r\n  }\r\n\r\n  /**\r\n   * Model-View-Projection 行列を取得する\r\n   * @return Model-View-Projection 行列\r\n   */\r\n  public getMvpMatrix(): CubismMatrix44 {\r\n    return this._mvpMatrix4x4;\r\n  }\r\n\r\n  /**\r\n   * モデルの色をセットする\r\n   * 各色0.0~1.0の間で指定する（1.0が標準の状態）\r\n   * @param red 赤チャンネルの値\r\n   * @param green 緑チャンネルの値\r\n   * @param blue 青チャンネルの値\r\n   * @param alpha αチャンネルの値\r\n   */\r\n  public setModelColor(\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    alpha: number\r\n  ): void {\r\n    if (red < 0.0) {\r\n      red = 0.0;\r\n    } else if (red > 1.0) {\r\n      red = 1.0;\r\n    }\r\n\r\n    if (green < 0.0) {\r\n      green = 0.0;\r\n    } else if (green > 1.0) {\r\n      green = 1.0;\r\n    }\r\n\r\n    if (blue < 0.0) {\r\n      blue = 0.0;\r\n    } else if (blue > 1.0) {\r\n      blue = 1.0;\r\n    }\r\n\r\n    if (alpha < 0.0) {\r\n      alpha = 0.0;\r\n    } else if (alpha > 1.0) {\r\n      alpha = 1.0;\r\n    }\r\n\r\n    this._modelColor.R = red;\r\n    this._modelColor.G = green;\r\n    this._modelColor.B = blue;\r\n    this._modelColor.A = alpha;\r\n  }\r\n\r\n  /**\r\n   * モデルの色を取得する\r\n   * 各色0.0~1.0の間で指定する(1.0が標準の状態)\r\n   *\r\n   * @return RGBAのカラー情報\r\n   */\r\n  public getModelColor(): CubismTextureColor {\r\n    return JSON.parse(JSON.stringify(this._modelColor));\r\n  }\r\n\r\n  /**\r\n   * 乗算済みαの有効・無効をセットする\r\n   * 有効にするならtrue、無効にするならfalseをセットする\r\n   */\r\n  public setIsPremultipliedAlpha(enable: boolean): void {\r\n    this._isPremultipliedAlpha = enable;\r\n  }\r\n\r\n  /**\r\n   * 乗算済みαの有効・無効を取得する\r\n   * @return true 乗算済みのα有効\r\n   * @return false 乗算済みのα無効\r\n   */\r\n  public isPremultipliedAlpha(): boolean {\r\n    return this._isPremultipliedAlpha;\r\n  }\r\n\r\n  /**\r\n   * カリング（片面描画）の有効・無効をセットする。\r\n   * 有効にするならtrue、無効にするならfalseをセットする\r\n   */\r\n  public setIsCulling(culling: boolean): void {\r\n    this._isCulling = culling;\r\n  }\r\n\r\n  /**\r\n   * カリング（片面描画）の有効・無効を取得する。\r\n   * @return true カリング有効\r\n   * @return false カリング無効\r\n   */\r\n  public isCulling(): boolean {\r\n    return this._isCulling;\r\n  }\r\n\r\n  /**\r\n   * テクスチャの異方性フィルタリングのパラメータをセットする\r\n   * パラメータ値の影響度はレンダラの実装に依存する\r\n   * @param n パラメータの値\r\n   */\r\n  public setAnisotropy(n: number): void {\r\n    this._anisotropy = n;\r\n  }\r\n\r\n  /**\r\n   * テクスチャの異方性フィルタリングのパラメータをセットする\r\n   * @return 異方性フィルタリングのパラメータ\r\n   */\r\n  public getAnisotropy(): number {\r\n    return this._anisotropy;\r\n  }\r\n\r\n  /**\r\n   * レンダリングするモデルを取得する\r\n   * @return レンダリングするモデル\r\n   */\r\n  public getModel(): CubismModel {\r\n    return this._model;\r\n  }\r\n\r\n  /**\r\n   * マスク描画の方式を変更する。\r\n   * falseの場合、マスクを1枚のテクスチャに分割してレンダリングする（デフォルト）\r\n   * 高速だが、マスク個数の上限が36に限定され、質も荒くなる\r\n   * trueの場合、パーツ描画の前にその都度必要なマスクを描き直す\r\n   * レンダリング品質は高いが描画処理負荷は増す\r\n   * @param high 高精細マスクに切り替えるか？\r\n   */\r\n  public useHighPrecisionMask(high: boolean): void {\r\n    this._useHighPrecisionMask = high;\r\n  }\r\n\r\n  /**\r\n   * マスクの描画方式を取得する\r\n   * @return true 高精細方式\r\n   * @return false デフォルト\r\n   */\r\n  public isUsingHighPrecisionMask(): boolean {\r\n    return this._useHighPrecisionMask;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  protected constructor() {\r\n    this._isCulling = false;\r\n    this._isPremultipliedAlpha = false;\r\n    this._anisotropy = 0.0;\r\n    this._model = null;\r\n    this._modelColor = new CubismTextureColor();\r\n    this._useHighPrecisionMask = false;\r\n\r\n    // 単位行列に初期化\r\n    this._mvpMatrix4x4 = new CubismMatrix44();\r\n    this._mvpMatrix4x4.loadIdentity();\r\n  }\r\n\r\n  /**\r\n   * モデル描画の実装\r\n   */\r\n  public abstract doDrawModel(): void;\r\n\r\n  /**\r\n   * 描画オブジェクト（アートメッシュ）を描画する\r\n   * ポリゴンメッシュとテクスチャ番号をセットで渡す。\r\n   * @param textureNo 描画するテクスチャ番号\r\n   * @param indexCount 描画オブジェクトのインデックス値\r\n   * @param vertexCount ポリゴンメッシュの頂点数\r\n   * @param indexArray ポリゴンメッシュ頂点のインデックス配列\r\n   * @param vertexArray ポリゴンメッシュの頂点配列\r\n   * @param uvArray uv配列\r\n   * @param opacity 不透明度\r\n   * @param colorBlendMode カラーブレンディングのタイプ\r\n   * @param invertedMask マスク使用時のマスクの反転使用\r\n   */\r\n  public abstract drawMesh(\r\n    textureNo: number,\r\n    indexCount: number,\r\n    vertexCount: number,\r\n    indexArray: Uint16Array,\r\n    vertexArray: Float32Array,\r\n    uvArray: Float32Array,\r\n    multiplyColor: CubismTextureColor,\r\n    screenColor: CubismTextureColor,\r\n    opacity: number,\r\n    colorBlendMode: CubismBlendMode,\r\n    invertedMask: boolean\r\n  ): void;\r\n\r\n  /**\r\n   * モデル描画直前のレンダラのステートを保持する\r\n   */\r\n  protected abstract saveProfile(): void;\r\n\r\n  /**\r\n   * モデル描画直前のレンダラのステートを復帰する\r\n   */\r\n  protected abstract restoreProfile(): void;\r\n\r\n  /**\r\n   * レンダラが保持する静的なリソースを開放する\r\n   */\r\n  public static staticRelease: any;\r\n\r\n  protected _mvpMatrix4x4: CubismMatrix44; // Model-View-Projection 行列\r\n  protected _modelColor: CubismTextureColor; // モデル自体のカラー（RGBA）\r\n  protected _isCulling: boolean; // カリングが有効ならtrue\r\n  protected _isPremultipliedAlpha: boolean; // 乗算済みαならtrue\r\n  protected _anisotropy: any; // テクスチャの異方性フィルタリングのパラメータ\r\n  protected _model: CubismModel; // レンダリング対象のモデル\r\n  protected _useHighPrecisionMask: boolean; // falseの場合、マスクを纏めて描画する trueの場合、マスクはパーツ描画ごとに書き直す\r\n}\r\n\r\nexport enum CubismBlendMode {\r\n  CubismBlendMode_Normal = 0, // 通常\r\n  CubismBlendMode_Additive = 1, // 加算\r\n  CubismBlendMode_Multiplicative = 2, // 乗算\r\n}\r\n\r\n/**\r\n * テクスチャの色をRGBAで扱うためのクラス\r\n */\r\nexport class CubismTextureColor {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this.R = 1.0;\r\n    this.G = 1.0;\r\n    this.B = 1.0;\r\n    this.A = 1.0;\r\n  }\r\n\r\n  R: number; // 赤チャンネル\r\n  G: number; // 緑チャンネル\r\n  B: number; // 青チャンネル\r\n  A: number; // αチャンネル\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismrenderer';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismBlendMode = $.CubismBlendMode;\r\n  export type CubismBlendMode = $.CubismBlendMode;\r\n  export const CubismRenderer = $.CubismRenderer;\r\n  export type CubismRenderer = $.CubismRenderer;\r\n  export const CubismTextureColor = $.CubismTextureColor;\r\n  export type CubismTextureColor = $.CubismTextureColor;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { CubismLogDebug } from '../utils/cubismdebug';\r\n\r\n/**\r\n * Key-Valueのペアを定義するクラス\r\n * csmMapクラスの内部データで使用する。\r\n */\r\nexport class csmPair<_KeyT, _ValT> {\r\n  /**\r\n   * コンストラクタ\r\n   * @param key Keyとしてセットする値\r\n   * @param value Valueとしてセットする値\r\n   */\r\n  public constructor(key?: _KeyT, value?: _ValT) {\r\n    this.first = key == undefined ? null : key;\r\n\r\n    this.second = value == undefined ? null : value;\r\n  }\r\n\r\n  public first: _KeyT; // keyとして用いる変数\r\n  public second: _ValT; // valueとして用いる変数\r\n}\r\n\r\n/**\r\n * マップ型\r\n */\r\nexport class csmMap<_KeyT, _ValT> {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   * @param size 初期化時点で確保するサイズ\r\n   */\r\n  public constructor(size?: number) {\r\n    if (size != undefined) {\r\n      if (size < 1) {\r\n        this._keyValues = [];\r\n        this._dummyValue = null;\r\n        this._size = 0;\r\n      } else {\r\n        this._keyValues = new Array(size);\r\n        this._size = size;\r\n      }\r\n    } else {\r\n      this._keyValues = [];\r\n      this._dummyValue = null;\r\n      this._size = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * デストラクタ\r\n   */\r\n  public release() {\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * キーを追加する\r\n   * @param key 新たに追加するキー\r\n   */\r\n  public appendKey(key: _KeyT): void {\r\n    // 新しくKey/Valueのペアを作る\r\n    this.prepareCapacity(this._size + 1, false); // 1つ以上入る隙間を作る\r\n    // 新しいkey/valueのインデックスは_size\r\n\r\n    this._keyValues[this._size] = new csmPair<_KeyT, _ValT>(key);\r\n    this._size += 1;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[key]のオーバーロード(get)\r\n   * @param key 添字から特定されるValue値\r\n   */\r\n  public getValue(key: _KeyT): _ValT {\r\n    let found = -1;\r\n\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        found = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found >= 0) {\r\n      return this._keyValues[found].second;\r\n    } else {\r\n      this.appendKey(key); // 新規キーを追加\r\n      return this._keyValues[this._size - 1].second;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[key]のオーバーロード(set)\r\n   * @param key 添字から特定されるValue値\r\n   * @param value 代入するValue値\r\n   */\r\n  public setValue(key: _KeyT, value: _ValT): void {\r\n    let found = -1;\r\n\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        found = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (found >= 0) {\r\n      this._keyValues[found].second = value;\r\n    } else {\r\n      this.appendKey(key); // 新規キーを追加\r\n      this._keyValues[this._size - 1].second = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 引数で渡したKeyを持つ要素が存在するか\r\n   * @param key 存在を確認するkey\r\n   * @return true 引数で渡したkeyを持つ要素が存在する\r\n   * @return false 引数で渡したkeyを持つ要素が存在しない\r\n   */\r\n  public isExist(key: _KeyT): boolean {\r\n    for (let i = 0; i < this._size; i++) {\r\n      if (this._keyValues[i].first == key) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * keyValueのポインタを全て解放する\r\n   */\r\n  public clear(): void {\r\n    this._keyValues = void 0;\r\n    this._keyValues = null;\r\n    this._keyValues = [];\r\n\r\n    this._size = 0;\r\n  }\r\n\r\n  /**\r\n   * コンテナのサイズを取得する\r\n   *\r\n   * @return コンテナのサイズ\r\n   */\r\n  public getSize(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * コンテナのキャパシティを確保する\r\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない。\r\n   * @param fitToSize trueなら指定したサイズに合わせる。falseならサイズを2倍確保しておく。\r\n   */\r\n  public prepareCapacity(newSize: number, fitToSize: boolean): void {\r\n    if (newSize > this._keyValues.length) {\r\n      if (this._keyValues.length == 0) {\r\n        if (!fitToSize && newSize < csmMap.DefaultSize)\r\n          newSize = csmMap.DefaultSize;\r\n        this._keyValues.length = newSize;\r\n      } else {\r\n        if (!fitToSize && newSize < this._keyValues.length * 2)\r\n          newSize = this._keyValues.length * 2;\r\n        this._keyValues.length = newSize;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンテナの先頭要素を返す\r\n   */\r\n  public begin(): iterator<_KeyT, _ValT> {\r\n    const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(this, 0);\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナの終端要素を返す\r\n   */\r\n  public end(): iterator<_KeyT, _ValT> {\r\n    const ite: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\r\n      this,\r\n      this._size\r\n    ); // 終了\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナから要素を削除する\r\n   *\r\n   * @param ite 削除する要素\r\n   */\r\n  public erase(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\r\n    const index: number = ite._index;\r\n    if (index < 0 || this._size <= index) {\r\n      return ite; // 削除範囲外\r\n    }\r\n\r\n    // 削除\r\n    this._keyValues.splice(index, 1);\r\n    --this._size;\r\n\r\n    const ite2: iterator<_KeyT, _ValT> = new iterator<_KeyT, _ValT>(\r\n      this,\r\n      index\r\n    ); // 終了\r\n    return ite2;\r\n  }\r\n\r\n  /**\r\n   * コンテナの値を32ビット符号付き整数型でダンプする\r\n   */\r\n  public dumpAsInt() {\r\n    for (let i = 0; i < this._size; i++) {\r\n      CubismLogDebug('{0} ,', this._keyValues[i]);\r\n      CubismLogDebug('\\n');\r\n    }\r\n  }\r\n\r\n  public static readonly DefaultSize = 10; // コンテナの初期化のデフォルトサイズ\r\n  public _keyValues: csmPair<_KeyT, _ValT>[]; // key-valueペアの配列\r\n  public _dummyValue: _ValT; // 空の値を返す為のダミー\r\n  public _size: number; // コンテナの要素数\r\n}\r\n\r\n/**\r\n * csmMap<T>のイテレータ\r\n */\r\nexport class iterator<_KeyT, _ValT> {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(v?: csmMap<_KeyT, _ValT>, idx?: number) {\r\n    this._map = v != undefined ? v : new csmMap<_KeyT, _ValT>();\r\n\r\n    this._index = idx != undefined ? idx : 0;\r\n  }\r\n\r\n  /**\r\n   * =演算子のオーバーロード\r\n   */\r\n  public set(ite: iterator<_KeyT, _ValT>): iterator<_KeyT, _ValT> {\r\n    this._index = ite._index;\r\n    this._map = ite._map;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き++演算子のオーバーロード\r\n   */\r\n  public preIncrement(): iterator<_KeyT, _ValT> {\r\n    ++this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き--演算子のオーバーロード\r\n   */\r\n  public preDecrement(): iterator<_KeyT, _ValT> {\r\n    --this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 後置き++演算子のオーバーロード\r\n   */\r\n  public increment(): iterator<_KeyT, _ValT> {\r\n    const iteold = new iterator<_KeyT, _ValT>(this._map, this._index++); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * 後置き--演算子のオーバーロード\r\n   */\r\n  public decrement(): iterator<_KeyT, _ValT> {\r\n    const iteold = new iterator<_KeyT, _ValT>(this._map, this._index); // 古い値を保存\r\n    this._map = iteold._map;\r\n    this._index = iteold._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * *演算子のオーバーロード\r\n   */\r\n  public ptr(): csmPair<_KeyT, _ValT> {\r\n    return this._map._keyValues[this._index];\r\n  }\r\n\r\n  /**\r\n   * !=演算\r\n   */\r\n  public notEqual(ite: iterator<_KeyT, _ValT>): boolean {\r\n    return this._index != ite._index || this._map != ite._map;\r\n  }\r\n\r\n  _index: number; // コンテナのインデックス値\r\n  _map: csmMap<_KeyT, _ValT>; // コンテナ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmmap';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmMap = $.csmMap;\r\n  export type csmMap<K, V> = $.csmMap<K, V>;\r\n  export const csmPair = $.csmPair;\r\n  export type csmPair<K, V> = $.csmPair<K, V>;\r\n  export const iterator = $.iterator;\r\n  export type iterator<K, V> = $.iterator<K, V>;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * 文字列クラス。\r\n */\r\nexport class csmString {\r\n  /**\r\n   * 文字列を後方に追加する\r\n   *\r\n   * @param c 追加する文字列\r\n   * @return 更新された文字列\r\n   */\r\n  public append(c: string, length?: number): csmString {\r\n    this.s += length !== undefined ? c.substr(0, length) : c;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 文字サイズを拡張して文字を埋める\r\n   * @param length    拡張する文字数\r\n   * @param v         埋める文字\r\n   * @return 更新された文字列\r\n   */\r\n  public expansion(length: number, v: string): csmString {\r\n    for (let i = 0; i < length; i++) {\r\n      this.append(v);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 文字列の長さをバイト数で取得する\r\n   */\r\n  public getBytes(): number {\r\n    return encodeURIComponent(this.s).replace(/%../g, 'x').length;\r\n  }\r\n\r\n  /**\r\n   * 文字列の長さを返す\r\n   */\r\n  public getLength(): number {\r\n    return this.s.length;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 <\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列より小さい\r\n   * @return false:   比較する文字列より大きい\r\n   */\r\n  public isLess(s: csmString): boolean {\r\n    return this.s < s.s;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 >\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列より大きい\r\n   * @return false:   比較する文字列より小さい\r\n   */\r\n  public isGreat(s: csmString): boolean {\r\n    return this.s > s.s;\r\n  }\r\n\r\n  /**\r\n   * 文字列比較 ==\r\n   * @param s 比較する文字列\r\n   * @return true:    比較する文字列と等しい\r\n   * @return false:   比較する文字列と異なる\r\n   */\r\n  public isEqual(s: string): boolean {\r\n    return this.s == s;\r\n  }\r\n\r\n  /**\r\n   * 文字列が空かどうか\r\n   * @return true: 空の文字列\r\n   * @return false: 値が設定されている\r\n   */\r\n  public isEmpty(): boolean {\r\n    return this.s.length == 0;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: string) {\r\n    this.s = s;\r\n  }\r\n\r\n  s: string;\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmstring';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmString = $.csmString;\r\n  export type csmString = $.csmString;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\n/**\r\n * ベクター型（可変配列型）\r\n */\r\nexport class csmVector<T> {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   * @param iniitalCapacity 初期化後のキャパシティ。データサイズは_capacity * sizeof(T)\r\n   * @param zeroClear trueなら初期化時に確保した領域を0で埋める\r\n   */\r\n  constructor(initialCapacity = 0) {\r\n    if (initialCapacity < 1) {\r\n      this._ptr = [];\r\n      this._capacity = 0;\r\n      this._size = 0;\r\n    } else {\r\n      this._ptr = new Array(initialCapacity);\r\n      this._capacity = initialCapacity;\r\n      this._size = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * インデックスで指定した要素を返す\r\n   */\r\n  public at(index: number): T {\r\n    return this._ptr[index];\r\n  }\r\n\r\n  /**\r\n   * 要素をセット\r\n   * @param index 要素をセットするインデックス\r\n   * @param value セットする要素\r\n   */\r\n  public set(index: number, value: T): void {\r\n    this._ptr[index] = value;\r\n  }\r\n\r\n  /**\r\n   * コンテナを取得する\r\n   */\r\n  public get(offset = 0): T[] {\r\n    const ret: T[] = new Array<T>();\r\n    for (let i = offset; i < this._size; i++) {\r\n      ret.push(this._ptr[i]);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * pushBack処理、コンテナに新たな要素を追加する\r\n   * @param value PushBack処理で追加する値\r\n   */\r\n  public pushBack(value: T): void {\r\n    if (this._size >= this._capacity) {\r\n      this.prepareCapacity(\r\n        this._capacity == 0 ? csmVector.s_defaultSize : this._capacity * 2\r\n      );\r\n    }\r\n\r\n    this._ptr[this._size++] = value;\r\n  }\r\n\r\n  /**\r\n   * コンテナの全要素を解放する\r\n   */\r\n  public clear(): void {\r\n    this._ptr.length = 0;\r\n    this._size = 0;\r\n  }\r\n\r\n  /**\r\n   * コンテナの要素数を返す\r\n   * @return コンテナの要素数\r\n   */\r\n  public getSize(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * コンテナの全要素に対して代入処理を行う\r\n   * @param newSize 代入処理後のサイズ\r\n   * @param value 要素に代入する値\r\n   */\r\n  public assign(newSize: number, value: T): void {\r\n    const curSize = this._size;\r\n\r\n    if (curSize < newSize) {\r\n      this.prepareCapacity(newSize); // capacity更新\r\n    }\r\n\r\n    for (let i = 0; i < newSize; i++) {\r\n      this._ptr[i] = value;\r\n    }\r\n\r\n    this._size = newSize;\r\n  }\r\n\r\n  /**\r\n   * サイズ変更\r\n   */\r\n  public resize(newSize: number, value: T = null): void {\r\n    this.updateSize(newSize, value, true);\r\n  }\r\n\r\n  /**\r\n   * サイズ変更\r\n   */\r\n  public updateSize(\r\n    newSize: number,\r\n    value: any = null,\r\n    callPlacementNew = true\r\n  ): void {\r\n    const curSize: number = this._size;\r\n\r\n    if (curSize < newSize) {\r\n      this.prepareCapacity(newSize); // capacity更新\r\n\r\n      if (callPlacementNew) {\r\n        for (let i: number = this._size; i < newSize; i++) {\r\n          if (typeof value == 'function') {\r\n            // new\r\n            this._ptr[i] = JSON.parse(JSON.stringify(new value()));\r\n          } // プリミティブ型なので値渡し\r\n          else {\r\n            this._ptr[i] = value;\r\n          }\r\n        }\r\n      } else {\r\n        for (let i: number = this._size; i < newSize; i++) {\r\n          this._ptr[i] = value;\r\n        }\r\n      }\r\n    } else {\r\n      // newSize <= this._size\r\n      //---\r\n      const sub = this._size - newSize;\r\n      this._ptr.splice(this._size - sub, sub); // 不要なので破棄する\r\n    }\r\n    this._size = newSize;\r\n  }\r\n\r\n  /**\r\n   * コンテナにコンテナ要素を挿入する\r\n   * @param position 挿入する位置\r\n   * @param begin 挿入するコンテナの開始位置\r\n   * @param end 挿入するコンテナの終端位置\r\n   */\r\n  public insert(\r\n    position: iterator<T>,\r\n    begin: iterator<T>,\r\n    end: iterator<T>\r\n  ): void {\r\n    let dstSi: number = position._index;\r\n    const srcSi: number = begin._index;\r\n    const srcEi: number = end._index;\r\n\r\n    const addCount: number = srcEi - srcSi;\r\n\r\n    this.prepareCapacity(this._size + addCount);\r\n\r\n    // 挿入用の既存データをシフトして隙間を作る\r\n    const addSize = this._size - dstSi;\r\n    if (addSize > 0) {\r\n      for (let i = 0; i < addSize; i++) {\r\n        this._ptr.splice(dstSi + i, 0, null);\r\n      }\r\n    }\r\n\r\n    for (let i: number = srcSi; i < srcEi; i++, dstSi++) {\r\n      this._ptr[dstSi] = begin._vector._ptr[i];\r\n    }\r\n\r\n    this._size = this._size + addCount;\r\n  }\r\n\r\n  /**\r\n   * コンテナからインデックスで指定した要素を削除する\r\n   * @param index インデックス値\r\n   * @return true 削除実行\r\n   * @return false 削除範囲外\r\n   */\r\n  public remove(index: number): boolean {\r\n    if (index < 0 || this._size <= index) {\r\n      return false; // 削除範囲外\r\n    }\r\n\r\n    this._ptr.splice(index, 1);\r\n    --this._size;\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * コンテナから要素を削除して他の要素をシフトする\r\n   * @param ite 削除する要素\r\n   */\r\n  public erase(ite: iterator<T>): iterator<T> {\r\n    const index: number = ite._index;\r\n    if (index < 0 || this._size <= index) {\r\n      return ite; // 削除範囲外\r\n    }\r\n\r\n    // 削除\r\n    this._ptr.splice(index, 1);\r\n    --this._size;\r\n\r\n    const ite2: iterator<T> = new iterator<T>(this, index); // 終了\r\n    return ite2;\r\n  }\r\n\r\n  /**\r\n   * コンテナのキャパシティを確保する\r\n   * @param newSize 新たなキャパシティ。引数の値が現在のサイズ未満の場合は何もしない.\r\n   */\r\n  public prepareCapacity(newSize: number): void {\r\n    if (newSize > this._capacity) {\r\n      if (this._capacity == 0) {\r\n        this._ptr = new Array(newSize);\r\n        this._capacity = newSize;\r\n      } else {\r\n        this._ptr.length = newSize;\r\n        this._capacity = newSize;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コンテナの先頭要素を返す\r\n   */\r\n  public begin(): iterator<T> {\r\n    const ite: iterator<T> =\r\n      this._size == 0 ? this.end() : new iterator<T>(this, 0);\r\n    return ite;\r\n  }\r\n\r\n  /**\r\n   * コンテナの終端要素を返す\r\n   */\r\n  public end(): iterator<T> {\r\n    const ite: iterator<T> = new iterator<T>(this, this._size);\r\n    return ite;\r\n  }\r\n\r\n  public getOffset(offset: number): csmVector<T> {\r\n    const newVector = new csmVector<T>();\r\n    newVector._ptr = this.get(offset);\r\n    newVector._size = this.get(offset).length;\r\n    newVector._capacity = this.get(offset).length;\r\n\r\n    return newVector;\r\n  }\r\n\r\n  _ptr: T[]; // コンテナの先頭アドレス\r\n  _size: number; // コンテナの要素数\r\n  _capacity: number; // コンテナのキャパシティ\r\n\r\n  static readonly s_defaultSize = 10; // コンテナ初期化のデフォルトサイズ\r\n}\r\n\r\nexport class iterator<T> {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(v?: csmVector<T>, index?: number) {\r\n    this._vector = v != undefined ? v : null;\r\n    this._index = index != undefined ? index : 0;\r\n  }\r\n\r\n  /**\r\n   * 代入\r\n   */\r\n  public set(ite: iterator<T>): iterator<T> {\r\n    this._index = ite._index;\r\n    this._vector = ite._vector;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き++演算\r\n   */\r\n  public preIncrement(): iterator<T> {\r\n    ++this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 前置き--演算\r\n   */\r\n  public preDecrement(): iterator<T> {\r\n    --this._index;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 後置き++演算子\r\n   */\r\n  public increment(): iterator<T> {\r\n    const iteold = new iterator<T>(this._vector, this._index++); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * 後置き--演算子\r\n   */\r\n  public decrement(): iterator<T> {\r\n    const iteold = new iterator<T>(this._vector, this._index--); // 古い値を保存\r\n    return iteold;\r\n  }\r\n\r\n  /**\r\n   * ptr\r\n   */\r\n  public ptr(): T {\r\n    return this._vector._ptr[this._index];\r\n  }\r\n\r\n  /**\r\n   * =演算子のオーバーロード\r\n   */\r\n  public substitution(ite: iterator<T>): iterator<T> {\r\n    this._index = ite._index;\r\n    this._vector = ite._vector;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * !=演算子のオーバーロード\r\n   */\r\n  public notEqual(ite: iterator<T>): boolean {\r\n    return this._index != ite._index || this._vector != ite._vector;\r\n  }\r\n\r\n  _index: number; // コンテナのインデックス値\r\n  _vector: csmVector<T>; // コンテナ\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './csmvector';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const csmVector = $.csmVector;\r\n  export type csmVector<T> = $.csmVector<T>;\r\n  export const iterator = $.iterator;\r\n  export type iterator<T> = $.iterator<T>;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  CSM_LOG_LEVEL,\r\n  CSM_LOG_LEVEL_DEBUG,\r\n  CSM_LOG_LEVEL_ERROR,\r\n  CSM_LOG_LEVEL_INFO,\r\n  CSM_LOG_LEVEL_VERBOSE,\r\n  CSM_LOG_LEVEL_WARNING,\r\n} from '../cubismframeworkconfig';\r\nimport { CubismFramework, LogLevel } from '../live2dcubismframework';\r\n\r\nexport const CubismLogPrint = (level: LogLevel, fmt: string, args: any[]) => {\r\n  CubismDebug.print(level, '[CSM]' + fmt, args);\r\n};\r\n\r\nexport const CubismLogPrintIn = (level: LogLevel, fmt: string, args: any[]) => {\r\n  CubismLogPrint(level, fmt + '\\n', args);\r\n};\r\n\r\nexport const CSM_ASSERT = (expr: any) => {\r\n  console.assert(expr);\r\n};\r\n\r\nexport let CubismLogVerbose: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogDebug: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogInfo: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogWarning: (fmt: string, ...args: any[]) => void;\r\nexport let CubismLogError: (fmt: string, ...args: any[]) => void;\r\n\r\nif (CSM_LOG_LEVEL <= CSM_LOG_LEVEL_VERBOSE) {\r\n  CubismLogVerbose = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Verbose, '[V]' + fmt, args);\r\n  };\r\n\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_DEBUG) {\r\n  CubismLogDebug = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Debug, '[D]' + fmt, args);\r\n  };\r\n\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_INFO) {\r\n  CubismLogInfo = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Info, '[I]' + fmt, args);\r\n  };\r\n\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_WARNING) {\r\n  CubismLogWarning = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Warning, '[W]' + fmt, args);\r\n  };\r\n\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n} else if (CSM_LOG_LEVEL == CSM_LOG_LEVEL_ERROR) {\r\n  CubismLogError = (fmt: string, ...args: any[]) => {\r\n    CubismLogPrintIn(LogLevel.LogLevel_Error, '[E]' + fmt, args);\r\n  };\r\n}\r\n\r\n/**\r\n * デバッグ用のユーティリティクラス。\r\n * ログの出力、バイトのダンプなど\r\n */\r\nexport class CubismDebug {\r\n  /**\r\n   * ログを出力する。第一引数にログレベルを設定する。\r\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n   *\r\n   * @param logLevel ログレベルの設定\r\n   * @param format 書式付き文字列\r\n   * @param args 可変長引数\r\n   */\r\n  public static print(logLevel: LogLevel, format: string, args?: any[]): void {\r\n    // オプションで設定されたログ出力レベルを下回る場合はログに出さない\r\n    if (logLevel < CubismFramework.getLoggingLevel()) {\r\n      return;\r\n    }\r\n\r\n    const logPrint: Live2DCubismCore.csmLogFunction =\r\n      CubismFramework.coreLogFunction;\r\n\r\n    if (!logPrint) return;\r\n\r\n    const buffer: string = format.replace(/\\{(\\d+)\\}/g, (m, k) => {\r\n      return args[k];\r\n    });\r\n    logPrint(buffer);\r\n  }\r\n\r\n  /**\r\n   * データから指定した長さだけダンプ出力する。\r\n   * CubismFramework.initialize()時にオプションで設定されたログ出力レベルを下回る場合はログに出さない。\r\n   *\r\n   * @param logLevel ログレベルの設定\r\n   * @param data ダンプするデータ\r\n   * @param length ダンプする長さ\r\n   */\r\n  public static dumpBytes(\r\n    logLevel: LogLevel,\r\n    data: Uint8Array,\r\n    length: number\r\n  ): void {\r\n    for (let i = 0; i < length; i++) {\r\n      if (i % 16 == 0 && i > 0) this.print(logLevel, '\\n');\r\n      else if (i % 8 == 0 && i > 0) this.print(logLevel, '  ');\r\n      this.print(logLevel, '{0} ', [data[i] & 0xff]);\r\n    }\r\n\r\n    this.print(logLevel, '\\n');\r\n  }\r\n\r\n  /**\r\n   * private コンストラクタ\r\n   */\r\n  private constructor() {}\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismdebug';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismDebug = $.CubismDebug;\r\n  export type CubismDebug = $.CubismDebug;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport { strtod } from '../live2dcubismframework';\r\nimport { csmMap, iterator as csmMap_iterator } from '../type/csmmap';\r\nimport { csmString } from '../type/csmstring';\r\nimport { csmVector, iterator as csmVector_iterator } from '../type/csmvector';\r\nimport { CubismLogInfo } from './cubismdebug';\r\n\r\n// StaticInitializeNotForClientCall()で初期化する\r\nconst CSM_JSON_ERROR_TYPE_MISMATCH = 'Error: type mismatch';\r\nconst CSM_JSON_ERROR_INDEX_OF_BOUNDS = 'Error: index out of bounds';\r\n\r\n/**\r\n * パースしたJSONエレメントの要素の基底クラス。\r\n */\r\nexport abstract class Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {}\r\n\r\n  /**\r\n   * 要素を文字列型で返す(csmString型)\r\n   */\r\n  public abstract getString(defaultValue?: string, indent?: string): string;\r\n\r\n  /**\r\n   * 要素を文字列型で返す(string)\r\n   */\r\n  public getRawString(defaultValue?: string, indent?: string): string {\r\n    return this.getString(defaultValue, indent);\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toInt(defaultValue = 0): number {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toFloat(defaultValue = 0): number {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を真偽値で返す(boolean)\r\n   */\r\n  public toBoolean(defaultValue = false): boolean {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * サイズを返す\r\n   */\r\n  public getSize(): number {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * 要素を配列で返す(Value[])\r\n   */\r\n  public getArray(defaultValue: Value[] = null): Value[] {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素をコンテナで返す(array)\r\n   */\r\n  public getVector(defaultValue = new csmVector<Value>()): csmVector<Value> {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 要素をマップで返す(csmMap<csmString, Value>)\r\n   */\r\n  public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    return Value.nullValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * マップのキー一覧をコンテナで返す\r\n   *\r\n   * @return マップのキーの一覧\r\n   */\r\n  public getKeys(): csmVector<string> {\r\n    return Value.s_dummyKeys;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がエラー値ならtrue\r\n   */\r\n  public isError(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がnullならtrue\r\n   */\r\n  public isNull(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が真偽値ならtrue\r\n   */\r\n  public isBool(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が数値型ならtrue\r\n   */\r\n  public isFloat(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が文字列ならtrue\r\n   */\r\n  public isString(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が配列ならtrue\r\n   */\r\n  public isArray(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がマップ型ならtrue\r\n   */\r\n  public isMap(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue、静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueにエラー値をセットする\r\n   */\r\n  public setErrorNotForClientCall(errorStr: string): Value {\r\n    return JsonError.errorValue;\r\n  }\r\n\r\n  /**\r\n   * 初期化用メソッド\r\n   */\r\n  public static staticInitializeNotForClientCall(): void {\r\n    JsonBoolean.trueValue = new JsonBoolean(true);\r\n    JsonBoolean.falseValue = new JsonBoolean(false);\r\n    Value.errorValue = new JsonError('ERROR', true);\r\n    Value.nullValue = new JsonNullvalue();\r\n    Value.s_dummyKeys = new csmVector<string>();\r\n  }\r\n\r\n  /**\r\n   * リリース用メソッド\r\n   */\r\n  public static staticReleaseNotForClientCall(): void {\r\n    JsonBoolean.trueValue = null;\r\n    JsonBoolean.falseValue = null;\r\n    Value.errorValue = null;\r\n    Value.nullValue = null;\r\n    Value.s_dummyKeys = null;\r\n  }\r\n\r\n  protected _stringBuffer: string; // 文字列バッファ\r\n\r\n  private static s_dummyKeys: csmVector<string>; // ダミーキー\r\n\r\n  public static errorValue: Value; // 一時的な返り値として返すエラー。 CubismFramework::Disposeするまではdeleteしない\r\n  public static nullValue: Value; // 一時的な返り値として返すNULL。   CubismFramework::Disposeするまではdeleteしない\r\n}\r\n\r\n/**\r\n * Ascii文字のみ対応した最小限の軽量JSONパーサ。\r\n * 仕様はJSONのサブセットとなる。\r\n * 設定ファイル(model3.json)などのロード用\r\n *\r\n * [未対応項目]\r\n * ・日本語などの非ASCII文字\r\n * ・eによる指数表現\r\n */\r\nexport class CubismJson {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor(buffer?: ArrayBuffer, length?: number) {\r\n    this._error = null;\r\n    this._lineCount = 0;\r\n    this._root = null;\r\n\r\n    if (buffer != undefined) {\r\n      this.parseBytes(buffer, length, this._parseCallback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * バイトデータから直接ロードしてパースする\r\n   *\r\n   * @param buffer バッファ\r\n   * @param size バッファサイズ\r\n   * @return CubismJsonクラスのインスタンス。失敗したらNULL\r\n   */\r\n  public static create(buffer: ArrayBuffer, size: number) {\r\n    const json = new CubismJson();\r\n    const succeeded: boolean = json.parseBytes(\r\n      buffer,\r\n      size,\r\n      json._parseCallback\r\n    );\r\n\r\n    if (!succeeded) {\r\n      CubismJson.delete(json);\r\n      return null;\r\n    } else {\r\n      return json;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * パースしたJSONオブジェクトの解放処理\r\n   *\r\n   * @param instance CubismJsonクラスのインスタンス\r\n   */\r\n  public static delete(instance: CubismJson) {\r\n    instance = null;\r\n  }\r\n\r\n  /**\r\n   * パースしたJSONのルート要素を返す\r\n   */\r\n  public getRoot(): Value {\r\n    return this._root;\r\n  }\r\n\r\n  /**\r\n   *  UnicodeのバイナリをStringに変換\r\n   *\r\n   * @param buffer 変換するバイナリデータ\r\n   * @return 変換後の文字列\r\n   */\r\n  public static arrayBufferToString(buffer: ArrayBuffer): string {\r\n    const uint8Array: Uint8Array = new Uint8Array(buffer);\r\n    let str = '';\r\n\r\n    for (let i = 0, len: number = uint8Array.length; i < len; ++i) {\r\n      str += '%' + this.pad(uint8Array[i].toString(16));\r\n    }\r\n\r\n    str = decodeURIComponent(str);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * エンコード、パディング\r\n   */\r\n  private static pad(n: string): string {\r\n    return n.length < 2 ? '0' + n : n;\r\n  }\r\n\r\n  /**\r\n   * JSONのパースを実行する\r\n   * @param buffer    パース対象のデータバイト\r\n   * @param size      データバイトのサイズ\r\n   * return true : 成功\r\n   * return false: 失敗\r\n   */\r\n  public parseBytes(\r\n    buffer: ArrayBuffer,\r\n    size: number,\r\n    parseCallback?: parseJsonObject\r\n  ): boolean {\r\n    const endPos: number[] = new Array<number>(1); // 参照渡しにするため配列\r\n    const decodeBuffer: string = CubismJson.arrayBufferToString(buffer);\r\n\r\n    if (parseCallback == undefined) {\r\n      this._root = this.parseValue(decodeBuffer, size, 0, endPos);\r\n    } else {\r\n      // TypeScript標準のJSONパーサを使う\r\n      this._root = parseCallback(JSON.parse(decodeBuffer), new JsonMap());\r\n    }\r\n\r\n    if (this._error) {\r\n      let strbuf = '\\0';\r\n      strbuf = 'Json parse error : @line ' + (this._lineCount + 1) + '\\n';\r\n      this._root = new JsonString(strbuf);\r\n\r\n      CubismLogInfo('{0}', this._root.getRawString());\r\n      return false;\r\n    } else if (this._root == null) {\r\n      this._root = new JsonError(new csmString(this._error), false); // rootは解放されるのでエラーオブジェクトを別途作成する\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * パース時のエラー値を返す\r\n   */\r\n  public getParseError(): string {\r\n    return this._error;\r\n  }\r\n\r\n  /**\r\n   * ルート要素の次の要素がファイルの終端だったらtrueを返す\r\n   */\r\n  public checkEndOfFile(): boolean {\r\n    return this._root.getArray()[1].equals('EOF');\r\n  }\r\n\r\n  /**\r\n   * JSONエレメントからValue(float,String,Value*,Array,null,true,false)をパースする\r\n   * エレメントの書式に応じて内部でParseString(), ParseObject(), ParseArray()を呼ぶ\r\n   *\r\n   * @param   buffer      JSONエレメントのバッファ\r\n   * @param   length      パースする長さ\r\n   * @param   begin       パースを開始する位置\r\n   * @param   outEndPos   パース終了時の位置\r\n   * @return      パースから取得したValueオブジェクト\r\n   */\r\n  protected parseValue(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ) {\r\n    if (this._error) return null;\r\n\r\n    let o: Value = null;\r\n    let i: number = begin;\r\n    let f: number;\r\n\r\n    for (; i < length; i++) {\r\n      const c: string = buffer[i];\r\n      switch (c) {\r\n        case '-':\r\n        case '.':\r\n        case '0':\r\n        case '1':\r\n        case '2':\r\n        case '3':\r\n        case '4':\r\n        case '5':\r\n        case '6':\r\n        case '7':\r\n        case '8':\r\n        case '9': {\r\n          const afterString: string[] = new Array(1); // 参照渡しにするため\r\n          f = strtod(buffer.slice(i), afterString);\r\n          outEndPos[0] = buffer.indexOf(afterString[0]);\r\n          return new JsonFloat(f);\r\n        }\r\n        case '\"':\r\n          return new JsonString(\r\n            this.parseString(buffer, length, i + 1, outEndPos)\r\n          ); // \\\"の次の文字から\r\n        case '[':\r\n          o = this.parseArray(buffer, length, i + 1, outEndPos);\r\n          return o;\r\n        case '{':\r\n          o = this.parseObject(buffer, length, i + 1, outEndPos);\r\n          return o;\r\n        case 'n': // null以外にない\r\n          if (i + 3 < length) {\r\n            o = new JsonNullvalue(); // 解放できるようにする\r\n            outEndPos[0] = i + 4;\r\n          } else {\r\n            this._error = 'parse null';\r\n          }\r\n          return o;\r\n        case 't': // true以外にない\r\n          if (i + 3 < length) {\r\n            o = JsonBoolean.trueValue;\r\n            outEndPos[0] = i + 4;\r\n          } else {\r\n            this._error = 'parse true';\r\n          }\r\n          return o;\r\n        case 'f': // false以外にない\r\n          if (i + 4 < length) {\r\n            o = JsonBoolean.falseValue;\r\n            outEndPos[0] = i + 5;\r\n          } else {\r\n            this._error = \"illegal ',' position\";\r\n          }\r\n          return o;\r\n        case ',': // Array separator\r\n          this._error = \"illegal ',' position\";\r\n          return null;\r\n        case ']': // 不正な｝だがスキップする。配列の最後に不要な , があると思われる\r\n          outEndPos[0] = i; // 同じ文字を再処理\r\n          return null;\r\n        case '\\n':\r\n          this._lineCount++;\r\n        case ' ':\r\n        case '\\t':\r\n        case '\\r':\r\n        default:\r\n          // スキップ\r\n          break;\r\n      }\r\n    }\r\n\r\n    this._error = 'illegal end of value';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 次の「\"」までの文字列をパースする。\r\n   *\r\n   * @param   string  ->  パース対象の文字列\r\n   * @param   length  ->  パースする長さ\r\n   * @param   begin   ->  パースを開始する位置\r\n   * @param  outEndPos   ->  パース終了時の位置\r\n   * @return      パースした文F字列要素\r\n   */\r\n  protected parseString(\r\n    string: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): string {\r\n    if (this._error) return null;\r\n\r\n    let i = begin;\r\n    let c: string, c2: string;\r\n    const ret: csmString = new csmString('');\r\n    let bufStart: number = begin; // sbufに登録されていない文字の開始位置\r\n\r\n    for (; i < length; i++) {\r\n      c = string[i];\r\n\r\n      switch (c) {\r\n        case '\"': {\r\n          // 終端の”、エスケープ文字は別に処理されるのでここに来ない\r\n          outEndPos[0] = i + 1; // ”の次の文字\r\n          ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\r\n          return ret.s;\r\n        }\r\n        case '//': {\r\n          // エスケープの場合\r\n          i++; // ２文字をセットで扱う\r\n\r\n          if (i - 1 > bufStart) {\r\n            ret.append(string.slice(bufStart), i - bufStart); // 前の文字までを登録する\r\n          }\r\n          bufStart = i + 1; // エスケープ（２文字)の次の文字から\r\n\r\n          if (i < length) {\r\n            c2 = string[i];\r\n\r\n            switch (c2) {\r\n              case '\\\\':\r\n                ret.expansion(1, '\\\\');\r\n                break;\r\n              case '\"':\r\n                ret.expansion(1, '\"');\r\n                break;\r\n              case '/':\r\n                ret.expansion(1, '/');\r\n                break;\r\n              case 'b':\r\n                ret.expansion(1, '\\b');\r\n                break;\r\n              case 'f':\r\n                ret.expansion(1, '\\f');\r\n                break;\r\n              case 'n':\r\n                ret.expansion(1, '\\n');\r\n                break;\r\n              case 'r':\r\n                ret.expansion(1, '\\r');\r\n                break;\r\n              case 't':\r\n                ret.expansion(1, '\\t');\r\n                break;\r\n              case 'u':\r\n                this._error = 'parse string/unicord escape not supported';\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          } else {\r\n            this._error = 'parse string/escape error';\r\n          }\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this._error = 'parse string/illegal end';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * JSONのオブジェクトエレメントをパースしてValueオブジェクトを返す\r\n   *\r\n   * @param buffer    JSONエレメントのバッファ\r\n   * @param length    パースする長さ\r\n   * @param begin     パースを開始する位置\r\n   * @param outEndPos パース終了時の位置\r\n   * @return パースから取得したValueオブジェクト\r\n   */\r\n  protected parseObject(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): Value {\r\n    if (this._error) return null;\r\n    const ret: JsonMap = new JsonMap();\r\n\r\n    // Key: Value\r\n    let key = '';\r\n    let i: number = begin;\r\n    let c = '';\r\n    const localRetEndPos2: number[] = Array(1);\r\n    let ok = false;\r\n\r\n    // , が続く限りループ\r\n    for (; i < length; i++) {\r\n      FOR_LOOP: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case '\"':\r\n            key = this.parseString(buffer, length, i + 1, localRetEndPos2);\r\n            if (this._error) {\r\n              return null;\r\n            }\r\n\r\n            i = localRetEndPos2[0];\r\n            ok = true;\r\n            break FOR_LOOP; //-- loopから出る\r\n          case '}': // 閉じカッコ\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 空\r\n          case ':':\r\n            this._error = \"illegal ':' position\";\r\n            break;\r\n          case '\\n':\r\n            this._lineCount++;\r\n          default:\r\n            break; // スキップする文字\r\n        }\r\n      }\r\n      if (!ok) {\r\n        this._error = 'key not found';\r\n        return null;\r\n      }\r\n\r\n      ok = false;\r\n\r\n      // : をチェック\r\n      FOR_LOOP2: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ':':\r\n            ok = true;\r\n            i++;\r\n            break FOR_LOOP2;\r\n          case '}':\r\n            this._error = \"illegal '}' position\";\r\n            break;\r\n          case '\\n':\r\n            this._lineCount++;\r\n          // case ' ': case '\\t' : case '\\r':\r\n          default:\r\n            break; // スキップする文字\r\n        }\r\n      }\r\n\r\n      if (!ok) {\r\n        this._error = \"':' not found\";\r\n        return null;\r\n      }\r\n\r\n      // 値をチェック\r\n      const value: Value = this.parseValue(buffer, length, i, localRetEndPos2);\r\n      if (this._error) {\r\n        return null;\r\n      }\r\n\r\n      i = localRetEndPos2[0];\r\n\r\n      // ret.put(key, value);\r\n      ret.put(key, value);\r\n\r\n      FOR_LOOP3: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ',':\r\n            break FOR_LOOP3;\r\n          case '}':\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 正常終了\r\n          case '\\n':\r\n            this._lineCount++;\r\n          default:\r\n            break; // スキップ\r\n        }\r\n      }\r\n    }\r\n\r\n    this._error = 'illegal end of perseObject';\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 次の「\"」までの文字列をパースする。\r\n   * @param buffer    JSONエレメントのバッファ\r\n   * @param length    パースする長さ\r\n   * @param begin     パースを開始する位置\r\n   * @param outEndPos パース終了時の位置\r\n   * @return パースから取得したValueオブジェクト\r\n   */\r\n  protected parseArray(\r\n    buffer: string,\r\n    length: number,\r\n    begin: number,\r\n    outEndPos: number[]\r\n  ): Value {\r\n    if (this._error) return null;\r\n    let ret: JsonArray = new JsonArray();\r\n\r\n    // key : value\r\n    let i: number = begin;\r\n    let c: string;\r\n    const localRetEndpos2: number[] = new Array(1);\r\n\r\n    // , が続く限りループ\r\n    for (; i < length; i++) {\r\n      // : をチェック\r\n      const value: Value = this.parseValue(buffer, length, i, localRetEndpos2);\r\n\r\n      if (this._error) {\r\n        return null;\r\n      }\r\n      i = localRetEndpos2[0];\r\n\r\n      if (value) {\r\n        ret.add(value);\r\n      }\r\n\r\n      // FOR_LOOP3:\r\n      // boolean breakflag = false;\r\n      FOR_LOOP: for (; i < length; i++) {\r\n        c = buffer[i];\r\n\r\n        switch (c) {\r\n          case ',':\r\n            // breakflag = true;\r\n            // break; // 次のKEY, VAlUEへ\r\n            break FOR_LOOP;\r\n          case ']':\r\n            outEndPos[0] = i + 1;\r\n            return ret; // 終了\r\n          case '\\n':\r\n            ++this._lineCount;\r\n          //case ' ': case '\\t': case '\\r':\r\n          default:\r\n            break; // スキップ\r\n        }\r\n      }\r\n    }\r\n\r\n    ret = void 0;\r\n    this._error = 'illegal end of parseObject';\r\n    return null;\r\n  }\r\n\r\n  _parseCallback: parseJsonObject = CubismJsonExtension.parseJsonObject; // パース時に使う処理のコールバック関数\r\n\r\n  _error: string; // パース時のエラー\r\n  _lineCount: number; // エラー報告に用いる行数カウント\r\n  _root: Value; // パースされたルート要素\r\n}\r\n\r\ninterface parseJsonObject {\r\n  (obj: Value, map: JsonMap): JsonMap;\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をfloat値として扱う\r\n */\r\nexport class JsonFloat extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(v: number) {\r\n    super();\r\n\r\n    this._value = v;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が数値型ならtrue\r\n   */\r\n  public isFloat(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    const strbuf = '\\0';\r\n    this._value = parseFloat(strbuf);\r\n    this._stringBuffer = strbuf;\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toInt(defaultValue = 0): number {\r\n    return parseInt(this._value.toString());\r\n  }\r\n\r\n  /**\r\n   * 要素を数値型で返す(number)\r\n   */\r\n  public toFloat(defaultValue = 0.0): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('number' === typeof value) {\r\n      // int\r\n      if (Math.round(value)) {\r\n        return false;\r\n      }\r\n      // float\r\n      else {\r\n        return value == this._value;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private _value: number; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を真偽値として扱う\r\n */\r\nexport class JsonBoolean extends Value {\r\n  /**\r\n   * Valueの種類が真偽値ならtrue\r\n   */\r\n  public isBool(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を真偽値で返す(boolean)\r\n   */\r\n  public toBoolean(defaultValue = false): boolean {\r\n    return this._boolValue;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    this._stringBuffer = this._boolValue ? 'true' : 'false';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('boolean' === typeof value) {\r\n      return value == this._boolValue;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue, 静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(v: boolean) {\r\n    super();\r\n\r\n    this._boolValue = v;\r\n  }\r\n\r\n  static trueValue: JsonBoolean; // true\r\n  static falseValue: JsonBoolean; // false\r\n\r\n  private _boolValue: boolean; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を文字列として扱う\r\n */\r\nexport class JsonString extends Value {\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: string);\r\n  public constructor(s: csmString);\r\n  public constructor(s: any) {\r\n    super();\r\n\r\n    if ('string' === typeof s) {\r\n      this._stringBuffer = s;\r\n    }\r\n\r\n    if (s instanceof csmString) {\r\n      this._stringBuffer = s.s;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が文字列ならtrue\r\n   */\r\n  public isString(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 引数の値と等しければtrue\r\n   */\r\n  public equals(value: csmString): boolean;\r\n  public equals(value: string): boolean;\r\n  public equals(value: number): boolean;\r\n  public equals(value: boolean): boolean;\r\n  public equals(value: any): boolean {\r\n    if ('string' === typeof value) {\r\n      return this._stringBuffer == value;\r\n    }\r\n\r\n    if (value instanceof csmString) {\r\n      return this._stringBuffer == value.s;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * JSONパース時のエラー結果。文字列型のようにふるまう\r\n */\r\nexport class JsonError extends JsonString {\r\n  /**\r\n   * Valueの値が静的ならtrue、静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return this._isStatic;\r\n  }\r\n\r\n  /**\r\n   * エラー情報をセットする\r\n   */\r\n  public setErrorNotForClientCall(s: string): Value {\r\n    this._stringBuffer = s;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 引数付きコンストラクタ\r\n   */\r\n  public constructor(s: csmString | string, isStatic: boolean) {\r\n    if ('string' === typeof s) {\r\n      super(s);\r\n    } else {\r\n      super(s);\r\n    }\r\n    this._isStatic = isStatic;\r\n  }\r\n\r\n  /**\r\n   * Valueの種類がエラー値ならtrue\r\n   */\r\n  public isError(): boolean {\r\n    return true;\r\n  }\r\n\r\n  protected _isStatic: boolean; // 静的なValueかどうか\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をNULL値として持つ\r\n */\r\nexport class JsonNullvalue extends Value {\r\n  /**\r\n   * Valueの種類がNULL値ならtrue\r\n   */\r\n  public isNull(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * Valueの値が静的ならtrue, 静的なら解放しない\r\n   */\r\n  public isStatic(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Valueにエラー値をセットする\r\n   */\r\n  public setErrorNotForClientCall(s: string): Value {\r\n    this._stringBuffer = s;\r\n    return JsonError.nullValue;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n\r\n    this._stringBuffer = 'NullValue';\r\n  }\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素を配列として持つ\r\n */\r\nexport class JsonArray extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._array = new csmVector<Value>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    for (\r\n      let ite: csmVector_iterator<Value> = this._array.begin();\r\n      ite.notEqual(this._array.end());\r\n      ite.preIncrement()\r\n    ) {\r\n      let v: Value = ite.ptr();\r\n\r\n      if (v && !v.isStatic()) {\r\n        v = void 0;\r\n        v = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの種類が配列ならtrue\r\n   */\r\n  public isArray(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    if (index < 0 || this._array.getSize() <= index) {\r\n      return Value.errorValue.setErrorNotForClientCall(\r\n        CSM_JSON_ERROR_INDEX_OF_BOUNDS\r\n      );\r\n    }\r\n\r\n    const v: Value = this._array.at(index);\r\n\r\n    if (v == null) {\r\n      return Value.nullValue;\r\n    }\r\n\r\n    return v;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string): string {\r\n    const stringBuffer: string = indent + '[\\n';\r\n\r\n    for (\r\n      let ite: csmVector_iterator<Value> = this._array.begin();\r\n      ite.notEqual(this._array.end());\r\n      ite.increment()\r\n    ) {\r\n      const v: Value = ite.ptr();\r\n      this._stringBuffer += indent + '' + v.getString(indent + ' ') + '\\n';\r\n    }\r\n\r\n    this._stringBuffer = stringBuffer + indent + ']\\n';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 配列要素を追加する\r\n   * @param v 追加する要素\r\n   */\r\n  public add(v: Value): void {\r\n    this._array.pushBack(v);\r\n  }\r\n\r\n  /**\r\n   * 要素をコンテナで返す(csmVector<Value>)\r\n   */\r\n  public getVector(defaultValue: csmVector<Value> = null): csmVector<Value> {\r\n    return this._array;\r\n  }\r\n\r\n  /**\r\n   * 要素の数を返す\r\n   */\r\n  public getSize(): number {\r\n    return this._array.getSize();\r\n  }\r\n\r\n  private _array: csmVector<Value>; // JSON要素の値\r\n}\r\n\r\n/**\r\n * パースしたJSONの要素をマップとして持つ\r\n */\r\nexport class JsonMap extends Value {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  public constructor() {\r\n    super();\r\n    this._map = new csmMap<string, Value>();\r\n  }\r\n\r\n  /**\r\n   * デストラクタ相当の処理\r\n   */\r\n  public release(): void {\r\n    const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n\r\n    while (ite.notEqual(this._map.end())) {\r\n      let v: Value = ite.ptr().second;\r\n\r\n      if (v && !v.isStatic()) {\r\n        v = void 0;\r\n        v = null;\r\n      }\r\n\r\n      ite.preIncrement();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valueの値がMap型ならtrue\r\n   */\r\n  public isMap(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[string | csmString]\r\n   */\r\n  public getValueByString(s: string | csmString): Value {\r\n    if (s instanceof csmString) {\r\n      const ret: Value = this._map.getValue(s.s);\r\n      if (ret == null) {\r\n        return Value.nullValue;\r\n      }\r\n      return ret;\r\n    }\r\n\r\n    for (\r\n      let iter: csmMap_iterator<string, Value> = this._map.begin();\r\n      iter.notEqual(this._map.end());\r\n      iter.preIncrement()\r\n    ) {\r\n      if (iter.ptr().first == s) {\r\n        if (iter.ptr().second == null) {\r\n          return Value.nullValue;\r\n        }\r\n        return iter.ptr().second;\r\n      }\r\n    }\r\n\r\n    return Value.nullValue;\r\n  }\r\n\r\n  /**\r\n   * 添字演算子[index]\r\n   */\r\n  public getValueByIndex(index: number): Value {\r\n    return Value.errorValue.setErrorNotForClientCall(\r\n      CSM_JSON_ERROR_TYPE_MISMATCH\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 要素を文字列で返す(csmString型)\r\n   */\r\n  public getString(defaultValue: string, indent: string) {\r\n    this._stringBuffer = indent + '{\\n';\r\n\r\n    const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n    while (ite.notEqual(this._map.end())) {\r\n      const key = ite.ptr().first;\r\n      const v: Value = ite.ptr().second;\r\n\r\n      this._stringBuffer +=\r\n        indent + ' ' + key + ' : ' + v.getString(indent + '   ') + ' \\n';\r\n      ite.preIncrement();\r\n    }\r\n\r\n    this._stringBuffer += indent + '}\\n';\r\n\r\n    return this._stringBuffer;\r\n  }\r\n\r\n  /**\r\n   * 要素をMap型で返す\r\n   */\r\n  public getMap(defaultValue?: csmMap<string, Value>): csmMap<string, Value> {\r\n    return this._map;\r\n  }\r\n\r\n  /**\r\n   * Mapに要素を追加する\r\n   */\r\n  public put(key: string, v: Value): void {\r\n    this._map.setValue(key, v);\r\n  }\r\n\r\n  /**\r\n   * Mapからキーのリストを取得する\r\n   */\r\n  public getKeys(): csmVector<string> {\r\n    if (!this._keys) {\r\n      this._keys = new csmVector<string>();\r\n\r\n      const ite: csmMap_iterator<string, Value> = this._map.begin();\r\n\r\n      while (ite.notEqual(this._map.end())) {\r\n        const key: string = ite.ptr().first;\r\n        this._keys.pushBack(key);\r\n        ite.preIncrement();\r\n      }\r\n    }\r\n    return this._keys;\r\n  }\r\n\r\n  /**\r\n   * Mapの要素数を取得する\r\n   */\r\n  public getSize(): number {\r\n    return this._keys.getSize();\r\n  }\r\n\r\n  private _map: csmMap<string, Value>; // JSON要素の値\r\n  private _keys: csmVector<string>; // JSON要素の値\r\n}\r\n\r\n// Namespace definition for compatibility.\r\nimport * as $ from './cubismjson';\r\nimport { CubismJsonExtension } from './cubismjsonextension';\r\n// eslint-disable-next-line @typescript-eslint/no-namespace\r\nexport namespace Live2DCubismFramework {\r\n  export const CubismJson = $.CubismJson;\r\n  export type CubismJson = $.CubismJson;\r\n  export const JsonArray = $.JsonArray;\r\n  export type JsonArray = $.JsonArray;\r\n  export const JsonBoolean = $.JsonBoolean;\r\n  export type JsonBoolean = $.JsonBoolean;\r\n  export const JsonError = $.JsonError;\r\n  export type JsonError = $.JsonError;\r\n  export const JsonFloat = $.JsonFloat;\r\n  export type JsonFloat = $.JsonFloat;\r\n  export const JsonMap = $.JsonMap;\r\n  export type JsonMap = $.JsonMap;\r\n  export const JsonNullvalue = $.JsonNullvalue;\r\n  export type JsonNullvalue = $.JsonNullvalue;\r\n  export const JsonString = $.JsonString;\r\n  export type JsonString = $.JsonString;\r\n  export const Value = $.Value;\r\n  export type Value = $.Value;\r\n}\r\n","/**\r\n * Copyright(c) Live2D Inc. All rights reserved.\r\n *\r\n * Use of this source code is governed by the Live2D Open Software license\r\n * that can be found at https://www.live2d.com/eula/live2d-open-software-license-agreement_en.html.\r\n */\r\n\r\nimport {\r\n  JsonArray,\r\n  JsonBoolean,\r\n  JsonFloat,\r\n  JsonMap,\r\n  JsonNullvalue,\r\n  JsonString,\r\n  Value,\r\n} from './cubismjson';\r\n\r\n/**\r\n * CubismJsonで実装されているJsonパーサを使用せず、\r\n * TypeScript標準のJsonパーサなどを使用し出力された結果を\r\n * Cubism SDKで定義されているJSONエレメントの要素に\r\n * 置き換える処理をするクラス。\r\n */\r\nexport class CubismJsonExtension {\r\n  static parseJsonObject(obj: Value, map: JsonMap) {\r\n    Object.keys(obj).forEach((key) => {\r\n      if (typeof obj[key] == 'boolean') {\r\n        map.put(key, new JsonBoolean(obj[key]));\r\n      } else if (typeof obj[key] == 'string') {\r\n        map.put(key, new JsonString(obj[key]));\r\n      } else if (typeof obj[key] == 'number') {\r\n        map.put(key, new JsonFloat(obj[key]));\r\n      } else if (obj[key] instanceof Array) {\r\n        map.put(key, CubismJsonExtension.parseJsonArray(obj[key]));\r\n      } else if (obj[key] instanceof Object) {\r\n        map.put(\r\n          key,\r\n          CubismJsonExtension.parseJsonObject(obj[key], new JsonMap())\r\n        );\r\n      } else if (obj[key] == null) {\r\n        map.put(key, new JsonNullvalue());\r\n      } else {\r\n        // どれにも当てはまらない場合でも処理する\r\n        map.put(key, obj[key]);\r\n      }\r\n    });\r\n    return map;\r\n  }\r\n\r\n  protected static parseJsonArray(obj: Value) {\r\n    const arr = new JsonArray();\r\n    Object.keys(obj).forEach((key) => {\r\n      const convKey = Number(key);\r\n      if (typeof convKey == 'number') {\r\n        if (typeof obj[convKey] == 'boolean') {\r\n          arr.add(new JsonBoolean(obj[convKey]));\r\n        } else if (typeof obj[convKey] == 'string') {\r\n          arr.add(new JsonString(obj[convKey]));\r\n        } else if (typeof obj[convKey] == 'number') {\r\n          arr.add(new JsonFloat(obj[convKey]));\r\n        } else if (obj[key] instanceof Array) {\r\n          arr.add(this.parseJsonArray(obj[key]));\r\n        } else if (obj[key] instanceof Object) {\r\n          arr.add(this.parseJsonObject(obj[key], new JsonMap()));\r\n        } else if (obj[key] == null) {\r\n          arr.add(new JsonNullvalue());\r\n        } else {\r\n          // どれにも当てはまらない場合でも処理する\r\n          arr.add(obj[key]);\r\n        }\r\n      } else if (obj[key] instanceof Array) {\r\n        arr.add(this.parseJsonArray(obj[key]));\r\n      } else if (obj[key] instanceof Object) {\r\n        arr.add(this.parseJsonObject(obj[key], new JsonMap()));\r\n      } else if (obj[key] == null) {\r\n        arr.add(new JsonNullvalue());\r\n      } else {\r\n        // 配列ともObjectとも判定できなかった場合でも処理する\r\n        for (let i = 0; i < obj[key].length; i++) {\r\n          arr.add(obj[key][i]);\r\n        }\r\n      }\r\n    });\r\n    return arr;\r\n  }\r\n}\r\n","module.exports = moment;","/*\n * Dexie.js - a minimalistic wrapper for IndexedDB\n * ===============================================\n *\n * By David Fahlander, david.fahlander@gmail.com\n *\n * Version 3.2.2, Wed Apr 27 2022\n *\n * https://dexie.org\n *\n * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/\n */\n \nconst _global = typeof globalThis !== 'undefined' ? globalThis :\n    typeof self !== 'undefined' ? self :\n        typeof window !== 'undefined' ? window :\n            global;\n\nconst keys = Object.keys;\nconst isArray = Array.isArray;\nif (typeof Promise !== 'undefined' && !_global.Promise) {\n    _global.Promise = Promise;\n}\nfunction extend(obj, extension) {\n    if (typeof extension !== 'object')\n        return obj;\n    keys(extension).forEach(function (key) {\n        obj[key] = extension[key];\n    });\n    return obj;\n}\nconst getProto = Object.getPrototypeOf;\nconst _hasOwn = {}.hasOwnProperty;\nfunction hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nfunction props(proto, extension) {\n    if (typeof extension === 'function')\n        extension = extension(getProto(proto));\n    (typeof Reflect === \"undefined\" ? keys : Reflect.ownKeys)(extension).forEach(key => {\n        setProp(proto, key, extension[key]);\n    });\n}\nconst defineProperty = Object.defineProperty;\nfunction setProp(obj, prop, functionOrGetSet, options) {\n    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, \"get\") && typeof functionOrGetSet.get === 'function' ?\n        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :\n        { value: functionOrGetSet, configurable: true, writable: true }, options));\n}\nfunction derive(Child) {\n    return {\n        from: function (Parent) {\n            Child.prototype = Object.create(Parent.prototype);\n            setProp(Child.prototype, \"constructor\", Child);\n            return {\n                extend: props.bind(null, Child.prototype)\n            };\n        }\n    };\n}\nconst getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nfunction getPropertyDescriptor(obj, prop) {\n    const pd = getOwnPropertyDescriptor(obj, prop);\n    let proto;\n    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);\n}\nconst _slice = [].slice;\nfunction slice(args, start, end) {\n    return _slice.call(args, start, end);\n}\nfunction override(origFunc, overridedFactory) {\n    return overridedFactory(origFunc);\n}\nfunction assert(b) {\n    if (!b)\n        throw new Error(\"Assertion Failed\");\n}\nfunction asap$1(fn) {\n    if (_global.setImmediate)\n        setImmediate(fn);\n    else\n        setTimeout(fn, 0);\n}\nfunction arrayToObject(array, extractor) {\n    return array.reduce((result, item, i) => {\n        var nameAndValue = extractor(item, i);\n        if (nameAndValue)\n            result[nameAndValue[0]] = nameAndValue[1];\n        return result;\n    }, {});\n}\nfunction tryCatch(fn, onerror, args) {\n    try {\n        fn.apply(null, args);\n    }\n    catch (ex) {\n        onerror && onerror(ex);\n    }\n}\nfunction getByKeyPath(obj, keyPath) {\n    if (hasOwn(obj, keyPath))\n        return obj[keyPath];\n    if (!keyPath)\n        return obj;\n    if (typeof keyPath !== 'string') {\n        var rv = [];\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            var val = getByKeyPath(obj, keyPath[i]);\n            rv.push(val);\n        }\n        return rv;\n    }\n    var period = keyPath.indexOf('.');\n    if (period !== -1) {\n        var innerObj = obj[keyPath.substr(0, period)];\n        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));\n    }\n    return undefined;\n}\nfunction setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === \"\")\n                if (value === undefined) {\n                    if (isArray(obj) && !isNaN(parseInt(currentKeyPath)))\n                        obj.splice(currentKeyPath, 1);\n                    else\n                        delete obj[currentKeyPath];\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                var innerObj = obj[currentKeyPath];\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (isArray(obj) && !isNaN(parseInt(keyPath)))\n                    obj.splice(keyPath, 1);\n                else\n                    delete obj[keyPath];\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nfunction delByKeyPath(obj, keyPath) {\n    if (typeof keyPath === 'string')\n        setByKeyPath(obj, keyPath, undefined);\n    else if ('length' in keyPath)\n        [].map.call(keyPath, function (kp) {\n            setByKeyPath(obj, kp, undefined);\n        });\n}\nfunction shallowClone(obj) {\n    var rv = {};\n    for (var m in obj) {\n        if (hasOwn(obj, m))\n            rv[m] = obj[m];\n    }\n    return rv;\n}\nconst concat = [].concat;\nfunction flatten(a) {\n    return concat.apply([], a);\n}\nconst intrinsicTypeNames = \"Boolean,String,Date,RegExp,Blob,File,FileList,FileSystemFileHandle,ArrayBuffer,DataView,Uint8ClampedArray,ImageBitmap,ImageData,Map,Set,CryptoKey\"\n    .split(',').concat(flatten([8, 16, 32, 64].map(num => [\"Int\", \"Uint\", \"Float\"].map(t => t + num + \"Array\")))).filter(t => _global[t]);\nconst intrinsicTypes = intrinsicTypeNames.map(t => _global[t]);\narrayToObject(intrinsicTypeNames, x => [x, true]);\nlet circularRefs = null;\nfunction deepClone(any) {\n    circularRefs = typeof WeakMap !== 'undefined' && new WeakMap();\n    const rv = innerDeepClone(any);\n    circularRefs = null;\n    return rv;\n}\nfunction innerDeepClone(any) {\n    if (!any || typeof any !== 'object')\n        return any;\n    let rv = circularRefs && circularRefs.get(any);\n    if (rv)\n        return rv;\n    if (isArray(any)) {\n        rv = [];\n        circularRefs && circularRefs.set(any, rv);\n        for (var i = 0, l = any.length; i < l; ++i) {\n            rv.push(innerDeepClone(any[i]));\n        }\n    }\n    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {\n        rv = any;\n    }\n    else {\n        const proto = getProto(any);\n        rv = proto === Object.prototype ? {} : Object.create(proto);\n        circularRefs && circularRefs.set(any, rv);\n        for (var prop in any) {\n            if (hasOwn(any, prop)) {\n                rv[prop] = innerDeepClone(any[prop]);\n            }\n        }\n    }\n    return rv;\n}\nconst { toString } = {};\nfunction toStringTag(o) {\n    return toString.call(o).slice(8, -1);\n}\nconst iteratorSymbol = typeof Symbol !== 'undefined' ?\n    Symbol.iterator :\n    '@@iterator';\nconst getIteratorOf = typeof iteratorSymbol === \"symbol\" ? function (x) {\n    var i;\n    return x != null && (i = x[iteratorSymbol]) && i.apply(x);\n} : function () { return null; };\nconst NO_CHAR_ARRAY = {};\nfunction getArrayOf(arrayLike) {\n    var i, a, x, it;\n    if (arguments.length === 1) {\n        if (isArray(arrayLike))\n            return arrayLike.slice();\n        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')\n            return [arrayLike];\n        if ((it = getIteratorOf(arrayLike))) {\n            a = [];\n            while ((x = it.next()), !x.done)\n                a.push(x.value);\n            return a;\n        }\n        if (arrayLike == null)\n            return [arrayLike];\n        i = arrayLike.length;\n        if (typeof i === 'number') {\n            a = new Array(i);\n            while (i--)\n                a[i] = arrayLike[i];\n            return a;\n        }\n        return [arrayLike];\n    }\n    i = arguments.length;\n    a = new Array(i);\n    while (i--)\n        a[i] = arguments[i];\n    return a;\n}\nconst isAsyncFunction = typeof Symbol !== 'undefined'\n    ? (fn) => fn[Symbol.toStringTag] === 'AsyncFunction'\n    : () => false;\n\nvar debug = typeof location !== 'undefined' &&\n    /^(http|https):\\/\\/(localhost|127\\.0\\.0\\.1)/.test(location.href);\nfunction setDebug(value, filter) {\n    debug = value;\n    libraryFilter = filter;\n}\nvar libraryFilter = () => true;\nconst NEEDS_THROW_FOR_STACK = !new Error(\"\").stack;\nfunction getErrorWithStack() {\n    if (NEEDS_THROW_FOR_STACK)\n        try {\n            getErrorWithStack.arguments;\n            throw new Error();\n        }\n        catch (e) {\n            return e;\n        }\n    return new Error();\n}\nfunction prettyStack(exception, numIgnoredFrames) {\n    var stack = exception.stack;\n    if (!stack)\n        return \"\";\n    numIgnoredFrames = (numIgnoredFrames || 0);\n    if (stack.indexOf(exception.name) === 0)\n        numIgnoredFrames += (exception.name + exception.message).split('\\n').length;\n    return stack.split('\\n')\n        .slice(numIgnoredFrames)\n        .filter(libraryFilter)\n        .map(frame => \"\\n\" + frame)\n        .join('');\n}\n\nvar dexieErrorNames = [\n    'Modify',\n    'Bulk',\n    'OpenFailed',\n    'VersionChange',\n    'Schema',\n    'Upgrade',\n    'InvalidTable',\n    'MissingAPI',\n    'NoSuchDatabase',\n    'InvalidArgument',\n    'SubTransaction',\n    'Unsupported',\n    'Internal',\n    'DatabaseClosed',\n    'PrematureCommit',\n    'ForeignAwait'\n];\nvar idbDomErrorNames = [\n    'Unknown',\n    'Constraint',\n    'Data',\n    'TransactionInactive',\n    'ReadOnly',\n    'Version',\n    'NotFound',\n    'InvalidState',\n    'InvalidAccess',\n    'Abort',\n    'Timeout',\n    'QuotaExceeded',\n    'Syntax',\n    'DataClone'\n];\nvar errorList = dexieErrorNames.concat(idbDomErrorNames);\nvar defaultTexts = {\n    VersionChanged: \"Database version changed by other database connection\",\n    DatabaseClosed: \"Database has been closed\",\n    Abort: \"Transaction aborted\",\n    TransactionInactive: \"Transaction has already completed or failed\",\n    MissingAPI: \"IndexedDB API missing. Please visit https://tinyurl.com/y2uuvskb\"\n};\nfunction DexieError(name, msg) {\n    this._e = getErrorWithStack();\n    this.name = name;\n    this.message = msg;\n}\nderive(DexieError).from(Error).extend({\n    stack: {\n        get: function () {\n            return this._stack ||\n                (this._stack = this.name + \": \" + this.message + prettyStack(this._e, 2));\n        }\n    },\n    toString: function () { return this.name + \": \" + this.message; }\n});\nfunction getMultiErrorMessage(msg, failures) {\n    return msg + \". Errors: \" + Object.keys(failures)\n        .map(key => failures[key].toString())\n        .filter((v, i, s) => s.indexOf(v) === i)\n        .join('\\n');\n}\nfunction ModifyError(msg, failures, successCount, failedKeys) {\n    this._e = getErrorWithStack();\n    this.failures = failures;\n    this.failedKeys = failedKeys;\n    this.successCount = successCount;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(ModifyError).from(DexieError);\nfunction BulkError(msg, failures) {\n    this._e = getErrorWithStack();\n    this.name = \"BulkError\";\n    this.failures = Object.keys(failures).map(pos => failures[pos]);\n    this.failuresByPos = failures;\n    this.message = getMultiErrorMessage(msg, failures);\n}\nderive(BulkError).from(DexieError);\nvar errnames = errorList.reduce((obj, name) => (obj[name] = name + \"Error\", obj), {});\nconst BaseException = DexieError;\nvar exceptions = errorList.reduce((obj, name) => {\n    var fullName = name + \"Error\";\n    function DexieError(msgOrInner, inner) {\n        this._e = getErrorWithStack();\n        this.name = fullName;\n        if (!msgOrInner) {\n            this.message = defaultTexts[name] || fullName;\n            this.inner = null;\n        }\n        else if (typeof msgOrInner === 'string') {\n            this.message = `${msgOrInner}${!inner ? '' : '\\n ' + inner}`;\n            this.inner = inner || null;\n        }\n        else if (typeof msgOrInner === 'object') {\n            this.message = `${msgOrInner.name} ${msgOrInner.message}`;\n            this.inner = msgOrInner;\n        }\n    }\n    derive(DexieError).from(BaseException);\n    obj[name] = DexieError;\n    return obj;\n}, {});\nexceptions.Syntax = SyntaxError;\nexceptions.Type = TypeError;\nexceptions.Range = RangeError;\nvar exceptionMap = idbDomErrorNames.reduce((obj, name) => {\n    obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfunction mapError(domError, message) {\n    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])\n        return domError;\n    var rv = new exceptionMap[domError.name](message || domError.message, domError);\n    if (\"stack\" in domError) {\n        setProp(rv, \"stack\", { get: function () {\n                return this.inner.stack;\n            } });\n    }\n    return rv;\n}\nvar fullNameExceptions = errorList.reduce((obj, name) => {\n    if ([\"Syntax\", \"Type\", \"Range\"].indexOf(name) === -1)\n        obj[name + \"Error\"] = exceptions[name];\n    return obj;\n}, {});\nfullNameExceptions.ModifyError = ModifyError;\nfullNameExceptions.DexieError = DexieError;\nfullNameExceptions.BulkError = BulkError;\n\nfunction nop() { }\nfunction mirror(val) { return val; }\nfunction pureFunctionChain(f1, f2) {\n    if (f1 == null || f1 === mirror)\n        return f2;\n    return function (val) {\n        return f2(f1(val));\n    };\n}\nfunction callBoth(on1, on2) {\n    return function () {\n        on1.apply(this, arguments);\n        on2.apply(this, arguments);\n    };\n}\nfunction hookCreatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res !== undefined)\n            arguments[0] = res;\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res2 !== undefined ? res2 : res;\n    };\n}\nfunction hookDeletingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        f1.apply(this, arguments);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = this.onerror = null;\n        f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n    };\n}\nfunction hookUpdatingChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function (modifications) {\n        var res = f1.apply(this, arguments);\n        extend(modifications, res);\n        var onsuccess = this.onsuccess,\n        onerror = this.onerror;\n        this.onsuccess = null;\n        this.onerror = null;\n        var res2 = f2.apply(this, arguments);\n        if (onsuccess)\n            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;\n        if (onerror)\n            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;\n        return res === undefined ?\n            (res2 === undefined ? undefined : res2) :\n            (extend(res, res2));\n    };\n}\nfunction reverseStoppableEventChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        if (f2.apply(this, arguments) === false)\n            return false;\n        return f1.apply(this, arguments);\n    };\n}\nfunction promisableChain(f1, f2) {\n    if (f1 === nop)\n        return f2;\n    return function () {\n        var res = f1.apply(this, arguments);\n        if (res && typeof res.then === 'function') {\n            var thiz = this, i = arguments.length, args = new Array(i);\n            while (i--)\n                args[i] = arguments[i];\n            return res.then(function () {\n                return f2.apply(thiz, args);\n            });\n        }\n        return f2.apply(this, arguments);\n    };\n}\n\nvar INTERNAL = {};\nconst LONG_STACKS_CLIP_LIMIT = 100,\nMAX_LONG_STACKS = 20, ZONE_ECHO_LIMIT = 100, [resolvedNativePromise, nativePromiseProto, resolvedGlobalPromise] = typeof Promise === 'undefined' ?\n    [] :\n    (() => {\n        let globalP = Promise.resolve();\n        if (typeof crypto === 'undefined' || !crypto.subtle)\n            return [globalP, getProto(globalP), globalP];\n        const nativeP = crypto.subtle.digest(\"SHA-512\", new Uint8Array([0]));\n        return [\n            nativeP,\n            getProto(nativeP),\n            globalP\n        ];\n    })(), nativePromiseThen = nativePromiseProto && nativePromiseProto.then;\nconst NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;\nconst patchGlobalPromise = !!resolvedGlobalPromise;\nvar stack_being_generated = false;\nvar schedulePhysicalTick = resolvedGlobalPromise ?\n    () => { resolvedGlobalPromise.then(physicalTick); }\n    :\n        _global.setImmediate ?\n            setImmediate.bind(null, physicalTick) :\n            _global.MutationObserver ?\n                () => {\n                    var hiddenDiv = document.createElement(\"div\");\n                    (new MutationObserver(() => {\n                        physicalTick();\n                        hiddenDiv = null;\n                    })).observe(hiddenDiv, { attributes: true });\n                    hiddenDiv.setAttribute('i', '1');\n                } :\n                () => { setTimeout(physicalTick, 0); };\nvar asap = function (callback, args) {\n    microtickQueue.push([callback, args]);\n    if (needsNewPhysicalTick) {\n        schedulePhysicalTick();\n        needsNewPhysicalTick = false;\n    }\n};\nvar isOutsideMicroTick = true,\nneedsNewPhysicalTick = true,\nunhandledErrors = [],\nrejectingErrors = [],\ncurrentFulfiller = null, rejectionMapper = mirror;\nvar globalPSD = {\n    id: 'global',\n    global: true,\n    ref: 0,\n    unhandleds: [],\n    onunhandled: globalError,\n    pgp: false,\n    env: {},\n    finalize: function () {\n        this.unhandleds.forEach(uh => {\n            try {\n                globalError(uh[0], uh[1]);\n            }\n            catch (e) { }\n        });\n    }\n};\nvar PSD = globalPSD;\nvar microtickQueue = [];\nvar numScheduledCalls = 0;\nvar tickFinalizers = [];\nfunction DexiePromise(fn) {\n    if (typeof this !== 'object')\n        throw new TypeError('Promises must be constructed via new');\n    this._listeners = [];\n    this.onuncatched = nop;\n    this._lib = false;\n    var psd = (this._PSD = PSD);\n    if (debug) {\n        this._stackHolder = getErrorWithStack();\n        this._prev = null;\n        this._numPrev = 0;\n    }\n    if (typeof fn !== 'function') {\n        if (fn !== INTERNAL)\n            throw new TypeError('Not a function');\n        this._state = arguments[1];\n        this._value = arguments[2];\n        if (this._state === false)\n            handleRejection(this, this._value);\n        return;\n    }\n    this._state = null;\n    this._value = null;\n    ++psd.ref;\n    executePromiseTask(this, fn);\n}\nconst thenProp = {\n    get: function () {\n        var psd = PSD, microTaskId = totalEchoes;\n        function then(onFulfilled, onRejected) {\n            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);\n            const cleanup = possibleAwait && !decrementExpectedAwaits();\n            var rv = new DexiePromise((resolve, reject) => {\n                propagateToListener(this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait, cleanup), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait, cleanup), resolve, reject, psd));\n            });\n            debug && linkToPreviousPromise(rv, this);\n            return rv;\n        }\n        then.prototype = INTERNAL;\n        return then;\n    },\n    set: function (value) {\n        setProp(this, 'then', value && value.prototype === INTERNAL ?\n            thenProp :\n            {\n                get: function () {\n                    return value;\n                },\n                set: thenProp.set\n            });\n    }\n};\nprops(DexiePromise.prototype, {\n    then: thenProp,\n    _then: function (onFulfilled, onRejected) {\n        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));\n    },\n    catch: function (onRejected) {\n        if (arguments.length === 1)\n            return this.then(null, onRejected);\n        var type = arguments[0], handler = arguments[1];\n        return typeof type === 'function' ? this.then(null, err =>\n        err instanceof type ? handler(err) : PromiseReject(err))\n            : this.then(null, err =>\n            err && err.name === type ? handler(err) : PromiseReject(err));\n    },\n    finally: function (onFinally) {\n        return this.then(value => {\n            onFinally();\n            return value;\n        }, err => {\n            onFinally();\n            return PromiseReject(err);\n        });\n    },\n    stack: {\n        get: function () {\n            if (this._stack)\n                return this._stack;\n            try {\n                stack_being_generated = true;\n                var stacks = getStack(this, [], MAX_LONG_STACKS);\n                var stack = stacks.join(\"\\nFrom previous: \");\n                if (this._state !== null)\n                    this._stack = stack;\n                return stack;\n            }\n            finally {\n                stack_being_generated = false;\n            }\n        }\n    },\n    timeout: function (ms, msg) {\n        return ms < Infinity ?\n            new DexiePromise((resolve, reject) => {\n                var handle = setTimeout(() => reject(new exceptions.Timeout(msg)), ms);\n                this.then(resolve, reject).finally(clearTimeout.bind(null, handle));\n            }) : this;\n    }\n});\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    setProp(DexiePromise.prototype, Symbol.toStringTag, 'Dexie.Promise');\nglobalPSD.env = snapShot();\nfunction Listener(onFulfilled, onRejected, resolve, reject, zone) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.psd = zone;\n}\nprops(DexiePromise, {\n    all: function () {\n        var values = getArrayOf.apply(null, arguments)\n            .map(onPossibleParallellAsync);\n        return new DexiePromise(function (resolve, reject) {\n            if (values.length === 0)\n                resolve([]);\n            var remaining = values.length;\n            values.forEach((a, i) => DexiePromise.resolve(a).then(x => {\n                values[i] = x;\n                if (!--remaining)\n                    resolve(values);\n            }, reject));\n        });\n    },\n    resolve: value => {\n        if (value instanceof DexiePromise)\n            return value;\n        if (value && typeof value.then === 'function')\n            return new DexiePromise((resolve, reject) => {\n                value.then(resolve, reject);\n            });\n        var rv = new DexiePromise(INTERNAL, true, value);\n        linkToPreviousPromise(rv, currentFulfiller);\n        return rv;\n    },\n    reject: PromiseReject,\n    race: function () {\n        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n        return new DexiePromise((resolve, reject) => {\n            values.map(value => DexiePromise.resolve(value).then(resolve, reject));\n        });\n    },\n    PSD: {\n        get: () => PSD,\n        set: value => PSD = value\n    },\n    totalEchoes: { get: () => totalEchoes },\n    newPSD: newScope,\n    usePSD: usePSD,\n    scheduler: {\n        get: () => asap,\n        set: value => { asap = value; }\n    },\n    rejectionMapper: {\n        get: () => rejectionMapper,\n        set: value => { rejectionMapper = value; }\n    },\n    follow: (fn, zoneProps) => {\n        return new DexiePromise((resolve, reject) => {\n            return newScope((resolve, reject) => {\n                var psd = PSD;\n                psd.unhandleds = [];\n                psd.onunhandled = reject;\n                psd.finalize = callBoth(function () {\n                    run_at_end_of_this_or_next_physical_tick(() => {\n                        this.unhandleds.length === 0 ? resolve() : reject(this.unhandleds[0]);\n                    });\n                }, psd.finalize);\n                fn();\n            }, zoneProps, resolve, reject);\n        });\n    }\n});\nif (NativePromise) {\n    if (NativePromise.allSettled)\n        setProp(DexiePromise, \"allSettled\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise(resolve => {\n                if (possiblePromises.length === 0)\n                    resolve([]);\n                let remaining = possiblePromises.length;\n                const results = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => results[i] = { status: \"fulfilled\", value }, reason => results[i] = { status: \"rejected\", reason })\n                    .then(() => --remaining || resolve(results)));\n            });\n        });\n    if (NativePromise.any && typeof AggregateError !== 'undefined')\n        setProp(DexiePromise, \"any\", function () {\n            const possiblePromises = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);\n            return new DexiePromise((resolve, reject) => {\n                if (possiblePromises.length === 0)\n                    reject(new AggregateError([]));\n                let remaining = possiblePromises.length;\n                const failures = new Array(remaining);\n                possiblePromises.forEach((p, i) => DexiePromise.resolve(p).then(value => resolve(value), failure => {\n                    failures[i] = failure;\n                    if (!--remaining)\n                        reject(new AggregateError(failures));\n                }));\n            });\n        });\n}\nfunction executePromiseTask(promise, fn) {\n    try {\n        fn(value => {\n            if (promise._state !== null)\n                return;\n            if (value === promise)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            var shouldExecuteTick = promise._lib && beginMicroTickScope();\n            if (value && typeof value.then === 'function') {\n                executePromiseTask(promise, (resolve, reject) => {\n                    value instanceof DexiePromise ?\n                        value._then(resolve, reject) :\n                        value.then(resolve, reject);\n                });\n            }\n            else {\n                promise._state = true;\n                promise._value = value;\n                propagateAllListeners(promise);\n            }\n            if (shouldExecuteTick)\n                endMicroTickScope();\n        }, handleRejection.bind(null, promise));\n    }\n    catch (ex) {\n        handleRejection(promise, ex);\n    }\n}\nfunction handleRejection(promise, reason) {\n    rejectingErrors.push(reason);\n    if (promise._state !== null)\n        return;\n    var shouldExecuteTick = promise._lib && beginMicroTickScope();\n    reason = rejectionMapper(reason);\n    promise._state = false;\n    promise._value = reason;\n    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(() => {\n        var origProp = getPropertyDescriptor(reason, \"stack\");\n        reason._promise = promise;\n        setProp(reason, \"stack\", {\n            get: () => stack_being_generated ?\n                origProp && (origProp.get ?\n                    origProp.get.apply(reason) :\n                    origProp.value) :\n                promise.stack\n        });\n    });\n    addPossiblyUnhandledError(promise);\n    propagateAllListeners(promise);\n    if (shouldExecuteTick)\n        endMicroTickScope();\n}\nfunction propagateAllListeners(promise) {\n    var listeners = promise._listeners;\n    promise._listeners = [];\n    for (var i = 0, len = listeners.length; i < len; ++i) {\n        propagateToListener(promise, listeners[i]);\n    }\n    var psd = promise._PSD;\n    --psd.ref || psd.finalize();\n    if (numScheduledCalls === 0) {\n        ++numScheduledCalls;\n        asap(() => {\n            if (--numScheduledCalls === 0)\n                finalizePhysicalTick();\n        }, []);\n    }\n}\nfunction propagateToListener(promise, listener) {\n    if (promise._state === null) {\n        promise._listeners.push(listener);\n        return;\n    }\n    var cb = promise._state ? listener.onFulfilled : listener.onRejected;\n    if (cb === null) {\n        return (promise._state ? listener.resolve : listener.reject)(promise._value);\n    }\n    ++listener.psd.ref;\n    ++numScheduledCalls;\n    asap(callListener, [cb, promise, listener]);\n}\nfunction callListener(cb, promise, listener) {\n    try {\n        currentFulfiller = promise;\n        var ret, value = promise._value;\n        if (promise._state) {\n            ret = cb(value);\n        }\n        else {\n            if (rejectingErrors.length)\n                rejectingErrors = [];\n            ret = cb(value);\n            if (rejectingErrors.indexOf(value) === -1)\n                markErrorAsHandled(promise);\n        }\n        listener.resolve(ret);\n    }\n    catch (e) {\n        listener.reject(e);\n    }\n    finally {\n        currentFulfiller = null;\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n        --listener.psd.ref || listener.psd.finalize();\n    }\n}\nfunction getStack(promise, stacks, limit) {\n    if (stacks.length === limit)\n        return stacks;\n    var stack = \"\";\n    if (promise._state === false) {\n        var failure = promise._value, errorName, message;\n        if (failure != null) {\n            errorName = failure.name || \"Error\";\n            message = failure.message || failure;\n            stack = prettyStack(failure, 0);\n        }\n        else {\n            errorName = failure;\n            message = \"\";\n        }\n        stacks.push(errorName + (message ? \": \" + message : \"\") + stack);\n    }\n    if (debug) {\n        stack = prettyStack(promise._stackHolder, 2);\n        if (stack && stacks.indexOf(stack) === -1)\n            stacks.push(stack);\n        if (promise._prev)\n            getStack(promise._prev, stacks, limit);\n    }\n    return stacks;\n}\nfunction linkToPreviousPromise(promise, prev) {\n    var numPrev = prev ? prev._numPrev + 1 : 0;\n    if (numPrev < LONG_STACKS_CLIP_LIMIT) {\n        promise._prev = prev;\n        promise._numPrev = numPrev;\n    }\n}\nfunction physicalTick() {\n    beginMicroTickScope() && endMicroTickScope();\n}\nfunction beginMicroTickScope() {\n    var wasRootExec = isOutsideMicroTick;\n    isOutsideMicroTick = false;\n    needsNewPhysicalTick = false;\n    return wasRootExec;\n}\nfunction endMicroTickScope() {\n    var callbacks, i, l;\n    do {\n        while (microtickQueue.length > 0) {\n            callbacks = microtickQueue;\n            microtickQueue = [];\n            l = callbacks.length;\n            for (i = 0; i < l; ++i) {\n                var item = callbacks[i];\n                item[0].apply(null, item[1]);\n            }\n        }\n    } while (microtickQueue.length > 0);\n    isOutsideMicroTick = true;\n    needsNewPhysicalTick = true;\n}\nfunction finalizePhysicalTick() {\n    var unhandledErrs = unhandledErrors;\n    unhandledErrors = [];\n    unhandledErrs.forEach(p => {\n        p._PSD.onunhandled.call(null, p._value, p);\n    });\n    var finalizers = tickFinalizers.slice(0);\n    var i = finalizers.length;\n    while (i)\n        finalizers[--i]();\n}\nfunction run_at_end_of_this_or_next_physical_tick(fn) {\n    function finalizer() {\n        fn();\n        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);\n    }\n    tickFinalizers.push(finalizer);\n    ++numScheduledCalls;\n    asap(() => {\n        if (--numScheduledCalls === 0)\n            finalizePhysicalTick();\n    }, []);\n}\nfunction addPossiblyUnhandledError(promise) {\n    if (!unhandledErrors.some(p => p._value === promise._value))\n        unhandledErrors.push(promise);\n}\nfunction markErrorAsHandled(promise) {\n    var i = unhandledErrors.length;\n    while (i)\n        if (unhandledErrors[--i]._value === promise._value) {\n            unhandledErrors.splice(i, 1);\n            return;\n        }\n}\nfunction PromiseReject(reason) {\n    return new DexiePromise(INTERNAL, false, reason);\n}\nfunction wrap(fn, errorCatcher) {\n    var psd = PSD;\n    return function () {\n        var wasRootExec = beginMicroTickScope(), outerScope = PSD;\n        try {\n            switchToZone(psd, true);\n            return fn.apply(this, arguments);\n        }\n        catch (e) {\n            errorCatcher && errorCatcher(e);\n        }\n        finally {\n            switchToZone(outerScope, false);\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    };\n}\nconst task = { awaits: 0, echoes: 0, id: 0 };\nvar taskCounter = 0;\nvar zoneStack = [];\nvar zoneEchoes = 0;\nvar totalEchoes = 0;\nvar zone_id_counter = 0;\nfunction newScope(fn, props, a1, a2) {\n    var parent = PSD, psd = Object.create(parent);\n    psd.parent = parent;\n    psd.ref = 0;\n    psd.global = false;\n    psd.id = ++zone_id_counter;\n    var globalEnv = globalPSD.env;\n    psd.env = patchGlobalPromise ? {\n        Promise: DexiePromise,\n        PromiseProp: { value: DexiePromise, configurable: true, writable: true },\n        all: DexiePromise.all,\n        race: DexiePromise.race,\n        allSettled: DexiePromise.allSettled,\n        any: DexiePromise.any,\n        resolve: DexiePromise.resolve,\n        reject: DexiePromise.reject,\n        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),\n        gthen: getPatchedPromiseThen(globalEnv.gthen, psd)\n    } : {};\n    if (props)\n        extend(psd, props);\n    ++parent.ref;\n    psd.finalize = function () {\n        --this.parent.ref || this.parent.finalize();\n    };\n    var rv = usePSD(psd, fn, a1, a2);\n    if (psd.ref === 0)\n        psd.finalize();\n    return rv;\n}\nfunction incrementExpectedAwaits() {\n    if (!task.id)\n        task.id = ++taskCounter;\n    ++task.awaits;\n    task.echoes += ZONE_ECHO_LIMIT;\n    return task.id;\n}\nfunction decrementExpectedAwaits() {\n    if (!task.awaits)\n        return false;\n    if (--task.awaits === 0)\n        task.id = 0;\n    task.echoes = task.awaits * ZONE_ECHO_LIMIT;\n    return true;\n}\nif (('' + nativePromiseThen).indexOf('[native code]') === -1) {\n    incrementExpectedAwaits = decrementExpectedAwaits = nop;\n}\nfunction onPossibleParallellAsync(possiblePromise) {\n    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {\n        incrementExpectedAwaits();\n        return possiblePromise.then(x => {\n            decrementExpectedAwaits();\n            return x;\n        }, e => {\n            decrementExpectedAwaits();\n            return rejection(e);\n        });\n    }\n    return possiblePromise;\n}\nfunction zoneEnterEcho(targetZone) {\n    ++totalEchoes;\n    if (!task.echoes || --task.echoes === 0) {\n        task.echoes = task.id = 0;\n    }\n    zoneStack.push(PSD);\n    switchToZone(targetZone, true);\n}\nfunction zoneLeaveEcho() {\n    var zone = zoneStack[zoneStack.length - 1];\n    zoneStack.pop();\n    switchToZone(zone, false);\n}\nfunction switchToZone(targetZone, bEnteringZone) {\n    var currentZone = PSD;\n    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {\n        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);\n    }\n    if (targetZone === PSD)\n        return;\n    PSD = targetZone;\n    if (currentZone === globalPSD)\n        globalPSD.env = snapShot();\n    if (patchGlobalPromise) {\n        var GlobalPromise = globalPSD.env.Promise;\n        var targetEnv = targetZone.env;\n        nativePromiseProto.then = targetEnv.nthen;\n        GlobalPromise.prototype.then = targetEnv.gthen;\n        if (currentZone.global || targetZone.global) {\n            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);\n            GlobalPromise.all = targetEnv.all;\n            GlobalPromise.race = targetEnv.race;\n            GlobalPromise.resolve = targetEnv.resolve;\n            GlobalPromise.reject = targetEnv.reject;\n            if (targetEnv.allSettled)\n                GlobalPromise.allSettled = targetEnv.allSettled;\n            if (targetEnv.any)\n                GlobalPromise.any = targetEnv.any;\n        }\n    }\n}\nfunction snapShot() {\n    var GlobalPromise = _global.Promise;\n    return patchGlobalPromise ? {\n        Promise: GlobalPromise,\n        PromiseProp: Object.getOwnPropertyDescriptor(_global, \"Promise\"),\n        all: GlobalPromise.all,\n        race: GlobalPromise.race,\n        allSettled: GlobalPromise.allSettled,\n        any: GlobalPromise.any,\n        resolve: GlobalPromise.resolve,\n        reject: GlobalPromise.reject,\n        nthen: nativePromiseProto.then,\n        gthen: GlobalPromise.prototype.then\n    } : {};\n}\nfunction usePSD(psd, fn, a1, a2, a3) {\n    var outerScope = PSD;\n    try {\n        switchToZone(psd, true);\n        return fn(a1, a2, a3);\n    }\n    finally {\n        switchToZone(outerScope, false);\n    }\n}\nfunction enqueueNativeMicroTask(job) {\n    nativePromiseThen.call(resolvedNativePromise, job);\n}\nfunction nativeAwaitCompatibleWrap(fn, zone, possibleAwait, cleanup) {\n    return typeof fn !== 'function' ? fn : function () {\n        var outerZone = PSD;\n        if (possibleAwait)\n            incrementExpectedAwaits();\n        switchToZone(zone, true);\n        try {\n            return fn.apply(this, arguments);\n        }\n        finally {\n            switchToZone(outerZone, false);\n            if (cleanup)\n                enqueueNativeMicroTask(decrementExpectedAwaits);\n        }\n    };\n}\nfunction getPatchedPromiseThen(origThen, zone) {\n    return function (onResolved, onRejected) {\n        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone), nativeAwaitCompatibleWrap(onRejected, zone));\n    };\n}\nconst UNHANDLEDREJECTION = \"unhandledrejection\";\nfunction globalError(err, promise) {\n    var rv;\n    try {\n        rv = promise.onuncatched(err);\n    }\n    catch (e) { }\n    if (rv !== false)\n        try {\n            var event, eventData = { promise: promise, reason: err };\n            if (_global.document && document.createEvent) {\n                event = document.createEvent('Event');\n                event.initEvent(UNHANDLEDREJECTION, true, true);\n                extend(event, eventData);\n            }\n            else if (_global.CustomEvent) {\n                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });\n                extend(event, eventData);\n            }\n            if (event && _global.dispatchEvent) {\n                dispatchEvent(event);\n                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)\n                    try {\n                        _global.onunhandledrejection(event);\n                    }\n                    catch (_) { }\n            }\n            if (debug && event && !event.defaultPrevented) {\n                console.warn(`Unhandled rejection: ${err.stack || err}`);\n            }\n        }\n        catch (e) { }\n}\nvar rejection = DexiePromise.reject;\n\nfunction tempTransaction(db, mode, storeNames, fn) {\n    if (!db.idbdb || (!db._state.openComplete && (!PSD.letThrough && !db._vip))) {\n        if (db._state.openComplete) {\n            return rejection(new exceptions.DatabaseClosed(db._state.dbOpenError));\n        }\n        if (!db._state.isBeingOpened) {\n            if (!db._options.autoOpen)\n                return rejection(new exceptions.DatabaseClosed());\n            db.open().catch(nop);\n        }\n        return db._state.dbReadyPromise.then(() => tempTransaction(db, mode, storeNames, fn));\n    }\n    else {\n        var trans = db._createTransaction(mode, storeNames, db._dbSchema);\n        try {\n            trans.create();\n            db._state.PR1398_maxLoop = 3;\n        }\n        catch (ex) {\n            if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                console.warn('Dexie: Need to reopen db');\n                db._close();\n                return db.open().then(() => tempTransaction(db, mode, storeNames, fn));\n            }\n            return rejection(ex);\n        }\n        return trans._promise(mode, (resolve, reject) => {\n            return newScope(() => {\n                PSD.trans = trans;\n                return fn(resolve, reject, trans);\n            });\n        }).then(result => {\n            return trans._completion.then(() => result);\n        });\n    }\n}\n\nconst DEXIE_VERSION = '3.2.2';\nconst maxString = String.fromCharCode(65535);\nconst minKey = -Infinity;\nconst INVALID_KEY_ARGUMENT = \"Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.\";\nconst STRING_EXPECTED = \"String expected.\";\nconst connections = [];\nconst isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);\nconst hasIEDeleteObjectStoreBug = isIEOrEdge;\nconst hangsOnDeleteLargeKeyRange = isIEOrEdge;\nconst dexieStackFrameFilter = frame => !/(dexie\\.js|dexie\\.min\\.js)/.test(frame);\nconst DBNAMES_DB = '__dbnames';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\nfunction combine(filter1, filter2) {\n    return filter1 ?\n        filter2 ?\n            function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :\n            filter1 :\n        filter2;\n}\n\nconst AnyRange = {\n    type: 3 ,\n    lower: -Infinity,\n    lowerOpen: false,\n    upper: [[]],\n    upperOpen: false\n};\n\nfunction workaroundForUndefinedPrimKey(keyPath) {\n    return typeof keyPath === \"string\" && !/\\./.test(keyPath)\n        ? (obj) => {\n            if (obj[keyPath] === undefined && (keyPath in obj)) {\n                obj = deepClone(obj);\n                delete obj[keyPath];\n            }\n            return obj;\n        }\n        : (obj) => obj;\n}\n\nclass Table {\n    _trans(mode, fn, writeLocked) {\n        const trans = this._tx || PSD.trans;\n        const tableName = this.name;\n        function checkTableInTransaction(resolve, reject, trans) {\n            if (!trans.schema[tableName])\n                throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n            return fn(trans.idbtrans, trans);\n        }\n        const wasRootExec = beginMicroTickScope();\n        try {\n            return trans && trans.db === this.db ?\n                trans === PSD.trans ?\n                    trans._promise(mode, checkTableInTransaction, writeLocked) :\n                    newScope(() => trans._promise(mode, checkTableInTransaction, writeLocked), { trans: trans, transless: PSD.transless || PSD }) :\n                tempTransaction(this.db, mode, [this.name], checkTableInTransaction);\n        }\n        finally {\n            if (wasRootExec)\n                endMicroTickScope();\n        }\n    }\n    get(keyOrCrit, cb) {\n        if (keyOrCrit && keyOrCrit.constructor === Object)\n            return this.where(keyOrCrit).first(cb);\n        return this._trans('readonly', (trans) => {\n            return this.core.get({ trans, key: keyOrCrit })\n                .then(res => this.hook.reading.fire(res));\n        }).then(cb);\n    }\n    where(indexOrCrit) {\n        if (typeof indexOrCrit === 'string')\n            return new this.db.WhereClause(this, indexOrCrit);\n        if (isArray(indexOrCrit))\n            return new this.db.WhereClause(this, `[${indexOrCrit.join('+')}]`);\n        const keyPaths = keys(indexOrCrit);\n        if (keyPaths.length === 1)\n            return this\n                .where(keyPaths[0])\n                .equals(indexOrCrit[keyPaths[0]]);\n        const compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(ix => ix.compound &&\n            keyPaths.every(keyPath => ix.keyPath.indexOf(keyPath) >= 0) &&\n            ix.keyPath.every(keyPath => keyPaths.indexOf(keyPath) >= 0))[0];\n        if (compoundIndex && this.db._maxKey !== maxString)\n            return this\n                .where(compoundIndex.name)\n                .equals(compoundIndex.keyPath.map(kp => indexOrCrit[kp]));\n        if (!compoundIndex && debug)\n            console.warn(`The query ${JSON.stringify(indexOrCrit)} on ${this.name} would benefit of a ` +\n                `compound index [${keyPaths.join('+')}]`);\n        const { idxByName } = this.schema;\n        const idb = this.db._deps.indexedDB;\n        function equals(a, b) {\n            try {\n                return idb.cmp(a, b) === 0;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        const [idx, filterFunction] = keyPaths.reduce(([prevIndex, prevFilterFn], keyPath) => {\n            const index = idxByName[keyPath];\n            const value = indexOrCrit[keyPath];\n            return [\n                prevIndex || index,\n                prevIndex || !index ?\n                    combine(prevFilterFn, index && index.multi ?\n                        x => {\n                            const prop = getByKeyPath(x, keyPath);\n                            return isArray(prop) && prop.some(item => equals(value, item));\n                        } : x => equals(value, getByKeyPath(x, keyPath)))\n                    : prevFilterFn\n            ];\n        }, [null, null]);\n        return idx ?\n            this.where(idx.name).equals(indexOrCrit[idx.keyPath])\n                .filter(filterFunction) :\n            compoundIndex ?\n                this.filter(filterFunction) :\n                this.where(keyPaths).equals('');\n    }\n    filter(filterFunction) {\n        return this.toCollection().and(filterFunction);\n    }\n    count(thenShortcut) {\n        return this.toCollection().count(thenShortcut);\n    }\n    offset(offset) {\n        return this.toCollection().offset(offset);\n    }\n    limit(numRows) {\n        return this.toCollection().limit(numRows);\n    }\n    each(callback) {\n        return this.toCollection().each(callback);\n    }\n    toArray(thenShortcut) {\n        return this.toCollection().toArray(thenShortcut);\n    }\n    toCollection() {\n        return new this.db.Collection(new this.db.WhereClause(this));\n    }\n    orderBy(index) {\n        return new this.db.Collection(new this.db.WhereClause(this, isArray(index) ?\n            `[${index.join('+')}]` :\n            index));\n    }\n    reverse() {\n        return this.toCollection().reverse();\n    }\n    mapToClass(constructor) {\n        this.schema.mappedClass = constructor;\n        const readHook = obj => {\n            if (!obj)\n                return obj;\n            const res = Object.create(constructor.prototype);\n            for (var m in obj)\n                if (hasOwn(obj, m))\n                    try {\n                        res[m] = obj[m];\n                    }\n                    catch (_) { }\n            return res;\n        };\n        if (this.schema.readHook) {\n            this.hook.reading.unsubscribe(this.schema.readHook);\n        }\n        this.schema.readHook = readHook;\n        this.hook(\"reading\", readHook);\n        return constructor;\n    }\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return this.mapToClass(Class);\n    }\n    add(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'add', keys: key != null ? [key] : null, values: [objToAdd] });\n        }).then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    update(keyOrObject, modifications) {\n        if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {\n            const key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);\n            if (key === undefined)\n                return rejection(new exceptions.InvalidArgument(\"Given object does not contain its primary key\"));\n            try {\n                if (typeof modifications !== \"function\") {\n                    keys(modifications).forEach(keyPath => {\n                        setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);\n                    });\n                }\n                else {\n                    modifications(keyOrObject, { value: keyOrObject, primKey: key });\n                }\n            }\n            catch (_a) {\n            }\n            return this.where(\":id\").equals(key).modify(modifications);\n        }\n        else {\n            return this.where(\":id\").equals(keyOrObject).modify(modifications);\n        }\n    }\n    put(obj, key) {\n        const { auto, keyPath } = this.schema.primKey;\n        let objToAdd = obj;\n        if (keyPath && auto) {\n            objToAdd = workaroundForUndefinedPrimKey(keyPath)(obj);\n        }\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'put', values: [objToAdd], keys: key != null ? [key] : null }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : res.lastResult)\n            .then(lastResult => {\n            if (keyPath) {\n                try {\n                    setByKeyPath(obj, keyPath, lastResult);\n                }\n                catch (_) { }\n            }\n            return lastResult;\n        });\n    }\n    delete(key) {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'delete', keys: [key] }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    clear() {\n        return this._trans('readwrite', trans => this.core.mutate({ trans, type: 'deleteRange', range: AnyRange }))\n            .then(res => res.numFailures ? DexiePromise.reject(res.failures[0]) : undefined);\n    }\n    bulkGet(keys) {\n        return this._trans('readonly', trans => {\n            return this.core.getMany({\n                keys,\n                trans\n            }).then(result => result.map(res => this.hook.reading.fire(res)));\n        });\n    }\n    bulkAdd(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkAdd(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToAdd = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'add', keys: keys, values: objectsToAdd, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkAdd(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkPut(objects, keysOrOptions, options) {\n        const keys = Array.isArray(keysOrOptions) ? keysOrOptions : undefined;\n        options = options || (keys ? undefined : keysOrOptions);\n        const wantResults = options ? options.allKeys : undefined;\n        return this._trans('readwrite', trans => {\n            const { auto, keyPath } = this.schema.primKey;\n            if (keyPath && keys)\n                throw new exceptions.InvalidArgument(\"bulkPut(): keys argument invalid on tables with inbound keys\");\n            if (keys && keys.length !== objects.length)\n                throw new exceptions.InvalidArgument(\"Arguments objects and keys must have the same length\");\n            const numObjects = objects.length;\n            let objectsToPut = keyPath && auto ?\n                objects.map(workaroundForUndefinedPrimKey(keyPath)) :\n                objects;\n            return this.core.mutate({ trans, type: 'put', keys: keys, values: objectsToPut, wantResults })\n                .then(({ numFailures, results, lastResult, failures }) => {\n                const result = wantResults ? results : lastResult;\n                if (numFailures === 0)\n                    return result;\n                throw new BulkError(`${this.name}.bulkPut(): ${numFailures} of ${numObjects} operations failed`, failures);\n            });\n        });\n    }\n    bulkDelete(keys) {\n        const numKeys = keys.length;\n        return this._trans('readwrite', trans => {\n            return this.core.mutate({ trans, type: 'delete', keys: keys });\n        }).then(({ numFailures, lastResult, failures }) => {\n            if (numFailures === 0)\n                return lastResult;\n            throw new BulkError(`${this.name}.bulkDelete(): ${numFailures} of ${numKeys} operations failed`, failures);\n        });\n    }\n}\n\nfunction Events(ctx) {\n    var evs = {};\n    var rv = function (eventName, subscriber) {\n        if (subscriber) {\n            var i = arguments.length, args = new Array(i - 1);\n            while (--i)\n                args[i - 1] = arguments[i];\n            evs[eventName].subscribe.apply(null, args);\n            return ctx;\n        }\n        else if (typeof (eventName) === 'string') {\n            return evs[eventName];\n        }\n    };\n    rv.addEventType = add;\n    for (var i = 1, l = arguments.length; i < l; ++i) {\n        add(arguments[i]);\n    }\n    return rv;\n    function add(eventName, chainFunction, defaultFunction) {\n        if (typeof eventName === 'object')\n            return addConfiguredEvents(eventName);\n        if (!chainFunction)\n            chainFunction = reverseStoppableEventChain;\n        if (!defaultFunction)\n            defaultFunction = nop;\n        var context = {\n            subscribers: [],\n            fire: defaultFunction,\n            subscribe: function (cb) {\n                if (context.subscribers.indexOf(cb) === -1) {\n                    context.subscribers.push(cb);\n                    context.fire = chainFunction(context.fire, cb);\n                }\n            },\n            unsubscribe: function (cb) {\n                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });\n                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);\n            }\n        };\n        evs[eventName] = rv[eventName] = context;\n        return context;\n    }\n    function addConfiguredEvents(cfg) {\n        keys(cfg).forEach(function (eventName) {\n            var args = cfg[eventName];\n            if (isArray(args)) {\n                add(eventName, cfg[eventName][0], cfg[eventName][1]);\n            }\n            else if (args === 'asap') {\n                var context = add(eventName, mirror, function fire() {\n                    var i = arguments.length, args = new Array(i);\n                    while (i--)\n                        args[i] = arguments[i];\n                    context.subscribers.forEach(function (fn) {\n                        asap$1(function fireEvent() {\n                            fn.apply(null, args);\n                        });\n                    });\n                });\n            }\n            else\n                throw new exceptions.InvalidArgument(\"Invalid event config\");\n        });\n    }\n}\n\nfunction makeClassConstructor(prototype, constructor) {\n    derive(constructor).from({ prototype });\n    return constructor;\n}\n\nfunction createTableConstructor(db) {\n    return makeClassConstructor(Table.prototype, function Table(name, tableSchema, trans) {\n        this.db = db;\n        this._tx = trans;\n        this.name = name;\n        this.schema = tableSchema;\n        this.hook = db._allTables[name] ? db._allTables[name].hook : Events(null, {\n            \"creating\": [hookCreatingChain, nop],\n            \"reading\": [pureFunctionChain, mirror],\n            \"updating\": [hookUpdatingChain, nop],\n            \"deleting\": [hookDeletingChain, nop]\n        });\n    });\n}\n\nfunction isPlainKeyRange(ctx, ignoreLimitFilter) {\n    return !(ctx.filter || ctx.algorithm || ctx.or) &&\n        (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);\n}\nfunction addFilter(ctx, fn) {\n    ctx.filter = combine(ctx.filter, fn);\n}\nfunction addReplayFilter(ctx, factory, isLimitFilter) {\n    var curr = ctx.replayFilter;\n    ctx.replayFilter = curr ? () => combine(curr(), factory()) : factory;\n    ctx.justLimit = isLimitFilter && !curr;\n}\nfunction addMatchFilter(ctx, fn) {\n    ctx.isMatch = combine(ctx.isMatch, fn);\n}\nfunction getIndexOrStore(ctx, coreSchema) {\n    if (ctx.isPrimKey)\n        return coreSchema.primaryKey;\n    const index = coreSchema.getIndexByKeyPath(ctx.index);\n    if (!index)\n        throw new exceptions.Schema(\"KeyPath \" + ctx.index + \" on object store \" + coreSchema.name + \" is not indexed\");\n    return index;\n}\nfunction openCursor(ctx, coreTable, trans) {\n    const index = getIndexOrStore(ctx, coreTable.schema);\n    return coreTable.openCursor({\n        trans,\n        values: !ctx.keysOnly,\n        reverse: ctx.dir === 'prev',\n        unique: !!ctx.unique,\n        query: {\n            index,\n            range: ctx.range\n        }\n    });\n}\nfunction iter(ctx, fn, coreTrans, coreTable) {\n    const filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;\n    if (!ctx.or) {\n        return iterate(openCursor(ctx, coreTable, coreTrans), combine(ctx.algorithm, filter), fn, !ctx.keysOnly && ctx.valueMapper);\n    }\n    else {\n        const set = {};\n        const union = (item, cursor, advance) => {\n            if (!filter || filter(cursor, advance, result => cursor.stop(result), err => cursor.fail(err))) {\n                var primaryKey = cursor.primaryKey;\n                var key = '' + primaryKey;\n                if (key === '[object ArrayBuffer]')\n                    key = '' + new Uint8Array(primaryKey);\n                if (!hasOwn(set, key)) {\n                    set[key] = true;\n                    fn(item, cursor, advance);\n                }\n            }\n        };\n        return Promise.all([\n            ctx.or._iterate(union, coreTrans),\n            iterate(openCursor(ctx, coreTable, coreTrans), ctx.algorithm, union, !ctx.keysOnly && ctx.valueMapper)\n        ]);\n    }\n}\nfunction iterate(cursorPromise, filter, fn, valueMapper) {\n    var mappedFn = valueMapper ? (x, c, a) => fn(valueMapper(x), c, a) : fn;\n    var wrappedFn = wrap(mappedFn);\n    return cursorPromise.then(cursor => {\n        if (cursor) {\n            return cursor.start(() => {\n                var c = () => cursor.continue();\n                if (!filter || filter(cursor, advancer => c = advancer, val => { cursor.stop(val); c = nop; }, e => { cursor.fail(e); c = nop; }))\n                    wrappedFn(cursor.value, cursor, advancer => c = advancer);\n                c();\n            });\n        }\n    });\n}\n\nfunction cmp(a, b) {\n    try {\n        const ta = type(a);\n        const tb = type(b);\n        if (ta !== tb) {\n            if (ta === 'Array')\n                return 1;\n            if (tb === 'Array')\n                return -1;\n            if (ta === 'binary')\n                return 1;\n            if (tb === 'binary')\n                return -1;\n            if (ta === 'string')\n                return 1;\n            if (tb === 'string')\n                return -1;\n            if (ta === 'Date')\n                return 1;\n            if (tb !== 'Date')\n                return NaN;\n            return -1;\n        }\n        switch (ta) {\n            case 'number':\n            case 'Date':\n            case 'string':\n                return a > b ? 1 : a < b ? -1 : 0;\n            case 'binary': {\n                return compareUint8Arrays(getUint8Array(a), getUint8Array(b));\n            }\n            case 'Array':\n                return compareArrays(a, b);\n        }\n    }\n    catch (_a) { }\n    return NaN;\n}\nfunction compareArrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        const res = cmp(a[i], b[i]);\n        if (res !== 0)\n            return res;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction compareUint8Arrays(a, b) {\n    const al = a.length;\n    const bl = b.length;\n    const l = al < bl ? al : bl;\n    for (let i = 0; i < l; ++i) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n    return al === bl ? 0 : al < bl ? -1 : 1;\n}\nfunction type(x) {\n    const t = typeof x;\n    if (t !== 'object')\n        return t;\n    if (ArrayBuffer.isView(x))\n        return 'binary';\n    const tsTag = toStringTag(x);\n    return tsTag === 'ArrayBuffer' ? 'binary' : tsTag;\n}\nfunction getUint8Array(a) {\n    if (a instanceof Uint8Array)\n        return a;\n    if (ArrayBuffer.isView(a))\n        return new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    return new Uint8Array(a);\n}\n\nclass Collection {\n    _read(fn, cb) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readonly', fn).then(cb);\n    }\n    _write(fn) {\n        var ctx = this._ctx;\n        return ctx.error ?\n            ctx.table._trans(null, rejection.bind(null, ctx.error)) :\n            ctx.table._trans('readwrite', fn, \"locked\");\n    }\n    _addAlgorithm(fn) {\n        var ctx = this._ctx;\n        ctx.algorithm = combine(ctx.algorithm, fn);\n    }\n    _iterate(fn, coreTrans) {\n        return iter(this._ctx, fn, coreTrans, this._ctx.table.core);\n    }\n    clone(props) {\n        var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);\n        if (props)\n            extend(ctx, props);\n        rv._ctx = ctx;\n        return rv;\n    }\n    raw() {\n        this._ctx.valueMapper = null;\n        return this;\n    }\n    each(fn) {\n        var ctx = this._ctx;\n        return this._read(trans => iter(ctx, fn, trans, ctx.table.core));\n    }\n    count(cb) {\n        return this._read(trans => {\n            const ctx = this._ctx;\n            const coreTable = ctx.table.core;\n            if (isPlainKeyRange(ctx, true)) {\n                return coreTable.count({\n                    trans,\n                    query: {\n                        index: getIndexOrStore(ctx, coreTable.schema),\n                        range: ctx.range\n                    }\n                }).then(count => Math.min(count, ctx.limit));\n            }\n            else {\n                var count = 0;\n                return iter(ctx, () => { ++count; return false; }, trans, coreTable)\n                    .then(() => count);\n            }\n        }).then(cb);\n    }\n    sortBy(keyPath, cb) {\n        const parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;\n        function getval(obj, i) {\n            if (i)\n                return getval(obj[parts[i]], i - 1);\n            return obj[lastPart];\n        }\n        var order = this._ctx.dir === \"next\" ? 1 : -1;\n        function sorter(a, b) {\n            var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);\n            return aVal < bVal ? -order : aVal > bVal ? order : 0;\n        }\n        return this.toArray(function (a) {\n            return a.sort(sorter);\n        }).then(cb);\n    }\n    toArray(cb) {\n        return this._read(trans => {\n            var ctx = this._ctx;\n            if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n                const { valueMapper } = ctx;\n                const index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    limit: ctx.limit,\n                    values: true,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                }).then(({ result }) => valueMapper ? result.map(valueMapper) : result);\n            }\n            else {\n                const a = [];\n                return iter(ctx, item => a.push(item), trans, ctx.table.core).then(() => a);\n            }\n        }, cb);\n    }\n    offset(offset) {\n        var ctx = this._ctx;\n        if (offset <= 0)\n            return this;\n        ctx.offset += offset;\n        if (isPlainKeyRange(ctx)) {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return (cursor, advance) => {\n                    if (offsetLeft === 0)\n                        return true;\n                    if (offsetLeft === 1) {\n                        --offsetLeft;\n                        return false;\n                    }\n                    advance(() => {\n                        cursor.advance(offsetLeft);\n                        offsetLeft = 0;\n                    });\n                    return false;\n                };\n            });\n        }\n        else {\n            addReplayFilter(ctx, () => {\n                var offsetLeft = offset;\n                return () => (--offsetLeft < 0);\n            });\n        }\n        return this;\n    }\n    limit(numRows) {\n        this._ctx.limit = Math.min(this._ctx.limit, numRows);\n        addReplayFilter(this._ctx, () => {\n            var rowsLeft = numRows;\n            return function (cursor, advance, resolve) {\n                if (--rowsLeft <= 0)\n                    advance(resolve);\n                return rowsLeft >= 0;\n            };\n        }, true);\n        return this;\n    }\n    until(filterFunction, bIncludeStopEntry) {\n        addFilter(this._ctx, function (cursor, advance, resolve) {\n            if (filterFunction(cursor.value)) {\n                advance(resolve);\n                return bIncludeStopEntry;\n            }\n            else {\n                return true;\n            }\n        });\n        return this;\n    }\n    first(cb) {\n        return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);\n    }\n    last(cb) {\n        return this.reverse().first(cb);\n    }\n    filter(filterFunction) {\n        addFilter(this._ctx, function (cursor) {\n            return filterFunction(cursor.value);\n        });\n        addMatchFilter(this._ctx, filterFunction);\n        return this;\n    }\n    and(filter) {\n        return this.filter(filter);\n    }\n    or(indexName) {\n        return new this.db.WhereClause(this._ctx.table, indexName, this);\n    }\n    reverse() {\n        this._ctx.dir = (this._ctx.dir === \"prev\" ? \"next\" : \"prev\");\n        if (this._ondirectionchange)\n            this._ondirectionchange(this._ctx.dir);\n        return this;\n    }\n    desc() {\n        return this.reverse();\n    }\n    eachKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.key, cursor); });\n    }\n    eachUniqueKey(cb) {\n        this._ctx.unique = \"unique\";\n        return this.eachKey(cb);\n    }\n    eachPrimaryKey(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });\n    }\n    keys(cb) {\n        var ctx = this._ctx;\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.key);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    primaryKeys(cb) {\n        var ctx = this._ctx;\n        if (ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {\n            return this._read(trans => {\n                var index = getIndexOrStore(ctx, ctx.table.core.schema);\n                return ctx.table.core.query({\n                    trans,\n                    values: false,\n                    limit: ctx.limit,\n                    query: {\n                        index,\n                        range: ctx.range\n                    }\n                });\n            }).then(({ result }) => result).then(cb);\n        }\n        ctx.keysOnly = !ctx.isMatch;\n        var a = [];\n        return this.each(function (item, cursor) {\n            a.push(cursor.primaryKey);\n        }).then(function () {\n            return a;\n        }).then(cb);\n    }\n    uniqueKeys(cb) {\n        this._ctx.unique = \"unique\";\n        return this.keys(cb);\n    }\n    firstKey(cb) {\n        return this.limit(1).keys(function (a) { return a[0]; }).then(cb);\n    }\n    lastKey(cb) {\n        return this.reverse().firstKey(cb);\n    }\n    distinct() {\n        var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];\n        if (!idx || !idx.multi)\n            return this;\n        var set = {};\n        addFilter(this._ctx, function (cursor) {\n            var strKey = cursor.primaryKey.toString();\n            var found = hasOwn(set, strKey);\n            set[strKey] = true;\n            return !found;\n        });\n        return this;\n    }\n    modify(changes) {\n        var ctx = this._ctx;\n        return this._write(trans => {\n            var modifyer;\n            if (typeof changes === 'function') {\n                modifyer = changes;\n            }\n            else {\n                var keyPaths = keys(changes);\n                var numKeys = keyPaths.length;\n                modifyer = function (item) {\n                    var anythingModified = false;\n                    for (var i = 0; i < numKeys; ++i) {\n                        var keyPath = keyPaths[i], val = changes[keyPath];\n                        if (getByKeyPath(item, keyPath) !== val) {\n                            setByKeyPath(item, keyPath, val);\n                            anythingModified = true;\n                        }\n                    }\n                    return anythingModified;\n                };\n            }\n            const coreTable = ctx.table.core;\n            const { outbound, extractKey } = coreTable.schema.primaryKey;\n            const limit = this.db._options.modifyChunkSize || 200;\n            const totalFailures = [];\n            let successCount = 0;\n            const failedKeys = [];\n            const applyMutateResult = (expectedCount, res) => {\n                const { failures, numFailures } = res;\n                successCount += expectedCount - numFailures;\n                for (let pos of keys(failures)) {\n                    totalFailures.push(failures[pos]);\n                }\n            };\n            return this.clone().primaryKeys().then(keys => {\n                const nextChunk = (offset) => {\n                    const count = Math.min(limit, keys.length - offset);\n                    return coreTable.getMany({\n                        trans,\n                        keys: keys.slice(offset, offset + count),\n                        cache: \"immutable\"\n                    }).then(values => {\n                        const addValues = [];\n                        const putValues = [];\n                        const putKeys = outbound ? [] : null;\n                        const deleteKeys = [];\n                        for (let i = 0; i < count; ++i) {\n                            const origValue = values[i];\n                            const ctx = {\n                                value: deepClone(origValue),\n                                primKey: keys[offset + i]\n                            };\n                            if (modifyer.call(ctx, ctx.value, ctx) !== false) {\n                                if (ctx.value == null) {\n                                    deleteKeys.push(keys[offset + i]);\n                                }\n                                else if (!outbound && cmp(extractKey(origValue), extractKey(ctx.value)) !== 0) {\n                                    deleteKeys.push(keys[offset + i]);\n                                    addValues.push(ctx.value);\n                                }\n                                else {\n                                    putValues.push(ctx.value);\n                                    if (outbound)\n                                        putKeys.push(keys[offset + i]);\n                                }\n                            }\n                        }\n                        const criteria = isPlainKeyRange(ctx) &&\n                            ctx.limit === Infinity &&\n                            (typeof changes !== 'function' || changes === deleteCallback) && {\n                            index: ctx.index,\n                            range: ctx.range\n                        };\n                        return Promise.resolve(addValues.length > 0 &&\n                            coreTable.mutate({ trans, type: 'add', values: addValues })\n                                .then(res => {\n                                for (let pos in res.failures) {\n                                    deleteKeys.splice(parseInt(pos), 1);\n                                }\n                                applyMutateResult(addValues.length, res);\n                            })).then(() => (putValues.length > 0 || (criteria && typeof changes === 'object')) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'put',\n                                keys: putKeys,\n                                values: putValues,\n                                criteria,\n                                changeSpec: typeof changes !== 'function'\n                                    && changes\n                            }).then(res => applyMutateResult(putValues.length, res))).then(() => (deleteKeys.length > 0 || (criteria && changes === deleteCallback)) &&\n                            coreTable.mutate({\n                                trans,\n                                type: 'delete',\n                                keys: deleteKeys,\n                                criteria\n                            }).then(res => applyMutateResult(deleteKeys.length, res))).then(() => {\n                            return keys.length > offset + count && nextChunk(offset + limit);\n                        });\n                    });\n                };\n                return nextChunk(0).then(() => {\n                    if (totalFailures.length > 0)\n                        throw new ModifyError(\"Error modifying one or more objects\", totalFailures, successCount, failedKeys);\n                    return keys.length;\n                });\n            });\n        });\n    }\n    delete() {\n        var ctx = this._ctx, range = ctx.range;\n        if (isPlainKeyRange(ctx) &&\n            ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || range.type === 3 ))\n         {\n            return this._write(trans => {\n                const { primaryKey } = ctx.table.core.schema;\n                const coreRange = range;\n                return ctx.table.core.count({ trans, query: { index: primaryKey, range: coreRange } }).then(count => {\n                    return ctx.table.core.mutate({ trans, type: 'deleteRange', range: coreRange })\n                        .then(({ failures, lastResult, results, numFailures }) => {\n                        if (numFailures)\n                            throw new ModifyError(\"Could not delete some values\", Object.keys(failures).map(pos => failures[pos]), count - numFailures);\n                        return count - numFailures;\n                    });\n                });\n            });\n        }\n        return this.modify(deleteCallback);\n    }\n}\nconst deleteCallback = (value, ctx) => ctx.value = null;\n\nfunction createCollectionConstructor(db) {\n    return makeClassConstructor(Collection.prototype, function Collection(whereClause, keyRangeGenerator) {\n        this.db = db;\n        let keyRange = AnyRange, error = null;\n        if (keyRangeGenerator)\n            try {\n                keyRange = keyRangeGenerator();\n            }\n            catch (ex) {\n                error = ex;\n            }\n        const whereCtx = whereClause._ctx;\n        const table = whereCtx.table;\n        const readingHook = table.hook.reading.fire;\n        this._ctx = {\n            table: table,\n            index: whereCtx.index,\n            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),\n            range: keyRange,\n            keysOnly: false,\n            dir: \"next\",\n            unique: \"\",\n            algorithm: null,\n            filter: null,\n            replayFilter: null,\n            justLimit: true,\n            isMatch: null,\n            offset: 0,\n            limit: Infinity,\n            error: error,\n            or: whereCtx.or,\n            valueMapper: readingHook !== mirror ? readingHook : null\n        };\n    });\n}\n\nfunction simpleCompare(a, b) {\n    return a < b ? -1 : a === b ? 0 : 1;\n}\nfunction simpleCompareReverse(a, b) {\n    return a > b ? -1 : a === b ? 0 : 1;\n}\n\nfunction fail(collectionOrWhereClause, err, T) {\n    var collection = collectionOrWhereClause instanceof WhereClause ?\n        new collectionOrWhereClause.Collection(collectionOrWhereClause) :\n        collectionOrWhereClause;\n    collection._ctx.error = T ? new T(err) : new TypeError(err);\n    return collection;\n}\nfunction emptyCollection(whereClause) {\n    return new whereClause.Collection(whereClause, () => rangeEqual(\"\")).limit(0);\n}\nfunction upperFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toUpperCase() :\n        (s) => s.toLowerCase();\n}\nfunction lowerFactory(dir) {\n    return dir === \"next\" ?\n        (s) => s.toLowerCase() :\n        (s) => s.toUpperCase();\n}\nfunction nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {\n    var length = Math.min(key.length, lowerNeedle.length);\n    var llp = -1;\n    for (var i = 0; i < length; ++i) {\n        var lwrKeyChar = lowerKey[i];\n        if (lwrKeyChar !== lowerNeedle[i]) {\n            if (cmp(key[i], upperNeedle[i]) < 0)\n                return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);\n            if (cmp(key[i], lowerNeedle[i]) < 0)\n                return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);\n            if (llp >= 0)\n                return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);\n            return null;\n        }\n        if (cmp(key[i], lwrKeyChar) < 0)\n            llp = i;\n    }\n    if (length < lowerNeedle.length && dir === \"next\")\n        return key + upperNeedle.substr(key.length);\n    if (length < key.length && dir === \"prev\")\n        return key.substr(0, upperNeedle.length);\n    return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));\n}\nfunction addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {\n    var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;\n    if (!needles.every(s => typeof s === 'string')) {\n        return fail(whereClause, STRING_EXPECTED);\n    }\n    function initDirection(dir) {\n        upper = upperFactory(dir);\n        lower = lowerFactory(dir);\n        compare = (dir === \"next\" ? simpleCompare : simpleCompareReverse);\n        var needleBounds = needles.map(function (needle) {\n            return { lower: lower(needle), upper: upper(needle) };\n        }).sort(function (a, b) {\n            return compare(a.lower, b.lower);\n        });\n        upperNeedles = needleBounds.map(function (nb) { return nb.upper; });\n        lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });\n        direction = dir;\n        nextKeySuffix = (dir === \"next\" ? \"\" : suffix);\n    }\n    initDirection(\"next\");\n    var c = new whereClause.Collection(whereClause, () => createRange(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix));\n    c._ondirectionchange = function (direction) {\n        initDirection(direction);\n    };\n    var firstPossibleNeedle = 0;\n    c._addAlgorithm(function (cursor, advance, resolve) {\n        var key = cursor.key;\n        if (typeof key !== 'string')\n            return false;\n        var lowerKey = lower(key);\n        if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {\n            return true;\n        }\n        else {\n            var lowestPossibleCasing = null;\n            for (var i = firstPossibleNeedle; i < needlesLen; ++i) {\n                var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);\n                if (casing === null && lowestPossibleCasing === null)\n                    firstPossibleNeedle = i + 1;\n                else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {\n                    lowestPossibleCasing = casing;\n                }\n            }\n            if (lowestPossibleCasing !== null) {\n                advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });\n            }\n            else {\n                advance(resolve);\n            }\n            return false;\n        }\n    });\n    return c;\n}\nfunction createRange(lower, upper, lowerOpen, upperOpen) {\n    return {\n        type: 2 ,\n        lower,\n        upper,\n        lowerOpen,\n        upperOpen\n    };\n}\nfunction rangeEqual(value) {\n    return {\n        type: 1 ,\n        lower: value,\n        upper: value\n    };\n}\n\nclass WhereClause {\n    get Collection() {\n        return this._ctx.table.db.Collection;\n    }\n    between(lower, upper, includeLower, includeUpper) {\n        includeLower = includeLower !== false;\n        includeUpper = includeUpper === true;\n        try {\n            if ((this._cmp(lower, upper) > 0) ||\n                (this._cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))\n                return emptyCollection(this);\n            return new this.Collection(this, () => createRange(lower, upper, !includeLower, !includeUpper));\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n    }\n    equals(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => rangeEqual(value));\n    }\n    above(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, true));\n    }\n    aboveOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(value, undefined, false));\n    }\n    below(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value, false, true));\n    }\n    belowOrEqual(value) {\n        if (value == null)\n            return fail(this, INVALID_KEY_ARGUMENT);\n        return new this.Collection(this, () => createRange(undefined, value));\n    }\n    startsWith(str) {\n        if (typeof str !== 'string')\n            return fail(this, STRING_EXPECTED);\n        return this.between(str, str + maxString, true, true);\n    }\n    startsWithIgnoreCase(str) {\n        if (str === \"\")\n            return this.startsWith(str);\n        return addIgnoreCaseAlgorithm(this, (x, a) => x.indexOf(a[0]) === 0, [str], maxString);\n    }\n    equalsIgnoreCase(str) {\n        return addIgnoreCaseAlgorithm(this, (x, a) => x === a[0], [str], \"\");\n    }\n    anyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.indexOf(x) !== -1, set, \"\");\n    }\n    startsWithAnyOfIgnoreCase() {\n        var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return emptyCollection(this);\n        return addIgnoreCaseAlgorithm(this, (x, a) => a.some(n => x.indexOf(n) === 0), set, maxString);\n    }\n    anyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        let compare = this._cmp;\n        try {\n            set.sort(compare);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        const c = new this.Collection(this, () => createRange(set[0], set[set.length - 1]));\n        c._ondirectionchange = direction => {\n            compare = (direction === \"next\" ?\n                this._ascending :\n                this._descending);\n            set.sort(compare);\n        };\n        let i = 0;\n        c._addAlgorithm((cursor, advance, resolve) => {\n            const key = cursor.key;\n            while (compare(key, set[i]) > 0) {\n                ++i;\n                if (i === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (compare(key, set[i]) === 0) {\n                return true;\n            }\n            else {\n                advance(() => { cursor.continue(set[i]); });\n                return false;\n            }\n        });\n        return c;\n    }\n    notEqual(value) {\n        return this.inAnyRange([[minKey, value], [value, this.db._maxKey]], { includeLowers: false, includeUppers: false });\n    }\n    noneOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (set.length === 0)\n            return new this.Collection(this);\n        try {\n            set.sort(this._ascending);\n        }\n        catch (e) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        const ranges = set.reduce((res, val) => res ?\n            res.concat([[res[res.length - 1][1], val]]) :\n            [[minKey, val]], null);\n        ranges.push([set[set.length - 1], this.db._maxKey]);\n        return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });\n    }\n    inAnyRange(ranges, options) {\n        const cmp = this._cmp, ascending = this._ascending, descending = this._descending, min = this._min, max = this._max;\n        if (ranges.length === 0)\n            return emptyCollection(this);\n        if (!ranges.every(range => range[0] !== undefined &&\n            range[1] !== undefined &&\n            ascending(range[0], range[1]) <= 0)) {\n            return fail(this, \"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower\", exceptions.InvalidArgument);\n        }\n        const includeLowers = !options || options.includeLowers !== false;\n        const includeUppers = options && options.includeUppers === true;\n        function addRange(ranges, newRange) {\n            let i = 0, l = ranges.length;\n            for (; i < l; ++i) {\n                const range = ranges[i];\n                if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {\n                    range[0] = min(range[0], newRange[0]);\n                    range[1] = max(range[1], newRange[1]);\n                    break;\n                }\n            }\n            if (i === l)\n                ranges.push(newRange);\n            return ranges;\n        }\n        let sortDirection = ascending;\n        function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }\n        let set;\n        try {\n            set = ranges.reduce(addRange, []);\n            set.sort(rangeSorter);\n        }\n        catch (ex) {\n            return fail(this, INVALID_KEY_ARGUMENT);\n        }\n        let rangePos = 0;\n        const keyIsBeyondCurrentEntry = includeUppers ?\n            key => ascending(key, set[rangePos][1]) > 0 :\n            key => ascending(key, set[rangePos][1]) >= 0;\n        const keyIsBeforeCurrentEntry = includeLowers ?\n            key => descending(key, set[rangePos][0]) > 0 :\n            key => descending(key, set[rangePos][0]) >= 0;\n        function keyWithinCurrentRange(key) {\n            return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);\n        }\n        let checkKey = keyIsBeyondCurrentEntry;\n        const c = new this.Collection(this, () => createRange(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers));\n        c._ondirectionchange = direction => {\n            if (direction === \"next\") {\n                checkKey = keyIsBeyondCurrentEntry;\n                sortDirection = ascending;\n            }\n            else {\n                checkKey = keyIsBeforeCurrentEntry;\n                sortDirection = descending;\n            }\n            set.sort(rangeSorter);\n        };\n        c._addAlgorithm((cursor, advance, resolve) => {\n            var key = cursor.key;\n            while (checkKey(key)) {\n                ++rangePos;\n                if (rangePos === set.length) {\n                    advance(resolve);\n                    return false;\n                }\n            }\n            if (keyWithinCurrentRange(key)) {\n                return true;\n            }\n            else if (this._cmp(key, set[rangePos][1]) === 0 || this._cmp(key, set[rangePos][0]) === 0) {\n                return false;\n            }\n            else {\n                advance(() => {\n                    if (sortDirection === ascending)\n                        cursor.continue(set[rangePos][0]);\n                    else\n                        cursor.continue(set[rangePos][1]);\n                });\n                return false;\n            }\n        });\n        return c;\n    }\n    startsWithAnyOf() {\n        const set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);\n        if (!set.every(s => typeof s === 'string')) {\n            return fail(this, \"startsWithAnyOf() only works with strings\");\n        }\n        if (set.length === 0)\n            return emptyCollection(this);\n        return this.inAnyRange(set.map((str) => [str, str + maxString]));\n    }\n}\n\nfunction createWhereClauseConstructor(db) {\n    return makeClassConstructor(WhereClause.prototype, function WhereClause(table, index, orCollection) {\n        this.db = db;\n        this._ctx = {\n            table: table,\n            index: index === \":id\" ? null : index,\n            or: orCollection\n        };\n        const indexedDB = db._deps.indexedDB;\n        if (!indexedDB)\n            throw new exceptions.MissingAPI();\n        this._cmp = this._ascending = indexedDB.cmp.bind(indexedDB);\n        this._descending = (a, b) => indexedDB.cmp(b, a);\n        this._max = (a, b) => indexedDB.cmp(a, b) > 0 ? a : b;\n        this._min = (a, b) => indexedDB.cmp(a, b) < 0 ? a : b;\n        this._IDBKeyRange = db._deps.IDBKeyRange;\n    });\n}\n\nfunction eventRejectHandler(reject) {\n    return wrap(function (event) {\n        preventDefault(event);\n        reject(event.target.error);\n        return false;\n    });\n}\nfunction preventDefault(event) {\n    if (event.stopPropagation)\n        event.stopPropagation();\n    if (event.preventDefault)\n        event.preventDefault();\n}\n\nconst DEXIE_STORAGE_MUTATED_EVENT_NAME = 'storagemutated';\nconst STORAGE_MUTATED_DOM_EVENT_NAME = 'x-storagemutated-1';\nconst globalEvents = Events(null, DEXIE_STORAGE_MUTATED_EVENT_NAME);\n\nclass Transaction {\n    _lock() {\n        assert(!PSD.global);\n        ++this._reculock;\n        if (this._reculock === 1 && !PSD.global)\n            PSD.lockOwnerFor = this;\n        return this;\n    }\n    _unlock() {\n        assert(!PSD.global);\n        if (--this._reculock === 0) {\n            if (!PSD.global)\n                PSD.lockOwnerFor = null;\n            while (this._blockedFuncs.length > 0 && !this._locked()) {\n                var fnAndPSD = this._blockedFuncs.shift();\n                try {\n                    usePSD(fnAndPSD[1], fnAndPSD[0]);\n                }\n                catch (e) { }\n            }\n        }\n        return this;\n    }\n    _locked() {\n        return this._reculock && PSD.lockOwnerFor !== this;\n    }\n    create(idbtrans) {\n        if (!this.mode)\n            return this;\n        const idbdb = this.db.idbdb;\n        const dbOpenError = this.db._state.dbOpenError;\n        assert(!this.idbtrans);\n        if (!idbtrans && !idbdb) {\n            switch (dbOpenError && dbOpenError.name) {\n                case \"DatabaseClosedError\":\n                    throw new exceptions.DatabaseClosed(dbOpenError);\n                case \"MissingAPIError\":\n                    throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);\n                default:\n                    throw new exceptions.OpenFailed(dbOpenError);\n            }\n        }\n        if (!this.active)\n            throw new exceptions.TransactionInactive();\n        assert(this._completion._state === null);\n        idbtrans = this.idbtrans = idbtrans ||\n            (this.db.core\n                ? this.db.core.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability })\n                : idbdb.transaction(this.storeNames, this.mode, { durability: this.chromeTransactionDurability }));\n        idbtrans.onerror = wrap(ev => {\n            preventDefault(ev);\n            this._reject(idbtrans.error);\n        });\n        idbtrans.onabort = wrap(ev => {\n            preventDefault(ev);\n            this.active && this._reject(new exceptions.Abort(idbtrans.error));\n            this.active = false;\n            this.on(\"abort\").fire(ev);\n        });\n        idbtrans.oncomplete = wrap(() => {\n            this.active = false;\n            this._resolve();\n            if ('mutatedParts' in idbtrans) {\n                globalEvents.storagemutated.fire(idbtrans[\"mutatedParts\"]);\n            }\n        });\n        return this;\n    }\n    _promise(mode, fn, bWriteLock) {\n        if (mode === 'readwrite' && this.mode !== 'readwrite')\n            return rejection(new exceptions.ReadOnly(\"Transaction is readonly\"));\n        if (!this.active)\n            return rejection(new exceptions.TransactionInactive());\n        if (this._locked()) {\n            return new DexiePromise((resolve, reject) => {\n                this._blockedFuncs.push([() => {\n                        this._promise(mode, fn, bWriteLock).then(resolve, reject);\n                    }, PSD]);\n            });\n        }\n        else if (bWriteLock) {\n            return newScope(() => {\n                var p = new DexiePromise((resolve, reject) => {\n                    this._lock();\n                    const rv = fn(resolve, reject, this);\n                    if (rv && rv.then)\n                        rv.then(resolve, reject);\n                });\n                p.finally(() => this._unlock());\n                p._lib = true;\n                return p;\n            });\n        }\n        else {\n            var p = new DexiePromise((resolve, reject) => {\n                var rv = fn(resolve, reject, this);\n                if (rv && rv.then)\n                    rv.then(resolve, reject);\n            });\n            p._lib = true;\n            return p;\n        }\n    }\n    _root() {\n        return this.parent ? this.parent._root() : this;\n    }\n    waitFor(promiseLike) {\n        var root = this._root();\n        const promise = DexiePromise.resolve(promiseLike);\n        if (root._waitingFor) {\n            root._waitingFor = root._waitingFor.then(() => promise);\n        }\n        else {\n            root._waitingFor = promise;\n            root._waitingQueue = [];\n            var store = root.idbtrans.objectStore(root.storeNames[0]);\n            (function spin() {\n                ++root._spinCount;\n                while (root._waitingQueue.length)\n                    (root._waitingQueue.shift())();\n                if (root._waitingFor)\n                    store.get(-Infinity).onsuccess = spin;\n            }());\n        }\n        var currentWaitPromise = root._waitingFor;\n        return new DexiePromise((resolve, reject) => {\n            promise.then(res => root._waitingQueue.push(wrap(resolve.bind(null, res))), err => root._waitingQueue.push(wrap(reject.bind(null, err)))).finally(() => {\n                if (root._waitingFor === currentWaitPromise) {\n                    root._waitingFor = null;\n                }\n            });\n        });\n    }\n    abort() {\n        if (this.active) {\n            this.active = false;\n            if (this.idbtrans)\n                this.idbtrans.abort();\n            this._reject(new exceptions.Abort());\n        }\n    }\n    table(tableName) {\n        const memoizedTables = (this._memoizedTables || (this._memoizedTables = {}));\n        if (hasOwn(memoizedTables, tableName))\n            return memoizedTables[tableName];\n        const tableSchema = this.schema[tableName];\n        if (!tableSchema) {\n            throw new exceptions.NotFound(\"Table \" + tableName + \" not part of transaction\");\n        }\n        const transactionBoundTable = new this.db.Table(tableName, tableSchema, this);\n        transactionBoundTable.core = this.db.core.table(tableName);\n        memoizedTables[tableName] = transactionBoundTable;\n        return transactionBoundTable;\n    }\n}\n\nfunction createTransactionConstructor(db) {\n    return makeClassConstructor(Transaction.prototype, function Transaction(mode, storeNames, dbschema, chromeTransactionDurability, parent) {\n        this.db = db;\n        this.mode = mode;\n        this.storeNames = storeNames;\n        this.schema = dbschema;\n        this.chromeTransactionDurability = chromeTransactionDurability;\n        this.idbtrans = null;\n        this.on = Events(this, \"complete\", \"error\", \"abort\");\n        this.parent = parent || null;\n        this.active = true;\n        this._reculock = 0;\n        this._blockedFuncs = [];\n        this._resolve = null;\n        this._reject = null;\n        this._waitingFor = null;\n        this._waitingQueue = null;\n        this._spinCount = 0;\n        this._completion = new DexiePromise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._completion.then(() => {\n            this.active = false;\n            this.on.complete.fire();\n        }, e => {\n            var wasActive = this.active;\n            this.active = false;\n            this.on.error.fire(e);\n            this.parent ?\n                this.parent._reject(e) :\n                wasActive && this.idbtrans && this.idbtrans.abort();\n            return rejection(e);\n        });\n    });\n}\n\nfunction createIndexSpec(name, keyPath, unique, multi, auto, compound, isPrimKey) {\n    return {\n        name,\n        keyPath,\n        unique,\n        multi,\n        auto,\n        compound,\n        src: (unique && !isPrimKey ? '&' : '') + (multi ? '*' : '') + (auto ? \"++\" : \"\") + nameFromKeyPath(keyPath)\n    };\n}\nfunction nameFromKeyPath(keyPath) {\n    return typeof keyPath === 'string' ?\n        keyPath :\n        keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n\nfunction createTableSchema(name, primKey, indexes) {\n    return {\n        name,\n        primKey,\n        indexes,\n        mappedClass: null,\n        idxByName: arrayToObject(indexes, index => [index.name, index])\n    };\n}\n\nfunction safariMultiStoreFix(storeNames) {\n    return storeNames.length === 1 ? storeNames[0] : storeNames;\n}\nlet getMaxKey = (IdbKeyRange) => {\n    try {\n        IdbKeyRange.only([[]]);\n        getMaxKey = () => [[]];\n        return [[]];\n    }\n    catch (e) {\n        getMaxKey = () => maxString;\n        return maxString;\n    }\n};\n\nfunction getKeyExtractor(keyPath) {\n    if (keyPath == null) {\n        return () => undefined;\n    }\n    else if (typeof keyPath === 'string') {\n        return getSinglePathKeyExtractor(keyPath);\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\nfunction getSinglePathKeyExtractor(keyPath) {\n    const split = keyPath.split('.');\n    if (split.length === 1) {\n        return obj => obj[keyPath];\n    }\n    else {\n        return obj => getByKeyPath(obj, keyPath);\n    }\n}\n\nfunction arrayify(arrayLike) {\n    return [].slice.call(arrayLike);\n}\nlet _id_counter = 0;\nfunction getKeyPathAlias(keyPath) {\n    return keyPath == null ?\n        \":id\" :\n        typeof keyPath === 'string' ?\n            keyPath :\n            `[${keyPath.join('+')}]`;\n}\nfunction createDBCore(db, IdbKeyRange, tmpTrans) {\n    function extractSchema(db, trans) {\n        const tables = arrayify(db.objectStoreNames);\n        return {\n            schema: {\n                name: db.name,\n                tables: tables.map(table => trans.objectStore(table)).map(store => {\n                    const { keyPath, autoIncrement } = store;\n                    const compound = isArray(keyPath);\n                    const outbound = keyPath == null;\n                    const indexByKeyPath = {};\n                    const result = {\n                        name: store.name,\n                        primaryKey: {\n                            name: null,\n                            isPrimaryKey: true,\n                            outbound,\n                            compound,\n                            keyPath,\n                            autoIncrement,\n                            unique: true,\n                            extractKey: getKeyExtractor(keyPath)\n                        },\n                        indexes: arrayify(store.indexNames).map(indexName => store.index(indexName))\n                            .map(index => {\n                            const { name, unique, multiEntry, keyPath } = index;\n                            const compound = isArray(keyPath);\n                            const result = {\n                                name,\n                                compound,\n                                keyPath,\n                                unique,\n                                multiEntry,\n                                extractKey: getKeyExtractor(keyPath)\n                            };\n                            indexByKeyPath[getKeyPathAlias(keyPath)] = result;\n                            return result;\n                        }),\n                        getIndexByKeyPath: (keyPath) => indexByKeyPath[getKeyPathAlias(keyPath)]\n                    };\n                    indexByKeyPath[\":id\"] = result.primaryKey;\n                    if (keyPath != null) {\n                        indexByKeyPath[getKeyPathAlias(keyPath)] = result.primaryKey;\n                    }\n                    return result;\n                })\n            },\n            hasGetAll: tables.length > 0 && ('getAll' in trans.objectStore(tables[0])) &&\n                !(typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n                    !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n                    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604)\n        };\n    }\n    function makeIDBKeyRange(range) {\n        if (range.type === 3 )\n            return null;\n        if (range.type === 4 )\n            throw new Error(\"Cannot convert never type to IDBKeyRange\");\n        const { lower, upper, lowerOpen, upperOpen } = range;\n        const idbRange = lower === undefined ?\n            upper === undefined ?\n                null :\n                IdbKeyRange.upperBound(upper, !!upperOpen) :\n            upper === undefined ?\n                IdbKeyRange.lowerBound(lower, !!lowerOpen) :\n                IdbKeyRange.bound(lower, upper, !!lowerOpen, !!upperOpen);\n        return idbRange;\n    }\n    function createDbCoreTable(tableSchema) {\n        const tableName = tableSchema.name;\n        function mutate({ trans, type, keys, values, range }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const store = trans.objectStore(tableName);\n                const outbound = store.keyPath == null;\n                const isAddOrPut = type === \"put\" || type === \"add\";\n                if (!isAddOrPut && type !== 'delete' && type !== 'deleteRange')\n                    throw new Error(\"Invalid operation type: \" + type);\n                const { length } = keys || values || { length: 1 };\n                if (keys && values && keys.length !== values.length) {\n                    throw new Error(\"Given keys array must have same length as given values array.\");\n                }\n                if (length === 0)\n                    return resolve({ numFailures: 0, failures: {}, results: [], lastResult: undefined });\n                let req;\n                const reqs = [];\n                const failures = [];\n                let numFailures = 0;\n                const errorHandler = event => {\n                    ++numFailures;\n                    preventDefault(event);\n                };\n                if (type === 'deleteRange') {\n                    if (range.type === 4 )\n                        return resolve({ numFailures, failures, results: [], lastResult: undefined });\n                    if (range.type === 3 )\n                        reqs.push(req = store.clear());\n                    else\n                        reqs.push(req = store.delete(makeIDBKeyRange(range)));\n                }\n                else {\n                    const [args1, args2] = isAddOrPut ?\n                        outbound ?\n                            [values, keys] :\n                            [values, null] :\n                        [keys, null];\n                    if (isAddOrPut) {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = (args2 && args2[i] !== undefined ?\n                                store[type](args1[i], args2[i]) :\n                                store[type](args1[i])));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < length; ++i) {\n                            reqs.push(req = store[type](args1[i]));\n                            req.onerror = errorHandler;\n                        }\n                    }\n                }\n                const done = event => {\n                    const lastResult = event.target.result;\n                    reqs.forEach((req, i) => req.error != null && (failures[i] = req.error));\n                    resolve({\n                        numFailures,\n                        failures,\n                        results: type === \"delete\" ? keys : reqs.map(req => req.result),\n                        lastResult\n                    });\n                };\n                req.onerror = event => {\n                    errorHandler(event);\n                    done(event);\n                };\n                req.onsuccess = done;\n            });\n        }\n        function openCursor({ trans, values, query, reverse, unique }) {\n            return new Promise((resolve, reject) => {\n                resolve = wrap(resolve);\n                const { index, range } = query;\n                const store = trans.objectStore(tableName);\n                const source = index.isPrimaryKey ?\n                    store :\n                    store.index(index.name);\n                const direction = reverse ?\n                    unique ?\n                        \"prevunique\" :\n                        \"prev\" :\n                    unique ?\n                        \"nextunique\" :\n                        \"next\";\n                const req = values || !('openKeyCursor' in source) ?\n                    source.openCursor(makeIDBKeyRange(range), direction) :\n                    source.openKeyCursor(makeIDBKeyRange(range), direction);\n                req.onerror = eventRejectHandler(reject);\n                req.onsuccess = wrap(ev => {\n                    const cursor = req.result;\n                    if (!cursor) {\n                        resolve(null);\n                        return;\n                    }\n                    cursor.___id = ++_id_counter;\n                    cursor.done = false;\n                    const _cursorContinue = cursor.continue.bind(cursor);\n                    let _cursorContinuePrimaryKey = cursor.continuePrimaryKey;\n                    if (_cursorContinuePrimaryKey)\n                        _cursorContinuePrimaryKey = _cursorContinuePrimaryKey.bind(cursor);\n                    const _cursorAdvance = cursor.advance.bind(cursor);\n                    const doThrowCursorIsNotStarted = () => { throw new Error(\"Cursor not started\"); };\n                    const doThrowCursorIsStopped = () => { throw new Error(\"Cursor not stopped\"); };\n                    cursor.trans = trans;\n                    cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsNotStarted;\n                    cursor.fail = wrap(reject);\n                    cursor.next = function () {\n                        let gotOne = 1;\n                        return this.start(() => gotOne-- ? this.continue() : this.stop()).then(() => this);\n                    };\n                    cursor.start = (callback) => {\n                        const iterationPromise = new Promise((resolveIteration, rejectIteration) => {\n                            resolveIteration = wrap(resolveIteration);\n                            req.onerror = eventRejectHandler(rejectIteration);\n                            cursor.fail = rejectIteration;\n                            cursor.stop = value => {\n                                cursor.stop = cursor.continue = cursor.continuePrimaryKey = cursor.advance = doThrowCursorIsStopped;\n                                resolveIteration(value);\n                            };\n                        });\n                        const guardedCallback = () => {\n                            if (req.result) {\n                                try {\n                                    callback();\n                                }\n                                catch (err) {\n                                    cursor.fail(err);\n                                }\n                            }\n                            else {\n                                cursor.done = true;\n                                cursor.start = () => { throw new Error(\"Cursor behind last entry\"); };\n                                cursor.stop();\n                            }\n                        };\n                        req.onsuccess = wrap(ev => {\n                            req.onsuccess = guardedCallback;\n                            guardedCallback();\n                        });\n                        cursor.continue = _cursorContinue;\n                        cursor.continuePrimaryKey = _cursorContinuePrimaryKey;\n                        cursor.advance = _cursorAdvance;\n                        guardedCallback();\n                        return iterationPromise;\n                    };\n                    resolve(cursor);\n                }, reject);\n            });\n        }\n        function query(hasGetAll) {\n            return (request) => {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const { trans, values, limit, query } = request;\n                    const nonInfinitLimit = limit === Infinity ? undefined : limit;\n                    const { index, range } = query;\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    if (limit === 0)\n                        return resolve({ result: [] });\n                    if (hasGetAll) {\n                        const req = values ?\n                            source.getAll(idbKeyRange, nonInfinitLimit) :\n                            source.getAllKeys(idbKeyRange, nonInfinitLimit);\n                        req.onsuccess = event => resolve({ result: event.target.result });\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                    else {\n                        let count = 0;\n                        const req = values || !('openKeyCursor' in source) ?\n                            source.openCursor(idbKeyRange) :\n                            source.openKeyCursor(idbKeyRange);\n                        const result = [];\n                        req.onsuccess = event => {\n                            const cursor = req.result;\n                            if (!cursor)\n                                return resolve({ result });\n                            result.push(values ? cursor.value : cursor.primaryKey);\n                            if (++count === limit)\n                                return resolve({ result });\n                            cursor.continue();\n                        };\n                        req.onerror = eventRejectHandler(reject);\n                    }\n                });\n            };\n        }\n        return {\n            name: tableName,\n            schema: tableSchema,\n            mutate,\n            getMany({ trans, keys }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const length = keys.length;\n                    const result = new Array(length);\n                    let keyCount = 0;\n                    let callbackCount = 0;\n                    let req;\n                    const successHandler = event => {\n                        const req = event.target;\n                        if ((result[req._pos] = req.result) != null)\n                            ;\n                        if (++callbackCount === keyCount)\n                            resolve(result);\n                    };\n                    const errorHandler = eventRejectHandler(reject);\n                    for (let i = 0; i < length; ++i) {\n                        const key = keys[i];\n                        if (key != null) {\n                            req = store.get(keys[i]);\n                            req._pos = i;\n                            req.onsuccess = successHandler;\n                            req.onerror = errorHandler;\n                            ++keyCount;\n                        }\n                    }\n                    if (keyCount === 0)\n                        resolve(result);\n                });\n            },\n            get({ trans, key }) {\n                return new Promise((resolve, reject) => {\n                    resolve = wrap(resolve);\n                    const store = trans.objectStore(tableName);\n                    const req = store.get(key);\n                    req.onsuccess = event => resolve(event.target.result);\n                    req.onerror = eventRejectHandler(reject);\n                });\n            },\n            query: query(hasGetAll),\n            openCursor,\n            count({ query, trans }) {\n                const { index, range } = query;\n                return new Promise((resolve, reject) => {\n                    const store = trans.objectStore(tableName);\n                    const source = index.isPrimaryKey ? store : store.index(index.name);\n                    const idbKeyRange = makeIDBKeyRange(range);\n                    const req = idbKeyRange ? source.count(idbKeyRange) : source.count();\n                    req.onsuccess = wrap(ev => resolve(ev.target.result));\n                    req.onerror = eventRejectHandler(reject);\n                });\n            }\n        };\n    }\n    const { schema, hasGetAll } = extractSchema(db, tmpTrans);\n    const tables = schema.tables.map(tableSchema => createDbCoreTable(tableSchema));\n    const tableMap = {};\n    tables.forEach(table => tableMap[table.name] = table);\n    return {\n        stack: \"dbcore\",\n        transaction: db.transaction.bind(db),\n        table(name) {\n            const result = tableMap[name];\n            if (!result)\n                throw new Error(`Table '${name}' not found`);\n            return tableMap[name];\n        },\n        MIN_KEY: -Infinity,\n        MAX_KEY: getMaxKey(IdbKeyRange),\n        schema\n    };\n}\n\nfunction createMiddlewareStack(stackImpl, middlewares) {\n    return middlewares.reduce((down, { create }) => ({ ...down, ...create(down) }), stackImpl);\n}\nfunction createMiddlewareStacks(middlewares, idbdb, { IDBKeyRange, indexedDB }, tmpTrans) {\n    const dbcore = createMiddlewareStack(createDBCore(idbdb, IDBKeyRange, tmpTrans), middlewares.dbcore);\n    return {\n        dbcore\n    };\n}\nfunction generateMiddlewareStacks({ _novip: db }, tmpTrans) {\n    const idbdb = tmpTrans.db;\n    const stacks = createMiddlewareStacks(db._middlewares, idbdb, db._deps, tmpTrans);\n    db.core = stacks.dbcore;\n    db.tables.forEach(table => {\n        const tableName = table.name;\n        if (db.core.schema.tables.some(tbl => tbl.name === tableName)) {\n            table.core = db.core.table(tableName);\n            if (db[tableName] instanceof db.Table) {\n                db[tableName].core = table.core;\n            }\n        }\n    });\n}\n\nfunction setApiOnPlace({ _novip: db }, objs, tableNames, dbschema) {\n    tableNames.forEach(tableName => {\n        const schema = dbschema[tableName];\n        objs.forEach(obj => {\n            const propDesc = getPropertyDescriptor(obj, tableName);\n            if (!propDesc || (\"value\" in propDesc && propDesc.value === undefined)) {\n                if (obj === db.Transaction.prototype || obj instanceof db.Transaction) {\n                    setProp(obj, tableName, {\n                        get() { return this.table(tableName); },\n                        set(value) {\n                            defineProperty(this, tableName, { value, writable: true, configurable: true, enumerable: true });\n                        }\n                    });\n                }\n                else {\n                    obj[tableName] = new db.Table(tableName, schema);\n                }\n            }\n        });\n    });\n}\nfunction removeTablesApi({ _novip: db }, objs) {\n    objs.forEach(obj => {\n        for (let key in obj) {\n            if (obj[key] instanceof db.Table)\n                delete obj[key];\n        }\n    });\n}\nfunction lowerVersionFirst(a, b) {\n    return a._cfg.version - b._cfg.version;\n}\nfunction runUpgraders(db, oldVersion, idbUpgradeTrans, reject) {\n    const globalSchema = db._dbSchema;\n    const trans = db._createTransaction('readwrite', db._storeNames, globalSchema);\n    trans.create(idbUpgradeTrans);\n    trans._completion.catch(reject);\n    const rejectTransaction = trans._reject.bind(trans);\n    const transless = PSD.transless || PSD;\n    newScope(() => {\n        PSD.trans = trans;\n        PSD.transless = transless;\n        if (oldVersion === 0) {\n            keys(globalSchema).forEach(tableName => {\n                createTable(idbUpgradeTrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);\n            });\n            generateMiddlewareStacks(db, idbUpgradeTrans);\n            DexiePromise.follow(() => db.on.populate.fire(trans)).catch(rejectTransaction);\n        }\n        else\n            updateTablesAndIndexes(db, oldVersion, trans, idbUpgradeTrans).catch(rejectTransaction);\n    });\n}\nfunction updateTablesAndIndexes({ _novip: db }, oldVersion, trans, idbUpgradeTrans) {\n    const queue = [];\n    const versions = db._versions;\n    let globalSchema = db._dbSchema = buildGlobalSchema(db, db.idbdb, idbUpgradeTrans);\n    let anyContentUpgraderHasRun = false;\n    const versToRun = versions.filter(v => v._cfg.version >= oldVersion);\n    versToRun.forEach(version => {\n        queue.push(() => {\n            const oldSchema = globalSchema;\n            const newSchema = version._cfg.dbschema;\n            adjustToExistingIndexNames(db, oldSchema, idbUpgradeTrans);\n            adjustToExistingIndexNames(db, newSchema, idbUpgradeTrans);\n            globalSchema = db._dbSchema = newSchema;\n            const diff = getSchemaDiff(oldSchema, newSchema);\n            diff.add.forEach(tuple => {\n                createTable(idbUpgradeTrans, tuple[0], tuple[1].primKey, tuple[1].indexes);\n            });\n            diff.change.forEach(change => {\n                if (change.recreate) {\n                    throw new exceptions.Upgrade(\"Not yet support for changing primary key\");\n                }\n                else {\n                    const store = idbUpgradeTrans.objectStore(change.name);\n                    change.add.forEach(idx => addIndex(store, idx));\n                    change.change.forEach(idx => {\n                        store.deleteIndex(idx.name);\n                        addIndex(store, idx);\n                    });\n                    change.del.forEach(idxName => store.deleteIndex(idxName));\n                }\n            });\n            const contentUpgrade = version._cfg.contentUpgrade;\n            if (contentUpgrade && version._cfg.version > oldVersion) {\n                generateMiddlewareStacks(db, idbUpgradeTrans);\n                trans._memoizedTables = {};\n                anyContentUpgraderHasRun = true;\n                let upgradeSchema = shallowClone(newSchema);\n                diff.del.forEach(table => {\n                    upgradeSchema[table] = oldSchema[table];\n                });\n                removeTablesApi(db, [db.Transaction.prototype]);\n                setApiOnPlace(db, [db.Transaction.prototype], keys(upgradeSchema), upgradeSchema);\n                trans.schema = upgradeSchema;\n                const contentUpgradeIsAsync = isAsyncFunction(contentUpgrade);\n                if (contentUpgradeIsAsync) {\n                    incrementExpectedAwaits();\n                }\n                let returnValue;\n                const promiseFollowed = DexiePromise.follow(() => {\n                    returnValue = contentUpgrade(trans);\n                    if (returnValue) {\n                        if (contentUpgradeIsAsync) {\n                            var decrementor = decrementExpectedAwaits.bind(null, null);\n                            returnValue.then(decrementor, decrementor);\n                        }\n                    }\n                });\n                return (returnValue && typeof returnValue.then === 'function' ?\n                    DexiePromise.resolve(returnValue) : promiseFollowed.then(() => returnValue));\n            }\n        });\n        queue.push(idbtrans => {\n            if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {\n                const newSchema = version._cfg.dbschema;\n                deleteRemovedTables(newSchema, idbtrans);\n            }\n            removeTablesApi(db, [db.Transaction.prototype]);\n            setApiOnPlace(db, [db.Transaction.prototype], db._storeNames, db._dbSchema);\n            trans.schema = db._dbSchema;\n        });\n    });\n    function runQueue() {\n        return queue.length ? DexiePromise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :\n            DexiePromise.resolve();\n    }\n    return runQueue().then(() => {\n        createMissingTables(globalSchema, idbUpgradeTrans);\n    });\n}\nfunction getSchemaDiff(oldSchema, newSchema) {\n    const diff = {\n        del: [],\n        add: [],\n        change: []\n    };\n    let table;\n    for (table in oldSchema) {\n        if (!newSchema[table])\n            diff.del.push(table);\n    }\n    for (table in newSchema) {\n        const oldDef = oldSchema[table], newDef = newSchema[table];\n        if (!oldDef) {\n            diff.add.push([table, newDef]);\n        }\n        else {\n            const change = {\n                name: table,\n                def: newDef,\n                recreate: false,\n                del: [],\n                add: [],\n                change: []\n            };\n            if ((\n            '' + (oldDef.primKey.keyPath || '')) !== ('' + (newDef.primKey.keyPath || '')) ||\n                (oldDef.primKey.auto !== newDef.primKey.auto && !isIEOrEdge))\n             {\n                change.recreate = true;\n                diff.change.push(change);\n            }\n            else {\n                const oldIndexes = oldDef.idxByName;\n                const newIndexes = newDef.idxByName;\n                let idxName;\n                for (idxName in oldIndexes) {\n                    if (!newIndexes[idxName])\n                        change.del.push(idxName);\n                }\n                for (idxName in newIndexes) {\n                    const oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];\n                    if (!oldIdx)\n                        change.add.push(newIdx);\n                    else if (oldIdx.src !== newIdx.src)\n                        change.change.push(newIdx);\n                }\n                if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {\n                    diff.change.push(change);\n                }\n            }\n        }\n    }\n    return diff;\n}\nfunction createTable(idbtrans, tableName, primKey, indexes) {\n    const store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ?\n        { keyPath: primKey.keyPath, autoIncrement: primKey.auto } :\n        { autoIncrement: primKey.auto });\n    indexes.forEach(idx => addIndex(store, idx));\n    return store;\n}\nfunction createMissingTables(newSchema, idbtrans) {\n    keys(newSchema).forEach(tableName => {\n        if (!idbtrans.db.objectStoreNames.contains(tableName)) {\n            createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);\n        }\n    });\n}\nfunction deleteRemovedTables(newSchema, idbtrans) {\n    [].slice.call(idbtrans.db.objectStoreNames).forEach(storeName => newSchema[storeName] == null && idbtrans.db.deleteObjectStore(storeName));\n}\nfunction addIndex(store, idx) {\n    store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });\n}\nfunction buildGlobalSchema(db, idbdb, tmpTrans) {\n    const globalSchema = {};\n    const dbStoreNames = slice(idbdb.objectStoreNames, 0);\n    dbStoreNames.forEach(storeName => {\n        const store = tmpTrans.objectStore(storeName);\n        let keyPath = store.keyPath;\n        const primKey = createIndexSpec(nameFromKeyPath(keyPath), keyPath || \"\", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== \"string\", true);\n        const indexes = [];\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const idbindex = store.index(store.indexNames[j]);\n            keyPath = idbindex.keyPath;\n            var index = createIndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== \"string\", false);\n            indexes.push(index);\n        }\n        globalSchema[storeName] = createTableSchema(storeName, primKey, indexes);\n    });\n    return globalSchema;\n}\nfunction readGlobalSchema({ _novip: db }, idbdb, tmpTrans) {\n    db.verno = idbdb.version / 10;\n    const globalSchema = db._dbSchema = buildGlobalSchema(db, idbdb, tmpTrans);\n    db._storeNames = slice(idbdb.objectStoreNames, 0);\n    setApiOnPlace(db, [db._allTables], keys(globalSchema), globalSchema);\n}\nfunction verifyInstalledSchema(db, tmpTrans) {\n    const installedSchema = buildGlobalSchema(db, db.idbdb, tmpTrans);\n    const diff = getSchemaDiff(installedSchema, db._dbSchema);\n    return !(diff.add.length || diff.change.some(ch => ch.add.length || ch.change.length));\n}\nfunction adjustToExistingIndexNames({ _novip: db }, schema, idbtrans) {\n    const storeNames = idbtrans.db.objectStoreNames;\n    for (let i = 0; i < storeNames.length; ++i) {\n        const storeName = storeNames[i];\n        const store = idbtrans.objectStore(storeName);\n        db._hasGetAll = 'getAll' in store;\n        for (let j = 0; j < store.indexNames.length; ++j) {\n            const indexName = store.indexNames[j];\n            const keyPath = store.index(indexName).keyPath;\n            const dexieName = typeof keyPath === 'string' ? keyPath : \"[\" + slice(keyPath).join('+') + \"]\";\n            if (schema[storeName]) {\n                const indexSpec = schema[storeName].idxByName[dexieName];\n                if (indexSpec) {\n                    indexSpec.name = indexName;\n                    delete schema[storeName].idxByName[dexieName];\n                    schema[storeName].idxByName[indexName] = indexSpec;\n                }\n            }\n        }\n    }\n    if (typeof navigator !== 'undefined' && /Safari/.test(navigator.userAgent) &&\n        !/(Chrome\\/|Edge\\/)/.test(navigator.userAgent) &&\n        _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&\n        [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1] < 604) {\n        db._hasGetAll = false;\n    }\n}\nfunction parseIndexSyntax(primKeyAndIndexes) {\n    return primKeyAndIndexes.split(',').map((index, indexNum) => {\n        index = index.trim();\n        const name = index.replace(/([&*]|\\+\\+)/g, \"\");\n        const keyPath = /^\\[/.test(name) ? name.match(/^\\[(.*)\\]$/)[1].split('+') : name;\n        return createIndexSpec(name, keyPath || null, /\\&/.test(index), /\\*/.test(index), /\\+\\+/.test(index), isArray(keyPath), indexNum === 0);\n    });\n}\n\nclass Version {\n    _parseStoresSpec(stores, outSchema) {\n        keys(stores).forEach(tableName => {\n            if (stores[tableName] !== null) {\n                var indexes = parseIndexSyntax(stores[tableName]);\n                var primKey = indexes.shift();\n                if (primKey.multi)\n                    throw new exceptions.Schema(\"Primary key cannot be multi-valued\");\n                indexes.forEach(idx => {\n                    if (idx.auto)\n                        throw new exceptions.Schema(\"Only primary key can be marked as autoIncrement (++)\");\n                    if (!idx.keyPath)\n                        throw new exceptions.Schema(\"Index must have a name and cannot be an empty string\");\n                });\n                outSchema[tableName] = createTableSchema(tableName, primKey, indexes);\n            }\n        });\n    }\n    stores(stores) {\n        const db = this.db;\n        this._cfg.storesSource = this._cfg.storesSource ?\n            extend(this._cfg.storesSource, stores) :\n            stores;\n        const versions = db._versions;\n        const storesSpec = {};\n        let dbschema = {};\n        versions.forEach(version => {\n            extend(storesSpec, version._cfg.storesSource);\n            dbschema = (version._cfg.dbschema = {});\n            version._parseStoresSpec(storesSpec, dbschema);\n        });\n        db._dbSchema = dbschema;\n        removeTablesApi(db, [db._allTables, db, db.Transaction.prototype]);\n        setApiOnPlace(db, [db._allTables, db, db.Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);\n        db._storeNames = keys(dbschema);\n        return this;\n    }\n    upgrade(upgradeFunction) {\n        this._cfg.contentUpgrade = promisableChain(this._cfg.contentUpgrade || nop, upgradeFunction);\n        return this;\n    }\n}\n\nfunction createVersionConstructor(db) {\n    return makeClassConstructor(Version.prototype, function Version(versionNumber) {\n        this.db = db;\n        this._cfg = {\n            version: versionNumber,\n            storesSource: null,\n            dbschema: {},\n            tables: {},\n            contentUpgrade: null\n        };\n    });\n}\n\nfunction getDbNamesTable(indexedDB, IDBKeyRange) {\n    let dbNamesDB = indexedDB[\"_dbNamesDB\"];\n    if (!dbNamesDB) {\n        dbNamesDB = indexedDB[\"_dbNamesDB\"] = new Dexie$1(DBNAMES_DB, {\n            addons: [],\n            indexedDB,\n            IDBKeyRange,\n        });\n        dbNamesDB.version(1).stores({ dbnames: \"name\" });\n    }\n    return dbNamesDB.table(\"dbnames\");\n}\nfunction hasDatabasesNative(indexedDB) {\n    return indexedDB && typeof indexedDB.databases === \"function\";\n}\nfunction getDatabaseNames({ indexedDB, IDBKeyRange, }) {\n    return hasDatabasesNative(indexedDB)\n        ? Promise.resolve(indexedDB.databases()).then((infos) => infos\n            .map((info) => info.name)\n            .filter((name) => name !== DBNAMES_DB))\n        : getDbNamesTable(indexedDB, IDBKeyRange).toCollection().primaryKeys();\n}\nfunction _onDatabaseCreated({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).put({ name }).catch(nop);\n}\nfunction _onDatabaseDeleted({ indexedDB, IDBKeyRange }, name) {\n    !hasDatabasesNative(indexedDB) &&\n        name !== DBNAMES_DB &&\n        getDbNamesTable(indexedDB, IDBKeyRange).delete(name).catch(nop);\n}\n\nfunction vip(fn) {\n    return newScope(function () {\n        PSD.letThrough = true;\n        return fn();\n    });\n}\n\nfunction idbReady() {\n    var isSafari = !navigator.userAgentData &&\n        /Safari\\//.test(navigator.userAgent) &&\n        !/Chrom(e|ium)\\//.test(navigator.userAgent);\n    if (!isSafari || !indexedDB.databases)\n        return Promise.resolve();\n    var intervalId;\n    return new Promise(function (resolve) {\n        var tryIdb = function () { return indexedDB.databases().finally(resolve); };\n        intervalId = setInterval(tryIdb, 100);\n        tryIdb();\n    }).finally(function () { return clearInterval(intervalId); });\n}\n\nfunction dexieOpen(db) {\n    const state = db._state;\n    const { indexedDB } = db._deps;\n    if (state.isBeingOpened || db.idbdb)\n        return state.dbReadyPromise.then(() => state.dbOpenError ?\n            rejection(state.dbOpenError) :\n            db);\n    debug && (state.openCanceller._stackHolder = getErrorWithStack());\n    state.isBeingOpened = true;\n    state.dbOpenError = null;\n    state.openComplete = false;\n    const openCanceller = state.openCanceller;\n    function throwIfCancelled() {\n        if (state.openCanceller !== openCanceller)\n            throw new exceptions.DatabaseClosed('db.open() was cancelled');\n    }\n    let resolveDbReady = state.dbReadyResolve,\n    upgradeTransaction = null, wasCreated = false;\n    return DexiePromise.race([openCanceller, (typeof navigator === 'undefined' ? DexiePromise.resolve() : idbReady()).then(() => new DexiePromise((resolve, reject) => {\n            throwIfCancelled();\n            if (!indexedDB)\n                throw new exceptions.MissingAPI();\n            const dbName = db.name;\n            const req = state.autoSchema ?\n                indexedDB.open(dbName) :\n                indexedDB.open(dbName, Math.round(db.verno * 10));\n            if (!req)\n                throw new exceptions.MissingAPI();\n            req.onerror = eventRejectHandler(reject);\n            req.onblocked = wrap(db._fireOnBlocked);\n            req.onupgradeneeded = wrap(e => {\n                upgradeTransaction = req.transaction;\n                if (state.autoSchema && !db._options.allowEmptyDB) {\n                    req.onerror = preventDefault;\n                    upgradeTransaction.abort();\n                    req.result.close();\n                    const delreq = indexedDB.deleteDatabase(dbName);\n                    delreq.onsuccess = delreq.onerror = wrap(() => {\n                        reject(new exceptions.NoSuchDatabase(`Database ${dbName} doesnt exist`));\n                    });\n                }\n                else {\n                    upgradeTransaction.onerror = eventRejectHandler(reject);\n                    var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion;\n                    wasCreated = oldVer < 1;\n                    db._novip.idbdb = req.result;\n                    runUpgraders(db, oldVer / 10, upgradeTransaction, reject);\n                }\n            }, reject);\n            req.onsuccess = wrap(() => {\n                upgradeTransaction = null;\n                const idbdb = db._novip.idbdb = req.result;\n                const objectStoreNames = slice(idbdb.objectStoreNames);\n                if (objectStoreNames.length > 0)\n                    try {\n                        const tmpTrans = idbdb.transaction(safariMultiStoreFix(objectStoreNames), 'readonly');\n                        if (state.autoSchema)\n                            readGlobalSchema(db, idbdb, tmpTrans);\n                        else {\n                            adjustToExistingIndexNames(db, db._dbSchema, tmpTrans);\n                            if (!verifyInstalledSchema(db, tmpTrans)) {\n                                console.warn(`Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.`);\n                            }\n                        }\n                        generateMiddlewareStacks(db, tmpTrans);\n                    }\n                    catch (e) {\n                    }\n                connections.push(db);\n                idbdb.onversionchange = wrap(ev => {\n                    state.vcFired = true;\n                    db.on(\"versionchange\").fire(ev);\n                });\n                idbdb.onclose = wrap(ev => {\n                    db.on(\"close\").fire(ev);\n                });\n                if (wasCreated)\n                    _onDatabaseCreated(db._deps, dbName);\n                resolve();\n            }, reject);\n        }))]).then(() => {\n        throwIfCancelled();\n        state.onReadyBeingFired = [];\n        return DexiePromise.resolve(vip(() => db.on.ready.fire(db.vip))).then(function fireRemainders() {\n            if (state.onReadyBeingFired.length > 0) {\n                let remainders = state.onReadyBeingFired.reduce(promisableChain, nop);\n                state.onReadyBeingFired = [];\n                return DexiePromise.resolve(vip(() => remainders(db.vip))).then(fireRemainders);\n            }\n        });\n    }).finally(() => {\n        state.onReadyBeingFired = null;\n        state.isBeingOpened = false;\n    }).then(() => {\n        return db;\n    }).catch(err => {\n        state.dbOpenError = err;\n        try {\n            upgradeTransaction && upgradeTransaction.abort();\n        }\n        catch (_a) { }\n        if (openCanceller === state.openCanceller) {\n            db._close();\n        }\n        return rejection(err);\n    }).finally(() => {\n        state.openComplete = true;\n        resolveDbReady();\n    });\n}\n\nfunction awaitIterator(iterator) {\n    var callNext = result => iterator.next(result), doThrow = error => iterator.throw(error), onSuccess = step(callNext), onError = step(doThrow);\n    function step(getNext) {\n        return (val) => {\n            var next = getNext(val), value = next.value;\n            return next.done ? value :\n                (!value || typeof value.then !== 'function' ?\n                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :\n                    value.then(onSuccess, onError));\n        };\n    }\n    return step(callNext)();\n}\n\nfunction extractTransactionArgs(mode, _tableArgs_, scopeFunc) {\n    var i = arguments.length;\n    if (i < 2)\n        throw new exceptions.InvalidArgument(\"Too few arguments\");\n    var args = new Array(i - 1);\n    while (--i)\n        args[i - 1] = arguments[i];\n    scopeFunc = args.pop();\n    var tables = flatten(args);\n    return [mode, tables, scopeFunc];\n}\nfunction enterTransactionScope(db, mode, storeNames, parentTransaction, scopeFunc) {\n    return DexiePromise.resolve().then(() => {\n        const transless = PSD.transless || PSD;\n        const trans = db._createTransaction(mode, storeNames, db._dbSchema, parentTransaction);\n        const zoneProps = {\n            trans: trans,\n            transless: transless\n        };\n        if (parentTransaction) {\n            trans.idbtrans = parentTransaction.idbtrans;\n        }\n        else {\n            try {\n                trans.create();\n                db._state.PR1398_maxLoop = 3;\n            }\n            catch (ex) {\n                if (ex.name === errnames.InvalidState && db.isOpen() && --db._state.PR1398_maxLoop > 0) {\n                    console.warn('Dexie: Need to reopen db');\n                    db._close();\n                    return db.open().then(() => enterTransactionScope(db, mode, storeNames, null, scopeFunc));\n                }\n                return rejection(ex);\n            }\n        }\n        const scopeFuncIsAsync = isAsyncFunction(scopeFunc);\n        if (scopeFuncIsAsync) {\n            incrementExpectedAwaits();\n        }\n        let returnValue;\n        const promiseFollowed = DexiePromise.follow(() => {\n            returnValue = scopeFunc.call(trans, trans);\n            if (returnValue) {\n                if (scopeFuncIsAsync) {\n                    var decrementor = decrementExpectedAwaits.bind(null, null);\n                    returnValue.then(decrementor, decrementor);\n                }\n                else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {\n                    returnValue = awaitIterator(returnValue);\n                }\n            }\n        }, zoneProps);\n        return (returnValue && typeof returnValue.then === 'function' ?\n            DexiePromise.resolve(returnValue).then(x => trans.active ?\n                x\n                : rejection(new exceptions.PrematureCommit(\"Transaction committed too early. See http://bit.ly/2kdckMn\")))\n            : promiseFollowed.then(() => returnValue)).then(x => {\n            if (parentTransaction)\n                trans._resolve();\n            return trans._completion.then(() => x);\n        }).catch(e => {\n            trans._reject(e);\n            return rejection(e);\n        });\n    });\n}\n\nfunction pad(a, value, count) {\n    const result = isArray(a) ? a.slice() : [a];\n    for (let i = 0; i < count; ++i)\n        result.push(value);\n    return result;\n}\nfunction createVirtualIndexMiddleware(down) {\n    return {\n        ...down,\n        table(tableName) {\n            const table = down.table(tableName);\n            const { schema } = table;\n            const indexLookup = {};\n            const allVirtualIndexes = [];\n            function addVirtualIndexes(keyPath, keyTail, lowLevelIndex) {\n                const keyPathAlias = getKeyPathAlias(keyPath);\n                const indexList = (indexLookup[keyPathAlias] = indexLookup[keyPathAlias] || []);\n                const keyLength = keyPath == null ? 0 : typeof keyPath === 'string' ? 1 : keyPath.length;\n                const isVirtual = keyTail > 0;\n                const virtualIndex = {\n                    ...lowLevelIndex,\n                    isVirtual,\n                    keyTail,\n                    keyLength,\n                    extractKey: getKeyExtractor(keyPath),\n                    unique: !isVirtual && lowLevelIndex.unique\n                };\n                indexList.push(virtualIndex);\n                if (!virtualIndex.isPrimaryKey) {\n                    allVirtualIndexes.push(virtualIndex);\n                }\n                if (keyLength > 1) {\n                    const virtualKeyPath = keyLength === 2 ?\n                        keyPath[0] :\n                        keyPath.slice(0, keyLength - 1);\n                    addVirtualIndexes(virtualKeyPath, keyTail + 1, lowLevelIndex);\n                }\n                indexList.sort((a, b) => a.keyTail - b.keyTail);\n                return virtualIndex;\n            }\n            const primaryKey = addVirtualIndexes(schema.primaryKey.keyPath, 0, schema.primaryKey);\n            indexLookup[\":id\"] = [primaryKey];\n            for (const index of schema.indexes) {\n                addVirtualIndexes(index.keyPath, 0, index);\n            }\n            function findBestIndex(keyPath) {\n                const result = indexLookup[getKeyPathAlias(keyPath)];\n                return result && result[0];\n            }\n            function translateRange(range, keyTail) {\n                return {\n                    type: range.type === 1  ?\n                        2  :\n                        range.type,\n                    lower: pad(range.lower, range.lowerOpen ? down.MAX_KEY : down.MIN_KEY, keyTail),\n                    lowerOpen: true,\n                    upper: pad(range.upper, range.upperOpen ? down.MIN_KEY : down.MAX_KEY, keyTail),\n                    upperOpen: true\n                };\n            }\n            function translateRequest(req) {\n                const index = req.query.index;\n                return index.isVirtual ? {\n                    ...req,\n                    query: {\n                        index,\n                        range: translateRange(req.query.range, index.keyTail)\n                    }\n                } : req;\n            }\n            const result = {\n                ...table,\n                schema: {\n                    ...schema,\n                    primaryKey,\n                    indexes: allVirtualIndexes,\n                    getIndexByKeyPath: findBestIndex\n                },\n                count(req) {\n                    return table.count(translateRequest(req));\n                },\n                query(req) {\n                    return table.query(translateRequest(req));\n                },\n                openCursor(req) {\n                    const { keyTail, isVirtual, keyLength } = req.query.index;\n                    if (!isVirtual)\n                        return table.openCursor(req);\n                    function createVirtualCursor(cursor) {\n                        function _continue(key) {\n                            key != null ?\n                                cursor.continue(pad(key, req.reverse ? down.MAX_KEY : down.MIN_KEY, keyTail)) :\n                                req.unique ?\n                                    cursor.continue(cursor.key.slice(0, keyLength)\n                                        .concat(req.reverse\n                                        ? down.MIN_KEY\n                                        : down.MAX_KEY, keyTail)) :\n                                    cursor.continue();\n                        }\n                        const virtualCursor = Object.create(cursor, {\n                            continue: { value: _continue },\n                            continuePrimaryKey: {\n                                value(key, primaryKey) {\n                                    cursor.continuePrimaryKey(pad(key, down.MAX_KEY, keyTail), primaryKey);\n                                }\n                            },\n                            primaryKey: {\n                                get() {\n                                    return cursor.primaryKey;\n                                }\n                            },\n                            key: {\n                                get() {\n                                    const key = cursor.key;\n                                    return keyLength === 1 ?\n                                        key[0] :\n                                        key.slice(0, keyLength);\n                                }\n                            },\n                            value: {\n                                get() {\n                                    return cursor.value;\n                                }\n                            }\n                        });\n                        return virtualCursor;\n                    }\n                    return table.openCursor(translateRequest(req))\n                        .then(cursor => cursor && createVirtualCursor(cursor));\n                }\n            };\n            return result;\n        }\n    };\n}\nconst virtualIndexMiddleware = {\n    stack: \"dbcore\",\n    name: \"VirtualIndexMiddleware\",\n    level: 1,\n    create: createVirtualIndexMiddleware\n};\n\nfunction getObjectDiff(a, b, rv, prfx) {\n    rv = rv || {};\n    prfx = prfx || '';\n    keys(a).forEach((prop) => {\n        if (!hasOwn(b, prop)) {\n            rv[prfx + prop] = undefined;\n        }\n        else {\n            var ap = a[prop], bp = b[prop];\n            if (typeof ap === 'object' && typeof bp === 'object' && ap && bp) {\n                const apTypeName = toStringTag(ap);\n                const bpTypeName = toStringTag(bp);\n                if (apTypeName !== bpTypeName) {\n                    rv[prfx + prop] = b[prop];\n                }\n                else if (apTypeName === 'Object') {\n                    getObjectDiff(ap, bp, rv, prfx + prop + '.');\n                }\n                else if (ap !== bp) {\n                    rv[prfx + prop] = b[prop];\n                }\n            }\n            else if (ap !== bp)\n                rv[prfx + prop] = b[prop];\n        }\n    });\n    keys(b).forEach((prop) => {\n        if (!hasOwn(a, prop)) {\n            rv[prfx + prop] = b[prop];\n        }\n    });\n    return rv;\n}\n\nfunction getEffectiveKeys(primaryKey, req) {\n    if (req.type === 'delete')\n        return req.keys;\n    return req.keys || req.values.map(primaryKey.extractKey);\n}\n\nconst hooksMiddleware = {\n    stack: \"dbcore\",\n    name: \"HooksMiddleware\",\n    level: 2,\n    create: (downCore) => ({\n        ...downCore,\n        table(tableName) {\n            const downTable = downCore.table(tableName);\n            const { primaryKey } = downTable.schema;\n            const tableMiddleware = {\n                ...downTable,\n                mutate(req) {\n                    const dxTrans = PSD.trans;\n                    const { deleting, creating, updating } = dxTrans.table(tableName).hook;\n                    switch (req.type) {\n                        case 'add':\n                            if (creating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'put':\n                            if (creating.fire === nop && updating.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'delete':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => addPutOrDelete(req), true);\n                        case 'deleteRange':\n                            if (deleting.fire === nop)\n                                break;\n                            return dxTrans._promise('readwrite', () => deleteRange(req), true);\n                    }\n                    return downTable.mutate(req);\n                    function addPutOrDelete(req) {\n                        const dxTrans = PSD.trans;\n                        const keys = req.keys || getEffectiveKeys(primaryKey, req);\n                        if (!keys)\n                            throw new Error(\"Keys missing\");\n                        req = req.type === 'add' || req.type === 'put' ?\n                            { ...req, keys } :\n                            { ...req };\n                        if (req.type !== 'delete')\n                            req.values = [...req.values];\n                        if (req.keys)\n                            req.keys = [...req.keys];\n                        return getExistingValues(downTable, req, keys).then(existingValues => {\n                            const contexts = keys.map((key, i) => {\n                                const existingValue = existingValues[i];\n                                const ctx = { onerror: null, onsuccess: null };\n                                if (req.type === 'delete') {\n                                    deleting.fire.call(ctx, key, existingValue, dxTrans);\n                                }\n                                else if (req.type === 'add' || existingValue === undefined) {\n                                    const generatedPrimaryKey = creating.fire.call(ctx, key, req.values[i], dxTrans);\n                                    if (key == null && generatedPrimaryKey != null) {\n                                        key = generatedPrimaryKey;\n                                        req.keys[i] = key;\n                                        if (!primaryKey.outbound) {\n                                            setByKeyPath(req.values[i], primaryKey.keyPath, key);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const objectDiff = getObjectDiff(existingValue, req.values[i]);\n                                    const additionalChanges = updating.fire.call(ctx, objectDiff, key, existingValue, dxTrans);\n                                    if (additionalChanges) {\n                                        const requestedValue = req.values[i];\n                                        Object.keys(additionalChanges).forEach(keyPath => {\n                                            if (hasOwn(requestedValue, keyPath)) {\n                                                requestedValue[keyPath] = additionalChanges[keyPath];\n                                            }\n                                            else {\n                                                setByKeyPath(requestedValue, keyPath, additionalChanges[keyPath]);\n                                            }\n                                        });\n                                    }\n                                }\n                                return ctx;\n                            });\n                            return downTable.mutate(req).then(({ failures, results, numFailures, lastResult }) => {\n                                for (let i = 0; i < keys.length; ++i) {\n                                    const primKey = results ? results[i] : keys[i];\n                                    const ctx = contexts[i];\n                                    if (primKey == null) {\n                                        ctx.onerror && ctx.onerror(failures[i]);\n                                    }\n                                    else {\n                                        ctx.onsuccess && ctx.onsuccess(req.type === 'put' && existingValues[i] ?\n                                            req.values[i] :\n                                            primKey\n                                        );\n                                    }\n                                }\n                                return { failures, results, numFailures, lastResult };\n                            }).catch(error => {\n                                contexts.forEach(ctx => ctx.onerror && ctx.onerror(error));\n                                return Promise.reject(error);\n                            });\n                        });\n                    }\n                    function deleteRange(req) {\n                        return deleteNextChunk(req.trans, req.range, 10000);\n                    }\n                    function deleteNextChunk(trans, range, limit) {\n                        return downTable.query({ trans, values: false, query: { index: primaryKey, range }, limit })\n                            .then(({ result }) => {\n                            return addPutOrDelete({ type: 'delete', keys: result, trans }).then(res => {\n                                if (res.numFailures > 0)\n                                    return Promise.reject(res.failures[0]);\n                                if (result.length < limit) {\n                                    return { failures: [], numFailures: 0, lastResult: undefined };\n                                }\n                                else {\n                                    return deleteNextChunk(trans, { ...range, lower: result[result.length - 1], lowerOpen: true }, limit);\n                                }\n                            });\n                        });\n                    }\n                }\n            };\n            return tableMiddleware;\n        },\n    })\n};\nfunction getExistingValues(table, req, effectiveKeys) {\n    return req.type === \"add\"\n        ? Promise.resolve([])\n        : table.getMany({ trans: req.trans, keys: effectiveKeys, cache: \"immutable\" });\n}\n\nfunction getFromTransactionCache(keys, cache, clone) {\n    try {\n        if (!cache)\n            return null;\n        if (cache.keys.length < keys.length)\n            return null;\n        const result = [];\n        for (let i = 0, j = 0; i < cache.keys.length && j < keys.length; ++i) {\n            if (cmp(cache.keys[i], keys[j]) !== 0)\n                continue;\n            result.push(clone ? deepClone(cache.values[i]) : cache.values[i]);\n            ++j;\n        }\n        return result.length === keys.length ? result : null;\n    }\n    catch (_a) {\n        return null;\n    }\n}\nconst cacheExistingValuesMiddleware = {\n    stack: \"dbcore\",\n    level: -1,\n    create: (core) => {\n        return {\n            table: (tableName) => {\n                const table = core.table(tableName);\n                return {\n                    ...table,\n                    getMany: (req) => {\n                        if (!req.cache) {\n                            return table.getMany(req);\n                        }\n                        const cachedResult = getFromTransactionCache(req.keys, req.trans[\"_cache\"], req.cache === \"clone\");\n                        if (cachedResult) {\n                            return DexiePromise.resolve(cachedResult);\n                        }\n                        return table.getMany(req).then((res) => {\n                            req.trans[\"_cache\"] = {\n                                keys: req.keys,\n                                values: req.cache === \"clone\" ? deepClone(res) : res,\n                            };\n                            return res;\n                        });\n                    },\n                    mutate: (req) => {\n                        if (req.type !== \"add\")\n                            req.trans[\"_cache\"] = null;\n                        return table.mutate(req);\n                    },\n                };\n            },\n        };\n    },\n};\n\nfunction isEmptyRange(node) {\n    return !(\"from\" in node);\n}\nconst RangeSet = function (fromOrTree, to) {\n    if (this) {\n        extend(this, arguments.length ? { d: 1, from: fromOrTree, to: arguments.length > 1 ? to : fromOrTree } : { d: 0 });\n    }\n    else {\n        const rv = new RangeSet();\n        if (fromOrTree && (\"d\" in fromOrTree)) {\n            extend(rv, fromOrTree);\n        }\n        return rv;\n    }\n};\nprops(RangeSet.prototype, {\n    add(rangeSet) {\n        mergeRanges(this, rangeSet);\n        return this;\n    },\n    addKey(key) {\n        addRange(this, key, key);\n        return this;\n    },\n    addKeys(keys) {\n        keys.forEach(key => addRange(this, key, key));\n        return this;\n    },\n    [iteratorSymbol]() {\n        return getRangeSetIterator(this);\n    }\n});\nfunction addRange(target, from, to) {\n    const diff = cmp(from, to);\n    if (isNaN(diff))\n        return;\n    if (diff > 0)\n        throw RangeError();\n    if (isEmptyRange(target))\n        return extend(target, { from, to, d: 1 });\n    const left = target.l;\n    const right = target.r;\n    if (cmp(to, target.from) < 0) {\n        left\n            ? addRange(left, from, to)\n            : (target.l = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.to) > 0) {\n        right\n            ? addRange(right, from, to)\n            : (target.r = { from, to, d: 1, l: null, r: null });\n        return rebalance(target);\n    }\n    if (cmp(from, target.from) < 0) {\n        target.from = from;\n        target.l = null;\n        target.d = right ? right.d + 1 : 1;\n    }\n    if (cmp(to, target.to) > 0) {\n        target.to = to;\n        target.r = null;\n        target.d = target.l ? target.l.d + 1 : 1;\n    }\n    const rightWasCutOff = !target.r;\n    if (left && !target.l) {\n        mergeRanges(target, left);\n    }\n    if (right && rightWasCutOff) {\n        mergeRanges(target, right);\n    }\n}\nfunction mergeRanges(target, newSet) {\n    function _addRangeSet(target, { from, to, l, r }) {\n        addRange(target, from, to);\n        if (l)\n            _addRangeSet(target, l);\n        if (r)\n            _addRangeSet(target, r);\n    }\n    if (!isEmptyRange(newSet))\n        _addRangeSet(target, newSet);\n}\nfunction rangesOverlap(rangeSet1, rangeSet2) {\n    const i1 = getRangeSetIterator(rangeSet2);\n    let nextResult1 = i1.next();\n    if (nextResult1.done)\n        return false;\n    let a = nextResult1.value;\n    const i2 = getRangeSetIterator(rangeSet1);\n    let nextResult2 = i2.next(a.from);\n    let b = nextResult2.value;\n    while (!nextResult1.done && !nextResult2.done) {\n        if (cmp(b.from, a.to) <= 0 && cmp(b.to, a.from) >= 0)\n            return true;\n        cmp(a.from, b.from) < 0\n            ? (a = (nextResult1 = i1.next(b.from)).value)\n            : (b = (nextResult2 = i2.next(a.from)).value);\n    }\n    return false;\n}\nfunction getRangeSetIterator(node) {\n    let state = isEmptyRange(node) ? null : { s: 0, n: node };\n    return {\n        next(key) {\n            const keyProvided = arguments.length > 0;\n            while (state) {\n                switch (state.s) {\n                    case 0:\n                        state.s = 1;\n                        if (keyProvided) {\n                            while (state.n.l && cmp(key, state.n.from) < 0)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                        else {\n                            while (state.n.l)\n                                state = { up: state, n: state.n.l, s: 1 };\n                        }\n                    case 1:\n                        state.s = 2;\n                        if (!keyProvided || cmp(key, state.n.to) <= 0)\n                            return { value: state.n, done: false };\n                    case 2:\n                        if (state.n.r) {\n                            state.s = 3;\n                            state = { up: state, n: state.n.r, s: 0 };\n                            continue;\n                        }\n                    case 3:\n                        state = state.up;\n                }\n            }\n            return { done: true };\n        },\n    };\n}\nfunction rebalance(target) {\n    var _a, _b;\n    const diff = (((_a = target.r) === null || _a === void 0 ? void 0 : _a.d) || 0) - (((_b = target.l) === null || _b === void 0 ? void 0 : _b.d) || 0);\n    const r = diff > 1 ? \"r\" : diff < -1 ? \"l\" : \"\";\n    if (r) {\n        const l = r === \"r\" ? \"l\" : \"r\";\n        const rootClone = { ...target };\n        const oldRootRight = target[r];\n        target.from = oldRootRight.from;\n        target.to = oldRootRight.to;\n        target[r] = oldRootRight[r];\n        rootClone[r] = oldRootRight[l];\n        target[l] = rootClone;\n        rootClone.d = computeDepth(rootClone);\n    }\n    target.d = computeDepth(target);\n}\nfunction computeDepth({ r, l }) {\n    return (r ? (l ? Math.max(r.d, l.d) : r.d) : l ? l.d : 0) + 1;\n}\n\nconst observabilityMiddleware = {\n    stack: \"dbcore\",\n    level: 0,\n    create: (core) => {\n        const dbName = core.schema.name;\n        const FULL_RANGE = new RangeSet(core.MIN_KEY, core.MAX_KEY);\n        return {\n            ...core,\n            table: (tableName) => {\n                const table = core.table(tableName);\n                const { schema } = table;\n                const { primaryKey } = schema;\n                const { extractKey, outbound } = primaryKey;\n                const tableClone = {\n                    ...table,\n                    mutate: (req) => {\n                        const trans = req.trans;\n                        const mutatedParts = trans.mutatedParts || (trans.mutatedParts = {});\n                        const getRangeSet = (indexName) => {\n                            const part = `idb://${dbName}/${tableName}/${indexName}`;\n                            return (mutatedParts[part] ||\n                                (mutatedParts[part] = new RangeSet()));\n                        };\n                        const pkRangeSet = getRangeSet(\"\");\n                        const delsRangeSet = getRangeSet(\":dels\");\n                        const { type } = req;\n                        let [keys, newObjs] = req.type === \"deleteRange\"\n                            ? [req.range]\n                            : req.type === \"delete\"\n                                ? [req.keys]\n                                : req.values.length < 50\n                                    ? [[], req.values]\n                                    : [];\n                        const oldCache = req.trans[\"_cache\"];\n                        return table.mutate(req).then((res) => {\n                            if (isArray(keys)) {\n                                if (type !== \"delete\")\n                                    keys = res.results;\n                                pkRangeSet.addKeys(keys);\n                                const oldObjs = getFromTransactionCache(keys, oldCache);\n                                if (!oldObjs && type !== \"add\") {\n                                    delsRangeSet.addKeys(keys);\n                                }\n                                if (oldObjs || newObjs) {\n                                    trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs);\n                                }\n                            }\n                            else if (keys) {\n                                const range = { from: keys.lower, to: keys.upper };\n                                delsRangeSet.add(range);\n                                pkRangeSet.add(range);\n                            }\n                            else {\n                                pkRangeSet.add(FULL_RANGE);\n                                delsRangeSet.add(FULL_RANGE);\n                                schema.indexes.forEach(idx => getRangeSet(idx.name).add(FULL_RANGE));\n                            }\n                            return res;\n                        });\n                    },\n                };\n                const getRange = ({ query: { index, range }, }) => {\n                    var _a, _b;\n                    return [\n                        index,\n                        new RangeSet((_a = range.lower) !== null && _a !== void 0 ? _a : core.MIN_KEY, (_b = range.upper) !== null && _b !== void 0 ? _b : core.MAX_KEY),\n                    ];\n                };\n                const readSubscribers = {\n                    get: (req) => [primaryKey, new RangeSet(req.key)],\n                    getMany: (req) => [primaryKey, new RangeSet().addKeys(req.keys)],\n                    count: getRange,\n                    query: getRange,\n                    openCursor: getRange,\n                };\n                keys(readSubscribers).forEach(method => {\n                    tableClone[method] = function (req) {\n                        const { subscr } = PSD;\n                        if (subscr) {\n                            const getRangeSet = (indexName) => {\n                                const part = `idb://${dbName}/${tableName}/${indexName}`;\n                                return (subscr[part] ||\n                                    (subscr[part] = new RangeSet()));\n                            };\n                            const pkRangeSet = getRangeSet(\"\");\n                            const delsRangeSet = getRangeSet(\":dels\");\n                            const [queriedIndex, queriedRanges] = readSubscribers[method](req);\n                            getRangeSet(queriedIndex.name || \"\").add(queriedRanges);\n                            if (!queriedIndex.isPrimaryKey) {\n                                if (method === \"count\") {\n                                    delsRangeSet.add(FULL_RANGE);\n                                }\n                                else {\n                                    const keysPromise = method === \"query\" &&\n                                        outbound &&\n                                        req.values &&\n                                        table.query({\n                                            ...req,\n                                            values: false,\n                                        });\n                                    return table[method].apply(this, arguments).then((res) => {\n                                        if (method === \"query\") {\n                                            if (outbound && req.values) {\n                                                return keysPromise.then(({ result: resultingKeys }) => {\n                                                    pkRangeSet.addKeys(resultingKeys);\n                                                    return res;\n                                                });\n                                            }\n                                            const pKeys = req.values\n                                                ? res.result.map(extractKey)\n                                                : res.result;\n                                            if (req.values) {\n                                                pkRangeSet.addKeys(pKeys);\n                                            }\n                                            else {\n                                                delsRangeSet.addKeys(pKeys);\n                                            }\n                                        }\n                                        else if (method === \"openCursor\") {\n                                            const cursor = res;\n                                            const wantValues = req.values;\n                                            return (cursor &&\n                                                Object.create(cursor, {\n                                                    key: {\n                                                        get() {\n                                                            delsRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.key;\n                                                        },\n                                                    },\n                                                    primaryKey: {\n                                                        get() {\n                                                            const pkey = cursor.primaryKey;\n                                                            delsRangeSet.addKey(pkey);\n                                                            return pkey;\n                                                        },\n                                                    },\n                                                    value: {\n                                                        get() {\n                                                            wantValues && pkRangeSet.addKey(cursor.primaryKey);\n                                                            return cursor.value;\n                                                        },\n                                                    },\n                                                }));\n                                        }\n                                        return res;\n                                    });\n                                }\n                            }\n                        }\n                        return table[method].apply(this, arguments);\n                    };\n                });\n                return tableClone;\n            },\n        };\n    },\n};\nfunction trackAffectedIndexes(getRangeSet, schema, oldObjs, newObjs) {\n    function addAffectedIndex(ix) {\n        const rangeSet = getRangeSet(ix.name || \"\");\n        function extractKey(obj) {\n            return obj != null ? ix.extractKey(obj) : null;\n        }\n        const addKeyOrKeys = (key) => ix.multiEntry && isArray(key)\n            ? key.forEach(key => rangeSet.addKey(key))\n            : rangeSet.addKey(key);\n        (oldObjs || newObjs).forEach((_, i) => {\n            const oldKey = oldObjs && extractKey(oldObjs[i]);\n            const newKey = newObjs && extractKey(newObjs[i]);\n            if (cmp(oldKey, newKey) !== 0) {\n                if (oldKey != null)\n                    addKeyOrKeys(oldKey);\n                if (newKey != null)\n                    addKeyOrKeys(newKey);\n            }\n        });\n    }\n    schema.indexes.forEach(addAffectedIndex);\n}\n\nclass Dexie$1 {\n    constructor(name, options) {\n        this._middlewares = {};\n        this.verno = 0;\n        const deps = Dexie$1.dependencies;\n        this._options = options = {\n            addons: Dexie$1.addons,\n            autoOpen: true,\n            indexedDB: deps.indexedDB,\n            IDBKeyRange: deps.IDBKeyRange,\n            ...options\n        };\n        this._deps = {\n            indexedDB: options.indexedDB,\n            IDBKeyRange: options.IDBKeyRange\n        };\n        const { addons, } = options;\n        this._dbSchema = {};\n        this._versions = [];\n        this._storeNames = [];\n        this._allTables = {};\n        this.idbdb = null;\n        this._novip = this;\n        const state = {\n            dbOpenError: null,\n            isBeingOpened: false,\n            onReadyBeingFired: null,\n            openComplete: false,\n            dbReadyResolve: nop,\n            dbReadyPromise: null,\n            cancelOpen: nop,\n            openCanceller: null,\n            autoSchema: true,\n            PR1398_maxLoop: 3\n        };\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n        this._state = state;\n        this.name = name;\n        this.on = Events(this, \"populate\", \"blocked\", \"versionchange\", \"close\", { ready: [promisableChain, nop] });\n        this.on.ready.subscribe = override(this.on.ready.subscribe, subscribe => {\n            return (subscriber, bSticky) => {\n                Dexie$1.vip(() => {\n                    const state = this._state;\n                    if (state.openComplete) {\n                        if (!state.dbOpenError)\n                            DexiePromise.resolve().then(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else if (state.onReadyBeingFired) {\n                        state.onReadyBeingFired.push(subscriber);\n                        if (bSticky)\n                            subscribe(subscriber);\n                    }\n                    else {\n                        subscribe(subscriber);\n                        const db = this;\n                        if (!bSticky)\n                            subscribe(function unsubscribe() {\n                                db.on.ready.unsubscribe(subscriber);\n                                db.on.ready.unsubscribe(unsubscribe);\n                            });\n                    }\n                });\n            };\n        });\n        this.Collection = createCollectionConstructor(this);\n        this.Table = createTableConstructor(this);\n        this.Transaction = createTransactionConstructor(this);\n        this.Version = createVersionConstructor(this);\n        this.WhereClause = createWhereClauseConstructor(this);\n        this.on(\"versionchange\", ev => {\n            if (ev.newVersion > 0)\n                console.warn(`Another connection wants to upgrade database '${this.name}'. Closing db now to resume the upgrade.`);\n            else\n                console.warn(`Another connection wants to delete database '${this.name}'. Closing db now to resume the delete request.`);\n            this.close();\n        });\n        this.on(\"blocked\", ev => {\n            if (!ev.newVersion || ev.newVersion < ev.oldVersion)\n                console.warn(`Dexie.delete('${this.name}') was blocked`);\n            else\n                console.warn(`Upgrade '${this.name}' blocked by other connection holding version ${ev.oldVersion / 10}`);\n        });\n        this._maxKey = getMaxKey(options.IDBKeyRange);\n        this._createTransaction = (mode, storeNames, dbschema, parentTransaction) => new this.Transaction(mode, storeNames, dbschema, this._options.chromeTransactionDurability, parentTransaction);\n        this._fireOnBlocked = ev => {\n            this.on(\"blocked\").fire(ev);\n            connections\n                .filter(c => c.name === this.name && c !== this && !c._state.vcFired)\n                .map(c => c.on(\"versionchange\").fire(ev));\n        };\n        this.use(virtualIndexMiddleware);\n        this.use(hooksMiddleware);\n        this.use(observabilityMiddleware);\n        this.use(cacheExistingValuesMiddleware);\n        this.vip = Object.create(this, { _vip: { value: true } });\n        addons.forEach(addon => addon(this));\n    }\n    version(versionNumber) {\n        if (isNaN(versionNumber) || versionNumber < 0.1)\n            throw new exceptions.Type(`Given version is not a positive number`);\n        versionNumber = Math.round(versionNumber * 10) / 10;\n        if (this.idbdb || this._state.isBeingOpened)\n            throw new exceptions.Schema(\"Cannot add version when database is open\");\n        this.verno = Math.max(this.verno, versionNumber);\n        const versions = this._versions;\n        var versionInstance = versions.filter(v => v._cfg.version === versionNumber)[0];\n        if (versionInstance)\n            return versionInstance;\n        versionInstance = new this.Version(versionNumber);\n        versions.push(versionInstance);\n        versions.sort(lowerVersionFirst);\n        versionInstance.stores({});\n        this._state.autoSchema = false;\n        return versionInstance;\n    }\n    _whenReady(fn) {\n        return (this.idbdb && (this._state.openComplete || PSD.letThrough || this._vip)) ? fn() : new DexiePromise((resolve, reject) => {\n            if (this._state.openComplete) {\n                return reject(new exceptions.DatabaseClosed(this._state.dbOpenError));\n            }\n            if (!this._state.isBeingOpened) {\n                if (!this._options.autoOpen) {\n                    reject(new exceptions.DatabaseClosed());\n                    return;\n                }\n                this.open().catch(nop);\n            }\n            this._state.dbReadyPromise.then(resolve, reject);\n        }).then(fn);\n    }\n    use({ stack, create, level, name }) {\n        if (name)\n            this.unuse({ stack, name });\n        const middlewares = this._middlewares[stack] || (this._middlewares[stack] = []);\n        middlewares.push({ stack, create, level: level == null ? 10 : level, name });\n        middlewares.sort((a, b) => a.level - b.level);\n        return this;\n    }\n    unuse({ stack, name, create }) {\n        if (stack && this._middlewares[stack]) {\n            this._middlewares[stack] = this._middlewares[stack].filter(mw => create ? mw.create !== create :\n                name ? mw.name !== name :\n                    false);\n        }\n        return this;\n    }\n    open() {\n        return dexieOpen(this);\n    }\n    _close() {\n        const state = this._state;\n        const idx = connections.indexOf(this);\n        if (idx >= 0)\n            connections.splice(idx, 1);\n        if (this.idbdb) {\n            try {\n                this.idbdb.close();\n            }\n            catch (e) { }\n            this._novip.idbdb = null;\n        }\n        state.dbReadyPromise = new DexiePromise(resolve => {\n            state.dbReadyResolve = resolve;\n        });\n        state.openCanceller = new DexiePromise((_, reject) => {\n            state.cancelOpen = reject;\n        });\n    }\n    close() {\n        this._close();\n        const state = this._state;\n        this._options.autoOpen = false;\n        state.dbOpenError = new exceptions.DatabaseClosed();\n        if (state.isBeingOpened)\n            state.cancelOpen(state.dbOpenError);\n    }\n    delete() {\n        const hasArguments = arguments.length > 0;\n        const state = this._state;\n        return new DexiePromise((resolve, reject) => {\n            const doDelete = () => {\n                this.close();\n                var req = this._deps.indexedDB.deleteDatabase(this.name);\n                req.onsuccess = wrap(() => {\n                    _onDatabaseDeleted(this._deps, this.name);\n                    resolve();\n                });\n                req.onerror = eventRejectHandler(reject);\n                req.onblocked = this._fireOnBlocked;\n            };\n            if (hasArguments)\n                throw new exceptions.InvalidArgument(\"Arguments not allowed in db.delete()\");\n            if (state.isBeingOpened) {\n                state.dbReadyPromise.then(doDelete);\n            }\n            else {\n                doDelete();\n            }\n        });\n    }\n    backendDB() {\n        return this.idbdb;\n    }\n    isOpen() {\n        return this.idbdb !== null;\n    }\n    hasBeenClosed() {\n        const dbOpenError = this._state.dbOpenError;\n        return dbOpenError && (dbOpenError.name === 'DatabaseClosed');\n    }\n    hasFailed() {\n        return this._state.dbOpenError !== null;\n    }\n    dynamicallyOpened() {\n        return this._state.autoSchema;\n    }\n    get tables() {\n        return keys(this._allTables).map(name => this._allTables[name]);\n    }\n    transaction() {\n        const args = extractTransactionArgs.apply(this, arguments);\n        return this._transaction.apply(this, args);\n    }\n    _transaction(mode, tables, scopeFunc) {\n        let parentTransaction = PSD.trans;\n        if (!parentTransaction || parentTransaction.db !== this || mode.indexOf('!') !== -1)\n            parentTransaction = null;\n        const onlyIfCompatible = mode.indexOf('?') !== -1;\n        mode = mode.replace('!', '').replace('?', '');\n        let idbMode, storeNames;\n        try {\n            storeNames = tables.map(table => {\n                var storeName = table instanceof this.Table ? table.name : table;\n                if (typeof storeName !== 'string')\n                    throw new TypeError(\"Invalid table argument to Dexie.transaction(). Only Table or String are allowed\");\n                return storeName;\n            });\n            if (mode == \"r\" || mode === READONLY)\n                idbMode = READONLY;\n            else if (mode == \"rw\" || mode == READWRITE)\n                idbMode = READWRITE;\n            else\n                throw new exceptions.InvalidArgument(\"Invalid transaction mode: \" + mode);\n            if (parentTransaction) {\n                if (parentTransaction.mode === READONLY && idbMode === READWRITE) {\n                    if (onlyIfCompatible) {\n                        parentTransaction = null;\n                    }\n                    else\n                        throw new exceptions.SubTransaction(\"Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY\");\n                }\n                if (parentTransaction) {\n                    storeNames.forEach(storeName => {\n                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {\n                            if (onlyIfCompatible) {\n                                parentTransaction = null;\n                            }\n                            else\n                                throw new exceptions.SubTransaction(\"Table \" + storeName +\n                                    \" not included in parent transaction.\");\n                        }\n                    });\n                }\n                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {\n                    parentTransaction = null;\n                }\n            }\n        }\n        catch (e) {\n            return parentTransaction ?\n                parentTransaction._promise(null, (_, reject) => { reject(e); }) :\n                rejection(e);\n        }\n        const enterTransaction = enterTransactionScope.bind(null, this, idbMode, storeNames, parentTransaction, scopeFunc);\n        return (parentTransaction ?\n            parentTransaction._promise(idbMode, enterTransaction, \"lock\") :\n            PSD.trans ?\n                usePSD(PSD.transless, () => this._whenReady(enterTransaction)) :\n                this._whenReady(enterTransaction));\n    }\n    table(tableName) {\n        if (!hasOwn(this._allTables, tableName)) {\n            throw new exceptions.InvalidTable(`Table ${tableName} does not exist`);\n        }\n        return this._allTables[tableName];\n    }\n}\n\nconst symbolObservable = typeof Symbol !== \"undefined\" && \"observable\" in Symbol\n    ? Symbol.observable\n    : \"@@observable\";\nclass Observable {\n    constructor(subscribe) {\n        this._subscribe = subscribe;\n    }\n    subscribe(x, error, complete) {\n        return this._subscribe(!x || typeof x === \"function\" ? { next: x, error, complete } : x);\n    }\n    [symbolObservable]() {\n        return this;\n    }\n}\n\nfunction extendObservabilitySet(target, newSet) {\n    keys(newSet).forEach(part => {\n        const rangeSet = target[part] || (target[part] = new RangeSet());\n        mergeRanges(rangeSet, newSet[part]);\n    });\n    return target;\n}\n\nfunction liveQuery(querier) {\n    return new Observable((observer) => {\n        const scopeFuncIsAsync = isAsyncFunction(querier);\n        function execute(subscr) {\n            if (scopeFuncIsAsync) {\n                incrementExpectedAwaits();\n            }\n            const exec = () => newScope(querier, { subscr, trans: null });\n            const rv = PSD.trans\n                ?\n                    usePSD(PSD.transless, exec)\n                : exec();\n            if (scopeFuncIsAsync) {\n                rv.then(decrementExpectedAwaits, decrementExpectedAwaits);\n            }\n            return rv;\n        }\n        let closed = false;\n        let accumMuts = {};\n        let currentObs = {};\n        const subscription = {\n            get closed() {\n                return closed;\n            },\n            unsubscribe: () => {\n                closed = true;\n                globalEvents.storagemutated.unsubscribe(mutationListener);\n            },\n        };\n        observer.start && observer.start(subscription);\n        let querying = false, startedListening = false;\n        function shouldNotify() {\n            return keys(currentObs).some((key) => accumMuts[key] && rangesOverlap(accumMuts[key], currentObs[key]));\n        }\n        const mutationListener = (parts) => {\n            extendObservabilitySet(accumMuts, parts);\n            if (shouldNotify()) {\n                doQuery();\n            }\n        };\n        const doQuery = () => {\n            if (querying || closed)\n                return;\n            accumMuts = {};\n            const subscr = {};\n            const ret = execute(subscr);\n            if (!startedListening) {\n                globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, mutationListener);\n                startedListening = true;\n            }\n            querying = true;\n            Promise.resolve(ret).then((result) => {\n                querying = false;\n                if (closed)\n                    return;\n                if (shouldNotify()) {\n                    doQuery();\n                }\n                else {\n                    accumMuts = {};\n                    currentObs = subscr;\n                    observer.next && observer.next(result);\n                }\n            }, (err) => {\n                querying = false;\n                observer.error && observer.error(err);\n                subscription.unsubscribe();\n            });\n        };\n        doQuery();\n        return subscription;\n    });\n}\n\nlet domDeps;\ntry {\n    domDeps = {\n        indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,\n        IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange\n    };\n}\ncatch (e) {\n    domDeps = { indexedDB: null, IDBKeyRange: null };\n}\n\nconst Dexie = Dexie$1;\nprops(Dexie, {\n    ...fullNameExceptions,\n    delete(databaseName) {\n        const db = new Dexie(databaseName, { addons: [] });\n        return db.delete();\n    },\n    exists(name) {\n        return new Dexie(name, { addons: [] }).open().then(db => {\n            db.close();\n            return true;\n        }).catch('NoSuchDatabaseError', () => false);\n    },\n    getDatabaseNames(cb) {\n        try {\n            return getDatabaseNames(Dexie.dependencies).then(cb);\n        }\n        catch (_a) {\n            return rejection(new exceptions.MissingAPI());\n        }\n    },\n    defineClass() {\n        function Class(content) {\n            extend(this, content);\n        }\n        return Class;\n    },\n    ignoreTransaction(scopeFunc) {\n        return PSD.trans ?\n            usePSD(PSD.transless, scopeFunc) :\n            scopeFunc();\n    },\n    vip,\n    async: function (generatorFn) {\n        return function () {\n            try {\n                var rv = awaitIterator(generatorFn.apply(this, arguments));\n                if (!rv || typeof rv.then !== 'function')\n                    return DexiePromise.resolve(rv);\n                return rv;\n            }\n            catch (e) {\n                return rejection(e);\n            }\n        };\n    },\n    spawn: function (generatorFn, args, thiz) {\n        try {\n            var rv = awaitIterator(generatorFn.apply(thiz, args || []));\n            if (!rv || typeof rv.then !== 'function')\n                return DexiePromise.resolve(rv);\n            return rv;\n        }\n        catch (e) {\n            return rejection(e);\n        }\n    },\n    currentTransaction: {\n        get: () => PSD.trans || null\n    },\n    waitFor: function (promiseOrFunction, optionalTimeout) {\n        const promise = DexiePromise.resolve(typeof promiseOrFunction === 'function' ?\n            Dexie.ignoreTransaction(promiseOrFunction) :\n            promiseOrFunction)\n            .timeout(optionalTimeout || 60000);\n        return PSD.trans ?\n            PSD.trans.waitFor(promise) :\n            promise;\n    },\n    Promise: DexiePromise,\n    debug: {\n        get: () => debug,\n        set: value => {\n            setDebug(value, value === 'dexie' ? () => true : dexieStackFrameFilter);\n        }\n    },\n    derive: derive,\n    extend: extend,\n    props: props,\n    override: override,\n    Events: Events,\n    on: globalEvents,\n    liveQuery,\n    extendObservabilitySet,\n    getByKeyPath: getByKeyPath,\n    setByKeyPath: setByKeyPath,\n    delByKeyPath: delByKeyPath,\n    shallowClone: shallowClone,\n    deepClone: deepClone,\n    getObjectDiff: getObjectDiff,\n    cmp,\n    asap: asap$1,\n    minKey: minKey,\n    addons: [],\n    connections: connections,\n    errnames: errnames,\n    dependencies: domDeps,\n    semVer: DEXIE_VERSION,\n    version: DEXIE_VERSION.split('.')\n        .map(n => parseInt(n))\n        .reduce((p, c, i) => p + (c / Math.pow(10, i * 2))),\n});\nDexie.maxKey = getMaxKey(Dexie.dependencies.IDBKeyRange);\n\nif (typeof dispatchEvent !== 'undefined' && typeof addEventListener !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, updatedParts => {\n        if (!propagatingLocally) {\n            let event;\n            if (isIEOrEdge) {\n                event = document.createEvent('CustomEvent');\n                event.initCustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, true, true, updatedParts);\n            }\n            else {\n                event = new CustomEvent(STORAGE_MUTATED_DOM_EVENT_NAME, {\n                    detail: updatedParts\n                });\n            }\n            propagatingLocally = true;\n            dispatchEvent(event);\n            propagatingLocally = false;\n        }\n    });\n    addEventListener(STORAGE_MUTATED_DOM_EVENT_NAME, ({ detail }) => {\n        if (!propagatingLocally) {\n            propagateLocally(detail);\n        }\n    });\n}\nfunction propagateLocally(updateParts) {\n    let wasMe = propagatingLocally;\n    try {\n        propagatingLocally = true;\n        globalEvents.storagemutated.fire(updateParts);\n    }\n    finally {\n        propagatingLocally = wasMe;\n    }\n}\nlet propagatingLocally = false;\n\nif (typeof BroadcastChannel !== 'undefined') {\n    const bc = new BroadcastChannel(STORAGE_MUTATED_DOM_EVENT_NAME);\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        if (!propagatingLocally) {\n            bc.postMessage(changedParts);\n        }\n    });\n    bc.onmessage = (ev) => {\n        if (ev.data)\n            propagateLocally(ev.data);\n    };\n}\nelse if (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n    globalEvents(DEXIE_STORAGE_MUTATED_EVENT_NAME, (changedParts) => {\n        try {\n            if (!propagatingLocally) {\n                if (typeof localStorage !== 'undefined') {\n                    localStorage.setItem(STORAGE_MUTATED_DOM_EVENT_NAME, JSON.stringify({\n                        trig: Math.random(),\n                        changedParts,\n                    }));\n                }\n                if (typeof self['clients'] === 'object') {\n                    [...self['clients'].matchAll({ includeUncontrolled: true })].forEach((client) => client.postMessage({\n                        type: STORAGE_MUTATED_DOM_EVENT_NAME,\n                        changedParts,\n                    }));\n                }\n            }\n        }\n        catch (_a) { }\n    });\n    if (typeof addEventListener !== 'undefined') {\n        addEventListener('storage', (ev) => {\n            if (ev.key === STORAGE_MUTATED_DOM_EVENT_NAME) {\n                const data = JSON.parse(ev.newValue);\n                if (data)\n                    propagateLocally(data.changedParts);\n            }\n        });\n    }\n    const swContainer = self.document && navigator.serviceWorker;\n    if (swContainer) {\n        swContainer.addEventListener('message', propagateMessageLocally);\n    }\n}\nfunction propagateMessageLocally({ data }) {\n    if (data && data.type === STORAGE_MUTATED_DOM_EVENT_NAME) {\n        propagateLocally(data.changedParts);\n    }\n}\n\nDexiePromise.rejectionMapper = mapError;\nsetDebug(debug, dexieStackFrameFilter);\n\nexport { Dexie$1 as Dexie, RangeSet, Dexie$1 as default, liveQuery, mergeRanges, rangesOverlap };\n//# sourceMappingURL=dexie.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Live2dTips } from './live2d-tips';\r\nwindow.initLive2dWeb = function () {\r\n    console.log('Live2DWebCanvas:', '1.8.5');\r\n    let tips = new Live2dTips(userToken, live2d_settings, waifu_tips);\r\n    tips.initTips();\r\n    tips.initModel(live2d_settings.modelId, live2d_settings.modelTexturesId);\r\n}\r\n"],"names":["L2DBaseModel","live2DModel","modelMatrix","eyeBlink","physics","pose","debugMode","initialized","updating","alpha","accAlpha","lipSync","lipSyncValue","accelX","accelY","accelZ","dragX","dragY","startTimeMSec","mainMotionManager","L2DMotionManager","expressionManager","motions","expressions","isTexLoaded","texCounter","prototype","getModelMatrix","setAlpha","a","getAlpha","isInitialized","setInitialized","v","isUpdating","setUpdating","getLive2DModel","setLipSync","setLipSyncValue","setAccel","x","y","z","setDrag","getMainMotionManager","getExpressionManager","loadModelData","path","callback","pm","Live2DFramework","getPlatformManager","log","thisRef","loadLive2DModel","l2dModel","saveParam","_err","Live2D","getError","console","error","L2DModelMatrix","getCanvasWidth","getCanvasHeight","setWidth","setCenterPosition","loadTexture","no","loadMotion","name","motion","loadBytes","then","buf","Live2DMotion","loadExpression","L2DExpressionMotion","loadJson","loadPose","L2DPose","load","e","warn","loadPhysics","L2DPhysics","hitTestSimple","drawID","testX","testY","drawIndex","getDrawDataIndex","points","getTransformedPoints","left","right","top","bottom","j","length","tx","invertTransformX","ty","invertTransformY","hitTestSimpleCustom","err","AMotion","constructor","call","paramList","Array","EXPRESSION_DEFAULT","TYPE_SET","TYPE_ADD","TYPE_MULT","ret","json","jsonParseFromBytes","setFadeIn","parseInt","fade_in","setFadeOut","fade_out","params","paramNum","i","param","paramID","id","toString","value","parseFloat","val","calcTypeInt","calc","defaultValue","def","item","L2DExpressionParam","type","push","updateParamExe","model","timeMSec","weight","motionQueueEnt","addToParamFloat","multParamFloat","setParamFloat","L2DEyeBlink","nextBlinkTime","stateStartTime","blinkIntervalMsec","eyeState","EYE_STATE","STATE_FIRST","closingMotionMsec","closedMotionMsec","openingMotionMsec","closeIfZero","eyeID_L","eyeID_R","calcNextBlink","time","UtSystem","getUserTimeMSec","r","Math","random","setInterval","setEyeMotion","updateParam","eyeParamValue","t","STATE_CLOSING","STATE_CLOSED","STATE_OPENING","STATE_INTERVAL","L2DMatrix44","tr","Float32Array","identity","mul","b","dst","c","n","k","getArray","getCopyMatrix","setMatrix","getScaleX","getScaleY","transformX","src","transformY","multTranslate","shiftX","shiftY","tr1","translate","translateX","translateY","multScale","scaleX","scaleY","scale","w","h","width","height","setPosition","setY","setX","centerX","centerY","setHeight","MotionQueueManager","currentPriority","reservePriority","super","getCurrentPriority","getReservePriority","reserveMotion","priority","setReservePriority","updated","isFinished","startMotionPrio","startMotion","physicsList","physics_hair","PhysicsHair","setup","resist","regist","mass","srcList","srcNum","Src","SRC_TO_X","typeStr","ptype","SRC_TO_Y","SRC_TO_G_ANGLE","UtDebug","addSrcParam","targetList","targets","targetNum","target","Target","TARGET_FROM_ANGLE","TARGET_FROM_ANGLE_V","addTargetParam","update","lastTime","lastModel","partsGroups","poseListInfo","parts_visible","poseNum","i_pose","poseInfo","idListInfo","group","idNum","partsGroup","i_group","partsInfo","parts","L2DPartsParam","link","linkListInfo","linkNum","i_link","linkParts","initParam","curTime","deltaTimeSec","normalizePartsOpacityGroup","copyOpacityOtherParts","initIndex","partsIndex","paramIndex","getParamFloat","setPartsOpacity","visibleParts","visibleOpacity","CLEAR_TIME_SEC","phi","maxBackOpacity","getPartsOpacity","opacity","a1","backOp","partsParam","getParamIndex","getPartsDataIndex","PartsDataID","getID","L2DTargetPoint","EPSILON","faceTargetX","faceTargetY","faceX","faceY","faceVX","faceVY","lastTimeSec","FRAME_RATE","setPoint","getX","getY","TIME_TO_MAX_SPEED","FACE_PARAM_MAX_V","MAX_V","curTimeSec","deltaTimeWeight","FRAME_TO_MAX_SPEED","MAX_A","dx","dy","abs","d","sqrt","vx","vy","ax","ay","max_v","cur_v","L2DViewMatrix","screenLeft","screenRight","screenTop","screenBottom","maxLeft","maxRight","maxTop","maxBottom","max","Number","MAX_VALUE","min","getMaxScale","getMinScale","setMaxScale","setMinScale","isMaxScale","isMinScale","adjustTranslate","adjustScale","cx","cy","targetScale","tr2","tr3","setScreenRect","setMaxScreenRect","getScreenLeft","getScreenRight","getScreenBottom","getScreenTop","getMaxLeft","getMaxRight","getMaxBottom","getMaxTop","platformManager","setPlatformManager","module","exports","LAppLive2DManager","LAppDefine","setContext","MatrixStack","live2DMgr","isDrawStart","gl","canvas","dragMgr","viewMatrix","projMatrix","deviceToScreen","drag","oldLen","lastMouseX","lastMouseY","isModelShown","modelurl","head_pos","initL2dCanvas","canvasId","document","getElementById","addEventListener","window","mouseEvent","touchEvent","init","ratio","VIEW_LOGICAL_LEFT","VIEW_LOGICAL_RIGHT","captureFrame","VIEW_LOGICAL_MAX_LEFT","VIEW_LOGICAL_MAX_RIGHT","VIEW_LOGICAL_MAX_BOTTOM","VIEW_LOGICAL_MAX_TOP","VIEW_MAX_SCALE","VIEW_MIN_SCALE","getWebGLContext","WebGLRenderingContext","setGL","clearColor","changeModel","startDraw","tick","draw","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","createElement","body","appendChild","setAttribute","href","toDataURL","download","captureName","click","reset","loadIdentity","clear","COLOR_BUFFER_BIT","multMatrix","numModels","getModel","pop","reloadFlg","count","modelScaling","maxScaleEvent","minScaleEvent","transformRange","center","transform","range","pow","dot","A","B","normalize","transformRect","rect","Len_X","Len_Y","angle","acos","PI","angleTarget","angleLeftTop","angleLeftBottom","angleRightTop","angleRightBottom","res","y3","x3","modelTurnHead","event","getBoundingClientRect","sx","transformScreenX","clientX","sy","transformScreenY","clientY","transformViewX","transformViewY","DEBUG_MOUSE_LOG","modelTapEvent","tapEvent","followPointer","lookFront","sleepy","DEBUG_LOG","sessionStorage","setItem","Sleepy","getItem","button","SleepyTimer","clearTimeout","setTimeout","touch","touches","deviceX","screenX","deviceY","screenY","NAMES","ctx","getContext","premultipliedAlpha","screenshotV1","loadv1","headPos","Live2dTips","initLive2dWeb","tips","userToken","live2d_settings","waifu_tips","initTips","initModel","modelId","modelTexturesId"],"sourceRoot":""}